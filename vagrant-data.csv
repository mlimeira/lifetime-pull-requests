pull_req_id,project_name,lang,github_id,created_at,merged_at,closed_at,lifetime_minutes,mergetime_minutes,merged_using,conflict,forward_links,intra_branch,description_length,num_commits,num_commits_open,num_pr_comments,num_issue_comments,num_commit_comments,num_comments,num_commit_comments_open,num_participants,files_added_open,files_deleted_open,files_modified_open,files_changed_open,src_files_open,doc_files_open,other_files_open,files_added,files_deleted,files_modified,files_changed,src_files,doc_files,other_files,src_churn_open,test_churn_open,src_churn,test_churn,new_entropy,entropy_diff,commits_on_files_touched,owner_files,files_name,commits_to_hottest_file,hotness,at_mentions_description,at_mentions_comments,friday_effect,words_description,assignee,prev_pull_reqs_project,project_succ_rate,perc_external_contribs,sloc,test_lines_per_kloc,test_cases_per_kloc,asserts_per_kloc,stars,team_size,project_age,workload,ci,requester,closer,auto_closed,merger,prev_pullreqs,requester_succ_rate,followers,following,requester_age,main_team_member,watcher_project,req_follows_integrator,integrator_follows_req,prior_interaction_issue_events,prior_interaction_issue_comments,prior_interaction_pr_events,prior_interaction_pr_comments,prior_interaction_commits,prior_interaction_commit_comments,first_response
12890740,mitchellh/vagrant,ruby,7123,1457481285,1457481922,1457481922,10,10,commits_in_master,false,false,true,32,2,1,0,1,0,1,0,1,1,0,8,11,9,0,0,1,0,10,11,10,0,0,44,0,50,0,42.220280581121855,0.7211617496900513,2,sethvargo@gmail.com,website/source/docs/boxes/base.html.md|website/source/docs/boxes/format.html.md|website/source/docs/boxes/versioning.html.md|website/source/docs/cli/login.html.md|website/source/docs/getting-started/share.html.md|website/source/docs/other/atlas.html.md|website/source/docs/other/index.html.md|website/source/docs/share/index.html.md|website/source/docs/vagrantfile/machine_settings.html.md,2,0.012422360248447204,0,0,false,website: add a page to send folks to get to a signup link for atlas This adds a page to describe Atlas as Atlas no longer has an easy to understand homepage,,1788,0.7365771812080537,0.0,33884,578.1489788690828,48.75457443040963,85.08440561917129,10803,10,2238,77,travis,pearkes,pearkes,true,pearkes,4,1.0,264,52,1730,true,true,false,false,0,0,0,0,1,0,2
12885855,mitchellh/vagrant,ruby,7122,1457470591,1457481190,1457481190,176,176,commits_in_master,false,false,false,78,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.454755503628036,0.07609137892609635,2,sethvargo@gmail.com,website/source/docs/provisioning/shell.html.md,2,0.012269938650306749,0,0,false,Fixes #7121: Corrected binary logic description ### OverviewThe description of binary option for shell is not correct### ReferencesPlease list all issue references If this fixes an issue say Fixes numberIf there is not an existing issue please open an issue _first_ and then submityour pull request- Fixes GH-1234- References GH-5678As per http://stackoverflowcom/q/28651275/55075 thread this seems to be confusing CRLFs are changed to LFs if this is set to true,,1787,0.7364297705651931,0.006134969325153374,33884,578.1489788690828,48.75457443040963,85.08440561917129,10803,9,2238,77,travis,kenorb,sethvargo,false,sethvargo,0,0,22,39,2133,false,true,false,false,0,1,0,0,0,0,-1
12886880,mitchellh/vagrant,ruby,7120,1457468957,1457481351,1457481351,206,206,commits_in_master,false,false,false,31,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.549090200755549,0.07770270353844874,1,jonthomas0@gmail.com,plugins/guests/arch/cap/configure_networks.rb,1,0.006097560975609756,0,0,false,Restart network after reconfiguration ### OverviewRestart network device on arch linux after reconfiguration (and to ensure that the device is actually up)### References- Fixes GH-7119- References GH-5737,,1786,0.7362821948488242,0.006097560975609756,33884,578.1489788690828,48.75457443040963,85.08440561917129,10802,9,2238,77,travis,larsch,sethvargo,false,sethvargo,0,0,15,0,2807,false,false,false,false,1,0,0,0,0,0,-1
12833352,mitchellh/vagrant,ruby,7107,1457298929,1457383989,1457383989,1417,1417,commits_in_master,false,false,false,22,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.491122897172445,0.07671272349702542,2,sethvargo@gmail.com,website/source/docs/cli/snapshot.html.md,2,0.011976047904191617,0,0,false,Update website docs for #6879 ### OverviewAdds website documentation for new snapshot CLI options### ReferencesRelates to #6879 (already merged),,1783,0.7369601794727987,0.005988023952095809,33884,578.1489788690828,48.75457443040963,85.08440561917129,10786,9,2236,78,travis,jtopper,sethvargo,false,sethvargo,3,1.0,3,0,1783,false,true,false,false,0,3,1,0,0,0,-1
12819176,mitchellh/vagrant,ruby,7104,1457224089,1457386227,1457386227,2702,2702,commits_in_master,false,false,false,22,2,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,4,0,4.288308708805363,0.07324846097077102,1,jonthomas0@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,1,0.005988023952095809,0,1,false,Fixed centos 7 networks if using more than 3 ethernet adapters ### OverviewFixed sorting of interface names in centos7### References,,1782,0.7368125701459035,0.005988023952095809,33884,578.1489788690828,48.75457443040963,85.08440561917129,10784,9,2235,78,travis,altexdim,sethvargo,false,sethvargo,0,0,6,8,1233,false,false,false,false,0,0,0,0,0,0,2668
12810658,mitchellh/vagrant,ruby,7101,1457182053,1457384242,1457384242,3369,3369,commits_in_master,false,false,false,48,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.829701952539491,0.08249598128153378,1,jonthomas0@gmail.com,plugins/providers/hyperv/scripts/import_vm.ps1,1,0.006024096385542169,0,0,false,only specify Hyper-V generation if the parameter is supported ### OverviewThe Hyper-V New-VM cmdlet on powershell version 3 (v8/2012) and lower do not support the Generation parameter This detects if the parameter is supported and only specifies the generation if it is### References- Fixes GH-7098,,1780,0.7370786516853932,0.006024096385542169,33884,578.1489788690828,48.75457443040963,85.08440561917129,10779,9,2235,78,travis,mwrock,sethvargo,false,sethvargo,15,0.8,145,3,1825,false,false,false,false,2,13,3,0,0,0,-1
12713121,mitchellh/vagrant,ruby,7093,1456890218,1456947625,1456947625,956,956,commits_in_master,false,false,false,36,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.497970405344297,0.0768335987403183,0,,plugins/guests/freebsd/cap/configure_networks.rb,0,0.0,0,3,false,[MOD] Change the way FreeBSD network interfaces are configured Fixes… ### OverviewChange the way FreeBSD network interfaces are configured by using netif service instead of running manual commands via shell### References- Fixes GH-5852,,1779,0.7369308600337268,0.005555555555555556,33874,578.3196551927732,48.76896734958966,85.10952352836983,10746,9,2231,76,travis,amontalban,sethvargo,false,sethvargo,0,0,7,4,1679,false,false,false,false,0,1,0,0,0,0,130
12712746,mitchellh/vagrant,ruby,7092,1456889251,,1456898313,151,,unknown,false,false,false,37,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.249018048054762,0.07258103507233295,2,mitchell.hashimoto@gmail.com,lib/vagrant/bundler.rb,2,0.011111111111111112,1,1,false,Fixes bug report #7073 with RubyGems later than 246 ### OverviewRubyGems later than version 246 introduced a change which prevented Vagrant from functioning due to NilClass:#group_by method missing### References- Fixes GH-7073- References rubygems/rubygems@044b0e2685e4b219b013f1067d670918a48c1f62,,1778,0.7373453318335208,0.005555555555555556,33874,578.3196551927732,48.76896734958966,85.10952352836983,10746,9,2231,76,travis,tpenguin,sethvargo,false,,0,0,1,0,2551,false,false,false,false,0,1,0,0,0,0,-1
12648663,mitchellh/vagrant,ruby,7086,1456681955,1456766102,1456766102,1402,1402,commits_in_master,false,false,false,58,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.5028263922807685,0.07691622257617456,2,sethvargo@gmail.com,plugins/provisioners/docker/client.rb,2,0.011111111111111112,0,0,false,#7074 - fixes does not allow provisioning when container name is specified #7074 - Docker provisioner doesnt allow provisioning when container name is specifiedWe will be using the full container ID from now on since the Docker version is newer than 070#7085 is partly fixing the grep issue with the -notrunc comand which was failing here,,1776,0.7376126126126126,0.005555555555555556,33875,578.3025830258302,48.76752767527675,85.1070110701107,10711,9,2229,74,travis,kamigerami,sethvargo,false,sethvargo,3,0.6666666666666666,4,5,496,true,false,false,false,5,25,4,0,2,0,-1
12627608,mitchellh/vagrant,ruby,7085,1456553995,1456612862,1456612862,981,981,commits_in_master,false,false,false,24,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.506614830171804,0.0769809559215454,0,,plugins/provisioners/docker/client.rb,0,0.0,0,1,false,#7084 - fixes-7084-notrunc-command-is-wrong-in-clientrb : corrected … ### OverviewFixes the misspelled command docker ps -notrunc which should be --no-trunc inside of plugins/provisioners/docker/clientrb-Fixes #7084 ,,1775,0.7374647887323944,0.005555555555555556,33875,578.3025830258302,48.76752767527675,85.1070110701107,10701,10,2228,75,travis,kamigerami,sethvargo,false,sethvargo,2,0.5,4,5,495,true,false,false,false,4,20,2,0,2,0,117
12617397,mitchellh/vagrant,ruby,7081,1456524603,1456525067,1456525067,7,7,commits_in_master,false,false,false,18,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5938119552940035,0.07847042547707998,2,sethvargo@gmail.com,website/source/docs/cli/connect.html.md,2,0.01098901098901099,0,0,true,Typo: complEments for making it complEte If something complEments something it completes it ComplIment meanspraise or free,,1774,0.7373167981961668,0.005494505494505495,33875,578.3025830258302,48.76752767527675,85.1070110701107,10700,10,2227,75,travis,geo4orce,sethvargo,false,sethvargo,0,0,1,2,1061,false,true,false,false,0,0,0,0,0,0,-1
12599994,mitchellh/vagrant,ruby,7078,1456465622,1456468495,1456468495,47,47,commits_in_master,false,false,false,51,1,1,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,4,4,4,0,0,16,0,16,0,17.085189032391902,0.2918531047402509,1,jonthomas0@gmail.com,plugins/provisioners/chef/cap/linux/chef_installed.rb|plugins/provisioners/chef/cap/omnios/chef_installed.rb|plugins/provisioners/chef/cap/windows/chef_installed.rb|plugins/provisioners/chef/installer.rb,1,0.00546448087431694,0,0,true,Correctly detect chefdk install ### OverviewCurrently if one sets chefproduct  chefdk it gets successfully installed but then exits out with Vagrant could not detect Chef on the guest Even after Vagrantattempted to install Chef it could still not find Chef on the systemWith this fix chef runs,,1773,0.7371686407219402,0.00546448087431694,33875,578.3025830258302,48.76752767527675,85.1070110701107,10691,10,2227,75,travis,donaldguy,sethvargo,false,sethvargo,0,0,13,8,2615,false,false,false,false,0,0,0,0,0,0,-1
12431315,mitchellh/vagrant,ruby,7056,1455904856,1455919704,1455919704,247,247,commits_in_master,false,false,false,2,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.915792461965798,0.08397269070788976,66,xmitchx@gmail.com,CHANGELOG.md,66,0.21926910299003322,0,0,true,Fixed typos ,,1771,0.7374364765669114,0.023255813953488372,33875,578.3025830258302,48.76752767527675,85.1070110701107,10619,10,2220,74,travis,radarhere,sethvargo,false,sethvargo,0,0,4,0,1153,false,false,false,false,0,0,0,0,0,0,-1
12346314,mitchellh/vagrant,ruby,7041,1455653035,1455663593,1455663593,175,175,commits_in_master,false,false,false,22,2,2,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,8.813213613398272,0.1507897054434192,0,,plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/action/import.rb,0,0.0,0,1,false,Fix for #7040 to Preserve disk name Keep the disk name that is in the box file rather than copying to disk*,,1768,0.7381221719457014,0.2972972972972973,33873,578.3367283677266,48.7704071089068,85.11203613497476,10576,10,2217,72,travis,interdev,sethvargo,false,sethvargo,0,0,2,1,2850,false,false,false,false,0,0,0,0,0,0,91
12266514,mitchellh/vagrant,ruby,7027,1455318851,,1455318965,1,,unknown,false,false,false,70,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,17,0,17,0,4.464080232436949,0.07637819447626028,8,sethvargo@gmail.com,README.md,8,0.018018018018018018,0,1,true,Added two sections to README oriented towards beginners: * What to Use Vagrant For* When to Use VagrantTo make the Vagrant project more approachable to a larger number of users—from informed developers to curious passersby and new and interested visitors—I have added two new sections to the README The new sections explain in plain and straightforward language what Vagrant is used for and when one should use it ,,1765,0.7393767705382436,0.2972972972972973,33873,578.3367283677266,48.7704071089068,85.11203613497476,10542,10,2213,70,travis,evisboy,sethvargo,false,,0,0,4,1,1575,false,false,false,false,0,0,0,0,0,0,-1
12259718,mitchellh/vagrant,ruby,7026,1455303242,1455312484,1455312484,154,154,commits_in_master,false,false,false,6,2,2,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,8.94238721916346,0.1529998440538392,5,wjsager@users.noreply.github.com,website/source/docs/getting-started/synced_folders.html.md|website/source/docs/getting-started/synced_folders.html.md,5,0.011312217194570135,0,0,true,Clarifying synced folders docs Addresses https://githubcom/mitchellh/vagrant/issues/6945,,1764,0.7392290249433107,0.2986425339366516,33873,578.3367283677266,48.7704071089068,85.11203613497476,10541,10,2213,73,travis,jzohrab,sethvargo,false,sethvargo,1,1.0,1,0,1401,false,false,false,false,1,0,1,0,0,0,-1
12259345,mitchellh/vagrant,ruby,7025,1455302096,,1455312706,176,,unknown,false,false,false,4,1,1,0,2,0,2,0,2,3,0,0,3,3,0,0,3,0,0,3,3,0,0,45,0,45,0,12.892954980509192,0.2205921140591818,0,,plugins/guests/alpine/cap/halt.rb|plugins/guests/alpine/guest.rb|plugins/guests/alpine/plugin.rb,0,0.0,0,2,true,New Alpine Linux support ,,1763,0.7396483267158253,0.2986425339366516,33873,578.3367283677266,48.7704071089068,85.11203613497476,10540,10,2213,72,travis,Eric-Guo,sethvargo,false,,0,0,88,132,1580,false,true,false,false,0,0,0,0,0,0,40
12258105,mitchellh/vagrant,ruby,7024,1455297785,1455312532,1455312532,245,245,commits_in_master,false,false,false,6,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.52230451522732,0.0773744044667392,3,sethvargo@gmail.com,website/source/docs/plugins/provisioners.html.md,3,0.006787330316742082,0,0,true,Fixed provisioner broken link Fixes https://githubcom/mitchellh/vagrant/issues/7023,,1762,0.7395005675368899,0.2986425339366516,33873,578.3367283677266,48.7704071089068,85.11203613497476,10540,10,2213,72,travis,budhrg,sethvargo,false,sethvargo,0,0,20,105,1579,false,true,false,false,1,0,0,0,0,0,-1
12231595,mitchellh/vagrant,ruby,7016,1455216229,1455224869,1455224869,144,144,commits_in_master,false,false,false,6,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.357640710152561,0.07455711798810152,2,sethvargo@gmail.com,website/source/docs/provisioning/chef_apply.html.md,2,0.004524886877828055,0,0,false,Minor gramatical fix Minor gramatical fix,,1761,0.7393526405451448,0.3009049773755656,33873,578.3367283677266,48.7704071089068,85.11203613497476,10533,10,2212,71,travis,oddtazz,sethvargo,false,sethvargo,0,0,5,9,1997,false,false,false,false,0,0,0,0,0,0,-1
12200706,mitchellh/vagrant,ruby,7008,1455119865,,1455120001,2,,unknown,false,false,false,70,3,2,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,25,0,26,0,8.85882844727702,0.1515702559509224,8,sethvargo@gmail.com,README.md|README.md,8,0.01805869074492099,0,3,false,Non developer readme contribution Dear MitchellI have written a clear easy-to-comprehend introduction for Vagrant I believe this introduction free of complex technical terms will swiftly and thoroughly inform anyone about the use-cases merit and advantages including the celebrated features of Vagrant Seasoned developers new programmers and even nontechnical visitors will benefit from the clear language exposing Vagrant to a broader range of usersI appreciate your feedback Regards Sebastian,,1757,0.7410358565737052,0.30248306997742663,33873,578.3367283677266,48.7704071089068,85.11203613497476,10525,10,2211,72,travis,snagy22000,snagy22000,true,,0,0,24,21,44,false,false,false,false,0,0,0,0,0,0,31
12154124,mitchellh/vagrant,ruby,7001,1454964553,1454964804,1454964804,4,4,commits_in_master,false,false,true,46,2,2,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,3,3,3,0,0,50,4,50,4,22.352861567110338,0.3824450743266097,7,sethvargo@gmail.com,plugins/provisioners/chef/config/base.rb|website/source/docs/provisioning/chef_common.html.md|plugins/provisioners/chef/config/base.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|website/source/docs/provisioning/chef_common.html.md,5,0.006756756756756757,1,0,false,Use stable as the default Chef channel Previously the default channel was current but after discussion with@coderanger on GH-6979 it seems like this was a poor design decisionInstead we should use the stable channel and allow users to opt-in toprerelease versionsFixes GH-6979,,1756,0.7408883826879271,0.30855855855855857,33874,578.3196551927732,48.76896734958966,85.10952352836983,10502,10,2209,67,travis,sethvargo,sethvargo,true,sethvargo,101,0.9108910891089109,505,65,1967,true,false,false,false,264,387,158,21,199,2,-1
12113833,mitchellh/vagrant,ruby,6991,1454749007,1454885877,1454885877,2281,2281,commits_in_master,false,false,false,96,2,2,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,9.10247005952655,0.1557382979039036,2,sethvargo@gmail.com,website/source/docs/other/debugging.html.md|website/source/docs/other/debugging.html.md,2,0.004524886877828055,0,0,false,Add debugging log docs During dev I needed to get the detailed logs into a file  The debug info goes to stderr my redirect was only catching stdout Quick fix to the docs and per http://unixstackexchangecom/questions/244343/where-is-vagrants-log-file I may not be the only one who questioned this in the pastThe --debug option could be added to the CLI  That was the first place I looked and not seeing anything I googled If I can get a quick pointer where to look in the code Ill submit another small PR so ppl are aware of this option,,1755,0.7407407407407407,0.31221719457013575,33874,578.3196551927732,48.76896734958966,85.10952352836983,10476,10,2207,67,travis,jzohrab,sethvargo,false,sethvargo,0,0,1,0,1395,false,false,false,false,0,0,0,0,0,0,-1
12095991,mitchellh/vagrant,ruby,6983,1454691828,1454702679,1454702679,180,180,commits_in_master,false,false,false,29,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.389284149497482,0.0750982898554919,2,sethvargo@gmail.com,website/source/docs/cli/destroy.html.md,2,0.0045045045045045045,0,0,true,Changed destroy command to destroy command The word command was enclosed in a code block despite not being part of the actual command you would run at the CLI,,1754,0.7405929304446979,0.3130630630630631,33874,578.3196551927732,48.76896734958966,85.10952352836983,10470,10,2206,68,travis,rightsaidjames,sethvargo,false,sethvargo,0,0,2,9,1151,false,false,false,false,0,0,0,0,0,0,-1
12087756,mitchellh/vagrant,ruby,6981,1454654939,1454702765,1454702765,797,797,commits_in_master,false,false,false,22,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.533016124236996,0.07755746659886269,3,sethvargo@gmail.com,website/source/docs/virtualbox/boxes.html.md,3,0.006726457399103139,0,0,true,Update boxeshtmlmd On my system generic complained when running VBoxLinuxAdditionsrun  It was solved by using the specific headers that matched my kernel,,1753,0.7404449515116942,0.31390134529147984,33874,578.3196551927732,48.76896734958966,85.10952352836983,10465,10,2206,67,travis,krutcha,sethvargo,false,sethvargo,0,0,0,0,1911,false,false,false,false,0,0,0,0,0,0,-1
12084440,mitchellh/vagrant,ruby,6978,1454644602,,1454645805,20,,unknown,false,false,false,28,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.18748345885924,0.07164558863077757,7,xmitchx@gmail.com,plugins/commands/up/command.rb,7,0.01569506726457399,0,0,false,Fix #6828 regression with broken regexp support on vagrant up /test*/ The fix resolves an issue #6828 for me Please consider to include in Vagrant 182Thank you,,1752,0.7408675799086758,0.31390134529147984,33874,578.3196551927732,48.76896734958966,85.10952352836983,10465,10,2205,67,travis,taurus-forever,taurus-forever,true,,0,0,4,3,1309,false,true,false,false,1,4,0,0,0,0,-1
12077812,mitchellh/vagrant,ruby,6977,1454620640,1454623776,1454623776,52,52,commits_in_master,false,false,false,24,5,4,0,2,0,2,0,1,1,0,2,3,2,0,0,1,0,2,3,2,0,0,55,0,57,0,17.999419581895857,0.3082021673068466,0,,plugins/guests/tinycore/cap/mount_nfs.rb|plugins/guests/tinycore/plugin.rb|plugins/guests/tinycore/cap/mount_nfs.rb|plugins/guests/tinycore/plugin.rb,0,0.0,0,0,false,Fix/master/tinycore nfs mount The hashicorp/boot2docker box used the linux mount_nfsrb which fails with TinyCoreCurrently NFSv4 works and NFSv3 needs the additional nolock option,,1751,0.7407195888063963,0.3131991051454139,33836,578.9691452890413,48.82373803050006,85.20510698664145,10464,10,2205,67,travis,erSitzt,sethvargo,false,sethvargo,0,0,0,1,1396,true,false,false,false,1,9,0,0,3,0,2
12050142,mitchellh/vagrant,ruby,6969,1454534696,1454534805,1454534805,1,1,commits_in_master,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.8701248666947805,0.08339063555747703,126,xmitchx@gmail.com,CHANGELOG.md,126,0.28442437923250563,0,0,false,Fix typo in CHANGELOG ,,1750,0.7405714285714285,0.3160270880361174,33836,578.9691452890413,48.82373803050006,85.20510698664145,10454,9,2204,67,travis,mbrodala,sethvargo,false,sethvargo,1,1.0,3,0,930,false,true,false,false,0,2,0,0,0,0,-1
12019732,mitchellh/vagrant,ruby,6963,1454442289,1454442500,1454442500,3,3,commits_in_master,false,false,true,9,1,1,0,0,0,0,0,0,0,0,12,12,10,2,0,0,0,12,12,10,2,0,24,4,24,4,56.068002643393896,0.9623128161988315,3,sethvargo@gmail.com,templates/commands/init/Vagrantfile.erb|templates/commands/init/Vagrantfile.min.erb|test/unit/plugins/pushes/atlas/push_test.rb|test/unit/vagrant/config_test.rb|website/Vagrantfile|website/source/docs/provisioning/ansible.html.md|website/source/docs/provisioning/ansible_intro.html.md|website/source/docs/provisioning/ansible_local.html.md|website/source/docs/vagrantfile/tips.html.md|website/source/docs/vagrantfile/version.html.md|website/source/docs/vmware/kernel-upgrade.html.md|website/source/docs/vmware/usage.html.md,3,0.0048543689320388345,0,0,false,Always use a string for Vagrantfile version Fixes https://githubcom/mitchellh/vagrant/issues/6961,,1749,0.740423098913665,0.33980582524271846,33797,577.8027635588957,48.702547563393196,84.91877977335265,10433,9,2203,82,travis,sethvargo,sethvargo,true,sethvargo,100,0.91,505,65,1961,true,false,false,false,336,439,137,21,159,2,-1
12019579,mitchellh/vagrant,ruby,6962,1454441942,1454442143,1454442143,3,3,commits_in_master,false,false,true,9,1,1,0,0,0,0,0,0,0,0,2,2,1,1,0,0,0,2,2,1,1,0,0,16,0,16,9.298667131626495,0.15959637326540319,3,sethvargo@gmail.com,templates/commands/ssh_config/config.erb|test/unit/plugins/commands/ssh_config/command_test.rb,3,0.007334963325183374,0,0,false,Revert Escape identify file path Reverts mitchellh/vagrant#6589Fixes https://githubcom/mitchellh/vagrant/issues/6929,,1748,0.7402745995423341,0.3422982885085575,33797,578.069059383969,48.73213598840134,84.9483681983608,10433,9,2203,82,travis,sethvargo,sethvargo,true,sethvargo,99,0.9090909090909091,505,65,1961,true,false,false,false,336,437,135,21,156,2,-1
11960582,mitchellh/vagrant,ruby,6952,1454202994,1454222493,1454222493,324,324,commits_in_master,false,false,false,9,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.1473754908307905,0.07118289939158592,41,xmitchx@gmail.com,templates/locales/en.yml,41,0.10024449877750612,0,0,false,Typo fix Fix Spelling mistake -constriants  constraints,,1747,0.7401259301659988,0.34474327628361856,33797,578.069059383969,48.73213598840134,84.9483681983608,10401,9,2200,82,travis,pra85,sethvargo,false,sethvargo,0,0,22,149,1701,false,true,false,false,0,0,0,0,0,0,-1
11940167,mitchellh/vagrant,ruby,6950,1454109630,1454113171,1454113171,59,59,commits_in_master,false,false,false,56,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.226440028443985,0.08970327715999468,3,sethvargo@gmail.com,website/source/docs/synced-folders/nfs.html.md,3,0.007352941176470588,0,0,true,Update nfs sudo configuration for Fedora Copied the configuration to my own machine and noticed I was still getting prompted for my password Looking at the command I realize that sed is called on /tmp/exports not /etc Quick change and everything is automatic as expectedUpdating the documentation so others dont have the same hassle :),,1746,0.7399770904925544,0.3480392156862745,33797,578.069059383969,48.73213598840134,84.9483681983608,10393,9,2199,83,travis,evaryont,sethvargo,false,sethvargo,0,0,60,30,2778,false,false,false,false,0,0,0,0,0,0,-1
11937809,mitchellh/vagrant,ruby,6948,1454103935,1454113228,1454113228,154,154,commits_in_master,false,false,false,6,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.632445994117615,0.07950834309348338,3,sethvargo@gmail.com,website/source/docs/provisioning/docker.html.md,3,0.007352941176470588,0,0,true,Fix typo in dockerhtmlmd Fix typo,,1745,0.7398280802292264,0.3480392156862745,33797,578.069059383969,48.73213598840134,84.9483681983608,10391,9,2199,82,travis,prateepb,sethvargo,false,sethvargo,0,0,7,5,966,false,false,false,false,0,0,0,0,0,0,-1
11872394,mitchellh/vagrant,ruby,6932,1453898817,1453907511,1453907511,144,144,commits_in_master,false,false,false,25,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.568455335654901,0.07841001550625977,2,sethvargo@gmail.com,website/source/docs/getting-started/up.html.md,2,0.0049261083743842365,0,0,false,Fixed typo in docs I just noticed this typo after reading the docs please let me know if theres anything I missed with this PR,,1744,0.7396788990825688,0.3497536945812808,33798,578.0519557370259,48.730694123912656,84.94585478430676,10362,9,2197,83,travis,kkremitzki,sethvargo,false,sethvargo,0,0,2,5,931,false,false,false,false,0,0,0,0,0,0,-1
11831069,mitchellh/vagrant,ruby,6926,1453763786,1453763980,1453763980,3,3,github,false,false,true,7,2,1,0,0,0,0,0,0,0,0,16,16,14,0,2,0,0,16,16,14,0,2,40,0,40,0,74.1040387377231,1.2727840704515172,163,xmitchx@gmail.com,CHANGELOG.md|CONTRIBUTING.md|README.md|keys/README.md|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|plugins/commands/plugin/command/mixin_install_opts.rb|plugins/commands/plugin/gem_helper.rb|plugins/guests/windows/guest_network.rb|plugins/pushes/heroku/locales/en.yml|templates/locales/en.yml|vagrant.gemspec|website/README.md|website/source/docs/plugins/development-basics.html.md|website/source/docs/provisioning/puppet_apply.html.md|website/source/docs/vmware/installation.html.md,107,0.007352941176470588,0,0,false,Use SSL and HTTPS links where appropriate ,,1743,0.7395295467584624,0.35294117647058826,33771,578.5141097391253,48.769654437239055,85.01376921026916,10343,9,2195,84,travis,sethvargo,sethvargo,true,sethvargo,98,0.9081632653061225,505,65,1953,true,false,false,false,330,423,130,21,153,2,-1
11809114,mitchellh/vagrant,ruby,6923,1453679721,1453942321,1453942321,4376,4376,commits_in_master,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.349622747390029,0.0747075414465014,6,xmitchx@gmail.com,plugins/communicators/winrm/shell.rb,6,0.014742014742014743,0,0,false,remove call to deprecated toggle_nori_type_casting in winrm ,,1741,0.7398047099368179,0.3538083538083538,33771,578.5141097391253,48.769654437239055,85.01376921026916,10333,9,2194,83,travis,mwrock,sneal,false,sneal,14,0.7857142857142857,145,3,1784,false,false,false,false,1,6,2,0,0,0,4376
11808884,mitchellh/vagrant,ruby,6922,1453678548,1454529169,1454529169,14177,14177,commits_in_master,false,false,false,29,5,1,0,5,0,5,0,2,0,0,5,7,5,0,0,0,0,7,7,7,0,0,37,15,158,73,22.71130615378948,0.39008115055645,12,xmitchx@gmail.com,plugins/communicators/winrm/config.rb|plugins/communicators/winrm/shell.rb|test/unit/plugins/communicators/winrm/shell_test.rb|vagrant.gemspec|website/source/docs/vagrantfile/winrm_settings.html.md,6,0.004914004914004914,1,1,false,use NTLM/Negotiate authentication over basic authentication Winrm 16 just released and supports cross platform encrypted NTLM/Negotiate authentication See http://wwwhurryupandwaitio/blog/sane-authenticationencryption-arrives-to-ruby-based-cross-platform-winrm-remote-executionThis makes this the default for vagrant boxescc @sneal,,1740,0.7396551724137931,0.3538083538083538,33771,578.5141097391253,48.769654437239055,85.01376921026916,10333,9,2194,82,travis,mwrock,sethvargo,false,sethvargo,13,0.7692307692307693,145,3,1784,false,false,false,false,1,5,1,0,0,0,4
11804863,mitchellh/vagrant,ruby,6920,1453657022,,1456585205,48803,,unknown,false,false,false,41,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.195795172099776,0.07216395388308514,3,xmitchx@gmail.com,lib/vagrant/machine_index.rb,3,0.007389162561576354,0,1,false,fixes-#6834-commands using machine id fail #6834-commands using machine id fail: fixes issue with lock never being released while using vagrant up / halt with machine id releasing it for it to continue without failuresalso fixing a typo in the comments,,1739,0.7400805060379528,0.35467980295566504,33771,578.5141097391253,48.769654437239055,85.01376921026916,10331,9,2194,90,travis,kamigerami,kamigerami,true,,1,1.0,4,5,461,true,false,false,false,3,13,1,0,2,0,30076
11753491,mitchellh/vagrant,ruby,6912,1453421870,1454528722,1454528722,18447,18447,commits_in_master,false,false,false,33,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.180195265415001,0.07189564933045439,7,xmitchx@gmail.com,plugins/provisioners/puppet/provisioner/puppet.rb,7,0.0171990171990172,0,0,false,Fixed an issue locating puppet binary Issue-6876 As explained here http://stackoverflowcom/questions/11009598/whats-the-cmd-powershell-equivalent-of-which-on-bash in PS may be necessary to use whereexe instead of where to avoid call Where-ObjectThe change is compatible with CMD also,,1738,0.7399309551208285,0.35626535626535627,33771,578.5141097391253,48.769654437239055,85.01376921026916,10309,9,2191,82,travis,gavioto,sethvargo,false,sethvargo,0,0,8,16,1209,false,false,false,false,0,0,0,0,0,0,18301
11748041,mitchellh/vagrant,ruby,6909,1453408272,1454529380,1454529380,18685,18685,commits_in_master,false,false,false,24,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.2525532695239825,0.07314014279531995,7,xmitchx@gmail.com,plugins/commands/up/command.rb,7,0.0171990171990172,0,0,false,Fix vagrant up --install-provider regular expression handling Fixes GH-6908Pass names through with_target_vms to get regular expression expansion rather than iterating over names directly,,1737,0.7397812320092113,0.35626535626535627,33771,578.5141097391253,48.769654437239055,85.01376921026916,10303,9,2191,80,travis,williamonymous,sethvargo,false,sethvargo,0,0,0,0,56,false,false,false,false,0,0,0,0,0,0,-1
11730627,mitchellh/vagrant,ruby,6899,1453342736,1454529290,1454529290,19775,19775,commits_in_master,false,false,false,22,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.506733237433976,0.07751181270052203,3,sethvargo@gmail.com,plugins/commands/login/client.rb,3,0.007371007371007371,0,0,false,fix login behind proxy (#6898) were using rest_client 169 which doesnt use proxy passed into the RestClient::Requestexecute  Must set RestClientproxyinstead,,1736,0.7396313364055299,0.35626535626535627,33771,578.5141097391253,48.769654437239055,85.01376921026916,10292,9,2190,80,travis,tompscanlan,sethvargo,false,sethvargo,0,0,2,1,1087,false,false,false,false,1,0,0,0,0,0,-1
11729704,mitchellh/vagrant,ruby,6897,1453340274,1454529624,1454529624,19822,19822,commits_in_master,false,false,false,5,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.572723609342717,0.07864678854176807,2,sethvargo@gmail.com,website/source/docs/getting-started/synced_folders.html.md,2,0.004914004914004914,0,0,false,Added instructions for non-hashicorp boxes ,,1735,0.7394812680115274,0.35626535626535627,33771,578.5141097391253,48.769654437239055,85.01376921026916,10292,9,2190,78,travis,wjsager,sethvargo,false,sethvargo,0,0,9,7,405,false,false,false,false,0,0,0,0,0,0,-1
11708949,mitchellh/vagrant,ruby,6893,1453269900,1454529446,1454529446,20992,20992,commits_in_master,false,false,false,7,2,2,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,13,7,13,8.696684547575623,0.14957416369315088,5,xmitchx@gmail.com,test/unit/vagrant/box_collection_test.rb|lib/vagrant/box_collection.rb,4,0.009852216748768473,0,0,false,Prerelease version fix This should fix https://githubcom/mitchellh/vagrant/issues/6892,,1733,0.7397576457010964,0.35714285714285715,33771,578.5141097391253,48.769654437239055,85.01376921026916,10277,9,2190,78,travis,mmickan,sethvargo,false,sethvargo,0,0,2,0,700,false,false,false,false,0,0,0,0,0,0,-1
11701807,mitchellh/vagrant,ruby,6891,1453250130,1453250356,1453250356,3,3,commits_in_master,false,false,true,127,1,1,0,0,0,0,0,2,60,203,1,264,195,47,59,60,203,1,264,195,47,59,3566,0,3566,0,136.5247298564983,2.1253882811124067,101,xmitchx@gmail.com,.gitignore|website/Gemfile|website/Gemfile.lock|website/Makefile|website/README.md|website/Vagrantfile|website/config.rb|website/docs/.buildpacks|website/docs/Gemfile|website/docs/Gemfile.lock|website/docs/Makefile|website/docs/Procfile|website/docs/README.md|website/docs/Vagrantfile|website/docs/config.rb|website/docs/config.ru|website/docs/helpers/sidebar_helpers.rb|website/docs/lib/redirect_to_latest.rb|website/docs/lib/redirect_v1_docs.rb|website/docs/source/404.html.erb|website/docs/source/favicon.ico|website/docs/source/images/bullet_1.png|website/docs/source/images/bullet_2.png|website/docs/source/images/bullet_3.png|website/docs/source/images/customers.png|website/docs/source/images/customers_small.png|website/docs/source/images/footer_background.png|website/docs/source/images/footer_hashi_logo.png|website/docs/source/images/footer_vagrant_logo.png|website/docs/source/images/get_started_background.png|website/docs/source/images/icon_caution.png|website/docs/source/images/logo-header-docs.png|website/docs/source/images/logo-header-docs@2x.png|website/docs/source/images/logo-header.png|website/docs/source/images/logo-header@2x.png|website/docs/source/images/logo_docs.png|website/docs/source/images/logo_docs_small.png|website/docs/source/images/logo_small.png|website/docs/source/images/logo_vagrant.png|website/docs/source/images/open_close.png|website/docs/source/images/search_icon.png|website/docs/source/images/sidebar_background_docs.png|website/docs/source/images/sidebar_background_inner.png|website/docs/source/images/steps_background.png|website/docs/source/images/vagrant_header_background.png|website/docs/source/index.html.erb|website/docs/source/javascripts/Sidebar.js|website/docs/source/javascripts/backstretch.js|website/docs/source/javascripts/bootstrap.min.js|website/docs/source/javascripts/fittext.js|website/docs/source/javascripts/grid-overlay.js|website/docs/source/javascripts/jquery.js|website/docs/source/javascripts/less-1.3.0.min.js|website/docs/source/javascripts/lib/Base.js|website/docs/source/javascripts/modernizr.js|website/docs/source/javascripts/vagrantup.js|website/docs/source/layouts/_mobile_nav.erb|website/docs/source/layouts/layout.erb|website/docs/source/layouts/svg/_svg-by-hashicorp.erb|website/docs/source/layouts/svg/_svg-download.erb|website/docs/source/layouts/svg/_svg-github.erb|website/docs/source/layouts/svg/_svg-hashicorp-logo.erb|website/docs/source/stylesheets/_base.less|website/docs/source/stylesheets/_components.less|website/docs/source/stylesheets/_footer.less|website/docs/source/stylesheets/_header.less|website/docs/source/stylesheets/_media-queries.less|website/docs/source/stylesheets/_mixins.less|website/docs/source/stylesheets/_mobile-nav.less|website/docs/source/stylesheets/_pages.less|website/docs/source/stylesheets/_sidebar.less|website/docs/source/stylesheets/_type.less|website/docs/source/stylesheets/_variables.less|website/docs/source/stylesheets/bootstrap.css|website/docs/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/docs/source/stylesheets/hashicorp-shared/_hashicorp-mobile-nav.less|website/docs/source/stylesheets/hashicorp-shared/_hashicorp-utility.less|website/docs/source/stylesheets/hashicorp-shared/_project-utility.less|website/docs/source/stylesheets/vagrantup.less|website/docs/source/v2/cli/non-primary.html.md|website/docs/source/v2/cli/package.html.md|website/docs/source/v2/cli/plugin.html.md|website/docs/source/v2/cli/port.html.md|website/docs/source/v2/cli/powershell.html.md|website/docs/source/v2/cli/provision.html.md|website/docs/source/v2/cli/rdp.html.md|website/docs/source/v2/cli/reload.html.md|website/docs/source/v2/cli/resume.html.md|website/docs/source/v2/cli/rsync-auto.html.md|website/docs/source/v2/cli/rsync.html.md|website/docs/source/v2/cli/share.html.md|website/docs/source/v2/cli/snapshot.html.md|website/docs/source/v2/cli/ssh.html.md|website/docs/source/v2/cli/ssh_config.html.md|website/docs/source/v2/cli/status.html.md|website/docs/source/v2/cli/suspend.html.md|website/docs/source/v2/cli/up.html.md|website/docs/source/v2/cli/version.html.md|website/docs/source/v2/docker/basics.html.md|website/docs/source/v2/docker/boxes.html.md|website/docs/source/v2/docker/commands.html.md|website/docs/source/v2/docker/configuration.html.md|website/docs/source/v2/docker/index.html.md|website/docs/source/v2/getting-started/boxes.html.md|website/docs/source/v2/getting-started/index.html.md|website/docs/source/v2/getting-started/networking.html.md|website/docs/source/v2/getting-started/project_setup.html.md|website/docs/source/v2/getting-started/providers.html.md|website/docs/source/v2/getting-started/provisioning.html.md|website/docs/source/v2/getting-started/rebuild.html.md|website/docs/source/v2/getting-started/share.html.md|website/docs/source/v2/getting-started/synced_folders.html.md|website/docs/source/v2/getting-started/teardown.html.md|website/docs/source/v2/getting-started/up.html.md|website/docs/source/v2/hyperv/boxes.html.md|website/docs/source/v2/hyperv/configuration.html.md|website/docs/source/v2/hyperv/index.html.md|website/docs/source/v2/hyperv/limitations.html.md|website/docs/source/v2/hyperv/usage.html.md|website/docs/source/v2/index.html.md|website/docs/source/v2/installation/backwards-compatibility.html.md|website/docs/source/v2/installation/index.html.md|website/docs/source/v2/installation/uninstallation.html.md|website/docs/source/v2/installation/upgrading-from-1-0.html.md|website/docs/source/v2/installation/upgrading.html.md|website/docs/source/v2/multi-machine/index.html.md|website/docs/source/v2/networking/basic_usage.html.md|website/docs/source/v2/networking/forwarded_ports.html.md|website/docs/source/v2/networking/index.html.md|website/docs/source/v2/networking/private_network.html.md|website/docs/source/v2/networking/public_network.html.md|website/docs/source/v2/other/debugging.html.md|website/docs/source/v2/other/environmental-variables.html.md|website/docs/source/v2/other/index.html.md|website/docs/source/v2/plugins/action-hooks.html.md|website/docs/source/v2/plugins/commands.html.md|website/docs/source/v2/plugins/configuration.html.md|website/docs/source/v2/plugins/development-basics.html.md|website/docs/source/v2/plugins/guest-capabilities.html.md|website/docs/source/v2/plugins/guests.html.md|website/docs/source/v2/plugins/host-capabilities.html.md|website/docs/source/v2/plugins/hosts.html.md|website/docs/source/v2/plugins/index.html.md|website/docs/source/v2/plugins/packaging.html.md|website/docs/source/v2/plugins/providers.html.md|website/docs/source/v2/plugins/provisioners.html.md|website/docs/source/v2/plugins/usage.html.md|website/docs/source/v2/providers/basic_usage.html.md|website/docs/source/v2/providers/configuration.html.md|website/docs/source/v2/providers/custom.html.md|website/docs/source/v2/providers/default.html.md|website/docs/source/v2/providers/index.html.md|website/docs/source/v2/providers/installation.html.md|website/docs/source/v2/provisioning/ansible.html.md|website/docs/source/v2/provisioning/ansible_common.html.md|website/docs/source/v2/provisioning/ansible_intro.html.md|website/docs/source/v2/provisioning/ansible_local.html.md|website/docs/source/v2/provisioning/basic_usage.html.md|website/docs/source/v2/provisioning/cfengine.html.md|website/docs/source/v2/provisioning/chef_apply.html.md|website/docs/source/v2/provisioning/chef_client.html.md|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_solo.html.md|website/docs/source/v2/provisioning/chef_zero.html.md|website/docs/source/v2/provisioning/docker.html.md|website/docs/source/v2/provisioning/file.html.md|website/docs/source/v2/provisioning/index.html.md|website/docs/source/v2/provisioning/puppet_agent.html.md|website/docs/source/v2/provisioning/puppet_apply.html.md|website/docs/source/v2/provisioning/salt.html.md|website/docs/source/v2/provisioning/shell.html.md|website/docs/source/v2/push/atlas.html.md|website/docs/source/v2/push/ftp.html.md|website/docs/source/v2/push/heroku.html.md|website/docs/source/v2/push/index.html.md|website/docs/source/v2/push/local-exec.html.md|website/docs/source/v2/share/connect.html.md|website/docs/source/v2/share/http.html.md|website/docs/source/v2/share/index.html.md|website/docs/source/v2/share/provider.html.md|website/docs/source/v2/share/security.html.md|website/docs/source/v2/share/ssh.html.md|website/docs/source/v2/synced-folders/basic_usage.html.md|website/docs/source/v2/synced-folders/index.html.md|website/docs/source/v2/synced-folders/nfs.html.md|website/docs/source/v2/synced-folders/rsync.html.md|website/docs/source/v2/synced-folders/smb.html.md|website/docs/source/v2/synced-folders/virtualbox.html.md|website/docs/source/v2/vagrantfile/index.html.md|website/docs/source/v2/vagrantfile/machine_settings.html.md|website/docs/source/v2/vagrantfile/ssh_settings.html.md|website/docs/source/v2/vagrantfile/tips.html.md|website/docs/source/v2/vagrantfile/vagrant_settings.html.md|website/docs/source/v2/vagrantfile/vagrant_version.html.md|website/docs/source/v2/vagrantfile/version.html.md|website/docs/source/v2/vagrantfile/winrm_settings.html.md|website/docs/source/v2/virtualbox/boxes.html.md|website/docs/source/v2/virtualbox/common-issues.html.md|website/docs/source/v2/virtualbox/configuration.html.md|website/docs/source/v2/virtualbox/index.html.md|website/docs/source/v2/virtualbox/networking.html.md|website/docs/source/v2/virtualbox/usage.html.md|website/docs/source/v2/vmware/boxes.html.md|website/docs/source/v2/vmware/configuration.html.md|website/docs/source/v2/vmware/index.html.md|website/docs/source/v2/vmware/installation.html.md|website/docs/source/v2/vmware/kernel-upgrade.html.md|website/docs/source/v2/vmware/known-issues.html.md|website/docs/source/v2/vmware/usage.html.md|website/docs/source/v2/why-vagrant/index.html.md|website/packer.json|website/scripts/deploy.sh|website/source/404.html.md|website/source/about.html.md|website/source/assets/images/bullet_1.png|website/source/assets/images/bullet_2.png|website/source/assets/images/bullet_3.png|website/source/assets/images/customers.png|website/source/assets/images/customers_small.png|website/source/assets/images/fastly_logo.png|website/source/assets/images/favicon.ico|website/source/assets/images/favicon.png|website/source/assets/images/footer_background.png|website/source/assets/images/footer_hashi_logo.png|website/source/assets/images/footer_vagrant_logo.png|website/source/assets/images/get_started_background.png|website/source/assets/images/icon_caution.png|website/source/assets/images/logo-header.png|website/source/assets/images/logo-header@2x.png|website/source/assets/images/logo_docs.png|website/source/assets/images/logo_docs_small.png|website/source/assets/images/logo_small.png|website/source/assets/images/logo_vagrant.png|website/source/assets/images/open_close.png|website/source/assets/images/search_icon.png|website/source/assets/images/sidebar_background_docs.png|website/source/assets/images/sidebar_background_inner.png|website/source/assets/images/sponsors/fastly.png|website/source/assets/images/sponsors/kiip.png|website/source/assets/images/sponsors/softlayer.jpg|website/source/assets/images/sponsors/typekit.png|website/source/assets/images/steps_background.png|website/source/assets/images/vagrant_header_background.png|website/source/assets/images/vagrant_vmware_background.png|website/source/assets/javascripts/app/_app.js|website/source/assets/javascripts/app/_docs.js|website/source/assets/javascripts/app/_sidebar.js|website/source/assets/javascripts/app/_util.js|website/source/assets/javascripts/application.js|website/source/assets/javascripts/lib/_Base.js|website/source/assets/stylesheets/_about.scss|website/source/assets/stylesheets/_buttons.scss|website/source/assets/stylesheets/_docs.scss|website/source/assets/stylesheets/_downloads.scss|website/source/assets/stylesheets/_fonts.scss|website/source/assets/stylesheets/_footer.scss|website/source/assets/stylesheets/_global.scss|website/source/assets/stylesheets/_header.scss|website/source/assets/stylesheets/_home.scss|website/source/assets/stylesheets/_mixins.scss|website/source/assets/stylesheets/_pages.scss|website/source/assets/stylesheets/_sidebar.scss|website/source/assets/stylesheets/_sponsors.scss|website/source/assets/stylesheets/_utilities.scss|website/source/assets/stylesheets/_variables.scss|website/source/assets/stylesheets/_vmware.scss|website/source/assets/stylesheets/application.scss|website/source/assets/stylesheets/hashicorp-shared/_hashicorp-header.scss|website/source/assets/stylesheets/hashicorp-shared/_hashicorp-sidebar.scss|website/source/assets/stylesheets/hashicorp-shared/_hashicorp-utility.scss|website/source/assets/stylesheets/hashicorp-shared/_project-utility.scss|website/source/community.html.erb|website/source/docs/boxes.html.md|website/source/docs/boxes/base.html.md|website/source/docs/boxes/format.html.md|website/source/docs/boxes/versioning.html.md|website/source/docs/cli/box.html.md|website/source/docs/cli/connect.html.md|website/source/docs/cli/destroy.html.md|website/source/docs/cli/global-status.html.md|website/source/docs/cli/halt.html.md|website/source/docs/cli/index.html.md|website/source/docs/cli/init.html.md|website/source/docs/cli/login.html.md|website/source/docs/cli/machine-readable.html.md|website/source/docs/cli/non-primary.html.md|website/source/docs/cli/package.html.md|website/source/docs/cli/plugin.html.md|website/source/docs/cli/port.html.md|website/source/docs/cli/powershell.html.md|website/source/docs/cli/provision.html.md|website/source/docs/cli/rdp.html.md|website/source/docs/cli/reload.html.md|website/source/docs/cli/resume.html.md|website/source/docs/cli/rsync-auto.html.md|website/source/docs/cli/rsync.html.md|website/source/docs/cli/share.html.md|website/source/docs/cli/snapshot.html.md|website/source/docs/cli/ssh.html.md|website/source/docs/cli/ssh_config.html.md|website/source/docs/cli/status.html.md,15,0.0,0,4,false,Merge docs and www into a single static site This is a big commit and I apologize in advance for the future git-blames all pointing to me This commit does a few things:1  Merges the website/docs and website/www repo into a single website repo    to be in line with other HashiCorp projects2  Updates to use middleman-hashicorp3  Converts less to scss to be in line with other projects4  Updates page styles to be in line with other projects5  Optimizes images6  Prepare for S3 + Fastly deployment with scripts etc7  Removes blog posts (they have been transferred to hashicorpcom with    redirects in place8  Updated sitemap generation script for better SEO9  Fixed many broken links10 Add description to all fields,,1732,0.7396073903002309,0.3589108910891089,33941,575.61651100439,48.52538228101706,84.58796146253793,10276,9,2189,74,travis,sethvargo,sethvargo,true,sethvargo,97,0.9072164948453608,505,65,1947,true,false,false,false,320,410,128,21,149,2,-1
11625028,mitchellh/vagrant,ruby,6879,1452900417,1457131255,1457131255,70513,70513,commits_in_master,false,false,false,59,3,1,1,3,0,4,0,3,0,0,2,3,2,0,0,0,0,3,3,3,0,0,24,0,68,0,8.105410808613733,0.12618374065035812,0,,plugins/commands/snapshot/command/pop.rb|plugins/commands/snapshot/command/push_shared.rb,0,0.0,0,1,true,Add --no-delete to snapshot pop command In our test environments its good to be able to roll back to the sameanonymous snapshot repeatedly  This patch adds a --no-delete optionto the snapshot pop command allowing thisThis makes the new core snapshot behaviour more consistent with what wewere doing with [vagrant-multiprovider-snap](https://githubcom/scalefactory/vagrant-multiprovider-snap) which I intend to deprecate eventually,,1731,0.7394569612940497,0.36228287841191065,33941,575.61651100439,48.52538228101706,84.58796146253793,10243,9,2185,84,travis,jtopper,phinze,false,phinze,2,1.0,3,0,1732,false,true,false,false,0,0,0,0,0,0,1304
11603860,mitchellh/vagrant,ruby,6874,1452824293,1452824365,1452824365,1,1,commits_in_master,false,false,false,29,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,9.083215474094995,0.14140581871308386,4,sethvargo@gmail.com,website/docs/source/v2/synced-folders/nfs.html.md|website/docs/source/v2/synced-folders/nfs.html.md,4,0.009950248756218905,0,1,false,Update nfs docs Closes #6872Adds a warning to the [synced folders docs](https://docsvagrantupcom/v2/synced-folders/nfshtml) about using visudo vs any other editor as syntax errors can leave you stuck without privileges,,1730,0.7393063583815029,0.36318407960199006,33941,575.61651100439,48.52538228101706,84.58796146253793,10232,9,2184,73,travis,theengineear,sethvargo,false,sethvargo,0,0,10,0,706,false,false,false,false,1,0,0,0,0,0,0
11578938,mitchellh/vagrant,ruby,6869,1452740771,1452745682,1452745682,81,81,commits_in_master,false,false,false,73,1,1,0,1,1,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.432197300450893,0.06900096220091165,14,jonthomas0@gmail.com,plugins/provisioners/ansible/provisioner/guest.rb,14,0.03508771929824561,1,1,false,fixing incorrect missing ansible error At least for ansible 2001 the command ansible-galaxy --help is inappropriate for testing if ansible is installed as it yields an error:vagrant@vagrant-ubuntu-trusty-64:~$ ansible-galaxy --help && echo OK          Usage: ansible-galaxy [delete|import|info|init|install|list|login|remove|search|setup] [--help] [options] Options:  -h --help     show this help message and exit  -v --verbose  verbose mode (-vvv for more -vvvv to enable connection                 debugging)  --version      show programs version number and exitERROR Missing required action,,1729,0.7391555812608445,0.3659147869674185,33938,575.6673934822322,48.52967175437563,84.59543874123402,10226,9,2183,74,travis,daniel-sc,gildegoma,false,gildegoma,0,0,1,0,2336,false,false,false,false,0,0,0,0,0,0,69
11563013,mitchellh/vagrant,ruby,6867,1452695783,1454529552,1454529552,30562,30562,commits_in_master,false,false,false,16,1,1,0,4,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.542534673036376,0.07071870722872083,0,,plugins/guests/freebsd/cap/change_host_name.rb,0,0.0,0,2,false,FreeBSD: Use quotes around hostname in rcconf Use double quotes around the hostname value in /etc/rcconf,,1728,0.7390046296296297,0.3659147869674185,33938,575.6673934822322,48.52967175437563,84.59543874123402,10222,9,2183,78,travis,jlduran,sethvargo,false,sethvargo,0,0,1,1,2437,false,false,false,false,0,0,0,0,0,0,365
11518115,mitchellh/vagrant,ruby,6850,1452549200,,1452554406,86,,unknown,false,false,false,29,1,1,0,2,0,2,0,3,1,0,4,5,4,0,1,1,0,4,5,4,0,1,76,0,76,0,22.290000434427597,0.3470163038858129,5,sethvargo@gmail.com,plugins/providers/docker/action.rb|plugins/providers/docker/action/host_machine_stop.rb|plugins/providers/docker/errors.rb|templates/locales/providers_docker.yml|website/docs/source/v2/docker/basics.html.md,3,0.0024813895781637717,0,6,false,[WIP] Stop the Docker host VM on vagrant halt Pretty rough but this is kind of what Im thinking as a way to solve https://githubcom/mitchellh/vagrant/issues/6832Feedback and/or assistance welcome,,1726,0.7398609501738123,0.369727047146402,33938,575.6673934822322,48.52967175437563,84.59543874123402,10204,10,2181,73,travis,cweagans,sethvargo,false,,0,0,24,12,2382,false,false,false,false,2,7,0,0,0,0,42
11518073,mitchellh/vagrant,ruby,6848,1452548835,1454528946,1454528946,33001,33001,commits_in_master,false,false,false,8,1,1,0,9,0,9,0,10,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.6931574569389225,0.07306424955226377,4,xmitchx@gmail.com,vagrant.gemspec,4,0.009925558312655087,0,3,false,Bump nokogiri dependency to the latest stable version ,,1725,0.7397101449275363,0.369727047146402,33938,575.6673934822322,48.52967175437563,84.59543874123402,10204,10,2181,83,travis,anatol,sethvargo,false,sethvargo,2,0.5,44,5,2829,false,false,false,false,0,0,2,0,0,1,45
11508476,mitchellh/vagrant,ruby,6844,1452510279,1452510461,1452510461,3,3,commits_in_master,false,false,false,5,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.673271242921218,0.07275465599675861,3,sethvargo@gmail.com,website/www/source/vmware/index.html.erb,3,0.007425742574257425,0,0,false,Unfortuantely - Unfortunately spelling fix,,1723,0.7399883923389438,0.3688118811881188,33938,575.6673934822322,48.52967175437563,84.59543874123402,10201,11,2181,71,travis,adamenger,mitchellh,false,mitchellh,0,0,20,28,1514,false,false,true,false,0,0,0,0,0,0,2
11498028,mitchellh/vagrant,ruby,6843,1452454330,1454530345,1454530345,34600,34600,commits_in_master,false,false,false,42,1,1,0,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,2,2,0,0,26,0,26,0,9.115705534533813,0.14191537961213757,0,,plugins/guests/trisquel/guest.rb|plugins/guests/trisquel/plugin.rb,0,0.0,0,0,false,Add trisquel guest plugin as derivative of ubuntu - Issue #6842 Since Trisquel is a direct derivative of Ubuntu the only thing needed to change is the distribution detection The rest of the capabilities should work with no issue through normal inheritance,,1722,0.7398373983739838,0.369727047146402,33938,575.6673934822322,48.52967175437563,84.59543874123402,10201,11,2180,76,travis,velocity303,sethvargo,false,sethvargo,0,0,5,5,993,false,false,false,false,1,0,0,0,0,0,-1
11472145,mitchellh/vagrant,ruby,6833,1452293233,1452293282,1452293282,0,0,commits_in_master,false,false,false,3,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.559007757152256,0.07097566051879312,2,xmitchx@gmail.com,vagrant.gemspec,2,0.004962779156327543,0,0,true,Specify gem license ,,1719,0.7405468295520652,0.369727047146402,33938,575.6673934822322,48.52967175437563,84.59543874123402,10188,11,2178,68,travis,anatol,mitchellh,false,mitchellh,0,0,44,5,2826,false,false,false,false,0,0,0,0,0,1,0
11449495,mitchellh/vagrant,ruby,6820,1452207193,,1457224902,83628,,unknown,false,true,false,122,1,1,0,3,0,3,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,6,6,6,9.54195565997278,0.14855139820766444,25,kami.gerami@gmail.com,plugins/provisioners/ansible/helpers.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,25,0.057208237986270026,0,3,false,Add quoting for ansibles extra_vars --start-at-task and --limit are quoted so is extra_vars as of the commit referenced belowThis seems to fix #6726 I know absolutely no ruby but hope that things I ended up with after some googling are not too scaryI also modified a test that checked quoting to expect extra-vars quoted as well (and made extra-vars contain a hashtable as checking just a filename seemed pretty useless to me) I also supported nested single quotes for all 3 options that are quoted nowThis fix is checked with ansible provisioner (as it might have appeared broken because of the suggested fix) Im happy to report that ansible did very same job as ansible-local  provisioning my guest machine,,1718,0.7409778812572759,0.34096109839816935,33938,575.6673934822322,48.52967175437563,84.59543874123402,10184,12,2177,85,travis,kamazee,kamazee,true,,1,1.0,8,4,2112,false,false,false,false,0,0,0,0,0,0,83471
11431003,mitchellh/vagrant,ruby,6816,1452135714,1452137085,1452137085,22,22,commits_in_master,false,false,true,33,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.204755446880796,0.06546060604363076,5,xmitchx@gmail.com,plugins/provisioners/puppet/provisioner/puppet.rb,5,0.011441647597254004,1,1,false,Fix issue 6762 Fixes error The term $ is not recognized as the name of a cmdlet function script@lmayorga1980 This should fix your issues with Puppet and setting a current working directory,,1717,0.7408270238788585,0.34096109839816935,33938,575.6673934822322,48.52967175437563,84.59543874123402,10176,12,2176,67,travis,sneal,sneal,true,sneal,32,0.875,39,0,2162,true,false,false,false,1,2,0,0,1,1,-1
11398676,mitchellh/vagrant,ruby,6806,1452022326,1453766126,1453766126,29063,29063,commits_in_master,false,false,false,15,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,32,0,32,0,8.75896300423926,0.1363615634285181,3,sethvargo@gmail.com,plugins/provisioners/chef/cap/suse/chef_install.rb|plugins/provisioners/chef/plugin.rb,3,0.006787330316742082,0,2,false,add chef installer for suse Add chef install guest capability for suseTested with sles12,,1716,0.7406759906759907,0.33710407239819007,33938,575.6673934822322,48.52967175437563,84.59543874123402,10163,11,2175,85,travis,gimler,sethvargo,false,sethvargo,2,1.0,79,113,2155,false,false,false,false,0,0,1,0,0,0,29060
11398567,mitchellh/vagrant,ruby,6805,1452022010,1454530236,1454530236,41803,41803,commits_in_master,false,false,false,32,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.8004634710956635,0.07473472644915564,3,sethvargo@gmail.com,plugins/provisioners/chef/omnibus.rb,3,0.006787330316742082,0,0,false,remove double sudo The double sudo in plugins/provisioners/chef/omnibusrb:11 lost the env like proxy settings All commands see (plugins/provisioners/chef/cap/*/chef_installrb) have allready sudo so no need to pipe it to sudoSee also #6804,,1715,0.7405247813411079,0.33710407239819007,33938,575.6673934822322,48.52967175437563,84.59543874123402,10163,11,2175,75,travis,gimler,sethvargo,false,sethvargo,1,1.0,79,113,2155,false,false,false,false,0,0,0,0,0,0,-1
11392661,mitchellh/vagrant,ruby,6800,1451997373,1452745677,1452745677,12471,12471,commits_in_master,false,true,true,47,8,2,3,3,2,8,0,3,0,0,5,6,5,0,0,0,0,6,6,6,0,0,43,0,64,0,23.334488075708315,0.3632767114403469,120,xmitchx@gmail.com,website/docs/source/v2/vagrantfile/tips.html.md|CHANGELOG.md|plugins/provisioners/ansible/config/guest.rb|plugins/provisioners/ansible/helpers.rb|plugins/provisioners/ansible/provisioner/base.rb,106,0.00904977375565611,0,0,false,provisioners/ansible: fix galaxy paths on Windows :warning: **not ready for merge yet** :construction: * [ ] #6763 to be fixed* [ ] #6757 fixed to be fully verified on windows* [ ] #6740 fixed to be fully verified on windows* [ ] anything else_,,1714,0.7403733955659276,0.33710407239819007,33938,575.6673934822322,48.52967175437563,84.59543874123402,10161,11,2175,75,travis,gildegoma,gildegoma,true,gildegoma,26,0.9615384615384616,51,127,1913,true,true,false,false,22,72,13,23,43,8,2
11390996,mitchellh/vagrant,ruby,6797,1451986388,,1454530095,42395,,unknown,false,false,false,406,2,1,0,0,0,0,0,1,0,0,1,2,1,0,0,0,0,2,2,2,0,0,0,13,2,13,4.656901849503873,0.07249972589496731,3,xmitchx@gmail.com,test/unit/vagrant/box_collection_test.rb,3,0.006802721088435374,0,1,false,vagrant box add fails when box version has dashes (181) Vagrant version 181Stack trace:$ vagrant box add boxjson/opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/box_addrb:361:in box_add: undefined method name for nil:NilClass (NoMethodError)        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/box_addrb:266:in add_from_metadata        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/box_addrb:104:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/handle_boxrb:82:in handle_box        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/handle_boxrb:42:in block in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/handle_boxrb:36:in synchronize        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/handle_boxrb:36:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:95:in block in finalize_action        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/callrb:53:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/providers/virtualbox/action/check_virtualboxrb:17:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/machinerb:224:in action_raw        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/machinerb:199:in block in action        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/environmentrb:561:in lock        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/machinerb:185:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/machinerb:185:in action        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/batch_actionrb:82:in block (2 levels) in runboxjson:{    description:      name:      versions: [        {            version: 80000-16-g28b33ec             providers: [                {                    url:                      checksum:                      name: virtualbox                     checksum_type: sha256                }            ]        }    ]}A version string like this can be produced with git describe --tagsThe reason this failure occurs is because in BoxCollection::add the version directory that is created is named exactly the same as the version However the last statement in add is to call find In this method the version that is passed in is first processed by Gem::Version and then converted to a string resulting in a slight but significant modification: 80000pre16preg28b33ec Tthat directory does not exist resulting in add returning nil and raising the above errorThe box is still added but listing and removing is no longer possible:/opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/listrb:55:in block in list_boxes: undefined method directory for nil:NilClass (NoMethodError)        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/listrb:47:in each        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/listrb:47:in list_boxes        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/listrb:30:in execute        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/rootrb:61:in execute        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/clirb:42:in execute        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/environmentrb:302:in cli        from /opt/vagrant/embedded/gems/gems/vagrant-181/bin/vagrant:174:in main/opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/box_removerb:84:in block in call: undefined method in_use for nil:NilClass (NoMethodError)        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/box_removerb:76:in each        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builtin/box_removerb:76:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/removerb:52:in execute        from /opt/vagrant/embedded/gems/gems/vagrant-181/plugins/commands/box/command/rootrb:61:in execute        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/clirb:42:in execute        from /opt/vagrant/embedded/gems/gems/vagrant-181/lib/vagrant/environmentrb:302:in cli        from /opt/vagrant/embedded/gems/gems/vagrant-181/bin/vagrant:174:in mainEach of these calls fail because find is returning nilThis can be resolved manually by renaming the version directory to match the result of Gem::Version()to_s One option for solving this problem is to update BoxCollection::add to convert the version with Gem::Version before doing anything with it ,,1713,0.7408056042031523,0.3378684807256236,33938,575.6673934822322,48.52967175437563,84.59543874123402,10157,11,2175,74,travis,kylegibson,sethvargo,false,,0,0,14,3,2092,false,false,false,false,0,0,0,0,0,0,-1
11384202,mitchellh/vagrant,ruby,6795,1451959151,1452643735,1452643735,11409,11409,commits_in_master,false,false,false,18,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,17,0,17,0,4.804676349036355,0.07480031350806299,0,,website/docs/source/v2/vagrantfile/tips.html.md,0,0.0,0,0,false,#6794 Add to doc trick how to define locale for SSH session in Vagrant See https://githubcom/mitchellh/vagrant/issues/6794 for details,,1712,0.7406542056074766,0.3378684807256236,33938,575.6673934822322,48.52967175437563,84.59543874123402,10155,11,2174,72,travis,michaldo,sethvargo,false,sethvargo,1,0.0,2,0,979,false,false,false,false,2,1,2,0,0,0,-1
11366767,mitchellh/vagrant,ruby,6784,1451881031,,1451956097,1251,,unknown,false,false,false,15,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,5.079591306586647,0.07908025319993048,5,xmitchx@gmail.com,website/docs/source/v2/vagrantfile/ssh_settings.html.md,5,0.011337868480725623,0,0,false,#6782 Document how to overwrite in Vagrant file host ssh locale see https://githubcom/mitchellh/vagrant/issues/6782 for details,,1711,0.7410870835768556,0.3378684807256236,33938,575.6673934822322,48.52967175437563,84.59543874123402,10141,11,2173,62,travis,michaldo,michaldo,true,,0,0,2,0,978,false,false,false,false,1,1,0,0,0,0,-1
11338480,mitchellh/vagrant,ruby,6774,1451629754,1451798211,1451798211,2807,2807,commits_in_master,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,4.7037254824282115,0.07322868705028622,0,,LICENSE,0,0.0,0,0,true,Updated copyright to 2016 ,,1710,0.7409356725146199,0.3333333333333333,33938,575.6673934822322,48.52967175437563,84.59543874123402,10124,11,2171,62,travis,aqnouch,sethvargo,false,sethvargo,0,0,11,86,1040,false,false,false,false,0,0,0,0,0,0,-1
11323525,mitchellh/vagrant,ruby,6771,1451528301,1451528329,1451528329,0,0,commits_in_master,false,false,false,5,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.424079286256311,0.06887508570310925,9,xmitchx@gmail.com,website/docs/source/v2/provisioning/shell.html.md,9,0.0200445434298441,0,0,false,Update shellhtmlmd Fix sentence structure,,1709,0.740784084259801,0.33184855233853006,33938,575.6673934822322,48.52967175437563,84.59543874123402,10115,11,2169,62,travis,kriuz,sethvargo,false,sethvargo,0,0,0,0,986,false,false,false,false,0,0,0,0,0,0,-1
11301599,mitchellh/vagrant,ruby,6760,1451417758,1454529019,1454529019,51854,51854,commits_in_master,false,false,false,10,1,1,0,10,0,10,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.1548488680748346,0.06468361878679474,0,,plugins/guests/freebsd/cap/rsync.rb,0,0.0,0,8,false,Change to use pkgng Old pkg_* is now EOL: https://listsfreebsdorg/pipermail/freebsd-ports-announce/2014-February/000077html,,1707,0.7410661980082015,0.3325892857142857,33938,575.6673934822322,48.52967175437563,84.59543874123402,10104,11,2168,80,travis,petems,sethvargo,false,sethvargo,2,0.0,68,170,1561,false,false,false,false,0,0,0,0,0,0,59
11297434,mitchellh/vagrant,ruby,6756,1451393106,1451421021,1451421021,465,465,commits_in_master,false,false,false,7,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.126165747977841,0.07980529776375754,2,sethvargo@gmail.com,website/docs/source/v2/synced-folders/nfs.html.md,2,0.004464285714285714,0,0,false,Removed a tiny strange char U+05BB http://wwwfileformatinfo/info/unicode/char/05bb/indexhtm,,1706,0.7409144196951934,0.3325892857142857,33938,575.6673934822322,48.52967175437563,84.59543874123402,10103,11,2168,61,travis,OmarIthawi,sethvargo,false,sethvargo,0,0,10,6,1764,false,false,false,false,0,0,0,0,0,0,-1
11292216,mitchellh/vagrant,ruby,6753,1451357964,1451359305,1451359305,22,22,commits_in_master,false,false,false,10,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.687127191048658,0.07297127564045475,0,,website/docs/source/v2/providers/index.html.md,0,0.0,0,0,false,docs: Clarify that VirtualBox is not the only shipped provider ,,1705,0.7407624633431085,0.3333333333333333,33938,575.6673934822322,48.52967175437563,84.59543874123402,10101,11,2167,60,travis,sschuberth,sethvargo,false,sethvargo,1,1.0,50,41,1977,false,true,false,false,1,1,0,0,0,0,-1
11278459,mitchellh/vagrant,ruby,6749,1451269643,1454529958,1454529958,54338,54338,commits_in_master,false,false,false,47,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.546868429888074,0.07078766501832699,2,xmitchx@gmail.com,plugins/hosts/windows/cap/ps.rb,2,0.004464285714285714,0,1,false,use SafeExec to capture history via up/down keys in powershell command Subprocess sets up the process in such a way that pressing the up/down arrows does not cycle through command history in the powershell command Using SafeExec instead as the ssh command does seems to fix this,,1704,0.7406103286384976,0.3325892857142857,33938,575.6673934822322,48.52967175437563,84.59543874123402,10093,11,2166,72,travis,mwrock,sethvargo,false,sethvargo,12,0.75,145,3,1756,false,false,false,false,1,5,0,0,0,0,31604
11268156,mitchellh/vagrant,ruby,6741,1451173052,1451269063,1451269063,1600,1600,commits_in_master,false,false,false,6,2,2,1,5,0,6,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,9.210714814193008,0.14339729765809223,3,jonthomas0@gmail.com,plugins/provisioners/ansible/config/guest.rb|plugins/provisioners/ansible/config/guest.rb,3,0.006711409395973154,0,5,false,Fix #6740 Fix for issue #6740 ,,1703,0.7404580152671756,0.3333333333333333,33937,575.6843563072753,48.53110174735539,84.597931461237,10084,11,2165,59,travis,char16t,gildegoma,false,gildegoma,0,0,8,28,852,false,false,false,false,1,0,0,0,0,0,229
11253653,mitchellh/vagrant,ruby,6731,1451006911,1451006961,1451006961,0,0,commits_in_master,false,false,true,42,2,2,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,38,0,38,0,8.372903414827993,0.1303584125741984,4,xmitchx@gmail.com,plugins/commands/up/command.rb|plugins/commands/up/command.rb,4,0.00904977375565611,0,0,false,Take into account machine index and forced provider for provider install Fixes #6708 This takes into account the forced provider (--provider) as well as the machine index (already created machines provider) into what provider to install instead of always installing the default,,1702,0.7403055229142186,0.33710407239819007,33930,575.8031240789861,48.54111405835543,84.61538461538461,10074,12,2163,59,travis,mitchellh,mitchellh,true,mitchellh,46,0.8913043478260869,3860,0,2857,true,true,false,false,202,327,118,16,237,0,-1
11243429,mitchellh/vagrant,ruby,6728,1450932237,1450990044,1450990044,963,963,commits_in_master,false,false,false,5,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.603482956692608,0.07167275170419497,3,jonthomas0@gmail.com,website/docs/source/v2/provisioning/ansible_local.html.md,3,0.006944444444444444,0,0,false,Fixed typo projet to project,,1701,0.7401528512639624,0.3449074074074074,33930,575.8031240789861,48.54111405835543,84.61538461538461,10070,12,2162,64,travis,ianvanness,sethvargo,false,sethvargo,0,0,16,24,2813,false,false,false,false,0,0,0,0,0,0,-1
11236456,mitchellh/vagrant,ruby,6722,1450903559,1451005403,1451005403,1697,1697,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.205877105326295,0.06548232898965387,8,xmitchx@gmail.com,plugins/provisioners/docker/cap/debian/docker_install.rb,8,0.018518518518518517,0,0,false,Update docker_installrb Docker provisioning fails on Debian Jessie without the apt-transport-https package installed,,1699,0.7404355503237199,0.3449074074074074,33930,575.8031240789861,48.54111405835543,84.61538461538461,10063,12,2162,63,travis,KaffeJunky123,mitchellh,false,mitchellh,0,0,0,1,2014,false,false,false,false,0,0,0,0,0,0,1697
11230312,mitchellh/vagrant,ruby,6720,1450875809,,1451005682,2164,,unknown,false,false,false,10,1,1,0,6,0,6,0,4,0,0,4,4,4,0,0,0,0,4,4,4,0,0,62,4,62,4,18.573170917155892,0.2891702391489441,12,xmitchx@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/file_checksum.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/vagrant/util/file_checksum_test.rb,9,0.018518518518518517,0,1,false,Properly namespace the FileChecksum class Use Vagrant::Util::FileChecksum everywhereFixes #6713,,1698,0.7408716136631331,0.3449074074074074,33930,575.8031240789861,48.54111405835543,84.61538461538461,10061,12,2162,62,travis,metropolislights,mitchellh,false,,0,0,17,41,356,false,false,false,false,1,0,0,0,0,0,5
11228162,mitchellh/vagrant,ruby,6718,1450860663,1451005447,1451005447,2413,2413,commits_in_master,false,false,false,5,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.603482956692608,0.07167275170419497,3,jonthomas0@gmail.com,website/docs/source/v2/provisioning/ansible_local.html.md,3,0.006928406466512702,0,0,false,Fix typo in ansible_local documentation ,,1697,0.7407189157336476,0.3464203233256351,33930,575.8031240789861,48.54111405835543,84.61538461538461,10059,12,2162,62,travis,geerlingguy,mitchellh,false,mitchellh,0,0,556,35,1864,false,false,false,false,0,3,0,0,0,0,2413
11227204,mitchellh/vagrant,ruby,6717,1450854135,,1451006125,2533,,unknown,false,false,false,62,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.497963720001399,0.07002989690869928,6,xmitchx@gmail.com,lib/vagrant/bundler.rb,6,0.013856812933025405,0,0,false,[WIP] core: use environment variable for bundler retry #6705 (This attempts to address https://githubcom/mitchellh/vagrant/issues/6705#issuecomment-166768147 Its marked WIP since it doesnt yet clean up the environment after itself Also Im not sure if more tests are required or if this is even the best way to approach the problem)This prevents a bundle/config file from being writtenSee 2ade664 for the original implementation,,1696,0.7411556603773585,0.3464203233256351,33930,575.8031240789861,48.54111405835543,84.61538461538461,10059,12,2162,60,travis,josephfrazier,mitchellh,false,,0,0,11,15,700,false,true,false,false,0,2,0,0,0,0,2533
11221514,mitchellh/vagrant,ruby,6714,1450830253,1450837818,1450837818,126,126,commits_in_master,false,false,true,9,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.5805541096090625,0.07132009849767897,7,xmitchx@gmail.com,plugins/provisioners/shell/provisioner.rb,7,0.016203703703703703,0,0,false,Convert env values to strings before escaping Fixes https://githubcom/mitchellh/vagrant/issues/6707#issuecomment-166704292,,1695,0.7410029498525074,0.34953703703703703,33928,575.837066729545,48.54397547748172,84.62037255364301,10058,12,2161,59,travis,sethvargo,mitchellh,false,mitchellh,96,0.90625,505,65,1919,true,false,true,false,269,317,124,29,144,2,126
11219003,mitchellh/vagrant,ruby,6711,1450821304,1450821359,1450821359,0,0,commits_in_master,false,false,true,10,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.36069420826559,0.06789671291283986,5,sethvargo@gmail.com,plugins/provisioners/chef/command_builder.rb,5,0.011655011655011656,0,0,false,Convert Chef Version to a string before comparison Fixes GH-6709,,1694,0.7408500590318772,0.351981351981352,33928,575.837066729545,48.54397547748172,84.62037255364301,10057,13,2161,59,travis,sethvargo,sethvargo,true,sethvargo,95,0.9052631578947369,505,65,1919,true,false,false,false,267,314,122,29,139,2,0
11211528,mitchellh/vagrant,ruby,6706,1450792032,1451005471,1451005471,3557,3557,commits_in_master,false,false,true,41,1,1,2,0,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.990843624651234,0.07770824107168932,4,xmitchx@gmail.com,website/docs/source/v2/virtualbox/configuration.html.md,4,0.009302325581395349,0,0,false,linked_clone if Vagrant::VERSION ~ /^18/ To void this message on pre Vagrant 18bashThere are errors in the configuration of this machine Please fixthe following errors and try again:VirtualBox Provider:* The following settings shouldnt exist: linked_clone,,1693,0.7406969875959835,0.3511627906976744,33928,575.837066729545,48.54397547748172,84.62037255364301,10054,13,2161,61,travis,kikitux,mitchellh,false,mitchellh,3,1.0,17,67,1472,true,false,true,false,3,6,0,0,1,0,457
11206344,mitchellh/vagrant,ruby,6700,1450760525,1450760582,1450760582,0,0,commits_in_master,false,false,false,49,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5796175131052985,0.07130536970475386,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/virtualbox/configuration.html.md,2,0.004672897196261682,0,0,false,vuse_linked_clone should be vlinked_clone Im assuming this got changed during development but the documentation refers to an setting which doesnt work:There are errors in the configuration of this machine Please fixthe following errors and try again:VirtualBox Provider:* The following settings shouldnt exist: use_linked_clone,,1692,0.7405437352245863,0.352803738317757,33928,575.837066729545,48.54397547748172,84.62037255364301,10050,12,2161,58,travis,tomkins,mitchellh,false,mitchellh,0,0,7,1,2176,false,false,false,false,0,0,0,0,0,0,0
11185446,mitchellh/vagrant,ruby,6691,1450664288,1450738387,1450738387,1234,1234,commits_in_master,false,false,false,27,15,13,0,5,0,5,0,3,15,1,24,48,5,27,2,32,2,31,65,9,44,6,306,0,512,0,284.44924004145696,4.54297409975961,8,xmitchx@gmail.com,website/www/Gemfile|website/www/Gemfile.lock|website/www/source/images/logo-header.png|website/www/source/images/logo-header@2x.png|website/www/source/javascripts/vagrantup.js|website/www/source/layouts/layout.erb|website/www/source/layouts/svg/_svg-by-hashicorp.erb|website/www/source/layouts/svg/_svg-download.erb|website/www/source/layouts/svg/_svg-github.erb|website/www/source/layouts/svg/_svg-hashicorp-logo.erb|website/www/source/stylesheets/_header.less|website/www/source/stylesheets/_nav.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-utility.less|website/www/source/stylesheets/hashicorp-shared/_project-utility.less|website/www/source/stylesheets/vagrantup.less|website/www/source/javascripts/Sidebar.js|website/www/source/javascripts/lib/Base.js|website/www/source/layouts/_mobile_nav.erb|website/www/source/layouts/layout.erb|website/www/source/stylesheets/_mixins.less|website/www/source/stylesheets/_mobile-nav.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-mobile-nav.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-utility.less|website/www/source/stylesheets/hashicorp-shared/_project-utility.less|website/www/source/stylesheets/vagrantup.less|website/www/source/svg/_svg-by-hashicorp.erb|website/www/source/svg/_svg-download.erb|website/www/source/svg/_svg-github.erb|website/www/source/svg/_svg-hashicorp-logo.erb|website/www/source/layouts/layout.erb|website/www/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/www/source/layouts/layout.erb|website/www/source/stylesheets/_header.less|website/www/source/stylesheets/_media-queries.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/www/source/stylesheets/hashicorp-shared/_project-utility.less|website/www/source/javascripts/Sidebar.js|website/www/source/layouts/_mobile_nav.erb|website/www/source/stylesheets/_header.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-mobile-nav.less|website/www/source/layouts/_mobile_nav.erb|website/www/source/stylesheets/_mobile-nav.less|website/www/source/stylesheets/vagrantup.less|website/www/source/stylesheets/_header.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/www/source/javascripts/vagrantup.js|website/www/source/stylesheets/_base.less|website/www/source/stylesheets/_components.less|website/www/source/stylesheets/_footer.less|website/www/source/stylesheets/_header.less|website/www/source/stylesheets/_media-queries.less|website/www/source/stylesheets/_mixins.less|website/www/source/stylesheets/_mobile-nav.less|website/www/source/stylesheets/_modules.less|website/www/source/stylesheets/_nav.less|website/www/source/stylesheets/_pages.less|website/www/source/stylesheets/_sidebar.less|website/www/source/stylesheets/_type.less|website/www/source/stylesheets/_footer.less|website/www/source/stylesheets/_media-queries.less|website/www/source/stylesheets/_sidebar.less|website/www/source/layouts/layout.erb|website/www/source/layouts/svg/_svg-by-hashicorp.erb|website/www/source/stylesheets/_header.less|website/www/source/stylesheets/_mobile-nav.less|website/www/source/stylesheets/_nav.less|website/www/source/stylesheets/hashicorp-shared/_hashicorp-header.less|website/www/source/layouts/_mobile_nav.erb|website/www/source/layouts/layout.erb,6,0.0,0,0,false,by Hashicorp added to header In the process of updating header Ive added some mobile styling which includes a mobile nav and also a bit of cleanup,,1691,0.7403903015966884,0.35697399527186763,33923,575.921940866079,48.55113050142971,84.63284497243757,10040,12,2159,59,travis,captainill,mitchellh,false,mitchellh,0,0,13,7,1893,true,false,false,false,0,1,0,0,1,0,2
11138860,mitchellh/vagrant,ruby,6681,1450403061,1450738469,1450738469,5590,5590,commits_in_master,false,false,false,58,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,3.7297648913214427,0.059568537771436836,1,xmitchx@gmail.com,plugins/synced_folders/smb/synced_folder.rb,1,0.002347417840375587,0,0,false,Fix for problem where the host_infops1 script returns a string instead of a list of IPs This may have been due to a recent Windows Update When doing a vagrant up on Windows 81 it was crashing due to the expected list of IPs returned from the host_infops1 script coming back as a string instead of a list,,1689,0.7406749555950266,0.3544600938967136,33923,575.921940866079,48.55113050142971,84.63284497243757,10025,13,2156,58,travis,tonyarkles,mitchellh,false,mitchellh,0,0,5,2,1847,false,false,false,false,0,0,0,0,0,0,5590
11105176,mitchellh/vagrant,ruby,6675,1450290918,1450309582,1450309582,311,311,commits_in_master,false,false,false,11,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,0,10,0,9.241722212700404,0.14759875999676628,0,,plugins/provisioners/cfengine/cap/debian/cfengine_install.rb|plugins/provisioners/cfengine/config.rb,0,0.0,0,0,false,#6674 CFEngine Provisioner Broken on Debian (http  https) Fixes #6674,,1688,0.740521327014218,0.3552941176470588,33922,575.9389186958316,48.552561759330224,84.63533989741171,10020,13,2155,57,travis,michaa76,mitchellh,false,mitchellh,0,0,0,0,1015,false,false,false,false,1,0,0,0,0,0,311
10935987,mitchellh/vagrant,ruby,6652,1449608026,1449609323,1449609323,21,21,commits_in_master,false,false,true,11,3,2,1,1,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,56,134,74,134,13.665540933556011,0.21824889387413257,4,xmitchx@gmail.com,plugins/providers/virtualbox/action/network_fix_ipv6.rb|plugins/providers/virtualbox/action/network_fix_ipv6.rb|test/unit/plugins/providers/virtualbox/action/network_fix_ipv6_test.rb,4,0.00966183574879227,0,0,false,Only consider the VM interfaces in the IPv6 fixup Closes GH-6596,,1683,0.7397504456327986,0.36231884057971014,33844,569.73171019974,47.92577709490604,84.03262025765277,9965,14,2147,60,travis,sethvargo,sethvargo,true,sethvargo,94,0.9042553191489362,504,65,1905,true,false,false,false,244,294,118,28,133,2,2
10909943,mitchellh/vagrant,ruby,6650,1449520264,1449521851,1449521851,26,26,commits_in_master,false,false,true,7,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,22,2,22,8.852882227792133,0.14146543868126135,9,xmitchx@gmail.com,lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb,6,0.014742014742014743,0,0,false,Ignore case when comparing checksums Fixes GH-6648,,1682,0.7395957193816884,0.36855036855036855,33827,569.5746001714607,47.92030035178999,84.01572708191682,9962,14,2146,61,travis,sethvargo,sethvargo,true,sethvargo,93,0.9032258064516129,504,65,1904,true,false,false,false,239,290,116,28,129,2,-1
10908596,mitchellh/vagrant,ruby,6649,1449517742,1449542688,1449542688,415,415,commits_in_master,false,false,false,21,1,1,2,3,0,5,0,2,2,1,1,4,4,0,0,2,1,1,4,4,0,0,102,0,102,0,12.843947599168201,0.20524103165084218,2,git@gilles.cornu.name,plugins/provisioners/ansible/cap/guest/epel/ansible_install.rb|plugins/provisioners/ansible/cap/guest/fedora/ansible_install.rb|plugins/provisioners/ansible/cap/guest/redhat/ansible_install.rb|plugins/provisioners/ansible/plugin.rb,2,0.0049261083743842365,0,5,false,Support ansible install on RedHat derivates and Fedora Fixes #6636 Tested on CentOS 71 and Fedora 22 w and w/o dnf-yum,,1681,0.7394408090422367,0.3694581280788177,33827,569.5746001714607,47.92030035178999,84.01572708191682,9962,14,2146,60,travis,rickard-von-essen,gildegoma,false,gildegoma,1,1.0,23,10,1791,false,true,false,false,2,4,1,0,0,0,13
10880245,mitchellh/vagrant,ruby,6643,1449343797,1449354274,1449354274,174,174,github,false,false,false,191,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.463053581018894,0.07131785877574975,2,mitchell.hashimoto@gmail.com,plugins/commands/powershell/command.rb,2,0.0049382716049382715,0,0,false,Fix uninitialized constant error in vagrant powershell command This is a fix for vagrant powershell command with fails with such exception:C:\Users\michaelkuzmin\Projects\forks\vagrantbundle exec vagrant powershellDL is deprecated please use FiddleVagrant appears to be running in a Bundler environment Yourexisting Gemfile will be used Vagrant will not auto-load any pluginsinstalled with vagrant plugin Vagrant will autoload any plugins inthe plugins group in your Gemfile You can force Vagrant to take overwith VAGRANT_FORCE_BUNDLERYou appear to be running Vagrant outside of the official installersNote that the installers are what ensure that Vagrant has all requireddependencies and Vagrant assumes that these dependencies exist Byrunning outside of the installer environment Vagrant may not functionproperly To remove this warning install Vagrant using one of theofficial packages from vagrantupcom teamcity: Detecting if a remote PowerShell connection can be made with the guestC:/Users/michaelkuzmin/Projects/forks/vagrant/plugins/commands/powershell/commandrb:92:in ready_ps_remoting_for: uninitialized constant Vagrant::Util::PowerShell (NameError)        from C:/Users/michaelkuzmin/Projects/forks/vagrant/plugins/commands/powershell/commandrb:68:in block in execute        from C:/Users/michaelkuzmin/Projects/forks/vagrant/lib/vagrant/plugin/v2/commandrb:235:in block in with_target_vms        from C:/Users/michaelkuzmin/Projects/forks/vagrant/lib/vagrant/plugin/v2/commandrb:229:in each        from C:/Users/michaelkuzmin/Projects/forks/vagrant/lib/vagrant/plugin/v2/commandrb:229:in with_target_vms        from C:/Users/michaelkuzmin/Projects/forks/vagrant/plugins/commands/powershell/commandrb:43:in execute        from C:/Users/michaelkuzmin/Projects/forks/vagrant/lib/vagrant/clirb:42:in execute        from C:/Users/michaelkuzmin/Projects/forks/vagrant/lib/vagrant/environmentrb:302:in cli        from C:/Users/michaelkuzmin/Projects/forks/vagrant/bin/vagrant:174:in top (required)        from c:/Ruby/lib/ruby/gems/210/bin/vagrant:23:in load        from c:/Ruby/lib/ruby/gems/210/bin/vagrant:23:in main,,1680,0.7392857142857143,0.37037037037037035,33826,569.5914385384025,47.9217170224088,84.01821084372968,9955,14,2144,60,travis,mkuzmin,sethvargo,false,sethvargo,3,0.3333333333333333,22,9,1704,false,false,true,false,0,5,1,0,0,0,-1
10783726,mitchellh/vagrant,ruby,6639,1449208110,1449314088,1449314088,1766,1766,commits_in_master,false,false,false,34,5,3,13,2,0,15,0,2,0,0,4,4,3,0,1,0,0,4,4,3,0,1,42,8,77,14,23.089571532650815,0.36896410786066075,69,xmitchx@gmail.com,plugins/provisioners/ansible/provisioner/base.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner/base.rb|templates/locales/en.yml|website/docs/source/v2/provisioning/ansible_intro.html.md,46,0.04738154613466334,0,3,true,fixes #3539 - Cant use alphanumeric patterns for box names in ansiblegroups Please verify and review language in docs locales file as well as code syntax / logic Thoughts and suggestions are welcome Thanks,,1679,0.7391304347826086,0.3740648379052369,33819,569.6501966350277,47.93163606256838,84.00603211212632,9949,14,2143,60,travis,kamigerami,gildegoma,false,gildegoma,0,0,4,5,410,true,false,false,false,1,5,0,0,1,0,269
10724960,mitchellh/vagrant,ruby,6627,1449061059,1449194056,1449194056,2216,2216,commits_in_master,false,false,true,47,13,9,1,2,0,3,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,14,34,26,58,18.40045644204979,0.29403445202696316,14,git@gilles.cornu.name,website/docs/source/v2/provisioning/ansible_intro.html.md|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner/base.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,12,0.015306122448979591,1,3,false,Review of GH-6626: Support of variables in the Ansible dynamic inventory @chenz Ive started to test your #6626 which is very good Please have a look at my little additionsIll test a bit more this week and  propose you to finalize it through this reviewing PR,,1678,0.7389749702026222,0.3826530612244898,33776,568.6582188536239,47.844623401231644,83.72809095215537,9937,14,2141,61,travis,gildegoma,gildegoma,true,gildegoma,25,0.96,51,127,1879,true,true,false,false,13,45,8,7,27,8,107
10712592,mitchellh/vagrant,ruby,6626,1449011334,1449061131,1449061131,829,829,commits_in_master,false,true,false,15,6,6,0,2,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,,,0,0.0,0,4,false,Ansible: Implement support for setting variables in the dynamic inventory As discussed in issue #6619 ,,1677,0.738819320214669,0.3875968992248062,33776,568.6582188536239,47.844623401231644,83.72809095215537,9932,14,2140,61,travis,chenz,gildegoma,false,gildegoma,0,0,1,0,2783,false,false,false,false,1,2,0,0,0,0,44
10825945,mitchellh/vagrant,ruby,6612,1448716993,1450154387,1450154387,23956,23956,commits_in_master,false,false,false,31,1,1,0,2,0,2,0,1,0,0,4,4,3,0,1,0,0,4,4,3,0,1,26,0,26,0,18.567944713120895,0.29671087052562567,48,xmitchx@gmail.com,lib/vagrant/errors.rb|plugins/hosts/darwin/cap/provider_install_virtualbox.rb|plugins/hosts/windows/cap/provider_install_virtualbox.rb|templates/locales/en.yml,46,0.035897435897435895,0,0,false,Add checksum validation for the VirtualBox installs on Windows and OS X Use Vagrant::Util::FileChecksum to validate the downloaded VirtualBoxinstallersSHA-256 checksums for VirtualBox files are available athttps://wwwvirtualboxorg/download/hashes/5010/SHA256SUMSFixes #6611,,1675,0.7391044776119403,0.38461538461538464,33776,568.6582188536239,47.844623401231644,83.72809095215537,9909,17,2137,60,travis,reedloden,mitchellh,false,mitchellh,0,0,22,2,1944,false,false,false,false,1,0,0,0,0,0,23956
10821618,mitchellh/vagrant,ruby,6610,1448680390,1454530477,1454530477,97501,97501,commits_in_master,false,false,false,36,1,1,0,4,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.424422316442931,0.07070118866641863,0,,plugins/guests/coreos/cap/configure_networks.rb,0,0.0,0,2,true,Vagrant Issue #6608 # SummaryRe-factor and repair regular expression attempting to match present interfacesThe re-factored regular expression will match on enp* ens* eth* variants#### Referenced IssueVagrant Cannot Detect CoreOS interface names #6608 ,,1674,0.7389486260454002,0.3856041131105398,33776,568.6582188536239,47.844623401231644,83.72809095215537,9908,17,2136,71,travis,jharshman,sethvargo,false,sethvargo,0,0,0,3,81,false,true,false,false,1,0,0,0,0,0,140
10808762,mitchellh/vagrant,ruby,6606,1448632181,1448688706,1448688706,942,942,github,false,false,false,4,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,true,Document missing sudoers item ,,1673,0.7387925881649731,0.3856041131105398,33776,568.6582188536239,47.844623401231644,83.72809095215537,9907,17,2136,58,travis,rubenv,sethvargo,false,sethvargo,0,0,91,28,2526,true,false,false,false,0,0,0,0,1,0,-1
10710946,mitchellh/vagrant,ruby,6603,1448580734,1450154477,1450154477,26229,26229,commits_in_master,false,false,true,121,1,1,1,2,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,Only run cleanup tasks when they are defined on the provisioner This helps with some confusion caused in GH-2538 since the output says: Running cleanup tasks for shell provisionerBut thats actually not true It is running the cleanup tasks iff the provisioner defined a cleanup task This commit changes the provisioner_cleanup middleware to only run cleanup tasks if the subclass defines a cleanup taskThe reason we cant just check if the provisioner respond_to the cleanup method is because the parent provisioner base class (which all provisioners inherit from) defines a blank cleanup method This is important because it means we never risk calling an unimplemented cleanup function and it also helps define the public API for a provisioner,,1672,0.7386363636363636,0.3865979381443299,33776,568.6582188536239,47.844623401231644,83.72809095215537,9907,16,2135,59,travis,sethvargo,mitchellh,false,mitchellh,92,0.9021739130434783,504,65,1893,true,false,true,false,223,263,113,28,127,3,2179
10709078,mitchellh/vagrant,ruby,6602,1448575502,1454530099,1454530099,99243,99243,commits_in_master,false,false,true,10,2,2,0,0,0,0,0,0,1,0,2,3,3,0,0,1,0,2,3,3,0,0,33,36,33,36,13.681655494893405,0.21863094929336951,0,,plugins/hosts/darwin/cap/rdp.rb|test/unit/plugins/hosts/darwin/cap/rdp_test.rb|website/source/docs/cli/rdp.html.md,0,0.0,0,0,false,Add extra_args cap for darwin rdp This commit fixes GH-5523,,1671,0.7384799521244764,0.38961038961038963,33776,568.6582188536239,47.844623401231644,83.72809095215537,9907,16,2135,73,travis,sethvargo,sethvargo,true,sethvargo,91,0.9010989010989011,504,65,1893,true,false,false,false,223,261,109,28,124,3,-1
10706877,mitchellh/vagrant,ruby,6601,1448570737,1448576617,1448576617,98,98,github,false,false,false,26,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.433056785249288,0.13475907291278477,3,xmitchx@gmail.com,plugins/commands/provision/command.rb|plugins/commands/up/start_mixins.rb,3,0.007832898172323759,0,0,false,update help message on --provision-with to add by provisioner name Just a quick fix to issue #6512working on vagrant provision --help and vagrant up --help,,1670,0.7383233532934131,0.391644908616188,33776,568.6582188536239,47.844623401231644,83.72809095215537,9907,16,2135,57,travis,romulodl,sethvargo,false,sethvargo,0,0,8,3,1592,false,false,false,false,0,1,0,0,0,0,-1
10672634,mitchellh/vagrant,ruby,6597,1448410822,1448411125,1448411125,5,5,commits_in_master,false,false,false,21,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.686784183987357,0.0752756695963801,3,xmitchx@gmail.com,lib/vagrant/bundler.rb,3,0.007936507936507936,0,0,false,Fix the resolution of SafeEnv Recent change broke bundlerrb due to incorrect scope resolution (theerror is: uninitialized constant Vagrant::Bundler::SafeEnv(NameError),,1668,0.7386091127098321,0.3968253968253968,33670,565.2212652212653,47.66854766854767,83.01158301158301,9904,16,2133,57,travis,timuralp,sethvargo,false,sethvargo,1,0.0,8,12,1698,false,false,false,false,1,0,1,0,1,0,5
10672532,mitchellh/vagrant,ruby,6596,1448410654,,1449609323,19977,,unknown,false,false,false,126,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,21,134,21,134,9.038683440668121,0.14517266457256633,4,xmitchx@gmail.com,plugins/providers/virtualbox/action/network_fix_ipv6.rb|test/unit/plugins/providers/virtualbox/action/network_fix_ipv6_test.rb,4,0.010582010582010581,0,0,false,Only consider the VM interfaces in the IPv6 fixup Vagrant should only consider the host-only interfaces used by thevirtual machine in the IPv6 fixup code There may be other interfacespresent on the system with IPv6 addresses that for various reasonswould fail the routing check (for example an interface with nomachines attached)The patch changes the behavior to not scan all of the host-onlyinterfaces and adds a unit test for the behavior (that the correct IPis validated)Lastly there is a small fix here that may not be an issue for mostpeople where the IPv6 prefix was asummed to be a multiple of 16 forthe purposes of constructing the UDP probe datagram This assumptionhas been removedFixes #6586,,1667,0.7390521895620876,0.3968253968253968,33670,565.2212652212653,47.66854766854767,83.01158301158301,9904,16,2133,61,travis,timuralp,sethvargo,false,,0,0,8,12,1698,false,false,false,false,1,0,0,0,1,0,-1
10670456,mitchellh/vagrant,ruby,6595,1448407609,,1448408790,19,,unknown,false,false,true,5,1,1,0,1,0,1,0,1,0,0,2,2,3,0,0,0,0,2,2,3,0,0,8,0,8,0,9.25441031974075,0.14863751053829496,22,xmitchx@gmail.com,lib/vagrant/action.rb|lib/vagrant/action/builtin/check_running.rb|plugins/providers/virtualbox/action.rb,22,0.007936507936507936,0,0,false,Make check_running a builtin action ,,1666,0.7394957983193278,0.3968253968253968,33670,565.2212652212653,47.66854766854767,83.01158301158301,9903,16,2133,57,travis,sethvargo,sethvargo,true,,90,0.9111111111111111,504,65,1891,true,false,false,false,226,261,110,28,119,3,16
10720048,mitchellh/vagrant,ruby,6590,1448345994,1448346214,1448346214,3,3,github,false,false,true,8,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,20,5,20,5,9.098886008405056,0.14624766484387053,0,,plugins/commands/login/client.rb|test/unit/plugins/commands/login/client_test.rb,0,0.0,0,0,false,Respect proxy envvars for login command Fixes GH-6422,,1664,0.7397836538461539,0.40214477211796246,33657,565.3504471580949,47.6869596220697,83.04364619544226,9895,16,2133,54,travis,sethvargo,sethvargo,true,sethvargo,88,0.9204545454545454,504,65,1891,true,false,false,false,224,255,104,22,115,3,0
10719789,mitchellh/vagrant,ruby,6589,1448344818,1448345005,1448345005,3,3,github,false,false,true,6,1,1,0,1,0,1,0,1,0,0,2,2,1,1,0,0,0,2,2,1,1,0,0,16,0,16,9.278834024528486,0.14913963794523755,0,,templates/commands/ssh_config/config.erb|test/unit/plugins/commands/ssh_config/command_test.rb,0,0.0,0,0,false,Escape identify file path Fixes GH-6428,,1663,0.7396271797955503,0.4032258064516129,33657,565.0830436461954,47.657248120747546,83.0139346941201,9895,16,2133,54,travis,sethvargo,sethvargo,true,sethvargo,87,0.9195402298850575,504,65,1891,true,false,false,false,224,255,101,22,114,3,2
10719386,mitchellh/vagrant,ruby,6588,1448342974,1448343499,1448343499,8,8,github,false,false,true,8,2,2,0,1,0,1,0,1,0,0,6,6,5,0,1,0,0,6,6,5,0,1,26,12,26,12,25.354908092528724,0.40753012199369826,52,xmitchx@gmail.com,plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|templates/locales/en.yml|test/unit/plugins/provisioners/shell/config_test.rb|website/docs/source/v2/provisioning/shell.html.md|test/unit/plugins/provisioners/shell/provisioner_test.rb,44,0.016129032258064516,0,0,false,Add :env option to shell provisioner Fixes GH-6516,,1662,0.7394705174488568,0.4032258064516129,33643,565.050679190322,47.647356062182325,83.0187557589989,9895,16,2133,54,travis,sethvargo,sethvargo,true,sethvargo,86,0.9186046511627907,504,65,1891,true,false,false,false,224,254,98,22,114,3,2
10717898,mitchellh/vagrant,ruby,6587,1448338495,1448340605,1448340605,35,35,github,false,false,true,9,1,1,0,1,0,1,0,1,0,0,9,9,9,0,0,0,0,9,9,9,0,0,59,4,59,4,39.68227719772023,0.6378267448666691,16,sethvargo@gmail.com,lib/vagrant/util/presence.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_apply.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|test/unit/vagrant/util/presence_test.rb,8,0.005376344086021506,0,0,false,Use the new presence helpers in the Chef provisioner ,,1661,0.7393136664659844,0.4032258064516129,33628,565.2135125490663,47.63887236826454,83.02604972047104,9895,16,2132,54,travis,sethvargo,sethvargo,true,sethvargo,85,0.9176470588235294,504,65,1890,true,false,false,false,224,254,95,22,114,3,4
10717536,mitchellh/vagrant,ruby,6585,1448337418,1448338398,1448338399,16,16,github,false,false,true,3,1,1,1,1,0,2,0,1,2,0,0,2,2,0,0,2,0,0,2,2,0,0,41,46,41,46,8.591254039734249,0.13827786280416113,0,,lib/vagrant/util/presence.rb|test/unit/vagrant/util/presence_test.rb,0,0.0,0,0,false,Add presence helpers ,,1660,0.7391566265060241,0.4027027027027027,33600,564.6428571428571,47.410714285714285,82.82738095238096,9895,16,2132,55,travis,sethvargo,sethvargo,true,sethvargo,84,0.9166666666666666,504,65,1890,true,false,false,false,224,254,92,22,112,3,5
10699315,mitchellh/vagrant,ruby,6583,1448331815,1448332157,1448332158,5,5,github,false,false,true,7,1,1,0,1,0,1,0,1,2,0,1,3,3,0,0,2,0,1,3,3,0,0,20,43,20,43,13.10133619274641,0.21131468342547066,2,xmitchx@gmail.com,plugins/providers/virtualbox/cap/public_address.rb|plugins/providers/virtualbox/plugin.rb|test/unit/plugins/providers/virtualbox/cap/public_address_test.rb,2,0.0,0,0,false,Add public_address cap for VirtualBox Fixes GH-5978,,1659,0.7389993972272453,0.4010840108401084,33582,563.158835090227,47.28723721041034,82.7228872610327,9895,16,2132,55,travis,sethvargo,sethvargo,true,sethvargo,83,0.9156626506024096,504,65,1890,true,false,false,false,224,254,89,22,111,3,1
10698180,mitchellh/vagrant,ruby,6575,1448231300,1448309185,1448309185,1298,1298,commits_in_master,false,false,false,137,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.78763361471954,0.07732675185407886,2,xmitchx@gmail.com,plugins/guests/linux/cap/remove_public_key.rb,2,0.005494505494505495,0,0,false,linux/cap/remove_public_key: Fix permissions on ~/ssh/authorized_keys This PR fixes an error introduced by GH-6565:$ vagrant up centos: Waiting for machine to boot This may take a few minutes    centos: SSH address: 1021155235:22    centos: SSH username: vagrant    centos: SSH auth method: private key    centos: Warning: Connection refused Retrying    centos:    centos: Vagrant insecure key detected Vagrant will automatically replace    centos: this with a newly generated keypair for better security    centos:    centos: Inserting generated public key within guest    centos: Removing insecure key from the guest if its present    centos: Key inserted Disconnecting and reconnecting using new SSH key    centos: Warning: Authentication failure Retrying    centos: Warning: Authentication failure Retrying    centos: Warning: Authentication failure Retrying    centos: Warning: Authentication failure Retrying    centos: Warning: Authentication failure RetryingDue to mv permissions on ~/ssh/authorized_keys become 644 but should be 600,,1658,0.7388419782870929,0.4065934065934066,33513,563.8408975621401,47.354757855160685,82.80368812102766,9894,16,2131,54,travis,legal90,sethvargo,false,sethvargo,7,0.8571428571428571,28,5,878,false,true,false,false,2,9,2,2,0,0,-1
10613194,mitchellh/vagrant,ruby,6568,1448059790,1448059847,1448059847,0,0,commits_in_master,false,false,true,51,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,11,0,11,0,8.64421993421059,0.13971039881329844,1,xmitchx@gmail.com,plugins/synced_folders/rsync/command/rsync_auto.rb|plugins/synced_folders/rsync/helper.rb,1,0.0028653295128939827,0,0,true,synced_folders/rsync: SSH control for faster rsync This uses OpenSSH control paths for a faster rsync On my system where rsync was already fairly fast it went from ~250ms on every invocation to ~175ms Ive heard on some systems executing rsync is hundreds more ms so this should speed up even more,,1656,0.7391304347826086,0.42406876790830944,33396,563.1213318960354,47.281111510360525,82.82429033417175,9888,17,2129,55,travis,mitchellh,mitchellh,true,mitchellh,45,0.8888888888888888,3854,0,2823,true,true,false,false,179,266,103,12,197,0,-1
10598325,mitchellh/vagrant,ruby,6565,1448001341,1448001437,1448001437,1,1,commits_in_master,false,false,true,16,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.591774320999884,0.07421116825216251,0,,plugins/guests/linux/cap/remove_public_key.rb,0,0.0,0,0,true,guests/linux: POSIX sed [GH-6104] Fixes #6104 -i isnt a POSIX flag just do the move manually,,1653,0.7398669086509377,0.4340175953079179,33404,563.1062148245719,47.299724583882174,82.86432762543409,9885,17,2129,55,travis,mitchellh,mitchellh,true,mitchellh,43,0.9069767441860465,3854,0,2823,true,true,false,false,170,254,100,12,191,0,1
10597734,mitchellh/vagrant,ruby,6564,1447998416,1448001495,1448001495,51,51,commits_in_master,false,false,true,8,8,6,0,2,0,2,0,3,0,0,9,9,8,0,1,0,0,9,9,8,0,1,201,26,215,26,116.67080677901774,1.885593246321936,40,xmitchx@gmail.com,plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/fedora/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/config.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/provisioner.rb|templates/locales/en.yml|test/unit/plugins/provisioners/docker/config_test.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/fedora/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/config.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/provisioner.rb|templates/locales/en.yml|test/unit/plugins/provisioners/docker/config_test.rb|website/docs/source/v2/provisioning/docker.html.md,36,0.0,0,0,true,Always install latest docker deprecate version Closes https://githubcom/mitchellh/vagrant/pull/6112,,1652,0.7397094430992736,0.43843843843843844,33396,563.2411067193675,47.31105521619355,82.88417774583783,9885,17,2129,54,travis,sethvargo,sethvargo,true,sethvargo,81,0.9259259259259259,504,65,1887,true,false,false,false,227,252,85,22,103,3,41
10597059,mitchellh/vagrant,ruby,6563,1447995388,1447996017,1447996017,10,10,commits_in_master,false,false,true,10,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,25,12,25,12,8.938287681210532,0.14445849240930117,0,,plugins/pushes/local-exec/push.rb|test/unit/plugins/pushes/local-exec/push_test.rb,0,0.0,0,0,false,Use subprocess as a poor-mans exec for local-exec Fixes GH-5307,,1651,0.7395517867958813,0.4420731707317073,33377,563.2920873655512,47.308026485304254,82.84147766425983,9885,17,2128,59,travis,sethvargo,sethvargo,true,sethvargo,80,0.925,504,65,1886,true,false,false,false,226,245,78,22,98,3,1
10596668,mitchellh/vagrant,ruby,6562,1447994129,1447994287,1447994287,2,2,github,false,false,true,13,2,2,0,1,0,1,0,1,0,0,7,7,7,0,0,0,0,7,7,7,0,0,77,0,77,0,44.43512290542864,0.7181544464690129,7,xmitchx@gmail.com,lib/vagrant/util/ssh.rb|plugins/communicators/ssh/communicator.rb|website/docs/source/v2/vagrantfile/ssh_settings.html.md|lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v1/config/ssh.rb|plugins/kernel_v2/config/ssh.rb|website/docs/source/v2/vagrantfile/ssh_settings.html.md,3,0.0,0,0,false,Add support for forwarding host environment variables via SSH Rebases and fixes GH-4132,,1650,0.7393939393939394,0.4461538461538462,33360,563.5791366906475,47.33213429256595,82.88369304556355,9885,17,2128,60,travis,sethvargo,sethvargo,true,sethvargo,79,0.9240506329113924,504,65,1886,true,false,false,false,224,244,74,22,95,2,1
10596440,mitchellh/vagrant,ruby,6561,1447993111,1447993286,1447993286,2,2,commits_in_master,false,false,true,6,1,1,0,2,0,2,0,3,0,0,5,5,3,2,0,0,0,5,5,3,2,0,12,0,12,0,22.291109539930222,0.3602669507852014,7,sethvargo@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb|templates/provisioners/chef_solo/solo.erb|templates/provisioners/chef_zero/zero.erb|website/docs/source/v2/provisioning/chef_solo.html.md|website/docs/source/v2/provisioning/chef_zero.html.md,4,0.006230529595015576,0,1,false,Support arrays for data_bags_path Fixes GH-5988,,1649,0.7392359005457854,0.4517133956386293,33360,563.5791366906475,47.33213429256595,82.88369304556355,9885,17,2128,60,travis,sethvargo,sethvargo,true,sethvargo,78,0.9230769230769231,504,65,1886,true,false,false,false,223,241,72,22,92,2,0
10596295,mitchellh/vagrant,ruby,6560,1447992536,1447992948,1447992948,6,6,commits_in_master,false,false,true,13,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,3.938607950360454,0.06370225884565271,2,sethvargo@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb,2,0.006309148264984227,0,0,false,Only append folder suffixes if we are sharing host folder paths Fixes GH-6472,,1648,0.7390776699029126,0.45741324921135645,33320,560.3841536614646,47.23889555822329,82.2328931572629,9885,17,2128,61,travis,sethvargo,sethvargo,true,sethvargo,77,0.922077922077922,504,65,1886,true,false,false,false,222,240,70,22,90,2,0
10596002,mitchellh/vagrant,ruby,6559,1447991561,1447991732,1447991733,2,2,github,false,false,true,5,2,2,0,1,0,1,0,1,0,0,5,5,4,0,1,0,0,5,5,4,0,1,35,44,35,44,22.01038081317944,0.35599089103890186,36,xmitchx@gmail.com,plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|templates/locales/en.yml|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|website/docs/source/v2/provisioning/chef_zero.html.md,34,0.003205128205128205,0,0,false,Require nodes_path for Chef Zero ,,1647,0.7389192471159685,0.46474358974358976,33340,558.9082183563288,47.06058788242352,81.94361127774445,9885,17,2128,62,travis,sethvargo,sethvargo,true,sethvargo,76,0.9210526315789473,504,65,1886,true,false,false,false,222,240,67,22,87,2,0
10595136,mitchellh/vagrant,ruby,6557,1447988612,1447989066,1447989066,7,7,commits_in_master,false,false,true,71,5,5,0,0,0,0,0,1,1,0,14,15,15,0,0,1,0,14,15,15,0,0,194,84,194,84,65.96428120015048,1.067646223922335,10,xmitchx@gmail.com,plugins/provisioners/chef/cap/windows/chef_install.rb|plugins/provisioners/chef/omnibus.rb|plugins/provisioners/chef/plugin.rb|test/unit/plugins/provisioners/chef/omnibus_test.rb|plugins/provisioners/chef/cap/debian/chef_install.rb|plugins/provisioners/chef/cap/omnios/chef_install.rb|plugins/provisioners/chef/cap/redhat/chef_install.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/installer.rb|plugins/provisioners/chef/provisioner/base.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|website/docs/source/v2/provisioning/chef_common.html.md|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/command_builder.rb,6,0.0,0,0,false,Allow ChefDK installation add Windows installer support This allows users to install a different version of a Chef product (like angrychef or chefdk):rubychefproduct  chefdkThis fixes https://githubcom/mitchellh/vagrant/issues/6466The second part of this PR implements the existing Chef installation as well as the new ChefDK installation to Windows I couldve sworn there was an open issue about that but I guess there isnt Well its fixed now :smile: ,,1646,0.7387606318347509,0.48013245033112584,33283,558.9039449568849,46.99095634407956,81.75344770603611,9885,17,2128,62,travis,sethvargo,sethvargo,true,sethvargo,75,0.92,504,65,1886,true,false,false,false,220,239,65,21,83,1,-1
10590708,mitchellh/vagrant,ruby,6556,1447976908,1447977361,1447977361,7,7,github,false,false,true,14,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,31,6,31,8.927000989253859,0.14448486596308807,0,,plugins/provisioners/chef/command_builder.rb|test/unit/plugins/provisioners/chef/command_builder_test.rb,0,0.0,0,0,false,Only force the formatter if we are on Chef 11 or higher Fixes GH-6278,,1645,0.7386018237082067,0.4931972789115646,33281,558.1563053994771,46.8435443646525,81.60812475586671,9883,17,2128,62,travis,sethvargo,sethvargo,true,sethvargo,74,0.918918918918919,504,65,1886,true,false,false,false,220,238,62,21,76,1,0
10590254,mitchellh/vagrant,ruby,6555,1447975618,1447976492,1447976492,14,14,commits_in_master,false,false,true,57,2,2,0,1,0,1,0,1,0,0,4,4,3,0,1,0,0,4,4,3,0,1,49,14,49,14,25.916063217875713,0.4194545312282163,34,xmitchx@gmail.com,plugins/provisioners/chef/provisioner/base.rb|templates/locales/en.yml|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|templates/locales/en.yml|test/unit/plugins/provisioners/chef/provisioner/base_test.rb,32,0.013793103448275862,0,0,false,Automatically generate a node_name for Chef This is required because the Chef Server almost always needs a node name to interact This will default to the hostname but thats always going to be vagrantvm which will collide easilyThis generates a random hostname with vagrant- as the prefix and stores the result in the machines data directory,,1644,0.7384428223844283,0.5,33264,558.1709956709957,46.86748436748437,81.64983164983165,9883,17,2128,62,travis,sethvargo,sethvargo,true,sethvargo,73,0.9178082191780822,504,65,1886,true,false,false,false,220,237,60,21,73,1,0
10590053,mitchellh/vagrant,ruby,6554,1447975103,1447975329,1447975329,3,3,commits_in_master,false,false,true,41,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,16,3,16,8.18782540958404,0.13252080547862913,0,,plugins/pushes/heroku/push.rb|test/unit/plugins/pushes/heroku/push_test.rb,0,0.0,0,0,false,push/heroku: use correct current branch [GH-6123] Fixes #6123 This changes the way we get the branch to be the current branchThis will fail (exit code  0) on things that arent on branches which will be exposed to the user,,1643,0.7382836275106512,0.5142857142857142,33253,558.716506781343,46.943132950410494,81.73698613658918,9883,17,2128,64,travis,mitchellh,mitchellh,true,mitchellh,42,0.9047619047619048,3854,0,2822,true,true,false,false,147,212,95,11,175,0,1
10589991,mitchellh/vagrant,ruby,6553,1447974890,1447975104,1447975104,3,3,commits_in_master,false,false,true,8,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,6,0,6,0,11.107394729401735,0.1797743384447882,22,xmitchx@gmail.com,plugins/providers/docker/action.rb|plugins/providers/hyperv/action.rb|plugins/providers/virtualbox/action.rb,20,0.007168458781362007,0,0,false,Run provisioner cleanup tasks before destroying the VM ,,1642,0.7381242387332522,0.5161290322580645,33253,558.716506781343,46.943132950410494,81.73698613658918,9883,17,2128,64,travis,sethvargo,sethvargo,true,sethvargo,72,0.9166666666666666,504,65,1886,true,false,false,false,220,236,58,21,68,1,0
10589711,mitchellh/vagrant,ruby,6552,1447974065,1447975210,1447975210,19,19,commits_in_master,false,false,true,36,3,1,2,1,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,30,0,55,0,4.3363833029293355,0.07023733723925137,7,xmitchx@gmail.com,plugins/providers/virtualbox/driver/meta.rb,7,0.025362318840579712,0,0,false,providers/virtualbox: cache VirtualBox version [GH-6468] Fixes #6468 Apparently just reading the VirtualBox version on some systems can be SUPER slow Lets cache that as recommended in #6468 to speed that up since its unlikely to change,,1641,0.7379646556977453,0.5217391304347826,33253,557.273027997474,46.88298800108261,81.61669623793343,9883,17,2128,64,travis,mitchellh,mitchellh,true,mitchellh,41,0.9024390243902439,3854,0,2822,true,true,false,false,138,208,94,10,173,0,7
10588921,mitchellh/vagrant,ruby,6551,1447971941,1447974645,1447974645,45,45,commits_in_master,false,false,true,3,2,1,0,1,0,1,0,1,0,0,1,1,1,0,0,1,0,1,2,2,0,0,5,0,5,58,4.122821536409982,0.06677823116661771,0,,lib/vagrant/action/builtin/provisioner_cleanup.rb,0,0.0,0,0,false,Fix some Ruby ,,1640,0.7378048780487805,0.5236363636363637,33253,557.273027997474,46.88298800108261,81.61669623793343,9883,17,2128,63,travis,sethvargo,sethvargo,true,sethvargo,71,0.9154929577464789,504,65,1886,true,false,false,false,220,235,56,20,66,1,0
10586027,mitchellh/vagrant,ruby,6550,1447964308,1447965258,1447965258,15,15,commits_in_master,false,false,false,77,1,1,0,0,0,0,0,0,0,0,2,2,0,2,0,0,0,2,2,0,2,0,0,0,0,0,9.889533832338884,0.16018294442976058,10,xmitchx@gmail.com,website/docs/source/layouts/layout.erb|website/www/source/layouts/layout.erb,7,0.025830258302583026,0,0,false,Safer way to build edit this page link This PR more safely builds the edit this page link on the main website and the docs websiteWe ran into some issues deploying other Middleman sites with the current_pagesource_filematch(/website*/)[0] strategy because the servers file structure may not map directly to the GitHub repos file structure (if theres no website directory the method errors out) The new strategy doesnt assume that the servers file structure has the same layout,,1639,0.7376449054301403,0.5313653136531366,33253,557.273027997474,46.88298800108261,81.61669623793343,9881,17,2128,63,travis,handlers,sethvargo,false,sethvargo,1,1.0,16,16,1918,true,false,false,false,0,0,1,0,4,0,-1
10579924,mitchellh/vagrant,ruby,6548,1447945507,1447965192,1447965192,328,328,commits_in_master,false,false,false,19,1,1,0,0,0,0,0,1,0,0,4,4,0,4,0,0,0,4,4,0,4,0,0,0,0,0,17.973812375016102,0.29112577373904774,7,xmitchx@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/stylesheets/_mixins.less|website/docs/source/stylesheets/_pages.less|website/docs/source/stylesheets/_sidebar.less,7,0.0,0,0,false,Avoid full-screen repaints on scroll Fixes #6520 Before (Timeline):[before-timeline](https://cloudgithubusercontentcom/assets/235637/11269157/5000f3e8-8ec6-11e5-9b9d-ed0e0ca165bcgif)After (Timeline):[after-timeline](https://cloudgithubusercontentcom/assets/235637/11269159/5492c666-8ec6-11e5-8e14-e84710bcc453gif)Before (paint):[before-paint](https://cloudgithubusercontentcom/assets/235637/11269177/72fc757a-8ec6-11e5-9d05-72d835cd878agif)After (paint):[after-paint](https://cloudgithubusercontentcom/assets/235637/11269184/79831fe8-8ec6-11e5-9305-4bac16430bc3gif),,1638,0.7374847374847375,0.5294117647058824,33253,557.273027997474,46.88298800108261,81.61669623793343,9881,17,2128,63,travis,Panya,sethvargo,false,sethvargo,0,0,67,23,2057,false,false,false,false,0,0,0,0,0,0,-1
10574161,mitchellh/vagrant,ruby,6545,1447919966,1447921032,1447921032,17,17,commits_in_master,false,false,false,18,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.029168309633408,0.08145900578333934,0,,plugins/provisioners/salt/bootstrap-salt.ps1,0,0.0,0,0,false,Fixing the Salt bootstrap script for Windows The URL for the download has changed as per issue #6274 ,,1637,0.7373243738546121,0.5315985130111525,33253,557.273027997474,46.88298800108261,81.61669623793343,9876,17,2128,62,travis,iamseth,mitchellh,false,mitchellh,0,0,8,11,2245,false,false,false,false,0,0,0,0,0,0,17
10573080,mitchellh/vagrant,ruby,6544,1447915092,1447915845,1447915845,12,12,commits_in_master,false,false,true,5,2,2,0,1,0,1,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,0,52,0,52,32.253573417108,0.5224211106057735,2,xmitchx@gmail.com,test/unit/plugins/pushes/ftp/adapter_test.rb|test/unit/plugins/pushes/ftp/push_test.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/plugins/pushes/ftp/adapter_test.rb|test/unit/plugins/pushes/ftp/push_test.rb|test/unit/support/shared/base_context.rb|test/unit/vagrant/action/builtin/box_add_test.rb,2,0.0,0,0,false,Fix port collision in tests ,,1636,0.7371638141809291,0.5298507462686567,33253,556.6715785041952,46.88298800108261,81.61669623793343,9875,17,2128,62,travis,sethvargo,sethvargo,true,sethvargo,70,0.9142857142857143,504,65,1886,true,false,false,false,220,234,54,20,62,1,10
10572874,mitchellh/vagrant,ruby,6543,1447914541,1447914980,1447914980,7,7,commits_in_master,false,false,true,11,2,1,0,1,0,1,0,1,0,0,2,3,2,0,0,0,0,3,3,3,0,0,32,0,32,36,8.403894917102889,0.13612319757144356,2,sethvargo@gmail.com,plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/provisioner/chef_client.rb,2,0.007633587786259542,0,0,false,Perform Chef delete operations on the guest instead of the host ,,1635,0.7370030581039755,0.5305343511450382,33263,557.4061269278177,46.92902023269098,81.65228632414394,9875,17,2128,62,travis,sethvargo,sethvargo,true,sethvargo,69,0.9130434782608695,504,65,1886,true,false,false,false,220,234,52,20,57,1,5
10572324,mitchellh/vagrant,ruby,6542,1447912135,1447913420,1447913420,21,21,commits_in_master,false,false,true,25,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,11,7,11,8.890936229782005,0.14401163838374892,9,xmitchx@gmail.com,lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb,9,0.035856573705179286,0,0,false,core: dont make dotfile path if no Vagrantfile Fixes #6336 If we have a custom set VAGRANT_DOTFILE_PATH dont litter the drive with dot folders everywhere,,1634,0.7368421052631579,0.5179282868525896,33258,556.4676168139996,46.9060075771243,81.45408623489085,9875,17,2128,63,travis,mitchellh,mitchellh,true,mitchellh,40,0.9,3854,0,2822,true,true,false,false,59,119,90,10,158,0,-1
10571557,mitchellh/vagrant,ruby,6541,1447909054,1447909148,1447909148,1,1,commits_in_master,false,false,true,17,1,1,0,0,0,0,0,0,0,0,2,2,1,0,1,0,0,2,2,1,0,1,8,0,8,0,8.55983008671939,0.13864908143382473,30,xmitchx@gmail.com,plugins/provisioners/chef/provisioner/chef_client.rb|templates/locales/en.yml,30,0.12396694214876033,0,0,false,Do not throw an error when the Chef node_name is nil - Fixes https://githubcom/mitchellh/vagrant/issues/6005- Fixes https://githubcom/mitchellh/vagrant/issues/6064,,1633,0.7366809552969994,0.5041322314049587,33251,556.584764367989,46.91588222910589,81.47123394785119,9875,17,2127,63,travis,sethvargo,sethvargo,true,sethvargo,68,0.9117647058823529,504,65,1885,true,false,false,false,217,231,50,19,54,1,-1
10571305,mitchellh/vagrant,ruby,6540,1447908791,1447913372,1447913372,76,76,commits_in_master,false,false,true,23,2,1,2,2,0,4,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,37,8,37,9.017726451581128,0.146065923793636,0,,lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb,0,0.0,0,0,false,core: dont do HEAD request for box on non-HTTP [GH-5477] Fixes #5477 If the protocol isnt HTTP we dont do a HEAD request,,1632,0.7365196078431373,0.5062240663900415,33251,556.584764367989,46.91588222910589,81.47123394785119,9875,17,2127,63,travis,mitchellh,mitchellh,true,mitchellh,39,0.8974358974358975,3854,0,2821,true,true,false,false,36,94,89,9,151,0,5
10571222,mitchellh/vagrant,ruby,6539,1447907739,1447907742,1447907742,0,0,github,false,false,true,11,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.43709436312192,0.07187040127026299,4,xmitchx@gmail.com,plugins/providers/virtualbox/provider.rb,4,0.017094017094017096,0,0,false,Revert #5186: Warning: Authentication failure Retrying after packaging box Reverts mitchellh/vagrant#6406,,1631,0.73635806253832,0.5,33242,556.3143011852476,46.86841946934601,81.37296191564889,9875,17,2127,66,travis,sethvargo,sethvargo,true,sethvargo,67,0.9104477611940298,504,65,1885,true,false,false,false,216,228,42,19,47,1,-1
10571171,mitchellh/vagrant,ruby,6538,1447907545,1447908090,1447908090,9,9,github,false,false,true,11,4,3,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,2,2,2,0,0,13,0,21,0,12.731732510153881,0.20622385946432698,3,xmitchx@gmail.com,plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network.rb,3,0.012875536480686695,0,0,false,Make DHCP IP configurable Fixes https://githubcom/mitchellh/vagrant/pull/6325Rebase with a few fixes,,1630,0.7361963190184049,0.5021459227467812,33242,556.3143011852476,46.86841946934601,81.37296191564889,9875,17,2127,65,travis,sethvargo,sethvargo,true,sethvargo,66,0.9090909090909091,504,65,1885,true,false,false,false,216,228,41,19,46,1,-1
10570957,mitchellh/vagrant,ruby,6537,1447906812,1447907170,1447907170,5,5,commits_in_master,false,false,true,12,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,27,0,27,0,14.128773840982923,0.22886015975891447,0,,plugins/guests/linux/cap/mount_nfs.rb|plugins/guests/linux/cap/mount_smb_shared_folder.rb|plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,0,0.0,0,0,false,Fix upstart detection and event emit - Fixes https://githubcom/mitchellh/vagrant/issues/6074- Closes https://githubcom/mitchellh/vagrant/pull/6522,,1629,0.7360343769183548,0.4956140350877193,33233,556.2543255198146,46.851021574940575,81.36490837420637,9875,17,2127,67,travis,sethvargo,sethvargo,true,sethvargo,65,0.9076923076923077,504,65,1885,true,false,false,false,214,226,37,19,42,1,5
10570560,mitchellh/vagrant,ruby,6536,1447905339,1447905790,1447905790,7,7,github,false,false,true,18,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,22,0,22,0,4.768785960008154,0.07758836304046249,2,tadej.j@nez.si,plugins/guests/fedora/cap/configure_networks.rb,2,0.00909090909090909,0,0,false,Check if the network manager is before reloading - Rest of https://githubcom/mitchellh/vagrant/pull/5931/files- Closes https://githubcom/mitchellh/vagrant/pull/6519- Closes https://githubcom/mitchellh/vagrant/pull/6508,,1628,0.7358722358722358,0.4818181818181818,33140,557.3627036813518,46.95232347616174,81.53289076644539,9875,17,2127,71,travis,sethvargo,sethvargo,true,sethvargo,64,0.90625,504,65,1885,true,false,false,false,214,224,31,19,38,1,3
10570494,mitchellh/vagrant,ruby,6535,1447904980,1447905384,1447905384,6,6,github,false,false,true,40,1,1,0,2,0,2,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,15,29,15,29,12.244636362586565,0.19922078687658065,0,,lib/vagrant/machine_index.rb|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/plugin/v2/command_test.rb,0,0.0,0,0,false,core: prune machine if non-existent CWD from index [GH-4742] Fixes #4742If vagrant something ID is used where ID represents a machine where the cwd was deleted we now automatically prune the index from the global status DB Tests included,,1627,0.7357098955132145,0.481651376146789,33140,557.3627036813518,46.95232347616174,81.53289076644539,9875,17,2127,71,travis,mitchellh,mitchellh,true,mitchellh,38,0.8947368421052632,3854,0,2821,true,true,false,false,28,85,86,9,144,0,1
10563977,mitchellh/vagrant,ruby,6534,1447886698,1447887214,1447887214,8,8,github,false,false,true,57,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,21,16,21,16,8.957466773089703,0.14604536554669145,0,,plugins/commands/login/middleware/add_authentication.rb|test/unit/plugins/commands/login/middleware/add_authentication_test.rb,0,0.0,0,0,false,Only append access_token the first time This fixes GH-6395 by only appending the access_token once It also fixes a bug that was never reported If a user supplied an access_token for a box URL Vagrant would silently overwrite itAfter this commit Vagrant only appends an access_token to the URL if no value exists at the key,,1626,0.7355473554735548,0.16541353383458646,32989,558.7923247142987,47.04598502531147,81.69389796598867,9872,17,2127,134,travis,sethvargo,sethvargo,true,sethvargo,63,0.9047619047619048,504,65,1885,true,false,false,false,214,221,24,8,28,1,6
10541594,mitchellh/vagrant,ruby,6529,1447810360,1448094775,1448094775,4740,4740,commits_in_master,false,false,true,240,9,3,19,10,2,31,0,4,0,0,9,9,8,0,1,0,0,9,9,8,0,1,181,76,279,76,70.83613655520453,1.1608562405311167,27,xmitchx@gmail.com,plugins/provisioners/ansible/config/base.rb|plugins/provisioners/ansible/errors.rb|plugins/provisioners/ansible/provisioner/base.rb|plugins/provisioners/ansible/provisioner/guest.rb|plugins/provisioners/ansible/provisioner/host.rb|templates/locales/en.yml|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible_common.html.md|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/config/base.rb|plugins/provisioners/ansible/errors.rb|plugins/provisioners/ansible/provisioner/guest.rb|plugins/provisioners/ansible/provisioner/host.rb|templates/locales/en.yml|test/unit/plugins/provisioners/ansible/config_test.rb,23,0.023076923076923078,6,13,false,Add support for Ansible Galaxy Resolve #2718 @mitchellh @sethvargo This **must be and will be merged** for 18 release to satisify https://githubcom/mitchellh/vagrant/issues/2103#issuecomment-75657728 Before merging Id really appreciate to get some users review/testing during this week and thus I allow myself to kindly ping @mkuzmin @maspwr @devlucas @QWp6t (please announce if you can have a look at this before next week) Most important goal is to ensure that the proposed behaviour is well thought for your needs and also possible evolutionsNotes for the possible reviewers:* The relevant commit to check is c1f3d114f52654e9f285499dd548409edc0c99fe* The galaxy_role_file and galaxy_roles_path might sound incoherent but I preferred to mimic the names used by ansible-galaxy command to avoid confusions (These arguments are so far still the same in Ansible 20 beta)* There is no plan to officially support any other Ansible role dependency manager (eg librarian-ansible) The galaxy_command option should be enough flexible to allow wild attempts in this way though* The docs were written quite quickly there is certainly ton of room for improvements about its clarity Help wanted* Unit tests are still very basic but I plan to update them as usual* I think that the default galaxy_command pattern is a good _default_ but this is very important to allow people override it (eg for taking advantage of new arguments and behaviors coming in Ansible 20 or to add a skipping condition to speed up provisioning process etc),,1625,0.7353846153846154,0.16153846153846155,32814,561.7724142134455,47.29688547571158,82.12957883830073,9867,17,2126,136,travis,gildegoma,gildegoma,true,gildegoma,24,0.9583333333333334,50,127,1864,true,true,false,false,8,29,8,0,10,1,33
10536306,mitchellh/vagrant,ruby,6527,1447800749,1447803592,1447803592,47,47,commits_in_master,false,false,true,13,1,1,0,2,0,2,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0.0,2,sethvargo@gmail.com,website/www/source/images/icons/icon_debian.png,2,0.015625,1,0,false,website: fix debian logo [](https://dldropboxusercontentcom/s/xbtvstw6pqyz31e/2015-11-17%20at%201051%20AMpng)Uses the real debian logo Thanks @fenak https://twittercom/fenak/status/666495710049738752,,1624,0.7352216748768473,0.15625,32814,561.7724142134455,47.29688547571158,82.12957883830073,9866,17,2126,134,travis,pearkes,pearkes,true,pearkes,3,1.0,263,52,1618,true,true,false,false,0,0,0,0,1,0,2
10508726,mitchellh/vagrant,ruby,6525,1447708559,1447708810,1447708810,4,4,commits_in_master,false,false,false,28,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.9999548433261465,0.08193914600608984,0,,README.md,0,0.0,0,0,false,Update README URLs based on HTTP redirects Created with https://githubcom/dkhamsing/frankenstein### Corrected URLs Was | Now --- | --- http://wwwvagrantupcom | https://wwwvagrantupcom/ http://wwwvirtualboxorg | https://wwwvirtualboxorg/ http://githubcom/carlhuda/bundler | https://githubcom/bundler/bundler ,,1623,0.7350585335797906,0.15079365079365079,32814,561.7724142134455,47.29688547571158,82.12957883830073,9856,17,2125,134,travis,ReadmeCritic,sethvargo,false,sethvargo,0,0,10,1,19,false,false,false,false,0,0,0,0,0,0,-1
10506020,mitchellh/vagrant,ruby,6522,1447701329,,1447907170,3430,,unknown,false,false,false,48,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.543630538499803,0.07446091369981175,0,,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,0,0.0,0,0,false,Fix for detecting upstart refs #6074 This should hopefully fix #6074 I dont have a working ruby environment so this hasnt been tested but executing test  -L /sbin/init && init --version | grep -q upstart produces the expected results on both ubuntu 1404 (upstart) and 1510 (systemd),,1622,0.7355117139334155,0.14960629921259844,32814,561.7724142134455,47.29688547571158,82.12957883830073,9853,18,2125,134,travis,yoshiyaka,sethvargo,false,,0,0,1,2,1726,false,false,false,false,1,0,0,0,0,0,1668
10492264,mitchellh/vagrant,ruby,6521,1447637471,1447901283,1447901283,4396,4396,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.630459680219549,0.07588386769517719,0,,website/www/Vagrantfile,0,0.0,0,0,false,Fix Vagrantfile for latest middleman Latest middleman requires ruby 222 and bundler gem,,1621,0.7353485502776064,0.14960629921259844,32814,561.7724142134455,47.29688547571158,82.12957883830073,9848,18,2124,134,travis,thachmai,sethvargo,false,sethvargo,0,0,2,6,1308,false,false,false,false,0,0,0,0,0,0,4396
10467907,mitchellh/vagrant,ruby,6519,1447470234,,1447905381,7252,,unknown,false,true,false,126,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.638751782335797,0.07601975847565245,2,tadej.j@nez.si,plugins/guests/fedora/cap/configure_networks.rb,2,0.015748031496062992,0,2,true,Check that NetworkManager is running before issuing an nmcli command This is a followup to https://githubcom/mitchellh/vagrant/pull/5931 where achange was made to check that nmcli is installed To further prevent errorswith vagrant up we need to also make sure that NetworkManager is runningThe following error is seen when bringing up a VM where NetworkManager isinstalled but not running        Configuring network adapters within the VM        The following SSH command responded with a non-zero exit status        Vagrant assumes that this means the command failed         which nmcli /dev/null 2&1 || nmcli c reload eth1        Stdout from the command:        Stderr from the command:        Error: NetworkManager is not runningThis commit simply checks to see if the service is running before passing off to nmclifixes mitchellh/vagrant#6518,,1620,0.7358024691358025,0.14960629921259844,32814,561.7724142134455,47.29688547571158,82.12957883830073,9836,18,2122,135,travis,signed8bit,sethvargo,false,,0,0,6,5,1485,false,false,false,false,1,0,0,0,0,0,7252
10432320,mitchellh/vagrant,ruby,6515,1447353896,1447905859,1447905859,9199,9199,commits_in_master,false,false,false,20,2,2,0,1,0,1,0,1,6,0,0,6,4,2,0,6,0,0,6,4,2,0,91,0,91,0,27.58207321747551,0.45201438719672915,0,,templates/guests/slackware/network_dhcp.erb|templates/guests/slackware/network_static.erb|plugins/guests/slackware/cap/change_host_name.rb|plugins/guests/slackware/cap/configure_networks.rb|plugins/guests/slackware/guest.rb|plugins/guests/slackware/plugin.rb,0,0.0,0,0,false,Slack net conf I added a plugin for Slackware network configurationFiles have been added in vagrant/templates/guests/slackware and in vagrant/plugins/guests/slackware,,1619,0.7356392835083385,0.14728682170542637,32814,561.7724142134455,47.29688547571158,82.12957883830073,9824,18,2121,132,travis,oliviermeurice,sethvargo,false,sethvargo,0,0,0,0,386,false,false,false,false,0,0,0,0,0,0,53
10570579,mitchellh/vagrant,ruby,6508,1447173932,,1447905378,12190,,unknown,false,true,false,8,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.634318804038481,0.07682471708619742,2,tadej.j@nez.si,plugins/guests/fedora/cap/configure_networks.rb,2,0.015625,0,1,false,Issue #6487: which nmcli causes error (CentOS 7) ,,1618,0.7360939431396786,0.1328125,32378,566.6810797455062,47.81024152202112,82.74136759528075,9805,18,2119,136,travis,fedorovdima,sethvargo,false,,0,0,0,0,518,false,false,false,false,0,1,0,0,0,0,12190
10345950,mitchellh/vagrant,ruby,6502,1447010054,1447887937,1447887937,14631,14631,commits_in_master,false,false,false,44,1,1,0,1,0,1,0,1,0,0,2,2,1,1,0,0,0,2,2,1,1,0,0,6,0,6,10.081553546334948,0.1671243003222719,0,,templates/guests/suse/network_dhcp.erb|test/unit/templates/guests/suse/network_dhcp_test.rb,0,0.0,0,0,false,SUSE-flavored systems use STARTMODE and not ONBOOT As described in /etc/sysconfig/network/ifcfgtemplateStatic template was already using the right one but the dhcp configuration seemsto be copied from a Fedora/Redhat templateThis fixes the issue that the interface does not come up after reboot,,1617,0.7359307359307359,0.112,32369,566.8386419104698,47.82353486360407,82.76437332015199,9790,18,2117,137,travis,dmacvicar,mitchellh,false,mitchellh,0,0,37,8,2690,false,false,false,false,0,0,0,0,0,0,14631
10344829,mitchellh/vagrant,ruby,6500,1447003547,1447330546,1447330546,5449,5449,commits_in_master,false,false,true,96,4,4,0,4,1,5,0,4,18,2,11,31,27,1,1,18,2,11,31,27,1,1,2193,250,2193,250,150.07810128084148,2.4878802215333073,31,xmitchx@gmail.com,CHANGELOG.md|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md|CHANGELOG.md|lib/vagrant/errors.rb|plugins/provisioners/ansible/cap/guest/arch/ansible_install.rb|plugins/provisioners/ansible/cap/guest/debian/ansible_install.rb|plugins/provisioners/ansible/cap/guest/epel/ansible_install.rb|plugins/provisioners/ansible/cap/guest/freebsd/ansible_install.rb|plugins/provisioners/ansible/cap/guest/posix/ansible_installed.rb|plugins/provisioners/ansible/cap/guest/suse/ansible_install.rb|plugins/provisioners/ansible/cap/guest/ubuntu/ansible_install.rb|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/config/base.rb|plugins/provisioners/ansible/config/guest.rb|plugins/provisioners/ansible/config/host.rb|plugins/provisioners/ansible/errors.rb|plugins/provisioners/ansible/helpers.rb|plugins/provisioners/ansible/plugin.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner/base.rb|plugins/provisioners/ansible/provisioner/guest.rb|plugins/provisioners/ansible/provisioner/host.rb|templates/locales/en.yml|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|test/unit/plugins/provisioners/support/shared/config.rb|website/docs/source/layouts/layout.erb|website/docs/source/v2/provisioning/ansible.html.md|website/docs/source/v2/provisioning/ansible_common.html.md|website/docs/source/v2/provisioning/ansible_intro.html.md|website/docs/source/v2/provisioning/ansible_local.html.md,21,0.0,2,5,false,Add new provisioner: Ansible on the Guest VM (ansible_local) @sethvargo @mitchellh This is ready to be merged for Vagrant 180 release if you agree with the  ansible_local namingThe new provisioner is already quite usable and the following improvements can come later in further Vagrant releases:* [ ] ansible-galaxy integration (#2718)* [ ] ability to auto install ansible via pip or from sourcePlease note that during this iteration I intentionally stick to the legacy unit tests for refactoring safety reasons but new unit test coverage is also on the roadmap for upcoming releases,,1616,0.7357673267326733,0.112,32369,566.8386419104698,47.82353486360407,82.76437332015199,9789,18,2117,134,travis,gildegoma,gildegoma,true,gildegoma,23,0.9565217391304348,50,127,1855,true,true,false,false,5,14,4,0,5,0,451
10318675,mitchellh/vagrant,ruby,6496,1446842793,1447903261,1447903261,17674,17674,commit_sha_in_comments,false,false,false,54,1,1,0,4,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,13,0,13,0,5.138536495895487,0.08518283070903428,0,,plugins/synced_folders/smb/scripts/host_info.ps1,0,0.0,0,0,true,Fixing failure to use smb shared folders on Windows 7 The script being used to get all available IPs utilizes the PS command Get-NetIPAddress which supported only on Windows 8+ causing Vagrant to explode while trying to vagrant up on lower versions (when using smb shared folders)Ive added a small Windows 7 support,,1615,0.7356037151702787,0.11363636363636363,32369,566.8386419104698,47.82353486360407,82.76437332015199,9784,19,2115,137,travis,amirbilu,mitchellh,false,mitchellh,0,0,0,0,532,false,false,false,false,0,1,0,0,0,0,7836
10309344,mitchellh/vagrant,ruby,6493,1446808100,1447903222,1447903222,18252,18252,commits_in_master,false,false,false,159,2,2,0,2,0,2,0,6,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,8.21826196350364,0.13623622564884175,16,xmitchx@gmail.com,plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_5_0.rb,15,0.11363636363636363,0,14,true,Re-enable UNC paths for shared folders on Windows hosts This pull request is essentially the same as #5495 which enables use of long (260 characters) path names for Windows hosts This way creating longer than 260 character paths inside a shared folder doesnt fail inside the guest system (most common example: installing npm packages with long dependency chains)Based on feedback from #5933 which caused the previous PR to be reverted we contacted VirtualBox team and got them to fix1 Missing support for shares using UNC paths on VirtualBox 502 Inability to get information about disk sizes for mounted shares which used UNC paths on host dubbed df -h issue on VirtualBox 43The fixes are available for builds 43 r103933 and 50 r103713Are the changes to those drivers OK as-is or should we enable this only for builds higher than the ones mentioned above so that older builds wont break If so howCloses #6409,,1614,0.7354399008674102,0.11363636363636363,32369,566.8386419104698,47.82353486360407,82.76437332015199,9773,19,2115,137,travis,Ingramz,mitchellh,false,mitchellh,0,0,4,9,1528,false,false,false,false,1,10,0,0,0,0,6614
10302547,mitchellh/vagrant,ruby,6490,1446775214,1446775650,1446775650,7,7,github,false,false,true,46,3,3,0,0,0,0,0,1,0,0,8,8,7,0,1,0,0,8,8,7,0,1,137,46,137,46,39.733857342540944,0.6586749782022184,20,xmitchx@gmail.com,website/docs/source/v2/cli/up.html.md|lib/vagrant/environment.rb|plugins/commands/up/command.rb|plugins/providers/virtualbox/provider.rb|templates/locales/en.yml|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/provider.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/plugin/v2/provider_test.rb,19,0.0,0,1,false,Add provider install to vagrant up This introduces a new flag --install-provider (set by default) that automatically installs the requested provider if possible This is a completely backwards compatible change: any providers that dont explicitly implement the installed function will just always be seen as installed,,1613,0.7352758834469931,0.10687022900763359,32316,566.7471221685853,47.80913479391013,82.77633370466641,9769,19,2114,131,travis,mitchellh,mitchellh,true,mitchellh,37,0.8918918918918919,3852,0,2808,true,true,false,false,13,11,20,9,68,0,-1
10302473,mitchellh/vagrant,ruby,6489,1446774992,1447902993,1447902993,18800,18800,commits_in_master,false,false,false,83,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.401011037681651,0.0729563159278033,0,,plugins/provisioners/docker/cap/debian/docker_install.rb,0,0.0,0,0,false,Update docker installer to work on custom kernels The current docker installer attempt to install the linux-image-extra-uname -r DEB package on Debian systemsThis package may not exist for example on custom kernels (eg Linode servers)If this happens Vagrant halts the provisioning However this package is not really needed in newer Debian releases (such as Ubuntu 1404)This small patch checks if the linux-image-extra-uname -r package exists and it will install it if it does In either case it will continue provisioning,,1612,0.7351116625310173,0.10852713178294573,32316,566.7471221685853,47.80913479391013,82.77633370466641,9769,19,2114,137,travis,invernizzi,mitchellh,false,mitchellh,0,0,26,14,2210,false,false,false,false,0,0,0,0,0,0,18799
10300962,mitchellh/vagrant,ruby,6488,1446770663,1447902840,1447902840,18869,18869,commits_in_master,false,false,false,92,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.39998992443237,0.07293938875807464,0,,plugins/communicators/ssh/communicator.rb,0,0.0,0,0,false,Add Errno::ENETUNREACH to SSH rescue This changes the ssh ready method to treat ENETUNREACH the same way asEHOSTUNREACH errorsWhen attempting to SSH into a box it tries up to 5 times to connect tothe box ignoring various errors  Later it will catch and gracefullyhandle most of those errors so that callers dont have to know thedetailsHowever the Errno::ENETUNREACH error is not caught which means thatcallers that expect a clean boolean return from ready dont get thatand instead get an exception they probably arent expecting,,1611,0.7349472377405338,0.10852713178294573,32316,566.7471221685853,47.80913479391013,82.77633370466641,9769,19,2114,137,travis,dvorak,mitchellh,false,mitchellh,0,0,7,1,2591,false,false,false,false,0,0,0,0,0,0,18869
10282959,mitchellh/vagrant,ruby,6485,1446704783,1446709128,1446709128,72,72,commits_in_master,false,false,true,48,4,3,0,1,0,1,0,1,5,0,5,11,8,0,1,7,0,6,13,11,0,1,180,47,273,47,57.481936401739645,0.9580369867671069,17,xmitchx@gmail.com,plugins/commands/provider/command.rb|test/unit/plugins/commands/provider/command_test.rb|lib/vagrant/errors.rb|plugins/commands/provider/command.rb|plugins/commands/provider/plugin.rb|templates/locales/en.yml|lib/vagrant/errors.rb|lib/vagrant/ui.rb|plugins/commands/provider/command.rb|plugins/hosts/darwin/cap/provider_install_virtualbox.rb|plugins/hosts/darwin/plugin.rb|plugins/hosts/darwin/scripts/install_virtualbox.sh|templates/locales/en.yml,15,0.0,0,0,false,command/provider: non-primary command to check and install providers This introduces a non-primary (hidden) command vagrant provider for listing the provider in use for an environment and also has the capability to install providers I currently only implemented installing VirtualBox on OS X but other OSs will soon follow ,,1610,0.7347826086956522,0.10317460317460317,32153,568.5317077722141,47.95819985693404,83.07156408422232,9761,19,2114,129,travis,mitchellh,mitchellh,true,mitchellh,36,0.8888888888888888,3852,0,2808,true,true,false,false,14,10,18,9,63,0,72
10246140,mitchellh/vagrant,ruby,6479,1446578860,1447902821,1447902821,22066,22066,commits_in_master,false,false,false,139,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.1554880320094805,0.05259172594391827,0,,lib/vagrant/action/builtin/handle_forwarded_port_collisions.rb,0,0.0,1,0,false,Bugfix: Remove redundant app call from action handle_forwarded_port_collisions This call should not be in the handle helper method It is specified in the call method alreadyIt is not critical in the current implementation of HandleForwardedPortCollisions class But it causes a pretty big problems if we want to crate a child class (in the 3rd-party plugin) and call handle helper there:rubymodule VagrantPlugins  module PluginName    module Action      class HandleForwardedPortCollisions  Vagrant::Action::Builtin::HandleForwardedPortCollisions        @@lock  Mutexnew        #         def call(env)          # Acquire a class- and process-level locks so that we dont choose          # a port that someone else also chose          @@locksynchronize do            begin              env[:machine]envlock(fpcollision) do                handle(env)                my_custom_method(env)              end            rescue Vagrant::Errors::EnvironmentLockedError              sleep 1              retry            end          end          @appcall(env)        end        #       end    end  endendIn the result my_custom_method will be never executed because handle method have caused the middleware exit,,1609,0.7346177750155376,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9746,19,2112,137,travis,legal90,mitchellh,false,mitchellh,6,0.8333333333333334,28,5,859,false,true,true,false,0,4,1,2,0,0,17
10238677,mitchellh/vagrant,ruby,6475,1446552118,1447902768,1447902768,22510,22510,commits_in_master,false,false,false,83,2,2,0,3,0,3,0,3,0,0,3,3,2,0,1,0,0,3,3,2,0,1,40,0,40,0,17.624212190376028,0.2937383149900455,15,xmitchx@gmail.com,lib/vagrant/errors.rb|plugins/hosts/linux/cap/rdp.rb|templates/locales/en.yml|plugins/hosts/linux/cap/rdp.rb,15,0.032520325203252036,0,0,false,Prefer xfreerdp for RDP connections on Linux hosts This resolves #6140rdesktop fails to connect to newer versions of Windows Server due to not supporting newer features of RDP such as Network Level Authenticationxfreerdp [supports such features and is an all-around better option](https://unixstackexchangecom/questions/140047/what-are-the-differences-between-rdesktop-and-xfreerdp/188168#188168) so Ive made it the default RDP client when running vagrant rdp on a Linux host If its not installed rdesktop will be used as a fallback If neither are installed an error message will be displayed as usual,,1608,0.7344527363184079,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9745,19,2112,137,travis,nikelmwann,mitchellh,false,mitchellh,0,0,2,3,1196,false,false,false,false,1,2,0,0,0,0,7684
10234519,mitchellh/vagrant,ruby,6474,1446530330,1447902715,1447902715,22873,22873,commits_in_master,false,false,false,7,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.36376506731148,0.0727297756086054,1,sethvargo@gmail.com,plugins/provisioners/salt/provisioner.rb,1,0.008130081300813009,0,0,false,Enable log_level and colorize for salt masterless ,,1607,0.7342874922215308,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9745,19,2112,137,travis,aneeshusa,mitchellh,false,mitchellh,3,0.3333333333333333,9,18,1188,false,false,false,false,0,0,1,0,0,0,4738
10233947,mitchellh/vagrant,ruby,6473,1446528293,,1447902663,22906,,unknown,false,false,false,29,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.376673532569386,0.07294491775470573,1,sethvargo@gmail.com,plugins/provisioners/salt/provisioner.rb,1,0.008130081300813009,0,0,false,Fix custom minion_config upload If a custom minion_config is specified upload it duringthe upload_configs step then use sudo to copy into the config_dirinstead of uploading it again,,1606,0.7347447073474471,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9745,19,2112,137,travis,aneeshusa,mitchellh,false,,2,0.5,9,18,1188,false,false,false,false,0,0,0,0,0,0,394
10232613,mitchellh/vagrant,ruby,6471,1446523290,,1447902619,22988,,unknown,false,false,false,16,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,44,0,44,0,8.056037362101836,0.13426794994744987,0,,plugins/guests/ubuntu/cap/change_host_name.rb|plugins/guests/ubuntu/cap/change_host_name.rb,0,0.0,0,0,false,Be smarter about Ubuntu OS versions Check the version number instead of the Ubuntu distribution name,,1605,0.735202492211838,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9745,19,2111,137,travis,rogerhu,mitchellh,false,,1,0.0,91,2,1943,false,false,false,false,0,2,2,0,0,0,22988
10232327,mitchellh/vagrant,ruby,6470,1446522255,,1446522703,7,,unknown,false,false,false,16,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,16,0,16,0,3.993938862426708,0.06656597520217723,0,,plugins/guests/ubuntu/cap/change_host_name.rb,0,0.0,0,0,false,Be smarter about Ubuntu OS versions Check the version number instead of the Ubuntu distribution name,,1604,0.7356608478802993,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9745,19,2111,124,travis,rogerhu,rogerhu,true,,0,0,91,2,1943,false,false,false,false,0,0,0,0,0,0,7
10196525,mitchellh/vagrant,ruby,6467,1446342553,1446342788,1446342788,3,3,commits_in_master,false,false,false,24,1,1,0,0,0,0,0,1,0,0,3,3,2,1,0,0,0,3,3,2,1,0,6,0,6,0,13.595279431132607,0.2265890753713319,2,sethvargo@gmail.com,website/docs/source/v2/cli/plugin.html.md|website/docs/source/v2/provisioning/salt.html.md|website/www/source/vmware/index.html.erb,2,0.0,0,0,false,fixed simple spelling errors Hello Did a quick spell check of the documentation and fixed anything I found wrong Thanks for an awesome platform,,1602,0.735330836454432,0.09917355371900827,32153,568.5317077722141,47.95819985693404,83.07156408422232,9735,19,2109,123,travis,karthequian,sethvargo,false,sethvargo,0,0,7,11,1915,false,false,false,false,0,0,0,0,0,0,-1
10158288,mitchellh/vagrant,ruby,6460,1446168733,,1446168908,2,,unknown,false,false,true,3,68,68,0,0,0,0,0,0,1,0,29,30,27,1,1,1,0,29,30,27,1,1,1027,8,1027,8,404.3119418131395,6.738564626133242,25,xmitchx@gmail.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|CHANGELOG.md|lib/vagrant/command/ssh_config.rb|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|CHANGELOG.md|templates/locales/en.yml|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|lib/vagrant/version.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/hosts/fedora.rb|CHANGELOG.md|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/provisioners/puppet.rb|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/guest/ubuntu.rb|lib/vagrant/provisioners/puppet.rb|vagrant.gemspec|CHANGELOG.md|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/version.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/action/vm/sane_defaults.rb|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|test/unit/vagrant/environment_test.rb|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/action/builtin.rb|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|CHANGELOG.md|templates/commands/ssh_config/config.erb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/provisioners/shell.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|vagrant.gemspec|vagrant.gemspec|lib/vagrant/guest/suse.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md,15,0.0,0,0,false,1 0 stable ,,1601,0.73579013116802,0.09917355371900827,32153,568.5317077722141,47.95819985693404,83.07156408422232,9716,19,2107,123,travis,dexterc,mitchellh,false,,1,0.0,0,0,0,false,false,false,false,0,0,2,0,0,0,-1
10158193,mitchellh/vagrant,ruby,6459,1446168510,,1446168570,1,,unknown,false,false,true,3,68,68,0,0,0,0,0,0,1,0,29,30,27,1,1,1,0,29,30,27,1,1,1027,8,1027,8,404.3119418131395,6.738564626133242,25,xmitchx@gmail.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|CHANGELOG.md|lib/vagrant/command/ssh_config.rb|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|CHANGELOG.md|templates/locales/en.yml|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|lib/vagrant/version.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/hosts/fedora.rb|CHANGELOG.md|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/provisioners/puppet.rb|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/guest/ubuntu.rb|lib/vagrant/provisioners/puppet.rb|vagrant.gemspec|CHANGELOG.md|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/version.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/action/vm/sane_defaults.rb|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|test/unit/vagrant/environment_test.rb|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/action/builtin.rb|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|CHANGELOG.md|templates/commands/ssh_config/config.erb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/provisioners/shell.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|vagrant.gemspec|vagrant.gemspec|lib/vagrant/guest/suse.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md,15,0.0,0,0,false,1 0 stable ,,1600,0.73625,0.09917355371900827,32153,568.5317077722141,47.95819985693404,83.07156408422232,9716,19,2107,123,travis,dexterc,dexterc,true,,0,0,0,0,0,false,false,false,false,0,0,0,0,0,0,-1
10127007,mitchellh/vagrant,ruby,6452,1446065275,1447902602,1447902602,30622,30622,commits_in_master,false,false,false,41,2,2,0,4,0,4,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,2,2,2,9.961906691855159,0.16603363389141712,2,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb|test/unit/plugins/communicators/winrm/communicator_test.rb,2,0.01639344262295082,0,0,false,Fix for interpolated strings being used for username and passwords This fix was made in commit 1dd081d but was removed by 1152b4e This was causing passwords with $ in them to stop working as the dollar sign was getting stripped out,,1599,0.7360850531582239,0.09016393442622951,32153,568.5317077722141,47.95819985693404,83.07156408422232,9713,20,2106,136,travis,matthewcodes,mitchellh,false,mitchellh,1,1.0,4,7,579,false,false,false,false,0,0,2,0,0,0,28
10126869,mitchellh/vagrant,ruby,6451,1446064938,1446065168,1446065168,3,3,commits_in_master,false,false,false,41,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.820065311624567,0.08033531973726586,2,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb,2,0.01639344262295082,0,0,false,Fix for interpolated strings being used for username and passwords This fix was made in commit 1dd081d but was removed by 1152b4e This was causing passwords with $ in them to stop working as the dollar sign was getting stripped out ,,1598,0.7359198998748435,0.09016393442622951,32153,568.5317077722141,47.95819985693404,83.07156408422232,9713,20,2106,122,travis,matthewcodes,matthewcodes,true,matthewcodes,0,0,4,7,579,false,false,false,false,0,0,0,0,0,0,-1
10123598,mitchellh/vagrant,ruby,6450,1446057179,,1448576588,41990,,unknown,false,false,false,17,1,1,0,2,0,2,0,1,1,0,2,3,3,0,0,1,0,2,3,3,0,0,23,0,23,0,12.729467376226975,0.21216016083599926,0,,plugins/guests/linux/cap/halt.rb|plugins/guests/redhat/cap/halt.rb|plugins/guests/redhat/plugin.rb,0,0.0,0,0,false,Fixes for vagrant halt/reload not finding shutdown command in some gu… Commit in reference to issue #6449 ,,1597,0.736380713838447,0.08943089430894309,32153,568.5317077722141,47.95819985693404,83.07156408422232,9710,21,2106,129,travis,gawbul,sethvargo,false,,0,0,135,1776,1944,false,true,true,false,1,5,0,0,0,0,5
10101695,mitchellh/vagrant,ruby,6444,1445980020,1447898695,1447898695,31977,31977,commits_in_master,false,false,false,7,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.910227790923502,0.08183804452095625,0,,README.md,0,0.0,0,0,false,Add links for OS links in Readme ,,1595,0.7366771159874608,0.08943089430894309,32153,568.5317077722141,47.95819985693404,83.07156408422232,9702,21,2105,137,travis,glamouracademy,sethvargo,false,sethvargo,0,0,15,0,1284,false,false,false,false,0,0,0,0,0,0,-1
10089975,mitchellh/vagrant,ruby,6440,1445938276,1445938295,1445938295,0,0,commits_in_master,false,false,true,37,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,18,6,18,8.80660950972369,0.14677831122064325,0,,lib/vagrant/ui.rb|test/unit/vagrant/ui_test.rb,0,0.0,0,0,false,core: machine-readable output should include standard UI output This includes the standard UI output in the machine-readable UI We do this because it is sometimes convenient to parse this out and select what UI output you want ,,1594,0.7365119196988708,0.08196721311475409,32148,568.1224337439344,47.93455269379122,82.89784745551823,9696,21,2105,119,travis,mitchellh,mitchellh,true,mitchellh,35,0.8857142857142857,3848,0,2799,true,true,false,false,14,10,15,9,59,0,-1
10075809,mitchellh/vagrant,ruby,6438,1445887832,1445907600,1445907600,329,329,commits_in_master,false,false,true,30,2,2,0,0,0,0,0,0,6,3,12,21,6,4,11,6,3,12,21,6,4,11,548,0,548,0,66.4421839270734,1.112131705059651,2,sethvargo@gmail.com,website/www/Gemfile.lock|website/www/config.rb|website/www/config.ru|website/www/helpers/download_helpers.rb|website/www/helpers/middleman_hashicorp_shim.rb|website/www/lib/redirect_to_releases.rb|website/www/source/_sidebar_downloads.erb|website/www/source/download-archive-single.html.erb|website/www/source/downloads-archive.html.erb|website/www/source/downloads.html.erb|website/www/source/images/fastly_logo.png|website/www/source/images/icons/icon_centos.png|website/www/Gemfile.lock|website/www/config.rb|website/www/config.ru|website/www/helpers/download_helpers.rb|website/www/helpers/middleman_hashicorp_shim.rb|website/www/lib/redirect_to_releases.rb|website/www/source/_sidebar_downloads.erb|website/www/source/download-archive-single.html.erb|website/www/source/downloads-archive.html.erb|website/www/source/downloads.html.erb|website/www/source/images/fastly_logo.png|website/www/source/images/icons/icon_centos.png|website/www/source/images/icons/icon_darwin.png|website/www/source/images/icons/icon_debian.png|website/www/source/images/icons/icon_freebsd.png|website/www/source/images/icons/icon_hashios.png|website/www/source/images/icons/icon_linux.png|website/www/source/images/icons/icon_macosx.png|website/www/source/images/icons/icon_openbsd.png|website/www/source/images/icons/icon_rpm.png|website/www/source/images/icons/icon_windows.png,2,0.0,0,0,false,Use releases for releases Vagrant isnt quite middleman-hashicorp-ified yet so we have to shim the download stuffThis adds redirects to the releases site for archives and old versions gracefully,,1593,0.736346516007533,0.075,32136,568.3345780433159,47.95245207866567,82.92880258899676,9692,21,2104,119,travis,sethvargo,sethvargo,true,sethvargo,62,0.9032258064516129,502,65,1862,true,false,false,false,131,164,27,9,32,1,-1
10018118,mitchellh/vagrant,ruby,6429,1445568972,,1445730667,2694,,unknown,false,false,false,93,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.017564603424562,0.06724735263816704,0,,plugins/guests/debian8/cap/halt.rb,0,0.0,0,0,false,#6315-FIX Added diversion when Virtualbox is used The debian8 guest addition is mandatory to running GNU/Linux Debian 8 (aka jessie) with the provider plugin vmware_fusion Virtualbox users complained that shutdown -h -H has broke something and prefer to use the shutdown -h now commandThis patch try to make everybody happy )Please before using a head Double Ax and drop the code make some considération to the Commercial Users who uses the vmware provider plugins from https://wwwvagrantupcom/vmwareperhaps the vmware plugins need some patch to fix this bugs Hope this help,,1592,0.7368090452261307,0.07563025210084033,32136,568.3345780433159,47.95245207866567,82.92880258899676,9667,21,2100,119,travis,gpkfr,gpkfr,true,,1,1.0,2,4,1323,false,false,false,false,0,5,0,0,0,0,2694
9958742,mitchellh/vagrant,ruby,6419,1445354088,,1447900745,42444,,unknown,false,false,false,22,2,1,0,2,0,2,0,2,0,0,8,9,7,1,0,0,0,9,9,8,1,0,13,23,20,23,35.748514346194085,0.5983780232381686,0,,lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/kernel_v1/config/ssh.rb|plugins/kernel_v2/config/ssh.rb|templates/commands/ssh_config/config.erb|test/unit/plugins/commands/ssh_config/command_test.rb|test/unit/vagrant/machine_test.rb,0,0.0,0,0,false,Allow setting of ssh LogLevel in Vagrantfile This PR allows users to set the LogLevel ssh configuration whenever they do vagrant ssh,,1591,0.7372721558768071,0.06722689075630252,32136,568.3345780433159,47.95245207866567,82.92880258899676,9650,21,2098,136,travis,jsyeo,mitchellh,false,,0,0,45,135,1482,false,false,false,false,0,0,0,0,0,0,1451
9935855,mitchellh/vagrant,ruby,6415,1445269647,,1447900694,43850,,unknown,false,false,false,29,1,1,0,19,0,19,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.028846568667188,0.06743701912596012,0,,plugins/guests/debian8/cap/halt.rb,0,0.0,0,19,false,Debian 8 machines will not shutdown gracefully -H causes the machine to halt instead of poweroff and leaving a time causes the machine to wait 1 minute before shutdown,,1590,0.7377358490566037,0.06611570247933884,32136,568.3345780433159,47.95245207866567,82.92880258899676,9638,22,2097,136,travis,htesligte,mitchellh,false,,0,0,0,0,593,false,false,false,false,0,1,0,0,0,0,3247
9915409,mitchellh/vagrant,ruby,6407,1445136223,1447900684,1447900684,46074,46074,commits_in_master,false,false,false,6,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.830608227641878,0.06411879824875133,0,,lib/vagrant/action/builtin/handle_forwarded_port_collisions.rb,0,0.0,0,0,false,handle_forwarded_port_collisionsrb: fix typo: Reparied - Repaired ,,1589,0.7375707992448081,0.06557377049180328,32136,568.3345780433159,47.95245207866567,82.92880258899676,9627,22,2095,136,travis,joseph-onsip,mitchellh,false,mitchellh,0,0,9,7,633,false,false,false,false,0,0,0,0,0,0,2341
9913929,mitchellh/vagrant,ruby,6406,1445126834,1447907025,1447907025,46336,46336,commits_in_master,false,false,false,51,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.43709436312192,0.07427049214448773,0,,plugins/providers/virtualbox/provider.rb,0,0.0,0,1,false,#5186: Warning: Authentication failure Retrying after packaging box After replacing the insecure key and writing a new key to vagrant/machines/default/virtualbox/private_key vagrant continues to use the old insecure key ( /Users/myuser/vagrantd/boxes/mybox/0/virtualbox/vagrant_private_key)This patch instructs vagrant to search first for the newly generated key and use this key if it is already generated,,1588,0.7374055415617129,0.06557377049180328,32136,568.3345780433159,47.95245207866567,82.92880258899676,9627,22,2095,120,travis,markus-perl,sethvargo,false,sethvargo,0,0,4,0,1422,false,false,false,false,1,1,0,0,0,0,-1
9892332,mitchellh/vagrant,ruby,6404,1445012573,1447898568,1447898568,48099,48099,commits_in_master,false,false,false,44,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.063073682418233,0.06800969163471622,0,,plugins/provisioners/puppet/provisioner/puppet.rb,0,0.0,0,3,true,Remove back tick in puppet facts definitions #6403 Starting with vagrant 173 (commit 1152b4e1df97fb5f468491954932d4f0c09875b1) we dontsave the command to be executed in the file anymore but we sendit as a parameter thus the back tick makes things breakFixes #6403 CC #3958,,1587,0.7372400756143668,0.05384615384615385,32132,568.4053280219096,47.95842151126603,82.93912610481763,9614,23,2094,137,travis,timotei,sethvargo,false,sethvargo,0,0,38,130,1837,false,false,false,false,1,0,0,0,0,0,30528
10569528,mitchellh/vagrant,ruby,6389,1444515122,1447901999,1447901999,56447,56447,commits_in_master,false,false,false,71,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,23,0,23,0,13.21601144141149,0.22155361014715513,1,manuel@manuel-poeter.at,plugins/provisioners/puppet/config/puppet_server.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|website/docs/source/v2/provisioning/puppet_agent.html.md,1,0.0,0,0,false,Fix for #6151 / provisioner puppet_server with Puppet Collection 1 puppet_server provisioner fails with Puppet Collection 1 with thefollowing error:bash default: Running provisioner: puppet_serverThe puppet binary appears not to be in the PATH of the guest Thiscould be because the PATH is not properly setup or perhaps Puppet is notinstalled on this guest Puppet provisioning can not continue withoutPuppet properly installedrefs #6151,,1585,0.7369085173501577,0.024242424242424242,32100,567.9439252336449,47.94392523364486,82.95950155763241,9568,26,2088,134,travis,grafjo,mitchellh,false,mitchellh,0,0,4,0,1286,false,false,false,false,1,0,0,0,0,0,56447
9786179,mitchellh/vagrant,ruby,6386,1444403037,1447900432,1447900432,58289,58289,commits_in_master,false,false,false,59,2,2,0,2,0,2,0,2,0,0,6,6,4,0,2,0,0,6,6,4,0,2,120,0,120,0,30.69923203146418,0.5146428417884041,16,xmitchx@gmail.com,lib/vagrant/errors.rb|plugins/guests/darwin/cap/configure_networks.rb|plugins/guests/windows/cap/configure_networks.rb|plugins/guests/windows/errors.rb|templates/locales/en.yml|templates/locales/guest_windows.yml|plugins/guests/darwin/cap/configure_networks.rb,16,0.004201680672268907,2,1,true,Fix network configuration in OS X (Darwin) guests Fixes #6385Currently configure_networks guest cap for Darwin configures NICs following the device order and failswhen this order is mixed While performing the network configuration on the guest side we have to detect the appropriate NIC by its MAC address (like it is implemented for Windows guests)/cc: @mitchellh @sethvargo ,,1583,0.7372078332280481,0.03361344537815126,32100,567.9439252336449,47.94392523364486,82.95950155763241,9546,26,2087,138,travis,legal90,mitchellh,false,mitchellh,5,0.8,28,5,834,false,true,true,false,0,2,0,0,0,0,2
9784897,mitchellh/vagrant,ruby,6384,1444394243,,1447899641,58423,,unknown,false,false,true,9,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,true,Merge branch master into pr/4943 Conflicts:plugins/communicators/winrm/configrbplugins/communicators/winrm/shellrbtest/unit/plugins/communicators/winrm/shell_testrb,,1582,0.7376738305941846,0.03361344537815126,32100,567.9439252336449,47.94392523364486,82.95950155763241,9545,26,2087,138,travis,javimuu,mitchellh,false,,0,0,1,1,346,false,false,false,false,0,0,0,0,0,0,58423
9775441,mitchellh/vagrant,ruby,6383,1444381104,1447899617,1447899617,58641,58641,commits_in_master,false,false,false,23,1,1,0,6,0,6,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.657925035837479,0.0780855942853507,4,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,4,0.01680672268907563,0,5,true,Document windows minion requirement for ipc_mode If this is not set to tpc then the minion will fail to communicate with the master ,,1581,0.7375079063883618,0.03361344537815126,32100,567.9439252336449,47.94392523364486,82.95950155763241,9545,26,2087,138,travis,PatOShea,mitchellh,false,mitchellh,8,0.625,3,10,1972,true,false,false,false,0,6,10,0,6,0,3
9768855,mitchellh/vagrant,ruby,6382,1444348561,1447899598,1447899598,59183,59183,commits_in_master,false,false,false,206,4,4,0,10,0,10,0,5,0,0,3,3,3,0,0,0,0,3,3,3,0,0,38,0,38,0,25.805864049993666,0.43261027493724363,12,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md|plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/config.rb,7,0.02032520325203252,4,9,false,[salt] [bugfix] Restablize Salt provisioner  Hey all This PR answers #6276 For the brave/bored feel free to drill down through the referenced issues and PRs For the everyone else this PR reverts the show stopper bug introduced in #5435 and the work done on top of it in #5936 My goal was to simply bring the salt provisioner back to a working state The issue seeming to involve vagrant using the Salt dummy config file instead of the file set with the minion_config setting### The GoodAt provision time the user supplied minion_config is copied to the inside the vagrant VM as you would expect Therefore the provisioner no longer hangs at Bootstrapping Salt (this may take a while) This unblocks the Salt community :confetti_ball: ### The Bad[There were no provision tests for the salt provisioner to begin with](https://githubcom/mitchellh/vagrant/tree/master/test/unit/plugins/provisioners/salt) For the past 2 weeks Ive attempted to add some testing around the provisioner however Ive been unsuccessful :disappointed: I would like the time/space to talk about why testing around the salt provisioner can not leverage the approach used in the [ansible](https://githubcom/mitchellh/vagrant/blob/master/test/unit/plugins/provisioners/ansible/provisioner_testrb) [shell](https://githubcom/mitchellh/vagrant/blob/master/test/unit/plugins/provisioners/shell/provisioner_testrb) and [chef](https://githubcom/mitchellh/vagrant/blob/master/test/unit/plugins/provisioners/chef/provisioner/base_testrb) provisioners but for the sake of brevity lets make that a separate issue if thats :cool:@mitchellh @timoguin @cachedout @thatch45,,1580,0.7373417721518988,0.032520325203252036,32100,567.9439252336449,47.94392523364486,82.95950155763241,9538,26,2086,139,travis,jcockhren,mitchellh,false,mitchellh,1,1.0,77,0,1928,true,false,false,false,1,0,0,0,2,0,5461
9765266,mitchellh/vagrant,ruby,6379,1444337550,1444342581,1444342581,83,83,commits_in_master,false,false,true,7,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,10.098133206041286,0.1692824203454442,4,sethvargo@gmail.com,scripts/website_push_docs.sh|scripts/website_push_www.sh,4,0.01639344262295082,0,0,false,Add shopt globs to include hidden files ,,1579,0.7371754274857505,0.03278688524590164,32098,567.9793133528569,47.946912580223064,82.96467069599352,9538,25,2086,111,travis,sethvargo,mitchellh,false,mitchellh,61,0.9016393442622951,501,65,1844,true,false,true,false,268,282,58,10,69,1,-1
9764532,mitchellh/vagrant,ruby,6378,1444334937,1444335567,1444335567,10,10,commits_in_master,false,false,true,50,9,9,3,2,0,5,0,3,2,1,13,16,14,0,1,2,1,13,16,14,0,1,379,6,379,6,115.87072149647489,1.943781827168599,25,xmitchx@gmail.com,plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/clone.rb|plugins/providers/virtualbox/action/import.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/clone.rb|plugins/providers/virtualbox/action/prepare_clone.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|test/unit/plugins/kernel_v2/config/vm_test.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/create_clone.rb|plugins/providers/virtualbox/action/create_clone.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_5_0.rb|templates/locales/en.yml|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/prepare_clone.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/create_clone.rb|plugins/providers/virtualbox/action/import_master.rb|plugins/providers/virtualbox/action/prepare_clone.rb|plugins/providers/virtualbox/action/prepare_clone_snapshot.rb|templates/locales/en.yml|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action/match_mac_address.rb|plugins/providers/virtualbox/action.rb,16,0.012396694214876033,0,2,false,Clone another Vagrant environment This introduces configvmclone as a way to clone from another Vagrant environment (vs a box) This is useful in more complex Vagrant scenarios I dont expect this to be a commonly used feature For Vagrant 18 were going to consider this experimental and not document/advertise it,,1578,0.7370088719898605,0.03305785123966942,32015,569.2956426674997,48.03998125878495,83.14852412931438,9538,25,2086,111,travis,mitchellh,mitchellh,true,mitchellh,34,0.8823529411764706,3841,0,2780,true,true,false,false,122,168,58,8,127,1,7
9761433,mitchellh/vagrant,ruby,6377,1444325861,1444326734,1444326734,14,14,commits_in_master,false,false,true,54,3,2,1,1,0,2,0,1,3,0,1,5,3,0,0,3,0,2,5,3,0,0,92,51,94,51,17.564242735019842,0.29899633156761307,0,,plugins/commands/cap/command.rb|plugins/commands/cap/command.rb|plugins/commands/cap/plugin.rb|test/unit/plugins/commands/cap/command_test.rb,0,0.0,0,0,false,cap command This introduces a new hidden (non-primary) command: vagrant capThis can be used to execute and check for arbitrary capabilities of Vagrant the host the guest and the provider This can be used to fingerprint the environment from the outside This is an advanced feature that we dont intend to document publicly,,1577,0.7368421052631579,0.03463203463203463,31317,577.8331257783312,48.85525433470639,84.42698853657758,9537,25,2086,112,travis,mitchellh,mitchellh,true,mitchellh,33,0.8787878787878788,3841,0,2780,true,true,false,false,129,175,55,4,116,1,3
9752503,mitchellh/vagrant,ruby,6374,1444284310,1444326259,1444326259,699,699,commits_in_master,false,false,true,113,14,8,9,1,0,10,0,3,16,0,11,36,21,1,1,18,1,19,38,27,1,1,746,31,1039,129,151.08106005465896,2.5718548420891105,22,xmitchx@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/cli/snapshot.html.md|test/unit/vagrant/action/builtin/is_env_set_test.rb|plugins/commands/snapshot/command/delete.rb|plugins/commands/snapshot/command/list.rb|plugins/commands/snapshot/command/restore.rb|plugins/commands/snapshot/command/root.rb|plugins/commands/snapshot/command/save.rb|plugins/commands/snapshot/plugin.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/snapshot_delete.rb|plugins/providers/virtualbox/action/snapshot_save.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_5_0.rb|templates/locales/en.yml|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/snapshot_delete.rb|plugins/providers/virtualbox/action/snapshot_list.rb|plugins/providers/virtualbox/action/snapshot_restore.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_5_0.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/snapshot_restore.rb|plugins/providers/virtualbox/driver/version_5_0.rb|templates/locales/en.yml|plugins/providers/virtualbox/action/snapshot_list.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/version_5_0.rb|templates/locales/en.yml|lib/vagrant/action.rb|lib/vagrant/action/builtin/is_env_set.rb|plugins/commands/snapshot/command/pop.rb|plugins/commands/snapshot/command/push.rb|plugins/commands/snapshot/command/push_shared.rb|plugins/commands/snapshot/command/root.rb|plugins/providers/virtualbox/action.rb,11,0.0,0,0,false,Snapshot Support This adds support for vagrant snapshot as a top-level command See the docs that are in the PR for more info VirtualBox is the first provider to support this Prior to Vagrant 18 well also be sure that the VMware plugin supports itSnapshots use VM snapshotting capabilities to provide checkpoint/restore functionality We avoided putting this feature into Vagrant for awhile as it isnt compatible at all with Vagrant cloud providers However due to the rise of Terraform and us recommending Terraform as a better way to spin up cloud environments were now focusing Vagrant as a more local-focused tool and were not afraid to bring in features such as this,,1576,0.7366751269035533,0.035555555555555556,31317,577.8331257783312,48.85525433470639,84.42698853657758,9535,25,2086,112,travis,mitchellh,mitchellh,true,mitchellh,32,0.875,3841,0,2780,true,true,false,false,129,175,54,4,110,1,685
9750813,mitchellh/vagrant,ruby,6373,1444274714,1447899414,1447899414,60411,60411,commits_in_master,false,false,false,7,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,26,0,26,0,4.761640686913499,0.08105747108536628,1,manuel@manuel-poeter.at,plugins/providers/hyperv/scripts/import_vm.ps1,1,0.004524886877828055,0,0,false,hyper-v boot device by generation fixes #6372 ,,1575,0.7365079365079366,0.03619909502262444,31317,577.8331257783312,48.85525433470639,84.42698853657758,9534,25,2085,138,travis,caleblloyd,mitchellh,false,mitchellh,0,0,1,0,1108,false,false,false,false,0,0,0,0,0,0,23
9735492,mitchellh/vagrant,ruby,6369,1444225196,,1447898821,61227,,unknown,false,false,false,108,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,17,0,17,0,4.2174034834923,0.07179291412265065,2,xmitchx@gmail.com,plugins/commands/ssh_config/command.rb,2,0.008888888888888889,0,0,false,command/ssh-config: option to ignore unresponsive machines Add option --ignore-down to allow ignoring unresponsive machines whenoutputting the ssh config settingsCurrently the command will output the ssh-config information formachines until it reaches a machine with non available and will abortwith an expectionWith multi machine configs it is sometimes reasonable to have machinesdown where you wish to retrieve the ssh config information of thosestill running This changes allows you to retrieve the information in asingle run of ssh-config instead of needing to request the informationfor each machine individually which can be expensive depending on thenumber of machines and amount of configuration,,1574,0.7369758576874206,0.035555555555555556,31317,577.8331257783312,48.85525433470639,84.42698853657758,9533,25,2085,138,travis,electrofelix,mitchellh,false,,0,0,4,5,722,false,false,false,false,1,4,0,0,0,0,61227
9731379,mitchellh/vagrant,ruby,6367,1444202319,1447898526,1447898526,61603,61603,commits_in_master,false,false,false,31,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.724302850202802,0.14851392041483089,0,,plugins/hosts/slackware/cap/nfs.rb|plugins/hosts/slackware/host.rb,0,0.0,0,0,false,Fix Slackware Host detection and nfsd checks Slackwares version file is /etc/slackware-version not/etc/slackware-releasepidof is not on PATH by default (not running as root) so call it usingfull path,,1573,0.736808645899555,0.03347280334728033,31317,577.8331257783312,48.85525433470639,84.42698853657758,9533,25,2085,140,travis,knixeur,mitchellh,false,mitchellh,0,0,1,0,19,false,false,false,false,0,0,0,0,0,0,61603
9715465,mitchellh/vagrant,ruby,6365,1444144076,,1444150796,112,,unknown,false,false,false,23,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,4.010037722169164,0.06836685853992809,0,,plugins/pushes/ftp/adapter.rb,0,0.0,0,0,false,Update adapterrb https://githubcom/mitchellh/vagrant/issues/5570This change makes it possible to push from Windows to Linux and creates non-existing destination directories which it didnt do,,1572,0.7372773536895675,0.03007518796992481,31180,580.3720333547145,49.06991661321359,84.79794740218088,9525,25,2084,109,travis,ctammes,ctammes,true,,1,1.0,0,0,937,false,false,false,false,1,2,1,0,0,0,111
9715235,mitchellh/vagrant,ruby,6364,1444143792,1447898476,1447898476,62578,62578,commits_in_master,false,false,false,18,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.281682633544309,0.07299811403321305,0,,plugins/pushes/ftp/push.rb,0,0.0,0,0,false,Update pushrb https://githubcom/mitchellh/vagrant/issues/5570When uploading from Windows to Linux the Windows filepath was added to the Linux path,,1571,0.7371101209420751,0.03007518796992481,31180,580.3720333547145,49.06991661321359,84.79794740218088,9525,25,2084,141,travis,ctammes,sethvargo,false,sethvargo,0,0,0,0,937,false,false,false,false,1,2,0,0,0,0,-1
9666440,mitchellh/vagrant,ruby,6354,1443842677,,1443893333,844,,unknown,false,false,false,23,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.719743846044308,0.08046658964910239,6,sethvargo@gmail.com,vagrant.gemspec,6,0.022556390977443608,0,1,true,Bump to latest bundler The changelog for Bundler 1106 can be found here:https://githubcom/bundler/bundler/blob/c784ea3ade399fd487184493f7e8c0e340e7d6d7/CHANGELOGmdI could find no changes which would affect vagrant,,1570,0.7375796178343949,0.03007518796992481,31180,580.3720333547145,49.06991661321359,84.79794740218088,9498,25,2080,108,travis,iankronquist,sethvargo,false,,0,0,37,29,785,false,false,false,false,0,0,0,0,0,0,-1
10214296,mitchellh/vagrant,ruby,6348,1446466176,1447003592,1447003592,8956,8956,commits_in_master,false,true,true,270,1,1,0,6,1,7,0,1,0,0,6,6,6,0,0,0,0,6,6,6,0,0,71,85,71,85,27.740547574017704,0.4623447342368442,7,xmitchx@gmail.com,CHANGELOG.md|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md,6,0.008130081300813009,0,4,false,Absolutely force the Ansible remote (ssh) user to correspond to Vagrant ssh user  In continuation to #6210 and #5765 I plan to propose the following change (still thinking):* Introduction of a new boolean option force_remote_user:  * If any Vagrant 17{5}: by default set to false (for backwards compatibility reason)  * as of Vagrant 18+: by default set to true (to be friendly with a majority of use cases almost nobody should be affected)* Behaviours with a *generated inventory*:  * The ansible_ssh_user setting is added to the generated inventory when the above option is true  * The --user command line argument is passed when the above option is false* Behaviours with a *custom inventory*:  * The --extra-varsansible_ssh_user) command line argument is passed when the above option is true  * The --user command line argument is passed when the above option is false#### Positive Side Effects:* The vagrant auto-generated inventory could be then used as it is by external Ansible commands (no need to pass --user argument)* As pointed in #6346 the ansible parallel provisioning trick could then be applied with machines that dont have the same remote username#### The Tricky PartsThe Ansible precedence rules for the remote ssh user parameter are the following: 1 ansible_ssh_user in inventory file or as [extra variable](https://githubcom/sovereign/sovereign/blob/b77bcdbb0c7fa7e66d4e51e17ed88ede56614fee/Vagrantfile#L32) 1 **remote_user or user YAML attributes of an Ansible Play or an Ansible Task Attention:** People using these features might suffer when upgrading to Vagrant 18 1 -u / --user ansible-playbook command line argument 1 ANSIBLE_REMOTE_USER environment variable 1 remote_user parameter in an ansiblecfg file 1 username of the current user,,1603,0.735495945102932,0.10569105691056911,32153,568.5317077722141,47.95819985693404,83.07156408422232,9740,19,2111,133,travis,gildegoma,gildegoma,true,gildegoma,22,0.9545454545454546,50,127,1849,true,true,false,false,3,12,3,0,3,0,9
9639745,mitchellh/vagrant,ruby,6346,1443730933,,1443745171,237,,unknown,false,true,false,74,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.634879685834786,0.07914689466130352,6,konomae@users.noreply.github.com,plugins/provisioners/ansible/provisioner.rb,6,0.022813688212927757,0,1,false,provisioners/ansible: Put username in the inventory When running ansible provisioner on multiple VMs in parallel vagrantwould by default feed just one ssh username to ansible  Usually allmachines are provisioned using the same user but it is possible thatthey need different usernames  By putting username in inventory we cansupport this scenarioPS this is the first time I do anything in Ruby so please forgive me if I did something stupid,,1569,0.7380497131931166,0.030418250950570342,31032,581.9476669244651,49.17504511472029,85.07347254447023,9479,25,2079,109,travis,janek-warchol,gildegoma,false,,1,1.0,18,23,1348,false,false,false,false,0,0,0,0,0,0,237
9626344,mitchellh/vagrant,ruby,6342,1443670266,1443744352,1443744352,1234,1234,commits_in_master,false,false,true,21,8,2,6,0,0,6,0,2,1,0,5,14,5,1,0,2,0,13,15,14,1,0,140,12,344,46,35.234477421347776,0.6016767773792209,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_5_0.rb|lib/vagrant/util/network_ip.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_5_0.rb|templates/guests/debian/network_static6.erb|test/unit/vagrant/util/network_ip_test.rb,1,0.003875968992248062,0,0,false,IPv6 Host-Only Networks (VirtualBox) This adds support for IPv6 host-only networks We need this in [Otto](githubcom/hashicorp/otto)Example: configvmnetwork private_network ip: fde4:8dba:82e1::c4,,1568,0.7378826530612245,0.031007751937984496,31032,581.9476669244651,49.17504511472029,85.07347254447023,9476,25,2078,109,travis,mitchellh,mitchellh,true,mitchellh,31,0.8709677419354839,3839,0,2772,true,true,false,false,247,292,54,3,142,1,985
9563178,mitchellh/vagrant,ruby,6328,1443370776,,1443382322,192,,unknown,false,false,false,74,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.715330578570346,0.08052070342536044,6,sethvargo@gmail.com,vagrant.gemspec,6,0.023529411764705882,0,0,false,Update bundler version Bundler could not find compatible versions for gem bundler:  In Gemfile:    vagrant ( 0) x64-mingw32 depends on      bundler ( 1105  152) x64-mingw32  Current Bundler version:    bundler (1106)This Gemfile requires a different version of BundlerPerhaps you need to update Bundler by running gem install bundlerCould not find gem bundler ( 1105  152) x64-mingw32 which isrequired by gem vagrant ( 0) x64-mingw32 in any of the sources,,1567,0.7383535417996171,0.03137254901960784,31032,581.9476669244651,49.17504511472029,85.07347254447023,9448,25,2075,109,travis,Fudoshiki,Fudoshiki,true,,0,0,2,3,903,false,false,false,false,0,0,0,0,0,0,192
9544455,mitchellh/vagrant,ruby,6325,1443208528,,1447908091,78326,,unknown,false,false,false,22,2,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,8,0,4.295591628258885,0.07335308813923379,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,1,0.00392156862745098,0,0,true,Make DHCP IP configurable This makes it possible to have DHCP attribute IPs to guests under various subnets It should fix #6324,,1566,0.7388250319284803,0.03137254901960784,31032,581.9476669244651,49.17504511472029,85.07347254447023,9440,25,2073,113,travis,trivoallan,sethvargo,false,,1,0.0,31,25,2572,false,false,false,false,0,0,0,0,1,0,-1
9541295,mitchellh/vagrant,ruby,6322,1443197729,1447898463,1447898463,78345,78345,commits_in_master,false,false,false,8,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,19,0,19,0,4.558889915792947,0.07784926565418619,0,,website/docs/source/v2/provisioning/file.html.md,0,0.0,0,0,true,doc: mention directory in the file provisioner reference ,,1565,0.7386581469648562,0.031496062992125984,31032,581.9476669244651,49.17504511472029,85.07347254447023,9439,25,2073,143,travis,blueyed,mitchellh,false,mitchellh,0,0,77,55,2695,false,false,false,false,0,1,0,0,0,0,78345
9533903,mitchellh/vagrant,ruby,6318,1443149947,1447898425,1447898425,79141,79141,commits_in_master,false,false,false,40,6,6,0,1,0,1,0,1,2,0,4,6,4,2,0,2,0,4,6,4,2,0,38,0,38,0,27.488787326661004,0.4694085504656111,6,xmitchx@gmail.com,website/www/source/layouts/layout.erb|website/www/README.md|website/docs/Makefile|website/docs/README.md|website/docs/source/layouts/layout.erb|website/www/Makefile,6,0.007874015748031496,0,0,false,Add Edit this page links to www and docs websites Following [this pattern](https://githubcom/mitchellh/packer/pull/2396) this PR adds edit this page links to the footers of the Vagrant docs and www sites Note that it also adds Makefiles for each Middleman site,,1563,0.7389635316698656,0.031496062992125984,31032,581.9476669244651,49.17504511472029,85.07347254447023,9435,25,2072,143,travis,handlers,mitchellh,false,mitchellh,0,0,16,16,1862,true,false,false,false,0,0,0,0,4,0,79141
9520849,mitchellh/vagrant,ruby,6315,1443100911,1447891248,1447891248,79838,79838,commits_in_master,false,false,false,55,2,1,0,27,0,27,0,12,0,3,0,4,3,0,0,0,3,1,4,4,0,0,46,0,48,0,0,0.0,0,,plugins/guests/debian8/cap/halt.rb|plugins/guests/debian8/guest.rb|plugins/guests/debian8/plugin.rb,0,0.0,0,20,false,FIX: no shutdown exception for debian 8 needed The debian8 exception is not needed & not functioning:The shutdown -h -H command (on vagrant halt) doesnt work correctly and just forces vagrant to force-shutdown the VM in the endThe regular shutdown -h now works just fine and enabled vagrant to shutdown the machine gracefully,,1561,0.7392696989109545,0.032,31032,581.9476669244651,49.17504511472029,85.07347254447023,9432,24,2072,143,travis,bitprocessor,mitchellh,false,mitchellh,0,0,1,0,1611,false,false,false,false,0,0,0,0,0,0,4
9498765,mitchellh/vagrant,ruby,6309,1442995299,1447898013,1447898013,81711,81711,merged_in_comments,false,false,false,122,2,1,0,2,0,2,0,1,0,0,3,4,2,1,0,0,0,4,4,3,1,0,11,0,11,2,14.4390798406404,0.24656698956954398,3,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|plugins/communicators/winrm/shell.rb,2,0.004016064257028112,0,0,false,Ignore Powershell progress updates on stderr This is to fix #6308Starting with PowerShell 5 the progress bar can be observed via the Write-Progress cmdlet From WinRM this appears as a stderr output This is a cross platform [issue](https://connectmicrosoftcom/PowerShell/feedback/details/927384/progress-stream-being-sent-to-stderr-in-winrm-responses) as this is stream cant be distinguished by third party clients Vagrant assumes that there is an error if output appears on stderr ([code](https://githubcom/senglin/vagrant/blob/b721eb62cfbfa93895d0d4cf019436ab6b1df05d/plugins/communicators/winrm/communicatorrb#L158)) even when the return code is 0This terminates various scripts which previously executed successfully in Vagrant (prior to Windows 10)This fix injects a variable assignment at various points of the script execution process to disable display of the progress bar## References* The fix is similar to this [fix](https://githubcom/WinRb/winrm-fs/pull/19) in WinRM-FS* [PowerShell 5 Preference Variables](https://technetmicrosoftcom/en-us/library/hh847796aspx),,1560,0.7391025641025641,0.028112449799196786,31032,581.9476669244651,49.17504511472029,85.07347254447023,9419,24,2071,142,travis,senglin,mitchellh,false,mitchellh,0,0,0,1,891,false,false,false,false,0,0,0,0,1,0,81708
9498541,mitchellh/vagrant,ruby,6307,1442993503,1447897730,1447897730,81737,81737,commits_in_master,false,false,false,139,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,8.410858711315006,0.1436268886267019,0,,plugins/provisioners/chef/cap/windows/chef_installed.rb|plugins/provisioners/chef/cap/windows/chef_installed.rb,0,0.0,0,0,false,Fix/master/6306 chef windows capability Fix for https://githubcom/mitchellh/vagrant/issues/6306Using Vagrant Vagrant 174 running the chef_client provisioner on a Windows guest (OSX host) fails with the following exception:    /opt/vagrant/embedded/gems/gems/vagrant-174/plugins/provisioners/chef/cap/windows/chef_installedrb:11:in +: no implicit conversion of Symbol into String (TypeError)from /opt/vagrant/embedded/gems/gems/vagrant-174/plugins/provisioners/chef/cap/windows/chef_installedrb:11:in chef_installedfrom /opt/vagrant/embedded/gems/gems/vagrant-174/lib/vagrant/capability_hostrb:111:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-174/lib/vagrant/capability_hostrb:111:in capabilityfrom /opt/vagrant/embedded/gems/gems/vagrant-174/lib/vagrant/guestrb:43:in capabilityfrom /opt/vagrant/embedded/gems/gems/vagrant-174/plugins/provisioners/chef/installerrb:42:in should_install_cheffrom /opt/vagrant/embedded/gems/gems/vagrant-174/plugins/provisioners/chef/installerrb:23:in ensure_installed    By modifying the offending line to convert the version symbol to a string the command will always return false due to an extra double quote in the powershell Match statement     windows-test: Running provisioner: chef_client        windows-test: Installing Chef (1241)    Vagrant attempted to execute the capability chef_install    on the detect guest OS windows but the guest doesnt    support that capability This capability is required for your    configuration of Vagrant Please either reconfigure Vagrant to    avoid this capability or fix the issue by creating the capability,,1559,0.7389352148813342,0.028112449799196786,31032,581.9476669244651,49.17504511472029,85.07347254447023,9419,24,2071,142,travis,tbriggs-curse,mitchellh,false,mitchellh,0,0,1,0,57,false,false,false,false,0,0,0,0,0,0,81737
9498332,mitchellh/vagrant,ruby,6305,1442991605,1447897718,1447897718,81768,81768,commits_in_master,false,false,false,17,2,2,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,16,0,16,0,9.602856551244544,0.1639818781557154,0,,website/docs/source/v2/networking/public_network.html.md|website/docs/source/v2/networking/public_network.html.md,0,0.0,0,1,false,Add use_dhcp_assigned_default_route to website documentation Adds documentation to vagrant website for the use_dhcp_assigned_default_route networking optionResolves #6256,,1558,0.7387676508344031,0.028112449799196786,31032,581.9476669244651,49.17504511472029,85.07347254447023,9419,24,2071,142,travis,justinlynn,mitchellh,false,mitchellh,3,0.6666666666666666,23,3,2521,false,true,false,false,1,3,0,0,0,0,50
9485398,mitchellh/vagrant,ruby,6296,1442929030,1444852974,1444852974,32065,32065,commits_in_master,false,false,false,27,1,1,0,5,0,5,0,5,2,0,5,7,7,0,0,2,0,5,7,7,0,0,49,8,49,8,31.41614866831886,0.5364736040321709,0,,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_mac.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_mac.ps1|test/unit/plugins/providers/hyperv/config_test.rb|website/docs/source/v2/hyperv/configuration.html.md,0,0.0,0,3,false,Hyper-V set mac address Implements the ability for the Hyper-V provider to set VMs mac address from the vagrant file Same implementation as the set VLAN feature,,1556,0.7390745501285347,0.02459016393442623,31032,581.9476669244651,49.17504511472029,85.07347254447023,9415,23,2070,119,travis,tomfanning,sethvargo,false,sethvargo,0,0,1,0,1343,false,false,false,false,0,0,0,0,0,0,1340
9464699,mitchellh/vagrant,ruby,6288,1442745613,1447897042,1447897042,85857,85857,commits_in_master,false,false,false,25,1,1,0,1,0,1,0,1,1,0,6,7,7,0,0,1,0,6,7,7,0,0,76,0,76,0,29.61263370255409,0.5056976252124421,6,xmitchx@gmail.com,plugins/guests/redhat/cap/nfs_client.rb|plugins/guests/redhat/cap/rsync.rb|plugins/guests/redhat/plugin.rb|plugins/provisioners/cfengine/cap/redhat/cfengine_install.rb|plugins/provisioners/chef/cap/redhat/chef_install.rb|plugins/provisioners/docker/cap/fedora/docker_install.rb|plugins/provisioners/docker/plugin.rb,4,0.0,0,0,false,Use dnf on Fedora guests instead of yum if available Fixes #6286 now properly installs Docker on Fedora guestsFixes #6287 use dnf if available,,1555,0.7389067524115756,0.024691358024691357,31032,581.9476669244651,49.17504511472029,85.07347254447023,9392,23,2068,142,travis,rickard-von-essen,mitchellh,false,mitchellh,0,0,23,10,1713,false,true,false,false,0,1,0,0,0,0,85857
9452460,mitchellh/vagrant,ruby,6285,1442709875,1447908369,1447908369,86641,86641,merged_in_comments,false,false,false,219,1,1,0,4,0,4,0,3,0,0,10,10,8,2,0,0,0,10,10,8,2,0,25,16,25,16,43.97971403584701,0.7510455560571062,5,xmitchx@gmail.com,plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/provisioners/chef_solo/solo.erb|templates/provisioners/chef_zero/zero.erb|test/unit/plugins/provisioners/chef/config/chef_solo_test.rb|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|website/docs/source/v2/provisioning/chef_solo.html.md|website/docs/source/v2/provisioning/chef_zero.html.md,5,0.0,1,44,false,Restore nodes_path attribute for chef_solo and chef_zero provisioners This PR restores a working nodes_path attribute for both the chef_solo and chef_zero provisioners# WhyI have a multi-VM Vagrantfile which declare a set of VMs all provisioned by chef I want to use the chef search feature to provision my multiple VMs together with chef (for example I want to automatically configure a nginx load-balancer by searching all nodes for web services that I export in node attributes)For the chef search to work the node objects have to be persisted in a shared folder between chef-runs so that chef-zero can load those node objects and return the node data in searchWhen chef-zero provisioner was changed to use chef-client instead of chef solo (in #5339) the chef-zero provisioner became unusably slow (30+ minutes for me to synchronize the cookbooks see #6208) so I had to find something else When @sethvargo wrote that the original Chef Zero provisioner was actually just Chef solo I tried to use the chef-solo provisioner and found that it was broken regarding the nodes_path attributeHence this PR to restore the nodes_path attribute for both provisionerFor those who want to emulate the behavior of the vagrant  172 chef_zero provisioner simply use the chef_solo provisioner while specifying local_mode true in a custom_config_path override,,1554,0.7387387387387387,0.024691358024691357,31032,581.9476669244651,49.17504511472029,85.07347254447023,9391,23,2067,105,travis,jperville,sethvargo,false,sethvargo,1,1.0,6,1,1565,false,false,false,false,0,1,0,0,0,0,2
9426831,mitchellh/vagrant,ruby,6283,1442551473,,1447895879,89073,,unknown,false,false,false,65,6,1,0,3,0,3,0,2,3,0,0,4,3,0,0,3,0,1,4,3,0,0,134,0,138,0,13.50717192306581,0.23066319711513603,0,,plugins/auto_installer/config.rb|plugins/auto_installer/manifest_checker.rb|plugins/auto_installer/plugin.rb,0,0.0,0,0,false,First attempt at Vagrant Plugin Auto-Installer This is my first attempt at a contribution to Vagrant so please be kind This is to address the frequently reoccurring feature request here: https://githubcom/mitchellh/vagrant/issues/3468I am new to Ruby I have tested the new code embedded into a Vagrantfile but dont know how to do a build to test it from within core Please help All comments welcome,,1553,0.7392144236960722,0.024896265560165973,31032,581.9476669244651,49.17504511472029,85.07347254447023,9376,22,2065,142,travis,loren-osborn,mitchellh,false,,0,0,5,1,1081,true,false,false,false,0,0,0,0,1,0,3
9315006,mitchellh/vagrant,ruby,6260,1442075928,1442178133,1442178133,1703,1703,github,false,false,false,136,2,2,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,6,39,6,39,9.186231245843555,0.15699921973539474,0,,plugins/provisioners/shell/provisioner.rb|test/unit/plugins/provisioners/shell/provisioner_test.rb,0,0.0,0,0,false,Samphippen/bugfix/6065 The problem demonstrated in #6065 is that a string has incorrectly beenencoded with US-ASCII even though it contains invalid US-ASCII bytesequences (any byte with the most significant bit on is invalid in theUS-ASCII encoding)The thing about doing newline normalization is that it is not actuallysensitive to the presence of US-ASCII byte sequenzes Additionally itis very unlikely that a user will ever be using an encoding where \r\nis not encoded the same as it would be in ASCIIThis patch first tries the existing method of normalizing the newlinesin the provided script file if that fails for any reason it forceencodes the string to ASCII-8BIT (which allows the most significant bitto be on in any individual byte) and then performs the substitution inthat byte space,,1552,0.7390463917525774,0.025210084033613446,31028,580.9913626401959,49.14915560139229,85.05221090627819,9333,21,2060,97,travis,samphippen,mitchellh,false,mitchellh,2,0.5,122,3,2277,false,false,false,false,0,13,1,0,0,0,1703
9305890,mitchellh/vagrant,ruby,6259,1442009478,1447895735,1447895735,98104,98104,commits_in_master,false,false,false,30,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.122522817661057,0.07045684442213417,6,xmitchx@gmail.com,plugins/provisioners/puppet/provisioner/puppet.rb,6,0.025210084033613446,0,0,true,Fix verify_binary for Puppet for Windows guests Fixes a bug in the fix for https://githubcom/mitchellh/vagrant/issues/5943 whereby which is mistakenly used on Windows instead of where to locate the Puppet binary,,1551,0.7388781431334622,0.025210084033613446,31028,580.9913626401959,49.14915560139229,85.05221090627819,9333,21,2059,142,travis,philipwigg,mitchellh,false,mitchellh,0,0,1,7,1976,false,false,false,false,0,1,0,0,0,0,17
9295919,mitchellh/vagrant,ruby,6254,1441884877,1447895693,1447895693,100180,100180,commits_in_master,false,false,false,24,4,3,0,4,0,4,0,2,1,0,1,4,1,0,1,1,0,3,4,1,0,3,2,0,2,0,14.353172895208683,0.24530592415628344,0,,plugins/hosts/suse/cap/nfs.rb|contrib/sudoers/linux-suse|contrib/sudoers/linux-suse,0,0.0,0,1,false,Improved NFS configuration for SUSE Use the /sbin/service script for both status and start commandsAlso adds a SUSE variant of the contrib/sudoers script,,1550,0.7387096774193549,0.024896265560165973,31028,580.9913626401959,49.14915560139229,85.05221090627819,9323,22,2058,142,travis,krig,mitchellh,false,mitchellh,0,0,62,32,2546,true,false,false,false,0,0,0,0,1,0,10067
9279295,mitchellh/vagrant,ruby,6253,1441856920,,1447895669,100645,,unknown,false,false,false,28,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.4677759027787,0.07635746498393783,7,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,7,0.029166666666666667,0,0,false,Fix typo in Salt provisioner documentation Fixes #6227 A quick google search shows that superseded is more commonly used than superceded and vims spellchecker agrees (as does Chromes),,1549,0.7391865719819238,0.025,31028,580.9913626401959,49.14915560139229,85.05221090627819,9319,21,2057,142,travis,dharmab,mitchellh,false,,1,1.0,4,0,846,false,true,false,false,1,0,0,0,0,0,100645
9145570,mitchellh/vagrant,ruby,6249,1441741175,1441796800,1441796800,927,927,github,false,false,false,238,2,2,1,2,1,4,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,34,22,34,13.313648496896427,0.22754335103153187,0,,lib/vagrant/config/loader.rb|test/unit/vagrant/config/loader_test.rb|test/unit/vagrant/config/loader_test.rb,0,0.0,1,2,false,samphippen/bugfix/5605 Here we implement a naive solution to #5605 which catches the case thata provided source contains an object which cannot be inspected becausean object contained within in has an #inspect string that returns astring that is incompatible with the encoding inEncodingdefault_external or a string which cannot be downcast to7-bit asciiThe Ruby VM implementation of #inspect implements this checking onthese lines of code: http://gitio/vZYNS A Ruby level override ofthis method does not cause this problem For example:rubyclass Foo  def inspect    😍encode(UTF-16LE)  endwill not cause the problem because thats a Ruby implementation and theVMs checks dont occurHowever if we have an Object which **does** use the VM implementationof inspect that contains an object that has an inspect string whichreturns non-ascii we encounter the bug For example:rubyclass Bar  def inspect    😍encode(UTF-16LE)  endendclass Foo  def initialize     @bar  Barnew  endendFoonewinspectWill cause the issueThe solution this patch provides basically catches the encoding errorand inserts a string which attempts to help the user work out whichobject was provided without blowing up Most likely this was causedby a user having a weird encoding coming out of one of the sourcespassed in but without a full repro case its not clear whether a patchshould be applied to a different object in the systemCloses #5605,,1548,0.7390180878552972,0.02510460251046025,31020,580.36750483559,49.129593810444874,85.04190844616377,9313,21,2056,94,travis,samphippen,mitchellh,false,mitchellh,1,0.0,122,3,2273,false,false,false,false,0,9,0,0,0,0,890
9231754,mitchellh/vagrant,ruby,6237,1441532141,,1447895580,106057,,unknown,false,false,false,20,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,15,18,15,18,8.888150147887615,0.15190723035786988,0,,plugins/commands/global-status/command.rb|test/unit/plugins/commands/global-status/command_test.rb,0,0.0,0,0,false,Make global-status output JSON [GH-6236] Adds a --json flag to global-status to switch the commands output toJSONFixes #6236,,1546,0.7399741267787839,0.028688524590163935,31020,580.36750483559,49.129593810444874,85.04190844616377,9293,21,2054,143,travis,myrjola,mitchellh,false,,0,0,7,3,2478,false,false,false,false,1,0,0,0,0,0,106057
9197024,mitchellh/vagrant,ruby,6232,1441325377,1447895471,1447895471,109501,109501,commits_in_master,false,false,false,52,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,32,0,32,0,5.144411498867007,0.08792305368511269,1,xmitchx@gmail.com,plugins/synced_folders/smb/scripts/host_info.ps1,1,0.004016064257028112,0,0,false,Use a NET API call instead of a Win8+ cmdlet  Resolves Issue #6046  The root cause is that Windows 7 doesnt have Get-NetIPAddress (see: https://stackoverflowcom/questions/19529442/gather-ip-address-information)but the change was to try and solve the bug that the VPN IP addresses arent visible detailedhere: https://supportmicrosoftcom/en-us/kb/2549091Resolved using the 2nd solution from http://serverfaultcom/questions/145259/powershell-win32-networkadapterconfiguration-not-seeing-ppp-adapter,,1545,0.7398058252427184,0.028112449799196786,31020,580.36750483559,49.129593810444874,85.04190844616377,9282,22,2051,143,travis,mirthy,mitchellh,false,mitchellh,0,0,8,6,1426,false,false,false,false,0,0,0,0,0,0,109501
9181383,mitchellh/vagrant,ruby,6229,1441241242,1444690205,1444690205,57482,57482,commits_in_master,false,false,true,78,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,38,7,38,8.561260011898046,0.14632035633310056,3,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb|test/unit/plugins/communicators/winrm/communicator_test.rb,2,0.00796812749003984,0,0,false,communicators/winrm: respect boot_timeout when fetching winrm_info We gained a ton of improvemnts to WinRM error handling inhttps://githubcom/mitchellh/vagrant/pull/4943 but we also got one bugThe new code raises an exception when winrm_info does not return rightaway This was preventing us from catching the retry/timout logic thatsmeant to wait until boot_timeout for the WinRM communicator to be readyThis restores the proper behavior by rescuing the WinRMNotReadyexception and continuing to retry until the surrounding timeout fires,,1544,0.7396373056994818,0.027888446215139442,31020,580.36750483559,49.129593810444874,85.04190844616377,9278,22,2050,121,travis,phinze,mitchellh,false,mitchellh,12,1.0,282,42,2466,true,true,false,false,5,15,0,1,1,0,43199
10567118,mitchellh/vagrant,ruby,6219,1441065251,1447895410,1447895410,113835,113835,commits_in_master,false,false,false,42,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,4.065612593848962,0.06948531905555745,3,xmitchx@gmail.com,plugins/guests/ubuntu/cap/change_host_name.rb,3,0.01048951048951049,0,0,false,Better Ubuntu systemd detection Check the running process at PID 1 to determine which init system is currently in useResolves Wily issue mentioned in #5673 Also fixes problems provisioning Vivid systems where the images init system has been set to Upstart,,1543,0.7394685677252106,0.024475524475524476,31020,580.36750483559,49.129593810444874,85.04190844616377,9255,22,2048,143,travis,jgoldschrafe,mitchellh,false,mitchellh,0,0,17,0,2111,false,false,false,false,0,1,0,0,0,0,113835
9989226,mitchellh/vagrant,ruby,6213,1440994375,1447894860,1447894860,115008,115008,commits_in_master,false,false,false,30,3,2,0,3,0,3,0,3,0,0,5,5,4,1,0,0,0,5,5,4,1,0,9,3,10,3,23.102835377887942,0.3948501856151524,5,xmitchx@gmail.com,test/unit/plugins/communicators/winrm/communicator_test.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|plugins/communicators/winrm/shell.rb,2,0.006309148264984227,0,0,false,Winrm execution timeout Please see mitchellh/vagrant#5506Adds a configurable value for WinRm and the elevated permission shell ExecutionTimeLimitEx: configwinrmexecution_time_limit  P1DUnit tests are passing please consider for merge,,1542,0.7392996108949417,0.022082018927444796,31020,580.36750483559,49.129593810444874,85.04190844616377,9255,22,2047,144,travis,jrob,mitchellh,false,mitchellh,1,0.0,1,1,1661,true,false,false,false,1,0,2,0,1,0,74171
9145087,mitchellh/vagrant,ruby,6212,1440988996,1441040004,1441040004,850,850,github,false,false,false,6,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.2765714727120665,0.0730908439706551,0,,website/docs/source/v2/networking/forwarded_ports.html.md,0,0.0,0,0,false,fix typo adjust wording for clarity ,,1541,0.7391304347826086,0.022082018927444796,31020,580.36750483559,49.129593810444874,85.04190844616377,9255,22,2047,92,travis,modernlegend,sethvargo,false,sethvargo,0,0,12,24,1018,false,false,false,false,0,0,0,0,1,0,-1
9141357,mitchellh/vagrant,ruby,6211,1440966421,,1440993559,452,,unknown,false,false,false,45,1,1,0,0,0,0,0,0,0,0,3,3,2,1,0,0,0,3,3,2,1,0,7,0,7,0,14.038547026440142,0.23993267897695794,2,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb,2,0.005434782608695652,0,0,false,Added execution_time_limit for WinRM This pull request adds a configurable value for winrm and the elevated permission shell max execution time Please see mitchellh/vagrant#5506I have tested with my the machine that I have been running but I have not ran the suite of tests,,1540,0.7396103896103896,0.019021739130434784,31020,580.36750483559,49.129593810444874,85.04190844616377,9254,22,2047,91,travis,jrob,jrob,true,,0,0,1,1,1661,true,false,false,false,1,0,0,0,1,0,-1
9136986,mitchellh/vagrant,ruby,6210,1440852866,,1441620483,12793,,unknown,false,false,false,148,1,1,0,7,0,7,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,2,2,2,9.438282492323369,0.16130964901534395,12,tim.oguin@juiceanalytics.com,plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,10,0.0273972602739726,0,7,false,Add ssh-user to ansible inventory The configured ssh user is not added to ansibles inventory file causing connection errors late oneWhile vagrant connects as vagrant ansible connects as the current oneExample:GNS-3node-2 ansible_ssh_host127001 ansible_ssh_port2207 ansible_ssh_private_key_file/home/jan/vagrant/vagrant/machines/GNS-3node-2/virtualbox/private_key Error: ansible -vvv -i inventory GNS-3node-2 -m ping127001 ESTABLISH CONNECTION FOR USER: jan127001 REMOTE_MODULE ping127001 EXEC [ssh -C -tt -q -o ControlMasterauto -o ControlPersist60s -o ControlPath/home/jan/ansible/cp/ansible-ssh-%h-%p-%r -o Port2207 -o IdentityFile/home/jan/vagrant/vagrant/machines/GNS-3node-2/virtualbox/private_key -o KbdInteractiveAuthenticationno -o PreferredAuthenticationsgssapi-with-micgssapi-keyexhostbasedpublickey -o PasswordAuthenticationno -o ConnectTimeout10 127001 /bin/sh -c mkdir -p $HOME/ansible/tmp/ansible-tmp-144084201153-32279685471205 && chmod a+rx $HOME/ansible/tmp/ansible-tmp-144084201153-32279685471205 && echo $HOME/ansible/tmp/ansible-tmp-144084201153-32279685471205]GNS-3node-2 | FAILED  SSH encountered an unknown error during the connection We recommend you re-run the command using -vvvv which will enable SSH debugging output to help diagnose the issueThis patches changes the way the inventory is generated by adding the configured userExample:GNS-3node-2 ansible_ssh_host127001 ansible_ssh_port2207 ansible_ssh_private_key_file/home/jan/vagrant/vagrant/machines/GNS-3node-2/virtualbox/private_key ansible_ssh_uservagrant,,1539,0.7400909681611436,0.019178082191780823,31020,580.36750483559,49.129593810444874,85.04190844616377,9248,21,2046,95,travis,yanosz,yanosz,true,,0,0,8,2,1871,false,false,false,false,0,0,0,0,0,0,174
9128597,mitchellh/vagrant,ruby,6209,1440851016,1440861228,1440861228,170,170,github,false,false,false,98,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,2,2,2,9.443567514412498,0.16139997530711675,12,tim.oguin@juiceanalytics.com,plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,10,0.0273972602739726,0,1,false,Fix invalid ini entry error when ansible_ssh_private_key_file contains spaces This patch fixes Invalid ini entry error when ansible_ssh_private_key_file contains spaces in generated inventory fileThe error:bash$ pwd/Users/konomae/Dropbox (Personal)/test$ cat Vagrantfile  Vagrantconfigure(2) do |config|  configvmbox  hashicorp/precise64  configvmprovision :ansible do |ansible|    ansibleplaybook  siteyml  endend$ cat siteyml ---# empty$ vagrant provision  default: Running provisioner: ansibleERROR: /Users/konomae/Dropbox (Personal)/test/vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory:3: Invalid ini entry: (Personal)/test/vagrant/machines/default/virtualbox/private_key - need more than 1 value to unpackAnsible failed to complete successfully Any error output should bevisible above Please fix these errors and try again,,1538,0.7399219765929779,0.019178082191780823,31020,580.36750483559,49.129593810444874,85.04190844616377,9248,21,2046,90,travis,konomae,gildegoma,false,gildegoma,0,0,8,4,1151,true,false,false,false,0,0,0,0,2,0,-1
9100917,mitchellh/vagrant,ruby,6203,1440719840,1447894524,1447894524,119578,119578,commits_in_master,false,false,false,23,1,1,0,4,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.636031512101464,0.07923439636919268,0,,plugins/guests/fedora/cap/change_host_name.rb,0,0.0,0,6,false,Fix Fedora /etc/hosts bug Update so that localhost entries dont get deleted when the hostnamegets added to the 127001 line Closes #6202,,1536,0.740234375,0.01891891891891892,31020,580.36750483559,49.129593810444874,85.04190844616377,9241,20,2044,142,travis,dustymabe,mitchellh,false,mitchellh,0,0,5,0,824,false,false,false,false,1,0,0,0,0,0,26955
9048403,mitchellh/vagrant,ruby,6195,1440551788,1447894345,1447894345,122375,122375,commits_in_master,false,false,false,44,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.163669772858771,0.08825225981193817,3,xmitchx@gmail.com,plugins/communicators/winrm/scripts/elevated_shell.ps1.erb,3,0.008086253369272238,0,0,false,Check if ScheduleService com object is available ScheduleService is not available for eg Windows XP This PR catches that case and simply executes the script immediately since Windows XP does not require elevationI have tested the script in Windows XP Vista and 81,,1535,0.7400651465798046,0.018867924528301886,31020,580.36750483559,49.129593810444874,85.04190844616377,9221,20,2042,142,travis,ArloL,mitchellh,false,mitchellh,0,0,7,0,2029,false,false,false,false,0,0,0,0,0,0,122375
9044320,mitchellh/vagrant,ruby,6193,1440537602,1442781969,1442781969,37406,37406,commits_in_master,false,false,true,5,2,2,1,1,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,140,0,140,0,20.871749880199282,0.35671899524615774,1,mitchell.hashimoto@gmail.com,scripts/website_push_docs.sh|scripts/website_push_www.sh|scripts/website_push_docs.sh|scripts/website_push_www.sh,1,0.0026954177897574125,2,0,false,Faster deploys /cc @mitchellh @phinze ,,1534,0.7398956975228161,0.018867924528301886,31020,580.36750483559,49.129593810444874,85.04190844616377,9220,20,2042,100,travis,sethvargo,sethvargo,true,sethvargo,60,0.9,501,65,1800,true,false,false,false,450,480,133,52,189,1,4594
9042759,mitchellh/vagrant,ruby,6192,1440531721,1440531760,1440531760,0,0,github,false,false,true,3,1,1,0,1,0,1,0,1,0,0,2,2,1,1,0,0,0,2,2,1,1,0,2,0,2,0,9.41164305420981,0.16085431519712315,0,,website/docs/source/v2/vmware/installation.html.md|website/www/source/vmware/index.html.erb,0,0.0,0,0,false,Bump VMware information ,,1533,0.7397260273972602,0.019021739130434784,31020,580.36750483559,49.129593810444874,85.04190844616377,9220,20,2042,85,travis,sethvargo,sethvargo,true,sethvargo,59,0.8983050847457628,501,65,1800,true,false,false,false,450,480,130,52,186,1,0
9040726,mitchellh/vagrant,ruby,6190,1440524601,1440525110,1440525110,8,8,github,false,false,false,27,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.4823465005674,0.0766076387944386,2,tim.oguin@juiceanalytics.com,website/docs/source/v2/cli/destroy.html.md,2,0.005479452054794521,0,0,false,Fixed link in destroy command documentation The alert box within destroy command documentation contains markdown-style linkThe link should be written in raw HTML within alert box,,1532,0.7395561357702349,0.019178082191780823,31020,580.36750483559,49.129593810444874,85.04190844616377,9220,19,2042,85,travis,gajdaw,sethvargo,false,sethvargo,1,1.0,86,4,1621,false,true,false,false,0,0,0,0,0,0,-1
9031045,mitchellh/vagrant,ruby,6185,1440459606,1447893999,1447893999,123906,123906,commits_in_master,false,false,false,11,6,3,0,2,0,2,0,3,0,0,7,9,5,1,1,0,0,9,9,7,1,1,125,0,129,22,62.71444257292022,1.0718505058037497,30,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|plugins/communicators/winrm/shell.rb|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|templates/locales/en.yml|website/docs/source/v2/provisioning/shell.html.md|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|plugins/communicators/winrm/shell.rb|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|templates/locales/en.yml|website/docs/source/v2/provisioning/shell.html.md,24,0.00821917808219178,0,4,false,Elevated interactive Add option to allow interactive elevated scripts in Windows,,1531,0.7393860222077073,0.019178082191780823,31020,580.36750483559,49.129593810444874,85.04190844616377,9214,19,2041,142,travis,marc-ta,mitchellh,false,mitchellh,0,0,1,0,593,false,false,false,false,0,0,0,0,1,0,65030
9022907,mitchellh/vagrant,ruby,6182,1440426082,1440467852,1440467852,696,696,commits_in_master,false,false,false,1,250,250,0,2,9,11,7,2,1,3,153,157,139,8,4,1,3,153,157,139,8,4,2229,327,2229,327,1380.1691708710812,24.58470836213062,0,,test/unit/plugins/guests/linux/cap/mount_shared_folder_test.rb|CHANGELOG.md|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/guests/fedora/cap/nfs_client.rb|plugins/guests/fedora/plugin.rb|plugins/guests/redhat/cap/nfs_client.rb|plugins/guests/redhat/plugin.rb|plugins/guests/fedora/cap/configure_networks.rb|lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/kernel_v2/config/ssh.rb|CHANGELOG.md|plugins/providers/docker/action/pull.rb|plugins/providers/docker/config.rb|website/docs/source/v2/docker/configuration.html.md|CHANGELOG.md|plugins/hosts/linux/cap/nfs.rb|plugins/provisioners/salt/provisioner.rb|CHANGELOG.md|website/docs/source/v2/boxes/versioning.html.md|contrib/bash/completion.sh|test/unit/templates/guests/debian/network_dhcp_test.rb|plugins/providers/virtualbox/provider.rb|templates/locales/en.yml|lib/vagrant/errors.rb|plugins/providers/virtualbox/provider.rb|templates/locales/en.yml|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|CHANGELOG.md|plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md|CHANGELOG.md|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_5_0.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/shared_helpers.rb|test/unit/support/shared/base_context.rb|plugins/guests/ubuntu/cap/change_host_name.rb|plugins/hosts/linux/cap/nfs.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|test/unit/plugins/communicators/winrm/communicator_test.rb|website/docs/source/v2/networking/private_network.html.md|templates/locales/en.yml|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|plugins/provisioners/salt/provisioner.rb|lib/vagrant/util/io.rb|website/docs/source/v2/cli/ssh.html.md|CHANGELOG.md|plugins/provisioners/file/config.rb|test/unit/plugins/provisioners/file/config_test.rb|plugins/synced_folders/rsync/command/rsync_auto.rb|vagrant.gemspec|CHANGELOG.md|website/docs/source/v2/other/environmental-variables.html.md|lib/vagrant/util/subprocess.rb|lib/vagrant.rb|test/unit/vagrant_test.rb|CHANGELOG.md|plugins/communicators/ssh/communicator.rb|plugins/kernel_v2/config/ssh.rb|test/unit/plugins/kernel_v2/config/ssh_test.rb|website/docs/source/v2/vagrantfile/ssh_settings.html.md|CHANGELOG.md|lib/vagrant/util/subprocess.rb|plugins/provisioners/chef/provisioner/chef_client.rb|lib/vagrant/util/subprocess.rb|lib/vagrant/util/subprocess.rb|lib/vagrant/util/env.rb|lib/vagrant/util/subprocess.rb|website/docs/source/v2/other/environmental-variables.html.md|test/unit/plugins/providers/docker/config_test.rb|test/unit/plugins/providers/virtualbox/action/network_test.rb|CHANGELOG.md|plugins/providers/docker/action.rb|CHANGELOG.md|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/chef/provisioner/base.rb|test/unit/plugins/provisioners/chef/config/base_runner_test.rb|test/unit/plugins/provisioners/chef/config/chef_client_test.rb|plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|CHANGELOG.md|tasks/test.rake|.travis.yml|.travis.yml|plugins/provisioners/chef/command_builder.rb|vagrant.gemspec|website/docs/source/v2/provisioning/ansible.html.md|plugins/provisioners/docker/client.rb|plugins/provisioners/docker/client.rb|templates/locales/en.yml|website/docs/source/v2/virtualbox/index.html.md|CHANGELOG.md|plugins/guests/linux/cap/read_ip_address.rb|lib/vagrant/action/builtin/ssh_run.rb|version.txt|test/unit/plugins/provisioners/chef/command_builder_test.rb|plugins/provisioners/chef/command_builder.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/locales/en.yml|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md|templates/locales/en.yml|CHANGELOG.md|CHANGELOG.md|plugins/provisioners/docker/cap/debian/docker_configure_auto_start.rb|plugins/provisioners/docker/cap/redhat/docker_configure_auto_start.rb|plugins/provisioners/docker/client.rb|plugins/provisioners/docker/config.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/plugin.rb|test/unit/plugins/provisioners/docker/config_test.rb|website/docs/source/v2/provisioning/docker.html.md|version.txt|website/docs/source/layouts/layout.erb|website/www/source/layouts/layout.erb|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/config.rb|lib/vagrant/action/builtin/box_add.rb|plugins/guests/fedora/cap/configure_networks.rb|plugins/guests/redhat/cap/nfs_client.rb|website/docs/source/v2/synced-folders/nfs.html.md|CHANGELOG.md|website/docs/Gemfile|website/docs/Gemfile.lock|website/docs/config.ru|website/www/Gemfile|website/www/Gemfile.lock|website/www/config.ru|CHANGELOG.md|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/communicators/ssh/communicator.rb|plugins/providers/docker/hostmachine/Vagrantfile|plugins/guests/tinycore/cap/rsync.rb|website/docs/source/v2/cli/plugin.html.md|website/docs/source/v2/synced-folders/basic_usage.html.md|website/docs/source/v2/virtualbox/networking.html.md|plugins/communicators/winrm/shell.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/commands/rdp/command.rb|plugins/commands/rdp/config.rb|website/docs/source/v2/hyperv/boxes.html.md|website/docs/source/v2/getting-started/share.html.md|website/docs/source/v2/synced-folders/nfs.html.md|website/docs/source/v2/provisioning/docker.html.md|website/docs/source/v2/virtualbox/common-issues.html.md|website/docs/source/v2/provisioning/basic_usage.html.md|website/docs/source/v2/vagrantfile/machine_settings.html.md|website/docs/source/v2/networking/private_network.html.md|plugins/pushes/local-exec/push.rb|plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|plugins/provisioners/salt/config.rb|CHANGELOG.md|version.txt|website/www/version.txt|website/docs/source/v2/provisioning/salt.html.md|plugins/guests/tinycore/cap/rsync.rb|CHANGELOG.md|Vagrantfile|plugins/providers/docker/action.rb|plugins/providers/docker/action/pull.rb|plugins/providers/docker/driver.rb|templates/locales/providers_docker.yml|test/unit/plugins/providers/docker/driver_test.rb|plugins/providers/docker/action/pull.rb|Vagrantfile|plugins/providers/docker/action.rb|plugins/providers/docker/errors.rb|templates/locales/providers_docker.yml|plugins/providers/docker/config.rb|templates/locales/providers_docker.yml|test/unit/plugins/providers/docker/config_test.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|CHANGELOG.md|plugins/providers/docker/errors.rb|plugins/providers/docker/provider.rb|templates/locales/providers_docker.yml|lib/vagrant/action/builtin/synced_folders.rb|plugins/providers/docker/action/host_machine_sync_folders.rb|CHANGELOG.md|plugins/providers/docker/action/build.rb|plugins/providers/docker/config.rb|CHANGELOG.md|website/docs/source/v2/docker/configuration.html.md|plugins/providers/docker/action.rb|plugins/kernel_v2/config/vm.rb|CHANGELOG.md|lib/vagrant/errors.rb|plugins/providers/virtualbox/driver/base.rb|templates/locales/en.yml|CHANGELOG.md|plugins/guests/openbsd/cap/insert_public_key.rb|CHANGELOG.md|plugins/guests/linux/cap/shell_expand_guest_path.rb|plugins/provisioners/chef/provisioner/base.rb|CHANGELOG.md|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/plugin/v2/command_test.rb|vagrant.gemspec|templates/locales/en.yml|plugins/pushes/atlas/config.rb|test/unit/plugins/pushes/atlas/config_test.rb|CHANGELOG.md|plugins/providers/virtualbox/action/network.rb|website/docs/source/v2/synced-folders/nfs.html.md|website/docs/source/v2/synced-folders/smb.html.md|plugins/synced_folders/rsync/helper.rb|website/docs/source/v2/synced-folders/rsync.html.md|CHANGELOG.md|plugins/synced_folders/nfs/config.rb|plugins/synced_folders/nfs/synced_folder.rb|website/docs/source/v2/synced-folders/nfs.html.md|plugins/synced_folders/rsync/command/rsync.rb|website/docs/source/v2/cli/rsync.html.md|plugins/synced_folders/rsync/command/rsync_auto.rb|templates/locales/en.yml|CHANGELOG.md|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|plugins/providers/docker/action.rb|CHANGELOG.md|lib/vagrant/util/ssh.rb|bin/vagrant|lib/vagrant.rb|CHANGELOG.md|CHANGELOG.md|version.txt|lib/vagrant/util/subprocess.rb|version.txt|website/docs/Gemfile|website/www/Gemfile|scripts/website_push_docs.sh|scripts/website_push_www.sh|website/www/helpers/download_helpers.rb|website/www/version.txt|website/www/helpers/download_helpers.rb|CHANGELOG.md|website/docs/source/layouts/layout.erb|website/www/source/layouts/layout.erb|plugins/provisioners/cfengine/config.rb|lib/vagrant/util/downloader.rb|CHANGELOG.md|plugins/provisioners/puppet/provisioner/puppet.rb|CHANGELOG.md|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/vagrantfile/machine_settings.html.md|website/docs/source/layouts/layout.erb|website/docs/source/v2/boxes/base.html.md|website/www/README.md|website/www/lib/legacy_redirect.rb|website/www/source/_sidebar_blog.erb|website/www/source/blog/2013-09-19-introducing-the-vagrant-blog.html.markdown|website/www/source/blog/2013-12-09-vagrant-1-4.html.markdown|website/www/source/blog/2014-01-20-stability-and-upgrades.html.markdown|website/www/source/blog/2014-03-10-vagrant-1-5-and-vagrant-cloud.html.md|website/www/source/blog/2014-05-06-vagrant-1-6.html.md|website/www/source/blog_feed.xml.builder|website/www/source/download-archive-single.html.erb|website/www/source/downloads-archive.html.erb|website/www/source/downloads.html.erb|website/www/source/index.html.erb|website/www/source/layouts/layout.erb|vagrant.gemspec|website/docs/source/v2/boxes/base.html.md|templates/locales/en.yml|plugins/kernel_v2/config/vm.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/guests/solaris11/config.rb|lib/vagrant/util/subprocess.rb|CHANGELOG.md|lib/vagrant/util/keypair.rb|plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|CHANGELOG.md|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/util/downloader.rb|test/unit/vagrant/util/downloader_test.rb,0,0.0,0,3,false,bjk ,,1530,0.7392156862745098,0.019178082191780823,29288,579.0767549849768,49.37175635072385,86.41764545206227,9210,19,2041,85,travis,hubub,hubub,true,hubub,0,0,1,2,987,false,false,false,false,0,0,0,0,0,0,303
9008747,mitchellh/vagrant,ruby,6176,1440244164,,1440267705,392,,unknown,false,false,false,33,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.719743846044308,0.08066498913331833,11,tim.oguin@juiceanalytics.com,vagrant.gemspec,11,0.030136986301369864,0,1,false,Update to bundler 1106 which fixes parallel gem installations Parallel installation with (eg bundle install --jobsn) got broken with earlier 110x versionsThis was fixed again in 1106 see bundler/bundler#3799See also chef/omnibus-chef#464,,1529,0.7396991497710922,0.019178082191780823,31020,580.36750483559,49.129593810444874,85.04190844616377,9195,19,2039,84,travis,tknerr,sethvargo,false,,4,0.5,25,5,1832,false,true,false,false,0,4,0,0,0,0,392
9006396,mitchellh/vagrant,ruby,6173,1440161743,,1441142194,16340,,unknown,false,false,false,31,1,1,0,2,0,2,0,2,2,0,1,3,3,0,0,2,0,1,3,3,0,0,50,0,50,0,13.076980210583239,0.22349824503026922,2,tim.oguin@juiceanalytics.com,plugins/provisioners/chef/cap/pld/chef_install.rb|plugins/provisioners/chef/cap/pld/chef_installed.rb|plugins/provisioners/chef/plugin.rb,2,0.0,0,5,true,add better chef integration for pld pld packages chef as chef os package update installation and pathhowever it packages knife tool as separate packageso check for chef-client not knife,,1528,0.7401832460732984,0.019230769230769232,31020,580.36750483559,49.129593810444874,85.04190844616377,9182,18,2038,91,travis,glensc,glensc,true,,7,1.0,39,6,2021,false,false,false,false,0,0,1,0,0,0,274
9006362,mitchellh/vagrant,ruby,6172,1440161455,1447891734,1447891734,128837,128837,commits_in_master,false,false,false,18,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,16,0,16,0,8.25083961732471,0.14101483253801186,0,,plugins/guests/pld/cap/flavor.rb|plugins/guests/pld/plugin.rb,0,0.0,0,0,true,fix network detection on pld-linux pld linux uses redhat as base but lacks :flavourthis will add it,,1527,0.7400130975769482,0.019230769230769232,31020,580.36750483559,49.129593810444874,85.04190844616377,9182,18,2038,140,travis,glensc,mitchellh,false,mitchellh,6,1.0,39,6,2021,false,false,false,false,0,0,0,0,0,0,128837
8969349,mitchellh/vagrant,ruby,6166,1440019392,1446869307,1446869307,114165,114165,commits_in_master,false,false,false,12,2,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,11,0,5.019514656505567,0.08578836234108468,4,sethvargo@gmail.com,website/docs/source/v2/other/environmental-variables.html.md,4,0.010958904109589041,0,1,false,Change docs for checkpoint environment variable Now reflects the not-vagrant-specific version CHECKPOINT_DISABLE,,1526,0.7398427260812582,0.019178082191780823,31020,580.36750483559,49.129593810444874,85.04190844616377,9175,18,2036,136,travis,cbednarski,sethvargo,false,sethvargo,0,0,49,31,1630,false,false,false,false,0,1,0,0,0,0,4
8965116,mitchellh/vagrant,ruby,6164,1440003087,1440003542,1440003542,7,7,github,false,false,false,17,1,1,0,0,0,0,0,2,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.245653390912043,0.07256232498419074,22,xmitchx@gmail.com,templates/locales/en.yml,22,0.06043956043956044,0,0,false,Fix typo - This was referring to the current projects Vagrantfile so projects  needed a possessive apostrophe,,1525,0.7396721311475409,0.019230769230769232,31020,580.36750483559,49.129593810444874,85.04190844616377,9174,18,2036,81,travis,issyl0,sethvargo,false,sethvargo,0,0,20,4,1840,true,false,false,false,0,0,0,0,1,0,-1
8952691,mitchellh/vagrant,ruby,6160,1439927814,1447891810,1447891810,132733,132733,commits_in_master,false,false,false,165,1,1,0,7,0,7,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,19,0,19,0,13.32734046818915,0.22777714551492279,3,tim.oguin@juiceanalytics.com,plugins/guests/windows/cap/rsync.rb|plugins/guests/windows/plugin.rb|plugins/synced_folders/rsync/helper.rb,3,0.0,0,2,false,Scrub Guest Paths for Windows Rsync leaving Dirty Paths for Winrm Mkdir Windows offers no out-of-the-box rsync utility By far the mostcommonly used external utilities for Windows rsync are built with theGNU Cygwin libraries The cost for this convenience is that rsync onWindows has to be provided paths that begin “/cygdrive/c” rather than“c:/“ like other Windows-API utilities Compounding the situationrsync doesn’t create paths/to/sub/targets and so the vagrant plugincode when performing an rsync is responsible for creatingintermediate directories in guest paths if there are any Furthermorethe mkdir utility in Windows is not another Cygwin utility like rsyncbut the routine mkdir of Windows commandcom Therefore while rsyncneeds the /cygwin paths mkdir uses the Windows paths Later thechef_solorp provisioner running within the guest will expect to findWindows-style paths in its solorb configuration file Due to all thisvagrant has to keep track of both the original possibly dirty Windowsguest path and the cygwin-scrubbed guest path,,1524,0.739501312335958,0.019230769230769232,31020,580.36750483559,49.129593810444874,85.04190844616377,9166,18,2035,138,travis,lonniev,mitchellh,false,mitchellh,0,0,0,1,1091,false,false,false,false,4,24,0,0,0,0,3138
8932343,mitchellh/vagrant,ruby,6157,1439836492,1447891573,1447891573,134251,134251,commits_in_master,false,false,false,65,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.7732257601367065,0.08157914827714746,8,xmitchx@gmail.com,website/www/source/layouts/layout.erb,8,0.022099447513812154,0,0,false,website/www: Add Atlas box search to nav I think that there should be a prominent link to box discovery on the Vagrant home pageA few times Ive Googled vagrant ended up here and didnt know how to get to a box search page without doing another Google searchHowever a better solution may be to add a section with Discover Vagrant Boxes on Atlas,,1523,0.7393302692055155,0.019337016574585635,31020,580.36750483559,49.129593810444874,85.04190844616377,9160,17,2034,141,travis,JustinCampbell,mitchellh,false,mitchellh,5,0.8,164,290,1946,false,true,true,false,0,0,2,0,0,0,214
8932030,mitchellh/vagrant,ruby,6156,1439835803,1447891562,1447891562,134262,134262,commits_in_master,false,false,false,8,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.663970746495184,0.07971187205645844,8,xmitchx@gmail.com,website/www/source/layouts/layout.erb,8,0.022099447513812154,0,0,false,website/www: Fix logos/copyright alignment Before:[](http://clly/image/2g2h0v1Z371r/Screen%20Shot%202015-08-17%20at%20112248%20AMpng)After:[](http://clly/image/0s1e2a272o2q/Screen%20Shot%202015-08-17%20at%20112131%20AMpng),,1522,0.7391590013140604,0.019337016574585635,31020,580.36750483559,49.129593810444874,85.04190844616377,9160,17,2034,141,travis,JustinCampbell,mitchellh,false,mitchellh,4,0.75,164,290,1946,false,true,true,false,0,0,1,0,0,0,225
8931881,mitchellh/vagrant,ruby,6155,1439835330,1439841522,1439841522,103,103,github,false,false,false,10,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.843035780116895,0.08277227055071688,2,sethvargo@gmail.com,website/docs/source/v2/boxes/base.html.md,2,0.0055248618784530384,1,0,false,website/docs: Link to Atlas docs for base boxes /cc @pearkes,,1521,0.7389875082182774,0.019337016574585635,31020,580.36750483559,49.129593810444874,85.04190844616377,9160,17,2034,81,travis,JustinCampbell,pearkes,false,pearkes,3,0.6666666666666666,164,290,1946,false,true,false,false,0,0,0,0,0,0,15
8908668,mitchellh/vagrant,ruby,6150,1439646786,1447891493,1447891493,137411,137411,commits_in_master,false,false,false,40,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.138972675871679,0.070739135881628,11,tim.oguin@juiceanalytics.com,plugins/kernel_v2/config/vm.rb,11,0.03021978021978022,0,1,false,Dont warn about an 1 IP for DHCP networks When the networks type is :dhcp the :ip option is used to derive the DHCP server configuration and it doesnt actually indicate the IP that will be received by the VM(s),,1520,0.7388157894736842,0.02197802197802198,31020,580.36750483559,49.129593810444874,85.04190844616377,9144,16,2032,140,travis,pwnall,mitchellh,false,mitchellh,1,1.0,333,52,2638,false,false,true,false,0,0,1,0,0,0,137411
8908471,mitchellh/vagrant,ruby,6149,1439644808,1447891411,1447891411,137443,137443,commits_in_master,false,false,false,37,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.843358581944944,0.08277778755316301,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/virtualbox/networking.html.md,1,0.0027472527472527475,0,1,false,The docs typod the nic_type parameter The parameter name in the VirtualBox provider source is nic_type not nictypeThe typo is probably caused by the fact that the parameter maps to nictype args in the VirtualBox CLI,,1519,0.7386438446346281,0.02197802197802198,31020,580.36750483559,49.129593810444874,85.04190844616377,9144,16,2032,140,travis,pwnall,mitchellh,false,mitchellh,0,0,333,52,2638,false,false,true,false,0,0,0,0,0,0,137443
8901204,mitchellh/vagrant,ruby,6145,1439536060,,1439593735,961,,unknown,false,false,false,21,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.718474450910153,0.08064339426126513,10,tim.oguin@juiceanalytics.com,vagrant.gemspec,10,0.0273224043715847,0,0,true,Update bundler version constraint Now that bundler 1106 is out Lets be pessimistic rather than forcing some users to downgrade bundler,,1518,0.7391304347826086,0.02459016393442623,31020,580.36750483559,49.129593810444874,85.04190844616377,9136,17,2031,77,travis,philoserf,sethvargo,false,,0,0,34,314,1449,false,false,true,false,0,0,0,0,0,0,-1
8863274,mitchellh/vagrant,ruby,6139,1439486515,1444680903,1444680903,86573,86573,commits_in_master,false,false,false,100,2,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,12,0,4.460804032600593,0.07623955201322778,9,xmitchx@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,9,0.02452316076294278,0,4,false,Fixes Fedora network issues when biosdevname command is not present Previously configuring and enabling network interfaces failed with:The following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failed/usr/sbin/biosdevname --policyall_ethN -i bash: /usr/sbin/biosdevname:No such file or directoryStdout from the command:bash: /usr/sbin/biosdevname: No such file or directoryThe previous attempt to fix this (ccc4162) doesnt work since it doesntproperly parse the bash: /usr/sbin/biosdevname: No such file ordirectory error messageThis patch works around that problem and adds a comment explaining themeaning of the return codes,,1517,0.7389584706657878,0.02452316076294278,31020,580.36750483559,49.129593810444874,85.04190844616377,9124,18,2030,121,travis,tjanez,sethvargo,false,sethvargo,0,0,5,4,1038,false,false,false,false,0,0,0,0,0,0,85380
8888736,mitchellh/vagrant,ruby,6137,1439458047,,1447887879,140497,,unknown,false,false,false,67,1,1,0,4,0,4,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,3.7877408561068173,0.06473623676389816,2,xmitchx@gmail.com,plugins/communicators/winrm/communicator.rb,2,0.005449591280653951,0,0,false,Stabilize wait_for_ready to fix Windows 10 start problem The wait_for_ready helper waits until WinRM is ready Spinning up a Windows 10 guest VM sometimes the inner function winrm_info raises the exection WinRMNotReady By ignoring this exception the wait_for_ready waits correctly until an IP address could be retrievedThis solves my problem on OSX 10104 with VMware Fusion 712 spinning up a Windows 10 VM in issue #6131,,1516,0.7394459102902374,0.02452316076294278,31020,580.36750483559,49.129593810444874,85.04190844616377,9122,18,2030,141,travis,StefanScherer,mitchellh,false,,3,1.0,30,1,1999,false,true,false,false,4,12,1,0,0,0,7209
8888593,mitchellh/vagrant,ruby,6136,1439456405,1439848251,1439848251,6530,6530,commits_in_master,false,false,false,41,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.667311591162745,0.0797689703954438,10,tim.oguin@juiceanalytics.com,vagrant.gemspec,10,0.027247956403269755,0,0,false,Update winrm-fs to fix Windows 10 problems Update winrm-fs 022 fixes some problems with Windows 10 guestsI have solved my issue similar to #6060 and #6055 running on OSX 10104 with VirtualBox 500 spinning up a Windows 10 guest VM,,1515,0.7392739273927392,0.02452316076294278,31020,580.36750483559,49.129593810444874,85.04190844616377,9122,18,2030,80,travis,StefanScherer,sethvargo,false,sethvargo,2,1.0,30,1,1999,false,true,false,false,4,12,0,0,0,0,-1
8856526,mitchellh/vagrant,ruby,6135,1439433213,1439433353,1439433353,2,2,github,false,false,true,7,1,1,0,1,0,1,0,1,0,0,16,16,6,7,0,0,0,16,16,6,7,0,18,0,18,0,77.58405936788635,1.3259907965947415,6,xmitchx@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/boxes/base.html.md|website/www/README.md|website/www/lib/legacy_redirect.rb|website/www/source/_sidebar_blog.erb|website/www/source/blog/2013-09-19-introducing-the-vagrant-blog.html.markdown|website/www/source/blog/2013-12-09-vagrant-1-4.html.markdown|website/www/source/blog/2014-01-20-stability-and-upgrades.html.markdown|website/www/source/blog/2014-03-10-vagrant-1-5-and-vagrant-cloud.html.md|website/www/source/blog/2014-05-06-vagrant-1-6.html.md|website/www/source/blog_feed.xml.builder|website/www/source/download-archive-single.html.erb|website/www/source/downloads-archive.html.erb|website/www/source/downloads.html.erb|website/www/source/index.html.erb|website/www/source/layouts/layout.erb,6,0.0,0,0,false,Ensure all assets are served over SSL ,,1514,0.739101717305152,0.02459016393442623,31020,580.36750483559,49.129593810444874,85.04190844616377,9120,18,2029,74,travis,sethvargo,sethvargo,true,sethvargo,58,0.896551724137931,501,65,1787,true,false,false,false,444,466,122,54,184,1,2
8312979,mitchellh/vagrant,ruby,6112,1438980411,,1448001495,150351,,unknown,false,false,false,21,2,1,1,7,0,8,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,44,0,57,0,13.067735908974557,0.2233409416724097,7,xmitchx@gmail.com,plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/installer.rb,6,0.0027397260273972603,0,6,true,Use official Docker installer and upgrade for :latest installs A first attempt at updating the Docker installer as discussed in #6075,,1512,0.7400793650793651,0.024657534246575342,31020,580.36750483559,49.129593810444874,85.04190844616377,9079,20,2024,83,travis,cazzerson,sethvargo,false,,0,0,47,93,1834,false,false,false,false,1,5,0,0,3,0,4
8788750,mitchellh/vagrant,ruby,6111,1438970617,,1438971906,21,,unknown,false,false,false,28,1,1,0,0,0,0,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.716393975956611,0.08060798589944024,10,tim.oguin@juiceanalytics.com,vagrant.gemspec,10,0.027624309392265192,0,0,true,Remove upper bounds on bundler in gemspec Because there seem to be fairly [regular bundler releases](https://githubcom/bundler/bundler/commits/master/lib/bundler/versionrb)a strict upper bounds causes problems for those keeping up to date,,1511,0.7405691594970218,0.022099447513812154,31020,580.36750483559,49.129593810444874,85.04190844616377,9078,20,2024,73,travis,mtwentyman,mtwentyman,true,,0,0,11,11,2699,false,false,false,false,0,0,0,0,0,0,-1
8783587,mitchellh/vagrant,ruby,6105,1438913442,1438968486,1438968486,917,917,github,false,false,false,11,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.647159128173145,0.07942469876831383,2,tim.oguin@juiceanalytics.com,contrib/bash/completion.sh,2,0.00554016620498615,0,0,false,Update bash-completion Add command: pushAdd subcommands for box: outdated update,,1510,0.7403973509933774,0.0221606648199446,31020,580.36750483559,49.129593810444874,85.04190844616377,9076,20,2023,73,travis,evverx,sethvargo,false,sethvargo,3,1.0,10,11,234,true,true,true,false,0,0,0,0,1,0,-1
8775090,mitchellh/vagrant,ruby,6090,1438775422,,1447997489,153701,,unknown,false,false,false,62,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.567750983577857,0.07806748550568995,11,xmitchx@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,11,0.030555555555555555,0,0,false,Add check if NetworkManager is actually running inside the guest HiOur custom boxes are based on oracle linux 7X but we have disabled NetworkManager because of our product specific AFAIK other peoples also prefer to disable NM due to different reasonsMy request try to address the situation when NM rpm is installed but the service isnt running inside the guest,,1509,0.7408880053015242,0.027777777777777776,31020,580.36750483559,49.129593810444874,85.04190844616377,9065,19,2022,83,travis,vbaskoff,sethvargo,false,,0,0,0,0,477,false,false,false,false,0,0,0,0,0,0,11907
8734446,mitchellh/vagrant,ruby,6080,1438611147,1439401995,1439401995,13180,13180,commits_in_master,false,false,false,151,1,1,0,10,2,12,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.340130987864661,0.0741772294956685,16,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb,16,0.044444444444444446,0,8,false,Fix broken masterless minion configuration Vagrant 174 seems to break the masterless provisioning process for SaltStackIt throws an error during provisioning:Salt binaries found Configuring onlyThe following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failed/tmp/bootstrap_saltsh  -CStdout from the command:Stderr from the command:  % Total    % Received % Xferd  Average Speed  Time    Time    Time  Current                                Dload  Upload  Total  Spent    Left  Speed  0    0    0    0    0    0      0      0 --:--:-- --:--:-- --:--:--    0 * ERROR: In order to run the script in configuration only mode you also need to provide the configuration directory23  204k  23 48521    0    0  257k      0 --:--:-- --:--:-- --:--:--  929kcurl: (23) Failed writing body (631  16384)The parameters for the configuration path are missing Seems to be due to a typo in the code in a recently merged PR (#5980),,1508,0.7407161803713528,0.027777777777777776,31020,580.36750483559,49.129593810444874,85.04190844616377,9051,19,2020,74,travis,driskell,sethvargo,false,sethvargo,0,0,18,4,1469,false,false,false,false,0,1,0,0,0,0,310
8746264,mitchellh/vagrant,ruby,6073,1438388206,1447890728,1447890728,158375,158375,commits_in_master,false,false,false,169,1,1,0,12,1,13,0,9,0,0,2,2,2,0,0,0,0,2,2,2,0,0,23,0,23,0,8.704174069045719,0.14876314085799305,23,xmitchx@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb,17,0.04722222222222222,0,6,true,Stop trying to upload minion config to privileged directory The issue #5973 was caused by commit 74d22069d41b35bae50e32c1c68a92a4958afebb Normally the minion config is installed to the privileged /etc/salt directory by salt-bootstrapsh as part of the config_salt() function The reverted commit was having Vagrant upload the minion file *directly* to the /etc/salt directory - most installations probably dont have permissions to do this since vagrant is not running as rootThe original commit was to address situations where vagrant was being used with a basebox that already had salt installed For these situations users can simply provide the -C option as part of bootstrap_optionsIve spent hours sorting this out and [addressing another issue with salt-bootstrap](https://githubcom/saltstack/salt-bootstrap/pull/642) (I have to install from develop by modifying the bootstrap-saltsh file in my vagrant gem) Unfortunately I havent been able to test this change because I cant get vagrant installed from source Following the installation directions in the readme and [on the wiki](https://githubcom/mitchellh/vagrant/wiki/Installing-Vagrant-from-source) failed at bundle install with: Errno::EPERM: Operation not permitted - /Library/Ruby/Gems/200/bundler/gems/vagrant-spec-1df5a3af81cb/bin/vagrant-spec,,1507,0.7405441274054413,0.027777777777777776,31020,580.36750483559,49.129593810444874,85.04190844616377,9037,19,2017,138,travis,Johntron,mitchellh,false,mitchellh,0,0,21,25,2133,false,false,false,false,0,1,0,0,0,0,3726
10565307,mitchellh/vagrant,ruby,6071,1438377107,1447890331,1447890331,158553,158553,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.44913547571947,0.07604022647301138,3,sethvargo@gmail.com,website/docs/source/v2/vagrantfile/ssh_settings.html.md,3,0.008333333333333333,0,0,true,Clarify configsshinsert_key docs Modified the description of configsshinsert_key a bit to improve readability,,1506,0.7403718459495352,0.027777777777777776,31020,580.36750483559,49.129593810444874,85.04190844616377,9037,19,2017,138,travis,caseylang,mitchellh,false,mitchellh,0,0,11,9,1646,false,false,false,false,0,0,0,0,0,0,158553
8661181,mitchellh/vagrant,ruby,6050,1438118289,1447890042,1447890042,162862,162862,commits_in_master,false,false,false,114,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.6893640769514677,0.06305496460689727,5,tim.oguin@juiceanalytics.com,plugins/provisioners/puppet/config/puppet.rb,5,0.013966480446927373,0,0,false,Fix string parse error in the environment path missing error message Small typo in the puppet environment codeCurrently if you specify puppetenvironmentpath and it is missing you get this error:C:/HashiCorp/Vagrant/embedded/gems/gems/i18n-070/lib/i18n/configrb:92:in block in missing_interpolation_argument_handler: missing interpolation argument :environmentpath in The configured Puppet environment folder %{environment} was not found in the\nspecified environmentpath %{environmentpath}\nPlease specify a path to an existing Puppet directory environment ({:environmenttest :environment_pathC:/Users/bhines/Documents/Code/t/puppet} given) (I18n::MissingInterpolationArgument)        from C:/HashiCorp/Vagrant/embedded/gems/gems/i18n-070/lib/i18n/interpolate/rubyrb:29:in callpost-fix:There are errors in the configuration of this machine Please fixthe following errors and try again:puppet provisioner:* The configured Puppet environment folder test was not found in thespecified environmentpath C:/Users/bhines/Documents/Code/puppetPlease specify a path to an existing Puppet directory environment,,1504,0.7406914893617021,0.027932960893854747,31020,580.36750483559,49.129593810444874,85.04190844616377,9018,19,2014,138,travis,benh57,mitchellh,false,mitchellh,3,1.0,0,0,1506,true,false,false,false,2,15,1,0,3,0,162862
8660463,mitchellh/vagrant,ruby,6049,1438115261,1447908363,1447908363,163218,163218,commits_in_master,false,false,false,34,6,3,0,1,0,1,0,1,0,0,6,10,5,1,0,0,0,10,10,8,2,0,13,8,25,16,26.16924845474179,0.44725893153552027,5,xmitchx@gmail.com,website/docs/source/v2/provisioning/chef_zero.html.md|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/provisioners/chef_zero/zero.erb,5,0.0,0,1,false,Chef Zero - Fix nodes_path Support This fixes an issue #6025 by re-adding support for the nodes_path declaration to feed Chef Zero a directory (or an array of directories) containing nodes in JSON format,,1503,0.7405189620758483,0.027932960893854747,31020,580.36750483559,49.129593810444874,85.04190844616377,9017,19,2014,80,travis,bdwyertech,sethvargo,false,sethvargo,1,1.0,3,1,965,true,false,false,false,0,2,0,0,1,0,88443
8561268,mitchellh/vagrant,ruby,6012,1437460428,1437461671,1437461671,20,20,github,false,false,true,5,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.961361609792221,0.0847951202769423,6,tim.oguin@juiceanalytics.com,lib/vagrant/util/downloader.rb,6,0.01680672268907563,0,0,false,Use a properly-formatted custom User-Agent ,,1502,0.7403462050599201,0.03081232492997199,31019,580.3862149005449,49.13117766530191,85.0446500531932,8952,18,2007,68,travis,sethvargo,sethvargo,true,sethvargo,57,0.8947368421052632,500,65,1765,true,false,false,false,357,393,114,58,176,1,5
8536772,mitchellh/vagrant,ruby,6007,1437394360,1437935855,1437935855,9024,9024,github,false,false,false,19,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.505846506829286,0.07700986675551566,0,,plugins/provisioners/cfengine/config.rb,0,0.0,0,1,false,Fix for Issue #6006 - cfengine will now install With this fix Debian will now work with cfengine provisioner,,1501,0.7401732178547635,0.036211699164345405,31019,580.3862149005449,49.13117766530191,85.0446500531932,8943,19,2006,67,travis,darkn3rd,sethvargo,false,sethvargo,0,0,6,5,437,false,true,false,false,1,5,0,0,0,0,337
8522143,mitchellh/vagrant,ruby,6004,1437354908,1437355258,1437355258,5,5,github,false,false,false,80,1,1,0,1,0,1,0,1,0,0,2,2,0,2,0,0,0,2,2,0,2,0,0,0,0,0,10.043450228956141,0.1716535561718303,5,tim.oguin@juiceanalytics.com,website/docs/source/layouts/layout.erb|website/www/source/layouts/layout.erb,5,0.013966480446927373,0,0,false,[website] load external scripts without schema Hellocurrently wwwvagrantupcom and docsvagrantupcom are loading web fonts using HTTP even when HTTPS is used (default for vagrants website)This causes most browsers (Chromium and Firefox at least) to block those resources by default due to security issues (HTTPS is useless if an active element such as a script is loaded using plain HTTP because it has access to the whole DOM)Loading the external resources over HTTPS avoids this issueThanksMarcello,,1500,0.74,0.036312849162011177,31019,580.3862149005449,49.13117766530191,85.0446500531932,8939,19,2005,67,travis,pogliamarci,mitchellh,false,mitchellh,0,0,11,10,1238,true,false,false,false,0,0,0,0,1,0,5
8516490,mitchellh/vagrant,ruby,6002,1437324811,1447991178,1447991178,177772,177772,commits_in_master,false,false,false,30,1,1,0,2,0,2,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,29,26,29,26,13.234469154266474,0.22619156192227657,3,sethvargo@gmail.com,lib/vagrant/action/builtin/box_remove.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/action/builtin/box_remove_test.rb,3,0.0,0,0,false,Fix #3570 Box data left in ~/vagrantd/boxes after removal As per my comment at the issue page please check if Ive missed some sort of concurrency check in my patch,,1499,0.7398265510340227,0.036414565826330535,31019,580.3862149005449,49.13117766530191,85.0446500531932,8936,18,2005,79,travis,ievgenp,mitchellh,false,mitchellh,0,0,6,13,1074,false,true,false,false,1,1,0,0,0,0,2
8522458,mitchellh/vagrant,ruby,5999,1437285267,1447889949,1447889949,176744,176744,commits_in_master,false,false,false,20,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.519030925757231,0.07723518424179315,16,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb,16,0.04481792717086835,0,0,false,Correct salt-minion and call ext on windows guest Salt-minion and salt-call are batch files on a windows guest not executables,,1498,0.739652870493992,0.036414565826330535,31019,580.3862149005449,49.13117766530191,85.0446500531932,8930,18,2005,139,travis,PatOShea,mitchellh,false,mitchellh,7,0.5714285714285714,3,10,1890,true,false,false,false,1,4,8,0,6,0,176744
8520861,mitchellh/vagrant,ruby,5998,1437284468,,1437284658,3,,unknown,false,false,false,17,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.337424788616361,0.07413133660455551,16,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb,16,0.04481792717086835,0,0,false,salt-call file extension wrong for windows guest Salt-minion is an executable but salt-call is a batch file,,1497,0.7401469605878424,0.036414565826330535,31019,580.3862149005449,49.13117766530191,85.0446500531932,8930,18,2005,65,travis,PatOShea,PatOShea,true,,6,0.6666666666666666,3,10,1890,true,false,false,false,1,4,6,0,6,0,-1
8509715,mitchellh/vagrant,ruby,5994,1437242719,,1443328402,101428,,unknown,false,false,false,37,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.345630478124392,0.07427148064482317,16,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb,16,0.0449438202247191,0,0,false,Copy grains file to the minion config directory for salt provisioner Grains file is being copied to the guest but its not being copied where the minion can automatically pick it up next to the minion config,,1496,0.7406417112299465,0.03651685393258427,31019,580.3862149005449,49.13117766530191,85.0446500531932,8928,18,2004,111,travis,PatOShea,PatOShea,true,,5,0.8,3,10,1889,true,false,false,false,1,3,5,0,6,0,101428
8509575,mitchellh/vagrant,ruby,5993,1437241347,1447889338,1447889338,177466,177466,commits_in_master,false,false,false,38,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.1893323012230095,0.07160017734856072,10,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,10,0.028089887640449437,0,0,false,Corrected masterless example for salt provisioner in documentation The basic Vagrantfile file example for a masterless setup wasnt setting the masterless value to true  That value defaults to false in configrb and used on line 350 here:  https://githubcom/mitchellh/vagrant/blob/master/plugins/provisioners/salt/provisionerrb,,1495,0.7404682274247492,0.03651685393258427,31019,580.3862149005449,49.13117766530191,85.0446500531932,8928,18,2004,139,travis,PatOShea,mitchellh,false,mitchellh,4,0.75,3,10,1889,true,false,false,false,1,3,4,0,6,0,52965
8509478,mitchellh/vagrant,ruby,5992,1437240385,1437249357,1437249357,149,149,github,false,false,false,14,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,20,0,4.635371340460017,0.0792234624015101,10,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,10,0.028089887640449437,0,0,false,Clarified windows guest machine support for salt provisioner in documentation Done at mitchellhs request,,1494,0.7402945113788487,0.03651685393258427,31019,580.3862149005449,49.13117766530191,85.0446500531932,8928,18,2004,65,travis,PatOShea,sethvargo,false,sethvargo,3,0.6666666666666666,3,10,1889,true,false,false,false,1,2,3,0,6,0,-1
8508945,mitchellh/vagrant,ruby,5991,1437234313,1447889515,1447889515,177586,177586,commits_in_master,false,false,false,233,2,2,0,4,0,4,0,7,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,0,22,0,8.939168762609004,0.15277997130107523,16,xmitchx@gmail.com,website/docs/source/v2/provisioning/puppet_apply.html.md|plugins/provisioners/puppet/provisioner/puppet.rb,13,0.03651685393258427,1,0,false,Fix puppet apply environment default manifest Fixes: #5987Please review: @benh57 To test this I used a Vagrantfile with the following code:configvmprovision puppet do |puppet|  puppetenvironment  all  puppetenvironment_path  environmentsendI also created a environments/all/ directoryTo verify what command Vagrant sent through to the VM I used:vagrant provision --debug --provision-with puppet### Before PR**Without environmentconf**puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/all/manifests/sitepp**With environmentconf but no manifest setting**puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/all/manifests/sitepp**With environmentconf and manifest set to relative path**manifest  manifests/hello_worldpppuppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all manifests/hello_worldpp**With environmentconf and manifest set to absolute path**manifest  /tmp/hello_worldpppuppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/hello_worldpp### After PR**Without environmentconf**puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/all/manifests**With environmentconf but no manifest setting**puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/all/manifests**With environmentconf and manifest set to relative path**puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/all/manifests/hello_worldpp**With environmentconf and manifest set to relative path with **puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/all//default_env/manifests**With environmentconf and manifest set to absolute path**puppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/hello_worldpp**Manifest setting that use variable**manifest  $codedir/environments/another/manifestspuppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/environments/another/manifests**Manifest setting that use two variables**manifest  $codedir/another_environments_dir/$environment/manifests/defaultpppuppet apply --detailed-exitcodes --environmentpath /tmp/vagrant-puppet/environments/ --environment all /tmp/vagrant-puppet/another_environments_dir/all/manifests/defaultpp,,1493,0.7401205626255861,0.03651685393258427,31019,580.3862149005449,49.13117766530191,85.0446500531932,8928,18,2004,137,travis,Mattias-,mitchellh,false,mitchellh,1,1.0,13,4,1424,false,true,false,false,1,3,0,0,0,0,1826
8501667,mitchellh/vagrant,ruby,5986,1437173422,1447887765,1447887765,178572,178572,commits_in_master,false,true,false,127,1,1,0,9,0,9,0,7,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.028846568667188,0.0688573042397467,0,,plugins/guests/debian8/cap/halt.rb,0,0.0,2,1,true,Specify time and dont do -h -H which is not really a valid usage The current (173) behaviour leads to vagrant force-shutdown every time I halt a Debian 8 box:vagrant halt d8: Attempting graceful shutdown of VM d8: Forcing shutdown of VMOn executing shutdown -h -H I understand why because this simply schedules a shutdown in one minute:root@vagrant:~# shutdown -h -HShutdown scheduled for Fri 2015-07-17 21:32:54 CEST use shutdown -c to cancelBroadcast message from root@vagrant (Fri 2015-07-17 21:31:54 CEST):The system is going down for system halt at Fri 2015-07-17 21:32:54 CESTAlso the usage of shutdown says:shutdown [OPTIONS] [TIME] [WALL]  -H --halt      Halt the machine  -h             Equivalent to --poweroff overridden by --halt,,1492,0.739946380697051,0.036619718309859155,31019,580.3862149005449,49.13117766530191,85.0446500531932,8917,18,2003,140,travis,denisbr,mitchellh,false,mitchellh,0,0,12,12,1708,false,true,false,false,0,0,0,0,0,0,29483
8505250,mitchellh/vagrant,ruby,5981,1437118183,1447887263,1447887263,179484,179484,commits_in_master,false,false,false,49,1,1,0,3,0,3,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,27,0,27,0,12.884878323436869,0.22019593096984322,0,,plugins/commands/reload/command.rb|plugins/commands/up/command.rb|plugins/commands/up/start_mixins.rb,0,0.0,0,0,true,Allow provisioner instance names to be specified for up and reload… … commands and option --provision-withRef: https://githubcom/mitchellh/vagrant/issues/5139Im happy to refactor provide some tests etc for this but wanted to get some feedback first as to whether the general gist of it is ok (and any other advice),,1491,0.7397719651240778,0.036827195467422094,31001,580.7232024773394,49.159704525660466,85.09402922486372,8909,18,2003,142,travis,jkburges,mitchellh,false,mitchellh,0,0,5,4,1128,false,false,false,false,1,0,0,0,0,0,1
8304549,mitchellh/vagrant,ruby,5980,1437109860,1437172664,1437172665,1046,1046,github,false,false,false,22,7,7,0,2,0,2,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,156,0,156,0,26.363849936615203,0.45054461012510083,23,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md|plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|plugins/provisioners/salt/config.rb,14,0.036931818181818184,0,0,true,Fixed salt minion configuration directory typo Simple typo was killing the copy of the minion file when masterless config flag was set,,1490,0.7395973154362416,0.036931818181818184,31001,580.7232024773394,49.159704525660466,85.09402922486372,8909,18,2003,63,travis,PatOShea,mitchellh,false,mitchellh,2,0.5,3,10,1888,true,false,false,false,1,2,2,0,5,0,109
8501540,mitchellh/vagrant,ruby,5979,1437109588,1437172671,1437172672,1051,1051,github,false,true,false,30,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,33,0,33,0,4.726180532775648,0.08076798990434661,6,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,6,0.017045454545454544,0,0,true,Update salt install options in documentation Added details about what works for windows and what doesnt fixed typo broke runners out from states added 3 options (version masterless and minion_id),,1489,0.7394224311618536,0.036931818181818184,31001,580.7232024773394,49.159704525660466,85.09402922486372,8909,18,2003,62,travis,PatOShea,mitchellh,false,mitchellh,1,0.0,3,10,1888,true,false,false,false,1,2,1,0,5,0,113
8469152,mitchellh/vagrant,ruby,5971,1436993376,1436993670,1436993670,4,4,github,false,false,false,43,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.307270407424603,0.0736094627119358,0,,plugins/communicators/winrm/shell.rb,0,0.0,0,0,false,Raise Errno::ETIMEDOUT as acceptable Errors::ConnectionTimeout As described in issue #5970 communicateready returns an exception on connection timeout instead of returning falseThis catches the Errno::ETIMEDOUT which will be caught by:https://githubcom/mitchellh/vagrant/blob/master/plugins/communicators/winrm/communicatorrb#L104rubyrescue Errors::TransientError  eAnd resulting in returning just false,,1488,0.739247311827957,0.038348082595870206,30990,580.9293320425943,49.17715392061955,85.1242336237496,8902,17,2001,61,travis,bheuvel,mitchellh,false,mitchellh,0,0,0,0,986,false,false,false,false,0,0,0,0,0,0,4
8469252,mitchellh/vagrant,ruby,5967,1436952164,1436993779,1436993780,693,693,github,false,false,false,21,3,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,23,0,30,0,4.376419995041588,0.07479120045063553,8,tim.oguin@juiceanalytics.com,plugins/provisioners/puppet/provisioner/puppet.rb,8,0.02373887240356083,0,0,false,Fix custom puppetbinary_path to work properly on windows and fix puppet detection on windows Fix automatic puppet path detection on windows,,1487,0.7390719569603228,0.03857566765578635,30990,580.9293320425943,49.17715392061955,85.1242336237496,8895,17,2001,61,travis,benh57,mitchellh,false,mitchellh,2,1.0,0,0,1493,true,false,false,false,1,7,1,0,1,0,0
8436355,mitchellh/vagrant,ruby,5956,1436813382,1436813424,1436813424,0,0,github,false,false,true,4,1,1,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,6,6,6,0,0,28,0,28,0,28.200888980240794,0.48194680650141125,1,mitchell.hashimoto@gmail.com,website/docs/Gemfile|website/docs/Gemfile.lock|website/docs/config.ru|website/www/Gemfile|website/www/Gemfile.lock|website/www/config.ru,1,0.0,0,0,false,Add Rack::Protection to sites ,,1486,0.7388963660834454,0.04154302670623145,30990,580.9293320425943,49.17715392061955,85.1242336237496,8874,16,1999,60,travis,sethvargo,mitchellh,false,mitchellh,56,0.8928571428571429,500,65,1757,true,false,true,false,326,371,113,61,176,1,-1
8435492,mitchellh/vagrant,ruby,5955,1436810181,,1436812817,43,,unknown,false,false,false,5,1,1,0,1,0,1,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.408869989693338,0.07534666923401837,3,tim.oguin@juiceanalytics.com,lib/vagrant/util/platform.rb,3,0.009146341463414634,0,2,false,should fix https://githubcom/mitchellh/vagrant/issues/5933  Fixes #5933,,1485,0.7393939393939394,0.042682926829268296,30991,580.9105869445968,49.17556710012584,85.1214868832887,8873,16,1999,63,travis,cristovaov,cristovaov,true,,0,0,5,13,678,true,false,false,false,1,1,0,0,1,0,4
8372354,mitchellh/vagrant,ruby,5954,1436809258,1436812225,1436812225,49,49,github,false,false,true,14,1,1,0,1,0,1,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,5.151373453181073,0.08803634052537368,2,xmitchx@gmail.com,plugins/hosts/linux/cap/nfs.rb,2,0.0061162079510703364,0,0,false,Fallback to /tmp if $TMPDIR is not set - Fixes https://githubcom/mitchellh/vagrant/pull/5773#issuecomment-120793492- Fixes https://githubcom/mitchellh/vagrant/issues/5951,,1484,0.7392183288409704,0.04281345565749235,30991,580.9105869445968,49.17556710012584,85.1214868832887,8873,16,1999,64,travis,sethvargo,mitchellh,false,mitchellh,55,0.8909090909090909,500,65,1757,true,false,true,false,318,357,110,61,174,1,49
8435343,mitchellh/vagrant,ruby,5949,1436779278,1436809776,1436809777,508,508,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.202936205667363,0.07182766428632056,2,xmitchx@gmail.com,plugins/guests/redhat/cap/nfs_client.rb,2,0.006172839506172839,0,3,false,Detect systemd on guest instead of host Fixes #5948 ,,1483,0.7390424814565071,0.043209876543209874,30991,580.9105869445968,49.17556710012584,85.1214868832887,8866,15,1999,64,travis,progamesigner,sethvargo,false,sethvargo,0,0,7,6,364,false,false,false,false,1,0,0,0,0,0,163
8419203,mitchellh/vagrant,ruby,5937,1436649365,1436661117,1436661117,195,195,github,false,false,false,7,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.034498484164139,0.06894910071914061,2,xmitchx@gmail.com,plugins/guests/ubuntu/cap/change_host_name.rb,2,0.006172839506172839,0,0,false,Fix setting hostname in 1204 Fixes #5934,,1482,0.7388663967611336,0.043209876543209874,30991,580.9105869445968,49.17556710012584,85.1214868832887,8852,15,1997,62,travis,aidanhs,sethvargo,false,sethvargo,0,0,24,12,1396,true,false,false,false,1,1,0,0,1,0,-1
8419001,mitchellh/vagrant,ruby,5936,1436647279,1436812441,1436812441,2752,2752,github,false,false,false,138,2,2,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,8.475213800800447,0.14484039893962355,11,xmitchx@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/config.rb,11,0.034055727554179564,0,1,false,Fix salt bootstrap issue after 173 upgrade with verbose option set After upgrading to 173 we found that our VMs would not execute salt I narrowed that down to the use of the verbose option So removing that is a workaround for now However we dont get any salt output which makes debugging changes to our config difficultI found that #5435 added a new install_command option but that seemed to always set the options value to a DummyConfig type instead of the expected string It seems that the option wasnt initialized in configrb so Ive added that which fixes the problem on my machineOur current VMs already have salt installed but I think this might actually break normal salt install so it might be very urgent to fix for a good amount of peopleFixes https://githubcom/mitchellh/vagrant/issues/5939,,1481,0.7386900742741391,0.043343653250773995,30991,580.9105869445968,49.17556710012584,85.1214868832887,8852,14,1997,62,travis,wkral,mitchellh,false,mitchellh,0,0,8,1,2187,false,false,false,false,0,0,0,0,0,0,1297
8422971,mitchellh/vagrant,ruby,5931,1436612492,1436812261,1436812261,3329,3329,github,false,false,false,107,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.591709935281266,0.07847177834951599,9,xmitchx@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,9,0.02786377708978328,0,0,false,guests/fedora: dont fail if nmcli doesnt exist on the guest Running vagrant up with the fedora box where nmcli is not installed fails to configure guest networksHere is the reproducing step:    $ vagrant box add --name fedora-cloud-22 https://downloadfedoraprojectorg/pub/fedora/linux/releases/22/Cloud/x86_64/Images/Fedora-Cloud-Base-Vagrant-22-20150521x86_64vagrant-virtualboxbox    $ cat EOF  Vagrantfile    Vagrantconfigure(2) do |config|      configvmbox  fedora-cloud-22      configvmnetwork :private_network ip: 10002    end    EOF    $ vagrant up    (snip)     default: Configuring and enabling network interfaces    The following SSH command responded with a non-zero exit status    Vagrant assumes that this means the command failed        which nmcli /dev/null 2&1 && nmcli c reload eth1        Stdout from the command:                Stderr from the command:This PR fixes this issue,,1480,0.7385135135135135,0.043343653250773995,30991,580.9105869445968,49.17556710012584,85.1214868832887,8845,14,1997,62,travis,kaorimatz,mitchellh,false,mitchellh,0,0,12,0,1096,true,false,false,false,0,0,0,0,1,0,3329
8385000,mitchellh/vagrant,ruby,5929,1436599518,,1447889294,188162,,unknown,false,false,false,8,2,1,1,3,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.565197631896149,0.07801687508280346,0,,plugins/providers/virtualbox/config.rb,0,0.0,0,1,false,Paravirtualization support(VirtualBox 50-) method paravirtprovider() added--paravirtprovider default/legacy/minimal/kvm/hyperv,,1479,0.7390128465179175,0.043478260869565216,31001,580.7232024773394,49.159704525660466,85.09402922486372,8844,13,1997,136,travis,densuke,mitchellh,false,,0,0,2,0,1157,false,false,false,false,0,0,0,0,0,0,43
8409150,mitchellh/vagrant,ruby,5928,1436568929,1438020156,1438020157,24187,24187,github,false,false,true,15,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.056807947356535,0.06933900345359796,0,,lib/vagrant/action/builtin/ssh_run.rb,0,0.0,0,0,true,Use the same ssh args for ssh with a command as ssh exec Fixes https://githubcom/mitchellh/vagrant/issues/4986,,1478,0.7388362652232747,0.04516129032258064,30986,581.0043245336603,49.18350222681211,85.13522235848447,8836,12,1996,68,travis,sethvargo,sethvargo,true,sethvargo,54,0.8888888888888888,500,65,1754,true,false,false,false,294,335,107,61,172,1,24185
8408636,mitchellh/vagrant,ruby,5927,1436567144,1436571210,1436571210,67,67,github,false,false,true,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.407487094479984,0.07533281506830408,0,,plugins/guests/linux/cap/read_ip_address.rb,0,0.0,0,0,true,Use sudo for read_ip_address capability Fixes #4868,,1477,0.7386594448205822,0.045307443365695796,30986,581.0043245336603,49.18350222681211,85.13522235848447,8836,12,1996,59,travis,sethvargo,mitchellh,false,mitchellh,53,0.8867924528301887,500,65,1754,true,false,true,false,293,334,106,61,171,1,67
8406762,mitchellh/vagrant,ruby,5924,1436560514,1436561540,1436561540,17,17,github,false,false,true,20,2,2,0,0,0,0,0,0,0,0,2,2,1,0,1,0,0,2,2,1,0,1,78,0,78,0,13.003813012903354,0.2222603239861749,26,xmitchx@gmail.com,plugins/provisioners/docker/client.rb|plugins/provisioners/docker/client.rb|templates/locales/en.yml,25,0.08250825082508251,0,0,true,Save docker args to check if running containers have changed in the Vagrantfile - Fixes https://githubcom/mitchellh/vagrant/issues/3055- Depends on https://githubcom/mitchellh/vagrant/pull/5922,,1476,0.7384823848238482,0.0462046204620462,30947,581.7365172714641,49.245484214948135,85.24251139044173,8834,12,1996,59,travis,sethvargo,mitchellh,false,mitchellh,52,0.8846153846153846,500,65,1754,true,false,true,false,267,315,105,61,168,1,-1
8405980,mitchellh/vagrant,ruby,5922,1436557772,1436561407,1436561407,60,60,github,false,false,true,14,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.337559573994955,0.0741372853692093,1,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/client.rb,1,0.0033112582781456954,0,0,true,Add a space before args Otherwise this gets all jumbled with previous options :frowning: ,,1475,0.7383050847457627,0.046357615894039736,30947,581.7365172714641,49.245484214948135,85.24251139044173,8834,12,1996,59,travis,sethvargo,mitchellh,false,mitchellh,51,0.8823529411764706,500,65,1754,true,false,true,false,265,314,104,61,167,1,60
8357497,mitchellh/vagrant,ruby,5919,1436539687,1436551132,1436551132,190,190,github,false,false,true,36,1,1,2,1,0,3,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,3,4,3,9.387286148076065,0.16044711973482123,2,bhines@gmail.com,lib/vagrant/shared_helpers.rb|test/unit/support/shared/base_context.rb,2,0.006688963210702341,3,0,true,core: plugin management requires bundler @mitchellh @sethvargo @phinze this is an humble attempt to solve the broken unit tests but I can imagine that there is more elegant way to achieve this (see my code comments/questions),,1474,0.7381275440976933,0.046822742474916385,30947,581.7042039616118,49.245484214948135,85.24251139044173,8829,12,1996,58,travis,gildegoma,mitchellh,false,mitchellh,21,0.9523809523809523,49,127,1734,true,true,true,false,1,21,3,0,15,1,1
8413155,mitchellh/vagrant,ruby,5916,1436510265,1436512651,1436512651,39,39,github,false,false,true,29,2,2,0,2,0,2,0,1,0,0,7,7,6,0,1,0,0,7,7,6,0,1,227,85,227,85,30.587406837483435,0.5227875682160351,38,xmitchx@gmail.com,test/unit/plugins/provisioners/chef/command_builder_test.rb|plugins/provisioners/chef/command_builder.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/locales/en.yml,26,0.017006802721088437,0,0,true,Refactor Chef provisioners This refactors the Chef provisioners to be less coupled with each other and fixes issues where Chef Zero behaved like Chef Solo and not Chef Client,,1473,0.7379497623896809,0.047619047619047616,30996,580.397470641373,49.10311007871984,85.01096915731061,8825,12,1996,60,travis,sethvargo,mitchellh,false,mitchellh,50,0.88,500,65,1754,true,false,true,false,261,310,102,61,166,1,39
8393683,mitchellh/vagrant,ruby,5915,1436496464,1436496466,1436496467,0,0,github,false,false,true,4,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.737150322532759,0.08096544391716318,10,tim.oguin@juiceanalytics.com,vagrant.gemspec,10,0.034482758620689655,0,0,false,Bump to latest bundler ,,1472,0.7377717391304348,0.04827586206896552,30996,580.397470641373,49.10311007871984,85.01096915731061,8823,12,1995,61,travis,sethvargo,sethvargo,true,sethvargo,49,0.8775510204081632,500,65,1753,true,false,false,false,261,310,99,61,163,1,-1
8393319,mitchellh/vagrant,ruby,5914,1436494708,1436495270,1436495270,9,9,github,false,false,true,4,3,1,0,1,0,1,0,1,0,0,1,2,0,0,1,0,0,2,2,1,0,1,0,0,7,0,4.450410977868511,0.07606328838680708,4,tim.oguin@juiceanalytics.com,.travis.yml,4,0.014035087719298246,0,0,false,Try the container VMs ,,1471,0.7375934738273283,0.04912280701754386,30982,580.6597379123361,49.12529856045446,85.04938351300756,8823,12,1995,60,travis,sethvargo,sethvargo,true,sethvargo,48,0.875,500,65,1753,true,false,false,false,261,310,96,61,158,1,4
8393099,mitchellh/vagrant,ruby,5913,1436493622,1436493940,1436493940,5,5,github,false,false,true,6,3,2,0,1,0,1,0,1,0,0,8,8,8,0,0,0,0,8,8,8,0,0,90,16,94,16,34.70748521874023,0.5931819969528305,11,tim.oguin@juiceanalytics.com,test/unit/plugins/provisioners/chef/config/base_runner_test.rb|test/unit/plugins/provisioners/chef/config/chef_client_test.rb|plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb,8,0.010676156583629894,0,0,false,Use windows-specific Chef paths Fixes https://githubcom/mitchellh/vagrant/issues/5862,,1470,0.7374149659863946,0.0498220640569395,30940,581.447963800905,49.19198448610213,85.16483516483517,8823,12,1995,60,travis,sethvargo,sethvargo,true,sethvargo,47,0.8723404255319149,500,65,1753,true,false,false,false,260,307,93,61,154,1,1
8389491,mitchellh/vagrant,ruby,5912,1436482427,1436490633,1436490633,136,136,github,false,false,true,15,6,2,0,3,0,3,0,1,0,0,1,4,1,0,0,0,0,4,4,4,0,0,27,0,192,0,8.801509972281078,0.15043070553169582,5,sethvargo@gmail.com,lib/vagrant/util/subprocess.rb|lib/vagrant/util/subprocess.rb,5,0.01968503937007874,0,0,false,Automatically restore the original environment if we are runnings something outside of the embedded installer ,,1469,0.7372362151123213,0.04330708661417323,30906,582.0876205267585,49.246101080696306,85.25852585258525,8821,12,1995,77,travis,sethvargo,sethvargo,true,sethvargo,46,0.8695652173913043,500,65,1753,true,false,false,false,258,304,90,61,144,1,4
8388725,mitchellh/vagrant,ruby,5910,1436480123,1436480389,1436480389,4,4,github,false,false,true,9,3,3,0,1,0,1,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,35,19,35,19,18.43976565262116,0.3149407364979269,5,sethvargo@gmail.com,website/docs/source/v2/other/environmental-variables.html.md|lib/vagrant/util/subprocess.rb|lib/vagrant.rb|test/unit/vagrant_test.rb,4,0.012048192771084338,0,0,false,Add Vagrantoriginal_env and break out of bundler in subprocess ,,1468,0.7370572207084468,0.040160642570281124,30851,581.990859291433,49.269067453243004,85.21603837801044,8821,12,1995,77,travis,sethvargo,sethvargo,true,sethvargo,45,0.8666666666666667,500,65,1753,true,false,false,false,257,303,87,61,139,1,0
8390481,mitchellh/vagrant,ruby,5905,1436436780,1436484163,1436484164,789,789,github,false,false,false,61,1,1,0,6,0,6,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,3.808840092797956,0.06505205722097844,5,mitchell.hashimoto@gmail.com,plugins/providers/docker/action.rb,5,0.021367521367521368,0,4,false,Docker Provider: Dont destroy built Docker image on reload Resolves #5353After this change Dockers caching mechanism is now applicable to the build process during vagrant reload by default speeding up the reload process considerably for large/complex DockerfilesForcing the image to be rebuilt from scratch without cache can still be achieved via adding the --no-cache flag to the build_args array,,1467,0.7368779822767553,0.042735042735042736,30865,582.1156649927102,49.24671958529078,85.17738538797991,8815,12,1995,79,travis,adrianguenter,mitchellh,false,mitchellh,0,0,4,2,1759,false,false,false,false,0,1,0,0,0,0,440
8333997,mitchellh/vagrant,ruby,5897,1436286640,,1443328629,117366,,unknown,false,false,false,37,9,0,0,2,0,2,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,18,0,0,0.0,0,,,0,0.0,0,0,false,Stop salt minion service and set to manual * Stops windows service for local testing if run_service set to false Its true by default* Added passing in minion_id and master_id to windows installer* Documentation updates,,1466,0.737380627557981,0.047619047619047616,30713,581.8383095106307,49.19740826360173,85.27333702341028,8808,12,1993,128,travis,PatOShea,PatOShea,true,,0,0,3,10,1878,false,false,false,false,1,1,0,0,0,0,15946
8315173,mitchellh/vagrant,ruby,5895,1436239137,1436239325,1436239326,3,3,github,false,false,true,27,3,3,3,0,0,3,0,2,0,0,5,5,4,0,1,0,0,5,5,4,0,1,44,15,44,15,29.614790283813182,0.5054413290077404,23,stoned.elipot@gmail.com,plugins/providers/virtualbox/provider.rb|templates/locales/en.yml|lib/vagrant/errors.rb|plugins/providers/virtualbox/provider.rb|templates/locales/en.yml|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb,20,0.015463917525773196,0,0,false,Track UID used to create machine error in VB if mismatch Fixes #4739This adds UID tracking to created machines and errors in VirtualBox if they mismatch,,1465,0.7372013651877133,0.05154639175257732,30782,582.4507829250862,49.24956143200572,85.30959651744526,8802,12,1992,78,travis,mitchellh,mitchellh,true,mitchellh,30,0.8666666666666667,3805,0,2686,true,true,false,false,31,29,0,1,31,0,1
8258221,mitchellh/vagrant,ruby,5887,1435829858,1436484289,1436484289,10907,10907,commits_in_master,false,false,false,77,1,1,0,1,0,1,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,19,0,19,0,17.769956687963465,0.30420001810862235,4,sethvargo@gmail.com,lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/kernel_v2/config/ssh.rb,4,0.012121212121212121,1,0,false,Add setting configsshssh_command Lets the user specify what ssh to use or even direct Vagrant to use an ssh wrapper like sshrc (https://githubcom/Russell91/sshrc)I havent added tests or documentation yet but I can add it if youre interested in the ideaIn my Vagrantfile I set:rubyconfigsshssh_command  sshrcNow I can do vagrant ssh and have it invoke sshrc instead of ssh$ bundle exec vagrant ssh------- marca-mac2local:~/sshrcvagrant@localmonkey:~$ exit,,1464,0.7370218579234973,0.06060606060606061,30689,582.2933298576037,49.23588256378507,85.34002411287432,8798,13,1988,78,travis,msabramo,mitchellh,false,mitchellh,2,1.0,94,79,1844,false,true,false,false,0,0,0,0,0,0,10907
8234036,mitchellh/vagrant,ruby,5884,1435712044,1436490094,1436490094,12967,12967,commits_in_master,false,false,false,91,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,28,0,28,0,4.199076101377374,0.0718830691885537,6,sethvargo@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,6,0.03636363636363636,0,0,false,[fedora] honor MAC address when configuring networks Configuring by :interface doesnt work very well because Vagrant hasno idea about what interfaces are present in the VM for example ifthe image has docker installed but not biosdevname theninterface_names[0]  docker0 which is usually not what you wantmapped to the first network from the VagrantfileSo if the plugins (like vagrant-libvirt) or the Vagrantfile hasgiven us a network with a MAC address use that to find the interfacename for the network  Otherwise use slot numbers as before,,1463,0.7368421052631579,0.06060606060606061,30689,582.2933298576037,49.23588256378507,85.34002411287432,8789,13,1986,77,travis,dcbw,mitchellh,false,mitchellh,1,1.0,7,0,141,false,false,false,false,0,4,1,0,0,0,1009
8220092,mitchellh/vagrant,ruby,5880,1435663643,1436484450,1436484450,13680,13680,commits_in_master,false,false,false,57,2,2,0,1,0,1,0,1,0,1,3,4,4,0,0,0,1,3,4,4,0,0,50,0,50,0,12.89400526844555,0.22072966777744754,5,sethvargo@gmail.com,plugins/guests/fedora/cap/nfs_client.rb|plugins/guests/fedora/plugin.rb|plugins/guests/redhat/cap/nfs_client.rb|plugins/guests/redhat/plugin.rb,3,0.011834319526627219,1,0,false,Fix: Rewrite Red Hat NFS handling based on systemd This effectively fixes NFS on Fedora and RHEL guests whether the packages are already installed or not Uses systemd to determine what commands to run and because of that we can retire the Fedora NFS cap@sethvargo  It also retires mine previous fix https://githubcom/mitchellh/vagrant/pull/5859 that was already reviewed,,1462,0.7366621067031464,0.08284023668639054,30689,582.2933298576037,49.23588256378507,85.34002411287432,8787,13,1986,78,travis,strzibny,mitchellh,false,mitchellh,5,0.2,10,4,1246,false,false,false,false,0,4,5,0,0,0,13680
8130465,mitchellh/vagrant,ruby,5859,1435142441,,1435681215,8979,,unknown,false,false,false,38,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.174450033018789,0.07146150088806934,3,sethvargo@gmail.com,plugins/guests/fedora/cap/nfs_client.rb,3,0.01775147928994083,0,1,false,Start required NFS services on Fedora guests This pull https://githubcom/mitchellh/vagrant/pull/5770 does not contain the call to start the necessary services for NFS so it still does not work out of the box This fixed the issue for me,,1459,0.7381768334475668,0.08284023668639054,30689,582.2933298576037,49.23588256378507,85.34002411287432,8729,13,1980,75,travis,strzibny,sethvargo,false,,3,0.3333333333333333,10,4,1240,false,false,false,false,0,3,3,0,0,0,1720
7997857,mitchellh/vagrant,ruby,5828,1434380482,,1436484495,35066,,unknown,false,false,false,81,3,3,0,1,0,1,0,1,0,0,5,5,5,0,0,0,0,5,5,5,0,0,51,0,51,0,25.038483991635545,0.42862835387928566,8,staneck@gmail.com,plugins/providers/docker/action/host_machine_sync_folders_disable.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/synced_folder.rb|lib/vagrant/action/builtin/synced_folders.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/synced_folder.rb,5,0.0,1,0,false,Fix #5143 VBoxManage error on vagrant destroy VirtualBox provider tried to add synced folders when destroying a docker container running inside the vm causing an error due to machine locks Added a check if we are destroying before trying to create synced folders Also for removing synced folders (without destroying the VM) the VirtualBox provider seems to have tried to use the meta driver instead of retrieving the actual driver for VBox version used from it Fixed that toocc @svogt,,1457,0.7391901166781057,0.09302325581395349,30689,582.2933298576037,49.23588256378507,85.34002411287432,8654,16,1971,77,travis,oxygen0211,mitchellh,false,,0,0,3,2,694,false,false,false,false,1,4,0,0,0,0,35066
7888225,mitchellh/vagrant,ruby,5805,1433744009,1433952891,1433952891,3481,3481,commits_in_master,false,false,false,7,2,1,0,2,0,2,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,2,0,2,6,4.355255290726213,0.0745567247838667,4,sethvargo@gmail.com,plugins/guests/linux/cap/mount_smb_shared_folder.rb,4,0.023668639053254437,0,2,false,Use the extended password parameter more compatible ,,1455,0.7395189003436426,0.09467455621301775,30689,582.2933298576037,49.23588256378507,85.34002411287432,8593,15,1964,70,travis,cisco87,sethvargo,false,sethvargo,0,0,2,4,1997,false,false,false,false,0,0,0,0,0,0,615
7867675,mitchellh/vagrant,ruby,5801,1433547383,1433617850,1433617850,1174,1174,commits_in_master,false,false,false,8,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.706941126590322,0.08057707163765723,2,bhines@gmail.com,website/docs/source/v2/provisioning/chef_solo.html.md,2,0.012121212121212121,0,0,true,Update chef_solohtmlmd Updated to the new chefio site,,1454,0.7393397524071527,0.09090909090909091,30689,582.2933298576037,49.23588256378507,85.34002411287432,8575,15,1961,71,travis,jjasghar,sethvargo,false,sethvargo,1,1.0,59,34,1472,false,false,false,false,0,0,1,0,0,0,-1
7867644,mitchellh/vagrant,ruby,5800,1433547254,1433617841,1433617841,1176,1176,commits_in_master,false,false,false,8,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.753436378552959,0.08137301344942964,2,bhines@gmail.com,website/docs/source/v2/provisioning/chef_client.html.md,2,0.012121212121212121,0,0,true,Update chef_clienthtmlmd Updated to the new chefio site,,1453,0.7391603578802478,0.09090909090909091,30689,582.2933298576037,49.23588256378507,85.34002411287432,8575,15,1961,71,travis,jjasghar,sethvargo,false,sethvargo,0,0,59,34,1472,false,false,false,false,0,0,0,0,0,0,-1
7848547,mitchellh/vagrant,ruby,5795,1433451640,1433452871,1433452871,20,20,commits_in_master,false,false,false,10,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.51094845796663,0.07722191994086738,2,bhines@gmail.com,website/docs/source/v2/vagrantfile/ssh_settings.html.md,2,0.012422360248447204,0,0,false,Fix a typo in ssh_settingshtmlmd Just a typo fix :),,1451,0.7394900068917988,0.09316770186335403,30689,582.2933298576037,49.23588256378507,85.34002411287432,8566,15,1960,69,travis,ivuk,sethvargo,false,sethvargo,1,1.0,42,101,1536,false,false,false,false,0,0,0,0,0,0,-1
7816088,mitchellh/vagrant,ruby,5785,1433290706,1433292270,1433292270,26,26,commits_in_master,false,false,true,5,4,4,0,0,0,0,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,26,0,26,0,26.335466956188608,0.45083106445836824,4,sneal@sneal.net,lib/vagrant/box_collection.rb|vagrant.gemspec|lib/vagrant/box_collection.rb|lib/vagrant/box_collection.rb|lib/vagrant/box_collection.rb|vagrant.gemspec,4,0.025157232704402517,0,0,false,Ignore hidden directories Fixes https://githubcom/philwrenn/vagrant/commit/0b3d3097507a89d67f5f222e0df572fbe42faa84,,1449,0.7398205659075224,0.09433962264150944,30687,582.3312803467267,49.23909147195881,85.34558607879558,8534,15,1958,69,travis,sethvargo,sethvargo,true,sethvargo,44,0.8636363636363636,498,65,1716,true,false,false,false,236,304,81,60,132,1,-1
7804089,mitchellh/vagrant,ruby,5775,1433243242,1433289941,1433289941,778,778,commits_in_master,false,false,false,22,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.739091122131238,0.08112683447429005,0,,website/docs/source/v2/hyperv/index.html.md,0,0.0,0,0,false,website: Improve description to enable Hyper-V on Windows 81 The step to click on Turn Windows features on or off was missing,,1448,0.7396408839779005,0.09803921568627451,30681,582.1192268830872,49.1835337831231,85.29708940386558,8531,15,1958,70,travis,sschuberth,sethvargo,false,sethvargo,0,0,47,40,1768,false,true,false,false,0,0,0,0,0,0,-1
7784756,mitchellh/vagrant,ruby,5771,1433140846,1433290030,1433290030,2486,2486,commits_in_master,false,false,true,41,3,3,0,3,0,3,0,3,0,0,6,6,6,0,0,0,0,6,6,6,0,0,68,36,68,36,79.65300567114647,1.3635603720363456,22,taliesins@yahoo.com,lib/vagrant/ui.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|test/unit/vagrant/ui_test.rb|lib/vagrant/ui.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|test/unit/vagrant/ui_test.rb|lib/vagrant/ui.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|test/unit/vagrant/ui_test.rb,16,0.0273972602739726,0,2,false,Add UI::Interface#color This adds a color function to the UI classes that returns false by default and then true for the colored ui You can see from the output that this is more explicit than checking the type of UI class,,1446,0.739972337482711,0.1095890410958904,30677,581.6735665156306,49.15734915408938,85.1778205169997,8518,14,1957,76,travis,sethvargo,sethvargo,true,sethvargo,43,0.8604651162790697,498,65,1715,true,false,false,false,235,293,73,57,121,0,187
7784071,mitchellh/vagrant,ruby,5770,1433134963,1433135225,1433135225,4,4,commits_in_master,false,false,true,9,4,4,0,0,0,0,0,0,2,0,3,5,3,0,0,2,0,3,5,3,0,0,70,0,70,0,24.650360627754445,0.4229184336472446,0,,plugins/guests/fedora/cap/flavor.rb|plugins/guests/fedora/cap/nfs_client.rb|plugins/guests/fedora/plugin.rb|plugins/guests/fedora/cap/flavor.rb|plugins/guests/fedora/cap/nfs_client.rb|plugins/guests/fedora/cap/flavor.rb,0,0.0,0,0,false,Add nfs and flavor cap to Fedora Closes https://githubcom/mitchellh/vagrant/pull/4847,,1445,0.7397923875432526,0.12213740458015267,30635,581.1653337685653,49.15945813611882,85.22931287742779,8517,14,1957,84,travis,sethvargo,sethvargo,true,sethvargo,42,0.8571428571428571,498,65,1715,true,false,false,false,233,276,62,52,106,0,-1
7783868,mitchellh/vagrant,ruby,5769,1433133221,1433133548,1433133548,5,5,commits_in_master,false,false,true,19,2,2,0,0,0,0,0,0,0,0,3,3,2,0,1,0,0,3,3,2,0,1,25,0,25,0,20.41275893064449,0.3502152174452109,16,t.rensen@student.tudelft.nl,lib/vagrant/config/loader.rb|plugins/kernel_v2/config/vm.rb|lib/vagrant/config/loader.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml,14,0.031746031746031744,0,0,false,Pr 4711 Rebases and fixes https://githubcom/mitchellh/vagrant/pull/4711 Also adds some additional resilience for strange backtraces and fixes some style things,,1444,0.739612188365651,0.12698412698412698,30618,581.4880135867791,49.186752890456596,85.2766346593507,8517,14,1956,87,travis,sethvargo,sethvargo,true,sethvargo,41,0.8536585365853658,498,65,1714,true,false,false,false,233,272,57,50,101,0,-1
7783786,mitchellh/vagrant,ruby,5768,1433132558,,1433133500,15,,unknown,false,false,true,20,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,33,5,33,8.681959559017894,0.14895362087715497,2,bhines@gmail.com,lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/plugin/v2/command_test.rb,2,0.016,0,0,false,Always call @enmachine_names to check if there is a machine with such a name - Closes #4557- Fixes #4556,,1443,0.7401247401247402,0.128,30618,581.4880135867791,49.186752890456596,85.2766346593507,8517,14,1956,87,travis,sethvargo,sethvargo,true,,40,0.875,498,65,1714,true,false,false,false,233,272,56,50,100,0,-1
7753518,mitchellh/vagrant,ruby,5765,1432900281,1436522700,1436522700,60373,60373,commits_in_master,false,false,true,52,14,12,0,11,0,11,0,3,0,0,2,4,2,0,0,0,0,4,4,4,0,0,38,147,122,147,81.2201862709006,1.425063236554861,0,,test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,0,0.0,2,13,true,Store the first SSH private key in generated Ansible inventory Pending before merge:* [ ] Confirmation from @mitchellh or @sethvargo that we add this feature even if Ansible Parallelism is not officially supported (but so awesome and popular -)* [ ] Test Feedbacks* [ ] Documentation Updates (*coming soon*),,1442,0.7399445214979196,0.3902439024390244,29776,579.0905427189683,49.30145083288555,86.41187533584095,8503,14,1954,139,travis,gildegoma,gildegoma,true,gildegoma,20,0.95,49,127,1692,true,true,false,false,0,9,0,0,9,0,4292
7744680,mitchellh/vagrant,ruby,5763,1432846595,,1432853930,122,,unknown,false,false,false,10,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.55958940726017,0.08000108761631124,0,,plugins/provisioners/docker/cap/debian/docker_install.rb,0,0.0,0,0,false,Fix issue with running apt-get update with docker Fixes #5748,,1441,0.7404580152671756,0.47058823529411764,29776,579.0905427189683,49.30145083288555,86.41187533584095,8500,14,1953,131,travis,miguel250,miguel250,true,,1,1.0,26,27,1706,false,true,false,false,0,0,0,0,0,0,-1
7717316,mitchellh/vagrant,ruby,5759,1432725529,,1447997454,254532,,unknown,false,false,false,44,1,1,4,0,0,4,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.360602230041222,0.0765097226758919,0,,plugins/providers/virtualbox/provider.rb,0,0.0,0,0,false,Allow vagrant ssh-config with a halted VM Allow vagrant ssh-config on a halted VM on virtualbox : https://githubcom/github/hub/issues/910If the VM is not running the vagrant ssh command already protects the user from trying to connect so this wont lead to an unexpected error,,1440,0.7409722222222223,0.46153846153846156,29776,579.0905427189683,49.30145083288555,86.41187533584095,8485,14,1952,150,travis,peckpeck,sethvargo,false,,0,0,0,0,337,false,false,false,false,0,0,0,0,0,0,4910
7682197,mitchellh/vagrant,ruby,5750,1432478300,1433057694,1433057694,9656,9656,commits_in_master,false,false,false,41,3,1,0,0,0,0,0,0,2,0,2,5,4,0,0,2,0,3,5,4,0,0,63,0,79,0,17.73046496421937,0.3110928297578156,1,xmitchx@gmail.com,lib/vagrant/errors.rb|plugins/guests/darwin/cap/choose_addressable_ip_addr.rb|plugins/guests/darwin/cap/mount_smb_shared_folder.rb|plugins/guests/darwin/plugin.rb,1,0.0,0,0,false,Capability to mount smb shares in darwin guests This integrates a simple [plugin](https://githubcom/alh84001/vagrant-darwin-smb) I wrote that enables mounting SMB shares in OSX boxesIn addition to mount_smb_shared_folder capability choose_addressable_ip_addr capability is also addedRelated issue I opened some time ago:https://githubcom/mitchellh/vagrant/issues/5392,,1437,0.7418232428670842,0.7402597402597403,29776,579.0905427189683,49.30145083288555,86.41187533584095,8468,14,1949,131,travis,alh84001,sethvargo,false,sethvargo,0,0,0,0,984,false,false,false,false,0,0,0,0,0,0,-1
7669182,mitchellh/vagrant,ruby,5749,1432340618,1433023147,1433023147,11375,11375,commits_in_master,false,false,false,6,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.55958940726017,0.08000103630112437,0,,plugins/provisioners/docker/cap/debian/docker_install.rb,0,0.0,0,0,true,change to https in sourceslistd https://githubcom/mitchellh/vagrant/issues/5748 ,,1436,0.7416434540389972,0.7402597402597403,29776,579.0905427189683,49.30145083288555,86.41187533584095,8455,14,1947,131,travis,jeremyplichta,sethvargo,false,sethvargo,0,0,0,1,658,false,false,false,false,0,0,0,0,0,0,-1
7659456,mitchellh/vagrant,ruby,5743,1432300692,,1436484588,69731,,unknown,false,false,false,40,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,3.963604603134774,0.06954408553405857,0,,plugins/provisioners/ansible/provisioner.rb,0,0.0,0,2,true,Fix ansible with vagrant-libvirt and machines without ip The vagrant-libvirt raises an exception when trying to get an ssh_info for amachine without an ip address We just want to skip the machine that produces error on getting the ssh_info,,1435,0.7421602787456446,0.7402597402597403,29776,579.0905427189683,49.30145083288555,86.41187533584095,8450,14,1947,139,travis,iNecas,mitchellh,false,,2,0.5,38,11,1942,false,false,false,false,0,3,2,0,0,0,2
7617220,mitchellh/vagrant,ruby,5738,1432093440,1433058268,1433058268,16080,16080,commits_in_master,false,false,true,15,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.660793764856987,0.08177673423415383,1,xmitchx@gmail.com,vagrant.gemspec,1,0.012987012987012988,0,0,false,Use latest winrm-fs release winrm-fs 020 is a bit more polished Vagrant should use it,,1434,0.7419804741980475,0.7402597402597403,29776,579.0905427189683,49.30145083288555,86.41187533584095,8428,14,1944,129,travis,sneal,sethvargo,false,sethvargo,30,0.9,37,0,1930,true,false,false,false,0,0,2,0,3,0,-1
7613634,mitchellh/vagrant,ruby,5736,1432076433,1433057822,1433057822,16356,16356,commit_sha_in_comments,false,false,false,34,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.728160662081889,0.08295873136350104,1,xmitchx@gmail.com,vagrant.gemspec,1,0.013157894736842105,0,1,false,Update dependency to allow most recent bundler version Making changes to vagrantgemspec to allow successful execution of bundler install with the latest version of bundler (version 199)Changed from  180 to  199,,1433,0.7418004187020237,0.75,29776,579.0905427189683,49.30145083288555,86.41187533584095,8427,14,1944,129,travis,Ryanbarnes420,sethvargo,false,sethvargo,0,0,0,0,175,false,true,false,false,0,0,0,0,0,0,-1
7612489,mitchellh/vagrant,ruby,5735,1432072532,1433023813,1433023813,15854,15854,commits_in_master,false,false,false,14,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.676066733715901,0.08204470865618455,22,sethvargo@gmail.com,CHANGELOG.md,22,0.2894736842105263,0,0,false,Update CHANGELOGmd Change file to folder based on what I expect it should read,,1432,0.7416201117318436,0.75,29776,579.0905427189683,49.30145083288555,86.41187533584095,8427,14,1944,130,travis,chrisbaldauf,sethvargo,false,sethvargo,0,0,7,0,1642,false,false,false,false,0,0,0,0,0,0,-1
7603255,mitchellh/vagrant,ruby,5730,1432035957,1433023098,1433023098,16452,16452,commits_in_master,false,false,false,25,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.6411447909753925,0.08143197988625611,1,xmitchx@gmail.com,plugins/guests/fedora/guest.rb,1,0.013157894736842105,0,0,false,Recognize new Fedora releases With Fedora 22 to be release and Fedora 23 in development lets fix the Fedora recognition pattern for Fedora future releases,,1430,0.7419580419580419,0.75,29776,579.0905427189683,49.30145083288555,86.41187533584095,8421,14,1944,131,travis,strzibny,sethvargo,false,sethvargo,0,0,10,4,1204,false,false,false,false,0,0,0,0,0,0,-1
7558710,mitchellh/vagrant,ruby,5721,1431719737,1433025342,1433025342,21760,21760,commits_in_master,false,false,true,13,5,4,2,2,0,4,0,2,18,0,9,27,19,8,0,18,0,9,27,19,8,0,6,1362,8,1362,277.0354337651958,4.86074952899746,0,,templates/guests/arch/network_static.erb|templates/guests/debian/network_static.erb|templates/guests/fedora/network_static.erb|templates/guests/freebsd/network_static.erb|templates/guests/funtoo/network_static.erb|templates/guests/gentoo/network_static.erb|templates/guests/redhat/network_static.erb|templates/guests/suse/network_static.erb|test/unit/templates/guests/arch/network_dhcp_test.rb|test/unit/templates/guests/arch/network_static_test.rb|test/unit/templates/guests/debian/network_dhcp_test.rb|test/unit/templates/guests/debian/network_static_test.rb|test/unit/templates/guests/fedora/network_dhcp_test.rb|test/unit/templates/guests/fedora/network_static_test.rb|test/unit/templates/guests/freebsd/network_dhcp_test.rb|test/unit/templates/guests/freebsd/network_static_test.rb|test/unit/templates/guests/funtoo/network_dhcp_test.rb|test/unit/templates/guests/funtoo/network_static_test.rb|test/unit/templates/guests/gentoo/network_dhcp_test.rb|test/unit/templates/guests/gentoo/network_static_test.rb|test/unit/templates/guests/netbsd/network_dhcp_test.rb|test/unit/templates/guests/netbsd/network_static_test.rb|test/unit/templates/guests/redhat/network_dhcp_test.rb|test/unit/templates/guests/redhat/network_static_test.rb|test/unit/templates/guests/suse/network_dhcp_test.rb|test/unit/templates/guests/suse/network_static_test.rb|website/docs/source/v2/networking/private_network.html.md|templates/guests/redhat/network_static.erb|templates/guests/redhat/network_static.erb|templates/guests/arch/network_static.erb|templates/guests/debian/network_static.erb|templates/guests/fedora/network_static.erb|templates/guests/freebsd/network_static.erb|templates/guests/funtoo/network_static.erb|templates/guests/gentoo/network_static.erb|templates/guests/redhat/network_static.erb|templates/guests/suse/network_static.erb|test/unit/templates/guests/arch/network_dhcp_test.rb|test/unit/templates/guests/arch/network_static_test.rb|test/unit/templates/guests/debian/network_dhcp_test.rb|test/unit/templates/guests/debian/network_static_test.rb|test/unit/templates/guests/fedora/network_dhcp_test.rb|test/unit/templates/guests/fedora/network_static_test.rb|test/unit/templates/guests/freebsd/network_dhcp_test.rb|test/unit/templates/guests/freebsd/network_static_test.rb|test/unit/templates/guests/funtoo/network_dhcp_test.rb|test/unit/templates/guests/funtoo/network_static_test.rb|test/unit/templates/guests/gentoo/network_dhcp_test.rb|test/unit/templates/guests/gentoo/network_static_test.rb|test/unit/templates/guests/netbsd/network_dhcp_test.rb|test/unit/templates/guests/netbsd/network_static_test.rb|test/unit/templates/guests/redhat/network_dhcp_test.rb|test/unit/templates/guests/redhat/network_static_test.rb|test/unit/templates/guests/suse/network_dhcp_test.rb|test/unit/templates/guests/suse/network_static_test.rb|website/docs/source/v2/networking/private_network.html.md,0,0.0,0,2,true,Sethvargo/network gateway Spawned out of https://githubcom/mitchellh/vagrant/pull/2870 with support for more OSes and configurations,,1429,0.741777466759972,0.7375,29776,579.0905427189683,49.30145083288555,86.41187533584095,8381,15,1940,130,travis,sethvargo,sethvargo,true,sethvargo,39,0.8717948717948718,497,65,1698,true,false,false,false,123,174,10,11,22,0,21746
7553332,mitchellh/vagrant,ruby,5719,1431696379,,1432033385,5616,,unknown,false,false,false,102,1,1,0,8,0,8,0,3,0,0,5,5,5,0,0,0,0,5,5,5,0,0,35,21,35,21,20.56248430188281,0.3607808738650645,2,xmitchx@gmail.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md,2,0.0,0,7,true,Ansible configgenerated_inventory_path option Allow to customize the path where the inventory gets generated and generate iteven when other inventory_path is defined since it can be useful later (forusing ansible outside of vagrant provision)When specified this path gets passed as the inventory file (unless otherinventory file specified)In my use-case I define multiple vms in my Vagrantfile and using differentcombination of the vms for different playbooks I want to keep the generated inventoriesseparated Also I want to be able to use them to call ansible-plabookdirectly for example for playbooks that are not defined in the Vagrantfile,,1428,0.742296918767507,0.7564102564102564,29776,579.0905427189683,49.30145083288555,86.41187533584095,8380,15,1940,121,travis,iNecas,iNecas,true,,1,1.0,38,11,1935,false,false,false,false,0,0,0,0,0,0,276
7527597,mitchellh/vagrant,ruby,5713,1431553474,1433057916,1433057916,25074,25074,commits_in_master,false,false,false,91,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,5.085965189286413,0.0892365500576809,0,,Vagrantfile,0,0.0,0,0,false,Fix Vagrantfile to develop Vagrant This fixes the following issues when using the provided Vagrantfilethat can be used to develop Vagrant* use -s for curl* set a hostname* set the configsshshell in the development Vagrantfile default: stdin: is not a tty* export the DEBIAN_FRONTEND variable default: dpkg-preconfigure: unable to re-open stdin: No such file ordirectory* import the mpapis public key to verify downloaded release default: -su: rvm: command not found* use official Ubuntu Trusty boxNew release 14042 LTS available,,1427,0.7421163279607569,0.7662337662337663,29776,579.0905427189683,49.30145083288555,86.41187533584095,8362,14,1938,126,travis,berendt,sethvargo,false,sethvargo,15,0.7333333333333333,24,8,1688,false,false,false,false,0,7,0,0,0,0,-1
7520002,mitchellh/vagrant,ruby,5709,1431520825,1433023696,1433023696,25047,25047,commits_in_master,false,false,false,16,2,1,0,5,0,5,0,5,0,0,1,2,1,0,0,0,0,2,2,2,0,0,3,0,7,0,4.632734039222715,0.08128431627213387,0,,plugins/guests/redhat/cap/configure_networks.rb,0,0.0,0,1,false,Restart NetworkManager on Redhad 7 Fix for #5590 This changes has created /etc/sysconfig/network-script/ifcfg-# {interface} to enable,,1426,0.7419354838709677,0.7662337662337663,29776,579.0905427189683,49.30145083288555,86.41187533584095,8358,14,1938,130,travis,linyows,sethvargo,false,sethvargo,0,0,67,83,2225,false,true,false,false,0,0,0,0,0,0,433
7512373,mitchellh/vagrant,ruby,5707,1431474277,1433023747,1433023747,25824,25824,commits_in_master,false,false,false,34,2,2,2,5,0,7,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,8.620649358494354,0.15125487088064984,0,,plugins/guests/fedora/cap/configure_networks.rb|plugins/guests/fedora/cap/configure_networks.rb,0,0.0,0,0,false,fedora: dont try to use biosdevname if its not installed If biosdevname isnt installed it doesnt make sense to try using itfor persistent device names  Just treat lack of biosdevname asvirtual networking,,1425,0.7417543859649123,0.7662337662337663,29776,579.0905427189683,49.30145083288555,86.41187533584095,8351,14,1937,129,travis,dcbw,sethvargo,false,sethvargo,0,0,7,0,92,false,false,false,false,0,0,0,0,0,0,1893
7512147,mitchellh/vagrant,ruby,5706,1431472822,1436484667,1436484667,83530,83530,commits_in_master,false,true,false,92,1,1,0,15,0,15,0,6,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.236935934062426,0.07433978242076734,0,,plugins/guests/fedora/cap/configure_networks.rb,0,0.0,0,8,false,Remove docker0 from guest network interface enumeration Using vagrant-libvirt setting a fixed interface IP address fails if the guest VM runs RHEL7 or Fedora and has a docker0 interfaceThe symptom is that **eth0** is brought up successfully for management Vagrant connects in via ssh then **eth1** fixed IP configuration is erroneously written to /etc/sysconfig/network-scripts/ifcfg-**eth0** Then eth0 is bounced (incorrectly) and the up process hangsThe fault occurs because docker0 is not removed from this network interface enumeration causing a subsequent off-by-one error The fault was probably introduced (inadvertently) in commit 55a90445cdfc290d4a1f68c66835c0249ca59cdd,,1424,0.7415730337078652,0.7662337662337663,29776,579.0905427189683,49.30145083288555,86.41187533584095,8350,14,1937,131,travis,jim-minter,mitchellh,false,mitchellh,0,0,23,0,1341,false,false,false,false,0,0,0,0,0,0,49339
7501067,mitchellh/vagrant,ruby,5702,1431367463,1431367492,1431367492,0,0,github,false,false,false,35,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.109310106172977,0.07210050491496703,2,t.rensen@student.tudelft.nl,templates/locales/en.yml,2,0.025974025974025976,0,0,false,Add missing word to output of vagrant up Add the word flag to the phrase or use the --provision flag which is displayed when vagrant up is run for a VM thats already been provisioned,,1423,0.741391426563598,0.7662337662337663,29776,579.0905427189683,49.30145083288555,86.41187533584095,8343,14,1936,116,travis,leocassarani,,false,,0,0,30,2,1733,true,false,false,false,0,0,0,0,1,0,-1
7475913,mitchellh/vagrant,ruby,5698,1431226364,1433023005,1433023005,29944,29944,commits_in_master,false,false,false,20,3,2,2,2,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,22,0,9.030565706496674,0.1584471189283344,0,,lib/vagrant.rb|lib/vagrant.rb,0,0.0,0,0,false,If plugins are disabled report them as not available Allows usage of VAGRANT_NO_PLUGINS env var to disable pluginsFixes #5430,,1422,0.7412095639943741,0.7375,29776,579.0905427189683,49.30145083288555,86.41187533584095,8334,13,1934,132,travis,aneeshusa,sethvargo,false,sethvargo,1,0.0,9,18,1010,true,false,false,false,2,1,1,0,1,0,6027
7445116,mitchellh/vagrant,ruby,5691,1431027415,1433023352,1433023352,33265,33265,commits_in_master,false,false,false,58,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,4.040546898808957,0.0708940099456361,2,xmitchx@gmail.com,plugins/providers/virtualbox/action/network.rb,2,0.025,0,5,false,virtualbox: handle a list of bridged nics This change allows you to specify multiple network interfaces to bridge to in the order you want them tried picking the first matchrubyVAGRANTFILE_API_VERSION  2Vagrantconfigure(VAGRANTFILE_API_VERSION) do |config|  #   configvmnetwork public_network    bridge: [en4: Thunderbolt Ethernet             en6: Broadcom NetXtreme Gigabit Ethernet Controller             en0: Wi-Fi (AirPort)]  # end,,1421,0.741027445460943,0.75,29776,579.0905427189683,49.30145083288555,86.41187533584095,8322,11,1932,129,travis,bergman,sethvargo,false,sethvargo,0,0,14,13,2206,false,false,false,false,0,0,0,0,0,0,9351
7427413,mitchellh/vagrant,ruby,5685,1430941348,1433099415,1433099415,35967,35967,merged_in_comments,false,false,false,26,3,1,0,6,0,6,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,7,0,4.784554625075353,0.0839482409101103,0,,website/docs/source/v2/vmware/configuration.html.md,0,0.0,0,7,false,Document syncing time on VMWare VMs This was a real source of confusion for me as I had VMs slowly losing time breaking API request signing,,1420,0.7408450704225352,0.7468354430379747,29769,579.0587523934294,49.27945177869596,86.39860257314656,8315,11,1931,121,travis,deviantintegral,sethvargo,false,sethvargo,1,1.0,17,0,1834,false,false,false,false,0,0,0,0,0,0,35070
7415199,mitchellh/vagrant,ruby,5680,1430875513,1433056865,1433056865,36355,36355,commits_in_master,false,false,false,74,1,1,0,2,0,2,0,2,2,0,2,4,0,2,2,2,0,2,4,0,2,2,0,0,0,0,9.752634707249666,0.17111655986153648,0,,website/docs/source/favicon.ico|website/docs/source/layouts/layout.erb|website/www/source/favicon.ico|website/www/source/layouts/layout.erb,0,0.0,0,1,false,added favicon for www & doc pull request for issue #4153favicon for the:- website (original logo)- docs (logo colored in the purple of the docs text)i wasnt able to test the changes because middlemans dependency on therubyracer middleman doesnt want to run on my system i really tried it :)please let me know if i the files are in the right location and correctly referenced from the layouterb file,,1419,0.740662438336857,0.7468354430379747,29769,579.0587523934294,49.27945177869596,86.39860257314656,8309,11,1930,125,travis,c33s,sethvargo,false,sethvargo,0,0,20,37,1524,false,false,false,false,0,0,0,0,0,0,8
7406480,mitchellh/vagrant,ruby,5677,1430843924,1433058019,1433058019,36901,36901,commits_in_master,false,false,false,32,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.291299048812469,0.07529373883182758,0,,lib/vagrant/util/downloader.rb,0,0.0,0,0,false,Escape/unescape cURL URLs/auth Goal is to enable passwords with special characters to be usedEscape special characters in URL provided before parsing with URIparse then unescape them again in the authentication details,,1418,0.7404795486600846,0.7468354430379747,29769,579.0587523934294,49.27945177869596,86.39860257314656,8305,11,1930,121,travis,mrahtz,sethvargo,false,sethvargo,0,0,5,0,721,false,false,false,false,0,0,0,0,0,0,-1
7372360,mitchellh/vagrant,ruby,5671,1430602909,,1447997262,289905,,unknown,false,false,false,66,4,4,0,4,0,4,0,3,0,0,6,6,6,0,0,0,0,6,6,6,0,0,94,42,94,42,55.200986536637544,0.968538574513698,0,,test/unit/plugins/commands/plugin/action/install_gem_test.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/command/install.rb|plugins/commands/plugin/command/mixin_install_opts.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/command/install.rb|plugins/commands/plugin/command/mixin_install_opts.rb|test/unit/plugins/commands/plugin/action/install_gem_test.rb,0,0.0,0,0,false,Feature as described in #4486 implemented and ready for review Hi mitchellhIve finished the implementation of the feature Plugin installation: Add an option to only use the provided plugin source as installation source (#4486) and would like you to review it and in case that youre happy with the implementation to also merge back the feature into your repository if you likeBest regardsmahnkong,,1417,0.7410021171489062,0.6947368421052632,29769,579.0587523934294,49.27945177869596,86.39860257314656,8287,11,1927,135,travis,mahnkong,sethvargo,false,,0,0,0,0,1546,false,false,false,false,0,0,0,0,0,0,40712
7371161,mitchellh/vagrant,ruby,5670,1430593639,1448398749,1448398749,296751,296751,commits_in_master,false,false,false,36,2,2,0,4,0,4,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,25,0,25,0,9.275471493115887,0.16274440914062918,0,,plugins/hosts/windows/cap/rdp.rb|plugins/hosts/windows/cap/rdp.rb,0,0.0,0,1,false,add RDP auto login with password This change cmdkey arguments are okNo need to manually enter credentials Tested with different RDP ports on the same machinePlease consider adding this improvement to vagrant code base ,,1416,0.740819209039548,0.6907216494845361,29769,579.0587523934294,49.27945177869596,86.39860257314656,8285,11,1927,135,travis,agdula,sethvargo,false,sethvargo,1,1.0,4,2,597,false,false,false,false,0,1,2,0,0,0,296751
7370942,mitchellh/vagrant,ruby,5669,1430591907,1433057504,1433057504,41093,41093,commits_in_master,false,false,false,20,1,1,0,0,0,0,0,1,1,0,4,5,5,0,0,1,0,4,5,5,0,0,79,0,79,0,21.75357413339683,0.3816811438280068,4,sethvargo@gmail.com,plugins/provisioners/chef/cap/windows/chef_installed.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_apply.rb|plugins/provisioners/chef/provisioner/chef_client.rb,4,0.0,0,0,false,Use powershell syntax for Chef provisioner when using windows guest Use powershell syntax for Chef provisioner when using windows guest,,1415,0.7406360424028269,0.6907216494845361,29769,579.0587523934294,49.27945177869596,86.39860257314656,8285,11,1927,124,travis,taliesins,sethvargo,false,sethvargo,1,0.0,13,4,1772,false,false,false,false,0,0,1,0,0,0,-1
7370926,mitchellh/vagrant,ruby,5668,1430591803,,1447889157,288289,,unknown,false,false,false,100,2,1,0,3,0,3,0,4,7,0,21,29,27,0,1,7,0,22,29,27,0,1,828,0,830,0,125.37577102445941,2.1998025427677885,6,xmitchx@gmail.com,lib/vagrant/machine.rb|lib/vagrant/util/powershell.rb|plugins/guests/linux/cap/choose_addressable_ip_addr.rb|plugins/guests/windows/cap/choose_addressable_ip_addr.rb|plugins/kernel_v1/config/synced_folder.rb|plugins/kernel_v1/plugin.rb|plugins/kernel_v2/config/synced_folder.rb|plugins/kernel_v2/plugin.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/action/network.rb|plugins/providers/hyperv/action/read_guest_ip.rb|plugins/providers/hyperv/action/wait_for_ip_address.rb|plugins/providers/hyperv/cap/nic_mac_addresses.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/plugin.rb|plugins/providers/hyperv/provider.rb|plugins/providers/hyperv/scripts/enable_adapters.ps1|plugins/providers/hyperv/scripts/get_network_config.ps1|plugins/providers/hyperv/scripts/get_network_interfaces.ps1|plugins/providers/hyperv/scripts/import_vm.ps1|plugins/synced_folders/smb/scripts/host_info.ps1|plugins/synced_folders/smb/scripts/remove_share.ps1|plugins/synced_folders/smb/scripts/set_share.ps1|plugins/synced_folders/smb/synced_folder.rb|templates/locales/providers_hyperv.yml,3,0.0,0,2,false,Hyper V fuller network support  Support for configuring network adapters for Hyper v by specifying the switch to useReconfigure network adapters based on configuration (not only at import time)Better naming convention for duplicate machine names for Hyper vAdd support for different versions of Hyper V generationMake detection of addressable ip addresses a little smarterCan specify username and password for shared folder supportAdd support for detecting nic mac addressesDo not return 16925400 addresses for addressable addressesReturn ipv6 without scope id (ruby does not like it)Remove shares when they are not used anymore,,1414,0.7411598302687411,0.6907216494845361,29769,579.0587523934294,49.27945177869596,86.39860257314656,8285,11,1927,199,travis,taliesins,mitchellh,false,,0,0,13,4,1772,false,false,false,false,0,0,0,0,0,0,41106
7342857,mitchellh/vagrant,ruby,5658,1430410255,1433023431,1433023431,43552,43552,commits_in_master,false,false,false,30,1,1,2,2,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.6497761814283125,0.08158346212851297,0,,lib/vagrant/box.rb,0,0.0,0,1,false,Fix issue #5657: Take only files while box repackage It fixes GH-5657While doing a box repackage we have to select only files to avoid duplicates in the resulted tar,,1413,0.7409766454352441,0.6907216494845361,29769,579.0587523934294,49.27945177869596,86.39860257314656,8269,11,1925,129,travis,legal90,sethvargo,false,sethvargo,4,0.75,28,5,672,true,true,false,false,1,8,2,0,1,0,134
7310538,mitchellh/vagrant,ruby,5647,1430247779,1433019638,1433019638,46197,46197,commits_in_master,false,false,false,26,2,1,0,4,0,4,0,6,1,0,2,4,3,0,0,1,0,3,4,3,0,0,619,0,625,0,12.973722638664544,0.2276327221479701,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_5_0.rb|plugins/providers/virtualbox/plugin.rb,1,0.0,0,4,false,Support Virtualbox 50 (beta) by adding a driver referencing it in the  list of acceptable versions/drivers and autoloading the file in the virtualbox plugin file,,1411,0.741318214032601,0.6831683168316832,29769,579.0587523934294,49.27945177869596,86.39860257314656,8239,11,1923,133,travis,Stanzilla,sethvargo,false,sethvargo,0,0,23,48,2201,false,true,false,false,0,2,0,0,0,0,4
7288118,mitchellh/vagrant,ruby,5640,1430140371,1430144823,1430144823,74,74,commits_in_master,false,false,false,45,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,23,0,23,0,4.477487356088062,0.07856053837716058,0,,plugins/hosts/windows/cap/rdp.rb,0,0.0,1,0,false,add RDP auto login with password Hey GuysPlease consider adding this improvement to vagrant code base Its very annoying to enter password over and over again The fix is implementation of suggestion from @majkinetor for the closed issuehttps://githubcom/mitchellh/vagrant/issues/4300Works on windows 7 host,,1410,0.7411347517730497,0.6831683168316832,29769,579.0587523934294,49.27945177869596,86.39860257314656,8233,11,1922,105,travis,agdula,agdula,true,agdula,0,0,4,2,592,false,false,false,false,0,0,0,0,0,0,-1
7280812,mitchellh/vagrant,ruby,5638,1430087418,1433056833,1433056833,49490,49490,commits_in_master,false,false,false,59,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.631804187882528,0.08126813136900833,3,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,3,0.0297029702970297,0,0,false,fix master_config documentation Based on this vagrant code:          @machineenvuiinfo Copying salt master config to vm          @machinecommunicateupload(expanded_path(@configmaster_config)to_s temp_config_dir + /master)        endIt seems that the current documentation: * master_config (string default: salt/minion) Path to a custom salt master config fileis probably incorrect and the master_conifg probably defaults to salt/master not salt/minionUnless Im reading the code wrong,,1409,0.7409510290986515,0.6831683168316832,29769,579.0587523934294,49.27945177869596,86.39860257314656,8228,11,1921,123,travis,dmangot,sethvargo,false,sethvargo,0,0,10,2,1346,false,false,false,false,0,0,0,0,0,0,-1
7280339,mitchellh/vagrant,ruby,5637,1430084199,1433022926,1433022926,48978,48978,commits_in_master,false,false,false,21,1,1,0,0,0,0,0,0,0,0,2,2,1,0,1,0,0,2,2,1,0,1,4,0,4,0,8.479318881596068,0.14877537409548608,2,t.rensen@student.tudelft.nl,plugins/provisioners/salt/config.rb|templates/locales/en.yml,2,0.0196078431372549,0,0,false,Provide path to missing file When you cant find the salt minion or master config say what you were looking for,,1408,0.7407670454545454,0.6862745098039216,29769,579.0587523934294,49.27945177869596,86.39860257314656,8228,11,1921,132,travis,paul-krohn,sethvargo,false,sethvargo,0,0,3,1,1406,false,false,false,false,0,0,0,0,0,0,-1
7245823,mitchellh/vagrant,ruby,5629,1429835978,1433054660,1433054660,53644,53644,commits_in_master,false,false,false,69,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.203406068070778,0.09129727224060188,0,,website/docs/Vagrantfile,0,0.0,0,0,false,added gpg signature for rvm and bundle gem install to the docs Vagrantfile When attempting to run vagrant up on the Vagrantfile provided in the documentation directory I get an error related to rvms gpg signature and the bundle gem not being installed This commit adds a line to retrieve the key and another to install the bundle gem to the Vagrantfiles provisioning script Gist of the error:https://gistgithubcom/brooksbrown/e0d53d995d8dfcc9204d,,1405,0.7416370106761566,0.6826923076923077,29769,579.0587523934294,49.27945177869596,86.39860257314656,8212,11,1918,122,travis,brooksbrown,sethvargo,false,sethvargo,1,1.0,4,5,1116,false,false,false,false,0,1,1,0,0,0,53487
7227588,mitchellh/vagrant,ruby,5626,1429748445,1433141582,1433141582,56552,56552,commits_in_master,false,false,false,28,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.422354697534598,0.07759319866323931,0,,website/docs/source/v2/synced-folders/smb.html.md,0,0.0,0,0,false,Added a note on PowerShell to prerequisites SMB documentation Related to https://githubcom/mitchellh/vagrant/issues/5569 Adds a note on PowerShell version requirements to the prerequisites section of SMB synced folders documentation,,1404,0.7414529914529915,0.6761904761904762,29769,579.0587523934294,49.27945177869596,86.39860257314656,8203,11,1917,113,travis,brooksbrown,sethvargo,false,sethvargo,0,0,4,5,1115,false,false,false,false,0,0,0,0,0,0,-1
7220515,mitchellh/vagrant,ruby,5623,1429723165,1433022774,1433022774,54993,54993,commits_in_master,false,false,false,16,5,5,6,3,0,9,0,3,1,0,2,3,3,0,0,1,0,2,3,3,0,0,6,26,6,26,13.599475567866769,0.23861197973143808,0,,plugins/guests/tinycore/plugin.rb|plugins/guests/tinycore/cap/change_host_name.rb|test/unit/plugins/guests/tinycore/cap/change_host_name_test.rb,0,0.0,0,1,false,TinyCore change_host_name capability The capability code was already there but not declared in the plugin file,,1403,0.7412687099073414,0.6761904761904762,29769,579.0587523934294,49.27945177869596,86.39860257314656,8202,11,1917,132,travis,otagi,sethvargo,false,sethvargo,0,0,6,13,2171,false,true,false,false,0,0,0,0,0,0,19
7202455,mitchellh/vagrant,ruby,5617,1429636501,1429639109,1429639109,43,43,commits_in_master,false,false,false,63,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,39,0,39,0,5.162034775302698,0.09057241336323521,0,,website/docs/source/v2/synced-folders/nfs.html.md,0,0.0,0,1,false,[docs] Documenting more NFS options I recently went through quite a bit of NFS troubleshooting and found that there are several undocumented NFS options for Vagrant Its possible to override both client and server-side NFS arguments which is awesome So this PR aims to document these 2 options in the NFS sectionFor reference PR #1029  contains most commits which added these options,,1401,0.7416131334760885,0.6842105263157895,29769,579.0587523934294,49.27945177869596,86.39860257314656,8194,12,1916,97,travis,jfbibeau,sethvargo,false,sethvargo,1,1.0,0,0,533,false,false,false,false,0,6,1,0,0,0,-1
7187699,mitchellh/vagrant,ruby,5612,1429561188,1429579048,1429579048,297,297,commits_in_master,false,false,false,9,2,1,0,2,0,2,0,2,5,0,0,6,5,0,0,8,0,1,9,8,0,0,92,0,107,100,21.977473306204782,0.3880926037860819,0,,plugins/guests/photon/cap/change_host_name.rb|plugins/guests/photon/cap/configure_networks.rb|plugins/guests/photon/cap/docker.rb|plugins/guests/photon/guest.rb|plugins/guests/photon/plugin.rb,0,0.0,0,1,false,Add Guest support for VMware Photon Support for [Photon](https://vmwaregithubio/photon),,1399,0.7419585418155825,0.6446280991735537,29675,578.3319292333614,49.300758213984835,86.26790227464195,8183,11,1915,96,travis,frapposelli,sethvargo,false,sethvargo,0,0,70,9,1572,false,true,false,false,0,0,0,0,0,0,21
7159621,mitchellh/vagrant,ruby,5607,1429342758,1433055274,1433055274,61875,61875,commits_in_master,false,false,false,51,1,1,0,4,0,4,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,19,0,19,0,12.94379347074199,0.2285699743978903,5,sethvargo@gmail.com,plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|website/docs/source/v2/provisioning/shell.html.md,5,0.0,0,2,false,Add :name attribute to shell provisioner This allows the display of friendly output to the user when we think animportant action should be labeled a certain way This makes vagrantoutput a lot more useful when many inline shell provisioners arepresentThis patch includes documentation updates too w00t :),,1398,0.7417739628040058,0.6587301587301587,29675,578.3319292333614,49.300758213984835,86.26790227464195,8165,11,1913,120,travis,purpleidea,sethvargo,false,sethvargo,3,0.6666666666666666,117,97,2021,false,false,false,false,0,0,0,0,0,0,5602
7141869,mitchellh/vagrant,ruby,5604,1429248918,1433022714,1433022714,62896,62896,commits_in_master,false,false,false,33,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.487266695355126,0.07923909138323361,0,,lib/vagrant/util/ssh.rb,0,0.0,0,0,true,Update sshrb to detect PLink v064 PLink 064 (released 28-2-2015) changes the command-line description so the previous text-match no longer worksThis fixes one of the issues that frequently occurs on Windows systems,,1397,0.7415891195418755,0.6587301587301587,29675,578.3319292333614,49.300758213984835,86.26790227464195,8158,11,1912,132,travis,bluehaoran,sethvargo,false,sethvargo,0,0,0,2,797,false,false,false,false,0,0,0,0,0,0,-1
7139406,mitchellh/vagrant,ruby,5603,1429233482,1433019660,1433019660,63102,63102,commits_in_master,false,false,false,33,3,2,7,12,1,20,0,6,1,0,3,4,4,0,0,1,0,3,4,4,0,0,618,0,622,0,17.481666410697116,0.3087027039605913,6,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_5_0.rb|plugins/providers/virtualbox/plugin.rb,5,0.007936507936507936,0,5,false,Support virtualbox 5 0 This is in reference to #5572 Using the 43 driver for 50 works so adding it is an easy way to extend support to the new version of Virtualbox,,1396,0.7414040114613181,0.6587301587301587,29675,578.3319292333614,49.300758213984835,86.26790227464195,8155,11,1911,132,travis,michaeldhopkins,sethvargo,false,sethvargo,0,0,12,18,2022,false,false,false,false,1,3,0,0,0,0,3
7127053,mitchellh/vagrant,ruby,5601,1429182024,1433055889,1433055889,64564,64564,commits_in_master,false,false,false,225,17,16,0,4,2,6,0,4,0,0,6,6,5,0,1,0,0,6,6,5,0,1,474,0,485,0,104.6266823301457,1.8475664151775693,15,xmitchx@gmail.com,plugins/provisioners/puppet/plugin.rb|Vagrantfile|plugins/provisioners/puppet/config/puppet.rb|Vagrantfile|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|templates/locales/en.yml|vagrant.gemspec|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/config/puppet.rb|templates/locales/en.yml|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|templates/locales/en.yml|plugins/provisioners/puppet/provisioner/puppet.rb,12,0.0234375,0,1,false,Puppet 4 and Puppet environments support Submitted for review I can clean this up as desired let me knowPuppet 4 has been released and it removed the manifestdir parameterThe proper way to run Puppet now is using Puppet environmentsThis PR adds support for Puppet environments by adding two new options environment_path and environment  The binary path for puppet also changed it is no longer in the default $PATH so i added a bin_dir option (similar to the Chef provisioner) and try to autodetect puppets locationHowever with puppet apply (which Vagrant uses) the environments specified manifest is ignored It requires a manifest to be passed in For convenience in the Puppet provisioner im parsing the manifest from the environment config which normal puppet apply does not doYou can however override your environments manifest by using the pre existing manifests_path and manifest_file optionsYou can specify:puppetenvironment_path  /puppet/environmentspuppetenvironment  testenv-- If only environment and environments_path are specified it will parse and use the manifest specified in the environmentconf file-- If manifests_path and manifest_file is specified along with the environment options the manifest from the environment will be overridden by the specified manifest_file-- If manifests_path and manifest_file are specified without environments the old non-environment mode will be used (which will fail on Puppet 4+)Resolves https://githubcom/mitchellh/vagrant/issues/5578 and https://githubcom/mitchellh/vagrant/issues/3740,,1395,0.7412186379928315,0.65625,29675,578.3319292333614,49.300758213984835,86.26790227464195,8151,11,1911,117,travis,benh57,sethvargo,false,sethvargo,1,1.0,0,0,1403,false,false,false,false,1,2,0,0,0,0,10853
7095750,mitchellh/vagrant,ruby,5593,1429027473,1429033216,1429033216,95,95,commits_in_master,false,false,true,28,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.8208468993396965,0.08512963703757995,0,,plugins/provisioners/salt/bootstrap-salt.ps1,0,0.0,0,0,false,Salt bootstrap ps1 should be idempotent - WinRM communicator error detection was tightened up thus exposing an issue in the salt bootstrap script creating directories that already exist,,1394,0.7410329985652798,0.6231884057971014,29675,578.3319292333614,49.300758213984835,86.26790227464195,8144,13,1909,93,travis,sneal,sneal,true,sneal,29,0.896551724137931,37,0,1895,true,false,false,false,1,7,6,3,8,0,18
7084658,mitchellh/vagrant,ruby,5592,1428965929,1433055681,1433055681,68162,68162,commits_in_master,false,false,false,8,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.47006140379133,0.07893523955149297,5,xmitchx@gmail.com,website/docs/source/v2/provisioning/salt.html.md,5,0.034482758620689655,0,0,false,Add documentation for salt bootstrap script config parameter ,,1393,0.7408470926058865,0.6,29675,578.3319292333614,49.300758213984835,86.26790227464195,8138,15,1908,118,travis,notpeter,sethvargo,false,sethvargo,0,0,2,1,1994,false,false,false,false,0,0,0,0,0,0,-1
7082751,mitchellh/vagrant,ruby,5591,1428958556,1433141867,1433141867,69721,69721,commits_in_master,false,false,false,91,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,25,0,25,0,4.292452395608055,0.07579890464666167,2,max@devopsy.com,plugins/communicators/ssh/communicator.rb,2,0.013605442176870748,0,0,false,Move shell_cmd to a method in SSH::Communicator This allows shell_cmd to be overridable by plugins/patches without having to override the entire (large) shell_execute methodOur use case is specifically to allow us to patch this method in a plugin to get around the change here https://githubcom/mitchellh/vagrant/commit/9cd9e6e55d802553fa90e63d966b302006b45de5 which I understand in non-revertable This gives us a simple way to make the patch without having to run a separate fork or have major impact on the codebase (this actually changes nothing about default behavior and is really just moving code into a method),,1392,0.7406609195402298,0.6054421768707483,29675,578.3319292333614,49.300758213984835,86.26790227464195,8138,15,1908,107,travis,quirkey,sethvargo,false,sethvargo,0,0,513,42,2602,false,false,false,false,0,0,0,0,0,0,-1
7058116,mitchellh/vagrant,ruby,5584,1428766721,1433141205,1433141205,72908,72908,commits_in_master,false,false,false,5,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.150972463428613,0.07330056036690721,5,t.rensen@student.tudelft.nl,templates/locales/en.yml,5,0.03184713375796178,0,0,false,Fix message provision / disabled_by_config ,,1391,0.7404744787922358,0.6178343949044586,29675,578.3319292333614,49.300758213984835,86.26790227464195,8122,16,1906,108,travis,stoned,sethvargo,false,sethvargo,1,1.0,2,0,2052,false,false,false,false,0,0,0,0,0,0,-1
7048128,mitchellh/vagrant,ruby,5577,1428697554,1433141089,1433141089,74058,74058,commits_in_master,false,false,false,34,1,1,0,2,1,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.384445115432229,0.0774233716775073,0,,plugins/provisioners/docker/cap/debian/docker_configure_auto_start.rb,0,0.0,0,0,true,Use service command to restart docker not upstart Very simple tweak Im using personally for Debian-based boxes upstart ships by default on Ubuntu but not on Debian and service works in both Fixes #5245,,1390,0.7402877697841727,0.6178343949044586,29675,578.3319292333614,49.300758213984835,86.26790227464195,8112,16,1905,108,travis,thenewwazoo,sethvargo,false,sethvargo,0,0,3,1,1096,false,false,false,false,1,0,0,0,0,0,42409
6956747,mitchellh/vagrant,ruby,5558,1428165588,1433023512,1433023512,80965,80965,commits_in_master,false,false,false,108,2,2,3,3,0,6,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,8.865671151801532,0.156555763542456,0,,plugins/guests/darwin/cap/change_host_name.rb|plugins/guests/darwin/cap/change_host_name.rb,0,0.0,0,2,false,Fixed error in ChangeHostName capability for Darwin #4535 has broken Darwin guests if configvmhostname is set to FQDN with dots: default: Setting hostnameThe following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failedscutil --set LocalHostName holly-chefcomStdout from the command:Stderr from the command:SCPreferencesSetLocalHostName() failed: Invalid argumentIve reproduced it on OS X 1095 and 10102 as wellIt is caused by the fact that LocalHostName should not contain dots and it could not be equal the hostname The good practice here is to leave only the first part of hostname like Ive done,,1388,0.7406340057636888,0.6056910569105691,29675,578.3319292333614,49.300758213984835,86.26790227464195,8064,17,1899,124,travis,legal90,sethvargo,false,sethvargo,3,0.6666666666666666,28,5,646,true,true,false,false,0,7,1,0,1,0,4
6929132,mitchellh/vagrant,ruby,5551,1427985167,,1436493499,141805,,unknown,false,false,false,113,1,1,0,5,5,10,0,6,0,0,1,1,1,0,0,0,0,1,1,1,0,0,97,0,97,0,4.533584589658124,0.08005671425956737,8,tomas.srnka@gmail.com,plugins/provisioners/ansible/provisioner.rb,8,0.0326530612244898,0,12,false,Allow Ansible provisioner to run reliably in parallel The Ansible Vagrant provisioner has a race where the inventory file isupdated every time the provisioner runs unless a file is providedTherefore if Ansible attempts to provision two nodes in parallel youmay see the following race:   * System A writes the inventory file and calls Ansible   * System B starts to provision and truncates the file before     creating a new one   * Ansible on system A now attempts to read the inventory     file which is blank Ansible bombs out with ERROR: provided     hosts list is emptyTo fix this we only allow Vagrant to update the inventory file ifit needs to,,1387,0.7411679884643114,0.6081632653061224,29667,578.4878821586275,49.31405265109381,86.29116526780598,8048,15,1897,109,travis,randonn,gildegoma,false,,0,0,0,0,35,false,false,false,false,0,0,0,0,1,0,70
6926424,mitchellh/vagrant,ruby,5549,1427968109,1427994770,1427994770,444,444,github,false,false,false,40,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.075324742470254,0.07196449122558206,5,sethvargo@gmail.com,plugins/pushes/ftp/adapter.rb,5,0.020491803278688523,0,0,false,fix ftp push check bug list method is not safe to check if a dir exist or not on remoteTo re-produce the error you could do  git clone git@githubcom:sinatra/sinatragit in directory which Vagrantfile stay in and run $vagrant push,,1386,0.740981240981241,0.610655737704918,29667,578.4878821586275,49.31405265109381,86.29116526780598,8046,15,1897,87,travis,jackywu,jackywu,true,jackywu,0,0,3,0,1525,false,false,false,false,0,0,0,0,0,0,-1
6904376,mitchellh/vagrant,ruby,5544,1427851295,1433140918,1433140918,88160,88160,commits_in_master,false,false,false,34,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.2799635744756195,0.09323671519154206,0,,website/docs/source/v2/vmware/kernel-upgrade.html.md,0,0.0,0,0,false,VMware Documentation Fix - SED Syntax We should only create the backup file on the first sed modification The second sed operation will create a backup with the changes from the first sed operation,,1385,0.7407942238267148,0.610655737704918,29667,578.4878821586275,49.31405265109381,86.29116526780598,8030,15,1895,107,travis,bdwyertech,sethvargo,false,sethvargo,0,0,3,1,846,false,false,false,false,0,0,0,0,0,0,-1
6879841,mitchellh/vagrant,ruby,5539,1427744268,1433022405,1433022405,87968,87968,commits_in_master,false,false,false,62,5,3,0,1,0,1,0,1,2,0,6,8,7,0,0,2,0,6,8,7,0,0,82,12,82,19,40.524259322791835,0.7156013051098715,8,vvchik@gmail.com,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_vlan.ps1|test/unit/plugins/providers/hyperv/config_test.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|website/docs/source/v2/hyperv/configuration.html.md,7,0.008130081300813009,0,0,false,HyperV provider: VlanID configuration possibility This PR mostly based on #5169adds possibility to configure vlan_id for hyperv providerMy improvements gives possibility to leave vlan_id untouched in case it ton setalso added description of this option to documentationtests present feature documentedtested on 2012hyperv serverwith #5207 will be great improvements for hyperv networking possibilities and reduce it limitations,,1383,0.7411424439624006,0.6097560975609756,29667,578.4878821586275,49.31405265109381,86.29116526780598,8023,15,1894,133,travis,vvchik,sethvargo,false,sethvargo,1,1.0,2,0,635,true,false,false,false,0,5,3,0,2,0,60351
6875954,mitchellh/vagrant,ruby,5538,1427731459,1427735371,1427735371,65,65,commits_in_master,false,false,false,36,1,1,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,13,0,13,0,4.975328916949056,0.08785750139039854,7,xmitchx@gmail.com,plugins/providers/hyperv/scripts/import_vm.ps1,7,0.028925619834710745,0,0,false,only set EFI secure boot for gen 2 machines in hyperv provider Stopping the EFI secure boot Set-VMFirmware commands from running on generation 1 machines  If the Set-VMFirmware commands are run generation 1 machines wont load,,1382,0.7409551374819102,0.6033057851239669,29667,578.4878821586275,49.31405265109381,86.29116526780598,8020,15,1894,84,travis,ssugar,sethvargo,false,sethvargo,0,0,0,0,284,false,false,false,false,1,3,0,0,0,0,-1
7784718,mitchellh/vagrant,ruby,5532,1427602198,1433140447,1433140447,92304,92304,commits_in_master,false,false,false,20,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,8,3,8,10.218597636778533,0.18044645310238605,9,tomas.srnka@gmail.com,plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,8,0.03278688524590164,0,0,false,Disable color if in ansible provisioner if Vagrant has no color Sets ANSIBLE_NOCOLORtrue if vagrant has no color See #5531 ,,1380,0.741304347826087,0.6065573770491803,29667,578.4878821586275,49.31405265109381,86.29116526780598,8010,16,1892,106,travis,marsam,sethvargo,false,sethvargo,0,0,46,115,2198,false,false,false,false,1,0,0,0,0,0,-1
6820457,mitchellh/vagrant,ruby,5520,1427309840,1433058364,1433058364,95808,95808,commits_in_master,false,false,false,46,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,33,0,33,0,4.2771983945061605,0.07552947155155554,2,max@devopsy.com,contrib/bash/completion.sh,2,0.008097165991902834,0,0,false,contrib/bash: Auto-complete VMs for up command An update to the bash auto-completion script to complete VM names for the vagrant up commandI made a similar commit at https://githubcom/kura/vagrant-bash-completion/commit/e720d90ae9a6589eb13c578b40a503e902d4897c earlier but what I really intended was to put it here since this is the official location,,1379,0.7411167512690355,0.6072874493927125,29667,578.4878821586275,49.31405265109381,86.29116526780598,7983,16,1889,107,travis,Mattias-,sethvargo,false,sethvargo,0,0,13,4,1309,false,true,false,false,0,0,0,0,0,0,95808
6837972,mitchellh/vagrant,ruby,5517,1427136256,1433140265,1433140265,100066,100066,commits_in_master,false,false,false,34,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.242004106383649,0.07490798857640507,0,,plugins/guests/freebsd/cap/remove_public_key.rb,0,0.0,0,0,false,guests/freebsd: fix call of set -i : missing extension Sed on freebsd seems to be mores strict than on otherplatforms about use of -i: the extension is not optionalSigned-off-by: Michael Adam obnox@sambaorg,,1378,0.7409288824383164,0.6104417670682731,29667,578.4878821586275,49.31405265109381,86.29116526780598,7961,16,1887,105,travis,obnoxxx,sethvargo,false,sethvargo,1,1.0,11,4,259,false,false,false,false,1,2,1,0,0,0,0
6781087,mitchellh/vagrant,ruby,5514,1427112241,1436486404,1436486404,156236,156236,commits_in_master,false,false,false,48,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.622722199389085,0.08163094919748626,8,sethvargo@gmail.com,lib/vagrant/machine.rb,8,0.0321285140562249,0,4,false,Allow to use several boxes with the same name I have different virtual machines with the same name in Vagrant and using the same Vagrantfile but different names in virtualbox (and different directories)This allows me to run action on both VMs at the same timeFixes #4822,,1377,0.7407407407407407,0.6104417670682731,29667,578.4878821586275,49.31405265109381,86.29116526780598,7957,16,1887,106,travis,MiLk,mitchellh,false,mitchellh,2,0.5,54,87,2346,false,false,false,false,0,1,0,0,0,0,100465
6778207,mitchellh/vagrant,ruby,5512,1427086932,1433139548,1433139548,100876,100876,commits_in_master,false,false,false,68,3,3,1,3,0,4,0,2,1,0,2,3,3,0,0,1,0,2,3,3,0,0,30,129,30,129,41.222041473507474,0.727924852111005,0,,plugins/guests/linux/cap/mount_smb_shared_folder.rb|test/unit/plugins/guests/linux/cap/mount_shared_folder_test.rb|website/docs/source/v2/synced-folders/smb.html.md|plugins/guests/linux/cap/mount_smb_shared_folder.rb|test/unit/plugins/guests/linux/cap/mount_shared_folder_test.rb|website/docs/source/v2/synced-folders/smb.html.md|plugins/guests/linux/cap/mount_smb_shared_folder.rb|test/unit/plugins/guests/linux/cap/mount_shared_folder_test.rb|website/docs/source/v2/synced-folders/smb.html.md,0,0.0,2,3,false,For SMB on Linux guests specify the users domain as a separate parameter For SMB on Linux guests specify the users domain as a separate parameter to the mount command This is more reliable than passing user@domain as the username This is not needed for SMB on Windows guests as they expect the user@domain formThis does not change how it is configured in the VagrantfileFixes #3620,,1376,0.7405523255813954,0.6104417670682731,29667,578.4878821586275,49.31405265109381,86.29116526780598,7957,16,1887,105,travis,johnsonj,sethvargo,false,sethvargo,1,0.0,3,2,1637,false,false,false,false,1,0,1,0,0,0,11649
6777067,mitchellh/vagrant,ruby,5510,1427077530,,1427785803,11804,,unknown,false,true,false,15,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.839202597220257,0.08545369683305547,7,xmitchx@gmail.com,plugins/providers/hyperv/scripts/import_vm.ps1,7,0.028112449799196786,0,0,false,Dont Set-VMFirmware properties on Gen 1 VMs Its not supported and cau Resolves Issue: #5509,,1375,0.7410909090909091,0.6104417670682731,29667,578.4878821586275,49.31405265109381,86.29116526780598,7956,16,1886,85,travis,johnsonj,johnsonj,true,,0,0,3,2,1636,false,false,false,false,0,0,0,0,0,0,11804
6738320,mitchellh/vagrant,ruby,5501,1426803078,,1436486513,161390,,unknown,false,false,false,164,1,1,0,4,0,4,0,3,5,0,4,9,8,0,1,5,0,4,9,8,0,1,218,29,218,29,40.61754947015178,0.7172503733229989,7,xmitchx@gmail.com,lib/vagrant/action.rb|lib/vagrant/action/builtin/scp_exec.rb|lib/vagrant/errors.rb|lib/vagrant/util/scp.rb|plugins/commands/scp/command.rb|plugins/commands/scp/plugin.rb|plugins/providers/virtualbox/action.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/scp_exec_test.rb,7,0.0,0,0,false,Add SCP to vagrant CLI This PR adds an scp option to the vagrant CLIIt lets one copy files from/to the remote vagrant machine using:bashvagrant scp ~/footxt vagrant:~/bartxt # local to vagrant machinevagrant scp vagrant:~/bartxt  # vagrant to local machineI do most of my development work in vagrant machines so that I dont end up polluting my machine with dependencies for each project I work on I therefore need to copy files back and forward and this command simplifies itI know I could use shared directories but it makes actually move stuff twice Once from host to the shared dir and a second from the shared dir to the directory I want it in in the vagrant machineThere are some rough edges in the code and some duplication that could be removed but I could use some feedback since its the first code that Ive written for Vagrant Still trying to grasp the architecture :),,1374,0.7416302765647744,0.5930232558139535,29667,578.4878821586275,49.31405265109381,86.29116526780598,7927,17,1883,104,travis,eidge,mitchellh,false,,1,1.0,10,3,916,false,false,false,false,0,1,2,0,0,0,12370
6737154,mitchellh/vagrant,ruby,5500,1426798810,1426798842,1426798842,0,0,merged_in_comments,false,false,false,4,1,1,0,2,0,2,0,1,4,0,2,6,6,0,0,4,0,2,6,6,0,0,256,0,256,0,26.850079017719207,0.4741356741219267,0,,lib/vagrant/action.rb|lib/vagrant/action/builtin/scp_exec.rb|lib/vagrant/util/scp.rb|plugins/commands/scp/command.rb|plugins/commands/scp/plugin.rb|plugins/providers/virtualbox/action.rb,0,0.0,0,0,false,Hack scp to vagrant  ,,1373,0.741442097596504,0.5930232558139535,29667,578.4878821586275,49.31405265109381,86.29116526780598,7927,17,1883,77,travis,eidge,eidge,true,eidge,0,0,10,3,916,false,false,false,false,0,0,0,0,0,0,0
6724044,mitchellh/vagrant,ruby,5496,1426729962,,1434640965,131850,,unknown,false,false,false,9,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.4769439075427115,0.07905670654481108,0,,plugins/guests/linux/cap/mount_smb_shared_folder.rb,0,0.0,0,0,false,Fix smb folder mounting issue #4823 Fix issue #4823,,1372,0.7419825072886297,0.5916030534351145,29667,578.4878821586275,49.31405265109381,86.29116526780598,7921,18,1882,102,travis,francisoud,francisoud,true,,0,0,5,9,2381,false,false,false,false,0,2,0,0,0,0,106822
6721874,mitchellh/vagrant,ruby,5495,1426721839,1430957199,1430957199,70589,70589,commits_in_master,false,false,false,107,3,1,0,22,0,22,0,17,0,0,1,3,1,0,0,0,0,3,3,3,0,0,2,0,17,8,4.39345231010086,0.0775823591207128,10,xmitchx@gmail.com,plugins/providers/virtualbox/driver/version_4_3.rb,10,0.03816793893129771,2,15,false,Proposed fix for #4815 - Windows UNC path to allow  256 characters Proposed fix for #4815 (and #1953) based on many comments notably @Ingramz and @celtric This changes the VirtualBox share on Windows to use UNC paths for which Windows allows  256 charactersLong paths become an issue when using npm for example which can result in multiple sub directories Once the path reaches 256 characters the guest OS usually throws a Permission Denied or Protocol ErrorAll rake tests passing but couldnt get acceptance tests for virtualbox running so acceptance tests are not run Tested in Windows 7 with VirtualBox 4320 and Vagrant 172,,1371,0.7417943107221007,0.5916030534351145,29667,578.4878821586275,49.31405265109381,86.29116526780598,7919,18,1882,116,travis,jfbibeau,sethvargo,false,sethvargo,0,0,0,0,499,false,false,false,false,1,6,0,0,0,0,51
6672562,mitchellh/vagrant,ruby,5484,1426443494,1426454455,1426454455,182,182,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.661700374956852,0.0823192530783978,6,tomas.srnka@gmail.com,website/docs/source/v2/provisioning/ansible.html.md,6,0.02120141342756184,0,0,false,Fix known/kownn typo ,,1370,0.7416058394160584,0.5795053003533569,29667,578.4878821586275,49.31405265109381,86.29116526780598,7888,20,1879,75,travis,follower,follower,true,follower,1,1.0,14,0,1874,true,false,false,false,0,0,0,0,1,0,182
6660169,mitchellh/vagrant,ruby,5482,1426307787,1436403974,1436403974,168269,168269,commits_in_master,false,false,false,55,1,1,0,4,0,4,0,3,0,0,3,3,2,0,1,0,0,3,3,2,0,1,22,0,22,0,12.92815094014796,0.22829346450384352,0,,plugins/providers/docker/action/build.rb|plugins/providers/docker/config.rb|templates/locales/providers_docker.yml,0,0.0,0,0,true,Support for Docker 150 named Dockerfile This allows support for passing a named Dockerfile configuration which is now available in Docker 150This can be implemented in a provider like so:vvmprovider docker do |d|  dbuild_dir    ddockerfile  DevDockerfile #  Adding named dockerfile  dbuild_args  [--tagduro/my-image]  dremains_running  trueend,,1369,0.7414170927684441,0.5880398671096345,29667,578.4878821586275,49.31405265109381,86.29116526780598,7879,19,1877,107,travis,duro,mitchellh,false,mitchellh,0,0,8,1,2427,false,false,false,false,1,3,0,0,0,0,5180
7766168,mitchellh/vagrant,ruby,5478,1426287146,1433139009,1433139009,114197,114197,commits_in_master,false,false,false,96,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.33939453037271,0.0766277726624746,0,,plugins/guests/windows/cap/configure_networks.rb,0,0.0,0,0,true,Ignore Windows NICs with nil :net_connection_id When upping a Win XP box vagrant found a lot of virtual networkconnections that did not have DHCP enabled and tried to configure themfor DHCP This did not work because their :net_connection_id is nilIgnoring these network connections enabled the XP box to be uppedI realize that Windows XP is not officially supported but I hope that youll accept contributions that enable it to function I also tested this change against a Windows 7 box to confirm that this change does not affect a newer Windows version,,1368,0.7412280701754386,0.5907590759075908,29667,578.4878821586275,49.31405265109381,86.29116526780598,7875,19,1877,104,travis,aogail,sethvargo,false,sethvargo,0,0,3,2,2536,false,false,false,false,0,0,0,0,0,0,5526
6642602,mitchellh/vagrant,ruby,5469,1426206688,1427054569,1427054569,14131,14131,commits_in_master,false,false,true,107,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.701851176347791,0.08302826131898679,0,,plugins/communicators/winrm/scripts/elevated_shell.ps1.erb,0,0.0,0,0,false,communicators/winrm: dont stop task on idle end StopOnIdleEnd was set in the task definition for elevated/privilegedwindows guest scripts This setting: specifies that the task stops when the idle condition ceases to be true [1]The idle condition is something that Windows periodically checks forand its defined by a bunch of criteria like user presence/absence CPU/ IO idle time etc [2]Telling our provisioner to stop the task if the idle condition ceasesto be true is a recipe for some sporadically stopped tasks which seemslike precisely the behavior being reported in #5362Im pretty sure this fixes #5362[1] https://msdnmicrosoftcom/en-us/library/cc248332aspx[2] https://msdnmicrosoftcom/en-us/library/windows/desktop/aa383561%28vvs85%29aspx,,1367,0.7410387710314558,0.5947712418300654,29667,578.4878821586275,49.31405265109381,86.29116526780598,7869,19,1876,77,travis,phinze,phinze,true,phinze,11,1.0,281,42,2292,true,true,false,false,5,16,3,0,6,0,6877
6641631,mitchellh/vagrant,ruby,5468,1426202475,,1429179484,49616,,unknown,false,false,false,8,1,1,0,3,0,3,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,1,0,1,0,8.808984916364565,0.1555546260736921,0,,bin/vagrant|lib/vagrant/cli.rb,0,0.0,0,4,false,Add --path option that overwrites VAGRANT_CWD Resolves #5453,,1366,0.7415812591508053,0.5967213114754099,29667,578.4878821586275,49.31405265109381,86.29116526780598,7869,19,1876,92,travis,Turbo87,Turbo87,true,,0,0,61,41,1971,false,false,false,false,1,1,0,0,0,0,6949
6530777,mitchellh/vagrant,ruby,5437,1425536165,1433138914,1433138914,126712,126712,commits_in_master,false,false,false,48,2,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,15,0,17,0,4.988202914506948,0.08808484138783793,0,,plugins/provisioners/salt/bootstrap-salt.ps1,0,0.0,0,0,false,Fix issue #4152: Salt minion bootstrapping Copy the config after we know the installer exits Also rev theinstalled version to 201471 (latest stable as of 3/4/2015)It seems to work with a Windows 81 box that I have tested Works on initial bootstrapping and succeeds on re-provisioning,,1365,0.7413919413919414,0.625,29667,578.4878821586275,49.31405265109381,86.29116526780598,7808,22,1869,102,travis,Jamezz,sethvargo,false,sethvargo,0,0,1,0,826,false,false,false,false,1,0,0,0,0,0,-1
7784565,mitchellh/vagrant,ruby,5436,1425528693,,1447889132,372673,,unknown,false,false,false,7,2,2,0,5,0,5,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,9.69397516113117,0.17118234344528097,0,,lib/vagrant/bundler.rb|lib/vagrant/bundler.rb,0,0.0,0,6,false,Unlink few Gem temp files from /tmp ,,1364,0.7419354838709677,0.625,29667,578.4878821586275,49.31405265109381,86.29116526780598,7808,22,1868,169,travis,valchonedelchev,mitchellh,false,,0,0,9,48,1954,false,true,true,false,0,4,0,0,0,0,126835
6528227,mitchellh/vagrant,ruby,5435,1425521735,1436486555,1436486555,182747,182747,commits_in_master,false,false,false,100,3,1,0,8,0,8,0,6,0,0,2,2,2,0,0,0,0,2,2,2,0,0,15,0,36,0,8.64247639123059,0.15261431324409688,6,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md,6,0.016304347826086956,0,8,false,Update Salt provisioner to allow more flexibility in passing arguments to the bootstrap script I needed the ability to specify a custom repository to install Salt from (our forked version) but the provisioner currently formulates the arguments based on the install_type optionThis PR adds a new install_type called custom so that the arguments arent formattedThis lets me do something like this if I need to test a patched version of Salt:    saltinstall_args  -g https://githubcom/juiceinc/saltgit git bugfix/es-returnerThose options will get passed as-is to the bootstrap script so any option thats available upstream in that script should work,,1363,0.7417461482024945,0.625,29667,578.4878821586275,49.31405265109381,86.29116526780598,7807,22,1868,96,travis,timoguin,mitchellh,false,mitchellh,0,0,14,83,1450,false,false,false,false,0,0,0,0,0,0,11113
7784492,mitchellh/vagrant,ruby,5434,1425519781,,1447997128,374622,,unknown,false,false,false,45,3,3,0,6,0,6,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,145,2,145,2,17.127388087725365,0.30244624947146026,11,sethvargo@gmail.com,lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/downloader.rb,10,0.008152173913043478,0,3,false,Allow metadata detection with any cURL protocol This refactors quite a bit the detection algorithm It fixes #5413Please check commit messages for more informationNo tests were added for this PR This is not me being lazy but I dont see any to add,,1362,0.7422907488986784,0.625,29667,578.4878821586275,49.31405265109381,86.29116526780598,7807,22,1868,101,travis,ibizaman,sethvargo,false,,1,0.0,11,7,1269,true,false,false,false,0,2,1,0,1,0,126975
6525908,mitchellh/vagrant,ruby,5433,1425511491,1433026150,1433026150,125244,125244,commits_in_master,false,false,false,36,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,23,22,23,22,8.69318142789585,0.1535096948452011,4,sethvargo@gmail.com,lib/vagrant/ui.rb|test/unit/vagrant/ui_test.rb,4,0.010899182561307902,0,0,false,core: allow IO redirection of UI for testing Use of $stdin $stdout and $stderr globals makes testing difficult Byexposing the IO objects as writable attributes input/output can be moreeasily simulated using StringIO or doubles,,1361,0.7421013960323292,0.6267029972752044,29667,578.4878821586275,49.31405265109381,86.29116526780598,7804,21,1868,116,travis,marxarelli,sethvargo,false,sethvargo,0,0,5,2,1791,false,false,false,false,0,0,0,0,0,0,34
6510230,mitchellh/vagrant,ruby,5425,1425422495,,1433137951,128590,,unknown,false,false,false,36,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,36,0,36,0,4.33174680133022,0.0764927242269497,0,,plugins/commands/box/command/update.rb,0,0.0,0,1,false,copy security options from box add for box update Without those options a box update cannot always download the new boxsversion if one of the options was provided on box addThis fixes issue #4533,,1360,0.7426470588235294,0.6294277929155313,29667,578.4878821586275,49.31405265109381,86.29116526780598,7800,21,1867,101,travis,ibizaman,sethvargo,false,,0,0,11,7,1268,false,false,false,false,0,1,0,0,0,0,128590
6505433,mitchellh/vagrant,ruby,5423,1425400694,,1433137840,128952,,unknown,false,false,false,15,2,1,1,6,0,7,0,4,2,0,1,3,3,0,0,2,0,1,3,3,0,0,55,0,59,0,12.71524890096764,0.22453390566596912,0,,plugins/guests/fedora/cap/flavor.rb|plugins/guests/fedora/cap/nfs_client.rb|plugins/guests/fedora/plugin.rb,0,0.0,0,3,false,Fix for nfs on Fedora 21 It uses the same logic as a712f70634fa19fbabdb0b2061d77f5b15c9f6ffCloses #5321,,1359,0.7431935246504783,0.6294277929155313,29667,578.4878821586275,49.31405265109381,86.29116526780598,7798,21,1867,101,travis,laetificat,sethvargo,false,,0,0,5,1,904,false,false,false,false,1,0,0,0,0,0,95
6481180,mitchellh/vagrant,ruby,5412,1425256710,1425269186,1425269186,207,207,commits_in_master,false,false,false,27,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.741480609027182,0.08372806798740255,4,xmitchx@gmail.com,README.md,4,0.010810810810810811,0,0,false,Fix capitalization of Vagrant in READMEmd Fixes capitalization of Vagrant in READMEmd so it matches the rest of the file Hope youre having a great week :),,1357,0.7435519528371407,0.6297297297297297,29667,578.4878821586275,49.31405265109381,86.29116526780598,7781,21,1865,64,travis,ivuk,sethvargo,false,sethvargo,0,0,42,101,1441,false,false,false,false,0,0,0,0,0,0,-1
6478135,mitchellh/vagrant,ruby,5410,1425233640,,1433025447,129863,,unknown,false,false,false,31,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,51,0,51,0,4.458881393734473,0.07873775203711351,0,,plugins/commands/reload/command.rb,0,0.0,0,3,false,Added option --destroy for the reload command This PR introduces a new option --destroy to vagrant reload which is a shorthand for vagrant destroy --force followed by vagrant upFixes #5378,,1356,0.7441002949852508,0.6307277628032345,29667,578.4878821586275,49.31405265109381,86.29116526780598,7779,21,1865,116,travis,trensen,sethvargo,false,,1,1.0,4,7,744,false,true,false,false,1,0,1,0,0,0,32640
6458261,mitchellh/vagrant,ruby,5403,1425067597,1425069891,1425069891,38,38,commits_in_master,false,false,true,19,3,3,0,1,0,1,0,1,0,0,4,4,3,1,0,0,0,4,4,3,1,0,127,0,127,0,18.47112924296708,0.32617179266428414,11,tomas.srnka@gmail.com,website/docs/Gemfile.lock|website/docs/source/v2/vmware/installation.html.md|website/www/source/vmware/index.html.erb|website/www/Gemfile.lock,6,0.010498687664041995,0,0,true,Update help and FAQ This adds a new FAQ section to the VMware buy page to help reduce confusion,,1354,0.7444608567208272,0.6246719160104987,29667,578.4878821586275,49.31405265109381,86.29116526780598,7769,21,1863,61,travis,sethvargo,sethvargo,true,sethvargo,38,0.868421052631579,491,65,1621,true,false,false,false,209,380,88,20,175,6,28
6454395,mitchellh/vagrant,ruby,5399,1425046564,1433025140,1433025140,132976,132976,commits_in_master,false,false,false,23,1,1,0,1,0,1,0,1,0,0,2,2,1,0,1,0,0,2,2,1,0,1,5,0,5,0,8.754341387469292,0.1545882326080958,20,xmitchx@gmail.com,lib/vagrant/action/general/package.rb|templates/locales/en.yml,20,0.05291005291005291,0,0,true,Improved the package error message The package error message will now show the actual package name if thepackage already existedFixes #5380 ,,1353,0.7442719881744272,0.6296296296296297,29667,578.4878821586275,49.31405265109381,86.29116526780598,7766,21,1863,117,travis,edward010,sethvargo,false,sethvargo,0,0,1,0,736,false,false,false,false,1,0,0,0,0,0,286
7772252,mitchellh/vagrant,ruby,5395,1424995093,1433025208,1433025208,133835,133835,commits_in_master,false,false,false,34,1,1,0,0,0,0,0,0,0,0,2,2,1,0,1,0,0,2,2,1,0,1,9,0,9,0,8.720941993011241,0.15399845056385872,25,xmitchx@gmail.com,lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml,20,0.05291005291005291,0,0,false,Fixed inaccurate downloading status message Importing a base box from the local file system currently outputs Downloading: file://This PR changes this to  Unpacking necessary files from: file:// which is more accurateFixes #5386,,1352,0.7440828402366864,0.6296296296296297,29667,578.4878821586275,49.31405265109381,86.29116526780598,7764,21,1862,116,travis,trensen,sethvargo,false,sethvargo,0,0,4,7,741,false,true,false,false,1,0,0,0,0,0,-1
6410057,mitchellh/vagrant,ruby,5385,1424816374,1424816513,1424816513,2,2,commits_in_master,false,false,false,93,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.873124289167129,0.08605221000533497,4,sethvargo@gmail.com,website/docs/source/v2/getting-started/networking.html.md,4,0.010638297872340425,0,0,false,Reorder forward port args in Getting Started Just a quick update to Networking under Getting Started In the main Networking section theres a line that states In the case of forwarded ports two numeric arguments are expected: the port on the guest followed by the port on the host that the guest port can be accessed byHowever in the Networking section under Getting Started it has them flipped around So this flips them so its consistent with the main Networking section in the docs where the examples show guest followed by host,,1351,0.7438934122871946,0.6276595744680851,29666,578.5073821883637,49.31571495988673,86.29407402413537,7740,21,1860,59,travis,davidsantoso,mitchellh,false,mitchellh,0,0,12,22,1155,false,false,false,false,0,0,0,0,0,0,2
6406191,mitchellh/vagrant,ruby,5382,1424799880,1424812956,1424812956,217,217,commits_in_master,false,false,false,46,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.83381192163142,0.08610281270819505,4,sethvargo@gmail.com,website/docs/source/v2/provisioning/chef_solo.html.md,4,0.011695906432748537,0,0,false,Fixes broken/deprecated links on the chef_solo provisioner documentation In the [chef_solo provisioner documentation](https://docsvagrantupcom/v2/provisioning/chef_solohtml) there are several outdated links This PR resolves this issue- links to http://docschefio/roleshtml instead of https://docschefio/essentials_roleshtml- links to https://docschefio/nodeshtml#about-run-lists instead of https://docschefio/essentials_node_object_run_listshtml- links to http://docschefio/data_bagshtml instead of https://docschefio/essentials_data_bagshtmlFixes #5318 ,,1349,0.7442550037064493,0.5877192982456141,29483,581.3858833904284,49.5878981107757,86.79578061933995,7735,22,1860,78,travis,erwinvaneyk,mitchellh,false,mitchellh,0,0,8,8,831,false,false,false,false,0,1,0,0,0,0,217
6362447,mitchellh/vagrant,ruby,5369,1424474572,1424813012,1424813012,5640,5640,commits_in_master,false,false,false,30,2,1,0,1,0,1,0,2,3,0,1,5,4,0,0,3,0,2,5,4,0,0,48,0,52,0,17.398289363078753,0.3099089651726789,0,,plugins/guests/debian/guest.rb|plugins/guests/debian8/cap/halt.rb|plugins/guests/debian8/guest.rb|plugins/guests/debian8/plugin.rb,0,0.0,0,0,true,Fix #5368 Added specific support for Debian 8 (aka jessie) to permit proper vagrant halt execution Added specific support for Debian 8 (aka jessie) to permit proper vagrant halt execution,,1348,0.7440652818991098,0.5877192982456141,29483,581.3858833904284,49.5878981107757,86.79578061933995,7707,22,1856,77,travis,gpkfr,mitchellh,false,mitchellh,0,0,2,4,1079,false,false,false,false,0,0,0,0,0,0,5640
6334089,mitchellh/vagrant,ruby,5363,1424310131,1433058464,1433058464,145805,145805,commit_sha_in_comments,false,false,false,7,1,1,0,7,0,7,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.721091449382333,0.08409496675394725,24,xmitchx@gmail.com,vagrant.gemspec,24,0.07017543859649122,0,3,false,Bundler 18x Same as previous bump bb22a37ed1,,1347,0.7438752783964365,0.5877192982456141,29483,581.3858833904284,49.5878981107757,86.79578061933995,7686,22,1854,118,travis,hashar,sethvargo,false,sethvargo,0,0,41,16,1736,false,false,false,false,0,0,0,0,0,0,8119
6328828,mitchellh/vagrant,ruby,5359,1424289672,1433057289,1433057289,146126,146126,commit_sha_in_comments,false,false,false,10,2,1,0,1,0,1,0,2,0,0,2,3,2,0,0,0,0,3,3,3,0,0,3,0,8,0,8.870865744696076,0.1580132831310746,5,xmitchx@gmail.com,plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb,5,0.01466275659824047,0,0,false,Added synced_folder_args to puppet provisioner I think this fixes https://githubcom/mitchellh/vagrant/issues/4280,,1346,0.7436849925705795,0.5894428152492669,29483,581.3858833904284,49.5878981107757,86.79578061933995,7685,22,1854,125,travis,choffee,sethvargo,false,sethvargo,0,0,5,4,2193,false,false,false,false,1,3,0,0,0,0,81557
6315131,mitchellh/vagrant,ruby,5349,1424210752,1424813187,1424813187,10040,10040,commits_in_master,false,false,false,25,2,1,0,1,1,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,6,0,4.909609772474613,0.08745297036030172,0,,plugins/synced_folders/smb/scripts/host_info.ps1,0,0.0,0,0,false,Update host_infops1 Changed method for getting IP addresses  Windows built-in VPN IP addresses do not appear in list using Get-WMIObject causing shared folders to fail,,1345,0.7434944237918215,0.5894428152492669,29483,581.3858833904284,49.5878981107757,86.79578061933995,7679,22,1853,76,travis,agreenbhm,mitchellh,false,mitchellh,0,0,0,0,1461,false,false,false,false,0,0,0,0,0,0,10040
6286209,mitchellh/vagrant,ruby,5340,1424030976,1447003571,1447003571,382876,382876,merged_in_comments,false,true,true,570,2,1,6,8,0,14,0,7,18,2,8,29,26,1,1,18,2,9,29,26,1,1,2097,180,2100,180,117.51528121954588,2.0949729366202323,40,xmitchx@gmail.com,lib/vagrant/errors.rb|plugins/provisioners/ansible/cap/guest/arch/ansible_install.rb|plugins/provisioners/ansible/cap/guest/debian/ansible_install.rb|plugins/provisioners/ansible/cap/guest/epel/ansible_install.rb|plugins/provisioners/ansible/cap/guest/freebsd/ansible_install.rb|plugins/provisioners/ansible/cap/guest/posix/ansible_installed.rb|plugins/provisioners/ansible/cap/guest/suse/ansible_install.rb|plugins/provisioners/ansible/cap/guest/ubuntu/ansible_install.rb|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/config/base.rb|plugins/provisioners/ansible/config/guest.rb|plugins/provisioners/ansible/config/host.rb|plugins/provisioners/ansible/errors.rb|plugins/provisioners/ansible/helpers.rb|plugins/provisioners/ansible/plugin.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner/base.rb|plugins/provisioners/ansible/provisioner/guest.rb|plugins/provisioners/ansible/provisioner/host.rb|templates/locales/en.yml|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|test/unit/plugins/provisioners/support/shared/config.rb|website/docs/source/layouts/layout.erb|website/docs/source/v2/provisioning/ansible.html.md|website/docs/source/v2/provisioning/ansible_common.html.md|website/docs/source/v2/provisioning/ansible_intro.html.md|website/docs/source/v2/provisioning/ansible_local.html.md,19,0.0,2,5,false,[WIP] Add new provisioner: Ansible on the Guest VM @mitchellh @sethvargo Here is my attempt to implement #2103 My idea is to try to get it merged into 18 MilestoneI created the branch directly in original repository so that you can directly add things by your own (especially to quickly fix my English and Ruby mistakes sorry in advance :sweat_smile:) I am looking forward to receiving your comments :grinning: #### The ansible_local Provisioner (new feature)Id be **very thankful to the interested Vagrant users to check the current design and report as soon as possible if their needs wouldnt be satisfied** so we can adapt before this first releaseNote that the Ansible Installation Capability is already available for the following platforms (using the distribution package system (eg apt yum pacman freebsd pkg etc):  - Debian 6+ (package is officially available as of jessie with backports for wheezy Older versions wont be supported)  - Ubuntu 1204+ (package is officially available as of Trusty but it is preferable to use the official PPA from Ansible Inc)  - RedHat-6+ family via EPEL repository (validated on Fedora20 CentOS 6 & 7 OracleLinux 6 & 7)  - ArchLinux (package is officially available)  - OpenSUSE 132+ (package is officially available as of 132)  - FreeBSD 10+ (package is officially available as of 100)##### Open QuestionsDiscussed via code comments on this GitHub pull request##### Missing FeaturesThe following functions are intentionally not developed in this initial version (but might be considered in future development iterations):  - Automated installation of a specific Ansible version (eg via pip packaging)    Reasons: Lack of user feedback experience to confirm this need User still can build their own base box#### The ansible ProvisionerBy keeping the existing unit test coverage almost unchanged Im quite confident that the refactored ansible provisioner still behave the same (aka free from new bugs) I only added a few minor things that I hit on my coding path (Windows warning and a buggy behavior when VAGRANT_LOG is not defined)#### The DocumentationMany changes are also proposed here I mainly tried to cut the things in four separate pages with the goal to help user to quickly find the relevant information:* a common page to introduce how Ansible is integrated in Vagrant (ansible_intro)* a common page to list the common options (ansible_common)* a short page to quick start with ansible provisioner with specific tips and tricks* a short page to quick start with ansible_local provisioner with specific tips and tricksLike for the code Im open to any other way to organize the things just let me know what do you think#### Finalization Check-List  - [ ] Integration/Regression Tests on Linux Mac and Windows hosts  - [ ] Documentation reviewed :passport_control:  - [ ] All open questions and doubts are closed  - [ ] Freeze provisioner naming: ansible_local or ansible_on_guest or   - [ ] Improve/Align Ruby style  - [ ] Remove all TODOs (fix them or create new GitHub issues for later work)  - [ ] Code freeze and add the new unit tests (for ansible_local coverage following http://betterspecsorg styling)#### CHANGELOG entries## 180 (unreleased)FEATURES:  - provisioners/ansible_local: New provisioner to execute Ansible from the guest machine [GH-5340]IMPROVEMENTS:  - provisioners/ansible: Warn when running from a Windows Host [GH-5292]BUGS:  - provisioners/ansible: Fix a wrong logging behavior when VAGRANT_LOG was undefined,,1344,0.7433035714285714,0.5857988165680473,29213,583.3361859446137,49.63543627836922,87.08451716701468,7660,22,1851,179,travis,gildegoma,gildegoma,true,gildegoma,19,0.9473684210526315,47,127,1589,true,true,false,false,23,64,7,2,26,0,13
6280768,mitchellh/vagrant,ruby,5339,1423964341,1424118776,1424118776,2573,2573,commits_in_master,false,false,false,14,6,4,1,3,0,4,0,4,1,0,7,10,7,1,0,1,0,9,10,8,1,0,292,136,319,136,35.42326097055291,0.6314989190342072,11,xmitchx@gmail.com,plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/provisioners/chef_zero/zero.erb|test/unit/plugins/provisioners/chef/config/base_runner_test.rb|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|website/docs/source/v2/provisioning/chef_common.html.md,4,0.008875739644970414,0,9,false,Chef Provisioner : Support real chef-zero/local mode Support real chef-zero/local mode with version constraint,,1343,0.7431124348473567,0.5857988165680473,29213,583.3361859446137,49.63543627836922,87.08451716701468,7657,22,1850,75,travis,YpNo,sethvargo,false,sethvargo,0,0,1,2,1326,false,false,false,false,0,0,0,0,0,0,219
6275246,mitchellh/vagrant,ruby,5338,1423898898,1424813289,1424813289,15239,15239,commits_in_master,false,false,false,32,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,37,0,37,0,4.983237878153762,0.08883736977124773,0,,website/docs/source/v2/networking/public_network.html.md,0,0.0,0,0,false,example to set default router on public net Add disable auto-configuration on public netAdd example to setup manually ip and ipv6Add example to set default router for ip and ipv6,,1342,0.7429210134128167,0.5857988165680473,29213,583.3361859446137,49.63543627836922,87.08451716701468,7654,22,1850,76,travis,kikitux,mitchellh,false,mitchellh,2,1.0,15,67,1161,false,false,true,false,0,11,1,0,0,0,0
6273295,mitchellh/vagrant,ruby,5337,1423882761,1424813533,1424813533,15512,15512,commits_in_master,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.570786734117115,0.08148308450359279,2,sethvargo@gmail.com,website/docs/source/v2/provisioning/salt.html.md,2,0.005952380952380952,0,0,true,Added bootstrap_options param to the salt provisioner docs I discovered this option by digging in the source for a way to pass extra params to bootstrap_saltsh,,1341,0.7427293064876958,0.5863095238095238,29195,582.4284980304847,49.59753382428498,87.03545127590341,7654,22,1849,76,travis,mafrosis,mitchellh,false,mitchellh,0,0,13,2,1766,false,false,false,false,0,0,0,0,0,0,15512
6246833,mitchellh/vagrant,ruby,5331,1423747608,1424813726,1424813726,17768,17768,merged_in_comments,false,false,false,2,2,1,0,10,0,10,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,4,0,4.546347861710849,0.08104741449287266,0,,plugins/guests/ubuntu/guest.rb,0,0.0,0,1,false,Fixes #5322 ,,1339,0.743091859596714,0.5845697329376854,29195,582.4284980304847,49.59753382428498,87.03545127590341,7637,23,1848,75,travis,tioteath,mitchellh,false,mitchellh,0,0,3,2,311,false,true,false,false,1,0,0,0,0,0,352
6243455,mitchellh/vagrant,ruby,5329,1423720743,1423721280,1423721280,8,8,commits_in_master,false,false,false,15,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.908315051713719,0.08750090747324196,5,sethvargo@gmail.com,website/docs/source/v2/push/local-exec.html.md,5,0.01488095238095238,0,0,false,fix command on vagrant push website sample script fix sample to scp -r  server:/var/ww/website,,1338,0.7428998505231689,0.5833333333333334,29195,582.4284980304847,49.59753382428498,87.03545127590341,7635,23,1848,71,travis,kikitux,sethvargo,false,sethvargo,1,1.0,15,67,1159,false,false,true,false,0,11,0,0,0,0,-1
6239999,mitchellh/vagrant,ruby,5328,1423702959,1424813758,1424813758,18513,18513,commits_in_master,false,false,false,21,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.619090004831908,0.08234487046267693,11,xmitchx@gmail.com,vagrant.gemspec,11,0.03273809523809524,0,0,false,Relax i18n gem spec to support 070 API changes seem pretty minor:  https://githubcom/svenfuchs/i18n/blob/master/CHANGELOGmdUseful for folks that package instead of omnibus,,1337,0.7427075542258789,0.5833333333333334,29195,582.4284980304847,49.59753382428498,87.03545127590341,7634,23,1847,74,travis,kev009,mitchellh,false,mitchellh,1,1.0,33,18,2084,false,false,false,false,0,1,1,0,0,0,18513
6236902,mitchellh/vagrant,ruby,5326,1423689928,1424813802,1424813802,18731,18731,commits_in_master,false,false,false,41,1,1,0,1,0,1,0,1,2,0,1,3,3,0,0,2,0,1,3,3,0,0,52,0,52,0,13.656125861204375,0.24344879919779966,0,,plugins/guests/darwin/cap/insert_public_key.rb|plugins/guests/darwin/cap/remove_public_key.rb|plugins/guests/darwin/plugin.rb,0,0.0,0,0,false,Support insert_public_key and remove_public_key on darwin guest Heres an implementation of the private key caps for darwin Its copied from the Linux guest caps with a minor tweak to the variant of sed that ships on OS X This fixes #5204,,1336,0.7425149700598802,0.5833333333333334,29195,582.4284980304847,49.59753382428498,87.03545127590341,7634,23,1847,73,travis,timsutton,mitchellh,false,mitchellh,1,1.0,226,29,1996,false,false,false,false,0,0,0,0,0,0,18731
6234619,mitchellh/vagrant,ruby,5325,1423680748,1433022648,1433022648,155698,155698,commits_in_master,false,false,false,92,1,1,0,13,0,13,0,13,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.670896790259783,0.0832684339850771,2,sethvargo@gmail.com,plugins/guests/debian/cap/configure_networks.rb,2,0.005952380952380952,0,0,false,vagrant duplicates  eth2 when defining two private network ips When a vagrant box has two private network ips /etc/network/interfaceswill duplicate eth2 and bigger sed matches greedy so the first #VAGRANT-END matches This will result in:/etc/network/interfaces:29: interface eth2 declared allow-auto twice/sbin/ifup: couldnt read interfaces file /etc/network/interfacesTac print files in reverse and will match the first vagrant-end and only print what is under the last vagrant-end Tac is in coreutils and is installed with a debootstrap wheezy so i am assuming that nobody will have an issue on Debian,,1335,0.7423220973782771,0.5833333333333334,29195,582.4284980304847,49.59753382428498,87.03545127590341,7634,23,1847,144,travis,frankbb,sethvargo,false,sethvargo,0,0,5,0,782,false,false,false,false,1,1,0,0,0,0,17657
6197376,mitchellh/vagrant,ruby,5305,1423471150,1423507471,1423507471,605,605,commit_sha_in_comments,false,false,false,38,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.621907074070718,0.08239512541095319,2,sethvargo@gmail.com,website/docs/source/v2/getting-started/project_setup.html.md,2,0.005934718100890208,0,0,false,fixed ticket 5266: Typo in doc: Project Setup Changed:The first step for any project to use Vagrant is to configure Vagrantusing a VagrantfileTo:The first step in configuring any Vagrant project is to create a Vagrantfile,,1332,0.7432432432432432,0.5786350148367952,29195,582.4284980304847,49.59753382428498,87.03545127590341,7613,23,1845,66,travis,mixpix3ls,sethvargo,false,sethvargo,0,0,0,0,336,false,false,false,false,0,0,0,0,0,0,-1
6187553,mitchellh/vagrant,ruby,5303,1423372037,1424814357,1424814357,24038,24038,commits_in_master,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.22100861873564,0.07524827499292903,0,,plugins/guests/redhat/cap/flavor.rb,0,0.0,0,0,false,Add Scientific Linux to RHEL 7 flavors Extends code committed for #4195 to include Scientific Linux release 70 (Nitrogen) in the list of RHEL 7 flavors,,1331,0.7430503380916604,0.5769230769230769,29195,582.4284980304847,49.59753382428498,87.03545127590341,7608,23,1844,72,travis,SchnWalter,mitchellh,false,mitchellh,0,0,5,3,902,false,false,false,false,0,0,0,0,0,0,24038
6148700,mitchellh/vagrant,ruby,5290,1423110069,1424814482,1424814482,28406,28406,commits_in_master,false,false,false,59,1,1,0,1,0,1,0,1,2,0,1,3,3,0,0,2,0,1,3,3,0,0,52,0,52,0,13.558460272281955,0.2417078094844027,0,,plugins/guests/solaris11/cap/insert_public_key.rb|plugins/guests/solaris11/cap/remove_public_key.rb|plugins/guests/solaris11/plugin.rb,0,0.0,0,0,false,Copy linux support for insert_public_key and remove_public_key to solari This addresses issue 4969 for Solaris 11 requiring configsshinsert_key  false  It just copies the appropriate code over from the linux plugin  I dont have a Solaris 10 image to test against so I did not make the change there  It passes the unit tests and the provider/virtualbox/basic acceptance test,,1329,0.7434161023325809,0.5722713864306784,29195,582.4284980304847,49.59753382428498,87.03545127590341,7594,23,1840,71,travis,channui,mitchellh,false,mitchellh,0,0,0,0,1122,false,false,false,false,0,0,0,0,0,0,28406
6133348,mitchellh/vagrant,ruby,5283,1423023659,1423088982,1423088982,1088,1088,commits_in_master,false,false,true,10,7,5,3,1,0,4,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,24,13,52,49,21.906382104740114,0.3905268052101776,21,sethvargo@gmail.com,plugins/pushes/atlas/push.rb|plugins/pushes/atlas/push.rb|plugins/commands/push/command.rb|plugins/pushes/atlas/push.rb|test/unit/plugins/pushes/atlas/push_test.rb,13,0.026627218934911243,0,0,false,Add extra metadata information to Atlas pushes Super :construction: here,,1328,0.7432228915662651,0.5680473372781065,29183,581.9826611383339,49.58366172086489,87.0369735805092,7587,23,1839,63,travis,sethvargo,sethvargo,true,sethvargo,37,0.8648648648648649,489,65,1597,true,false,false,false,207,392,96,17,176,7,0
6130219,mitchellh/vagrant,ruby,5282,1423009316,1424814597,1424814597,30088,30088,commits_in_master,false,false,false,51,1,1,0,9,0,9,0,5,2,0,1,3,3,0,0,2,0,1,3,3,0,0,18,26,18,26,13.576570826915745,0.2420306011916889,0,,plugins/guests/windows/cap/rsync.rb|plugins/guests/windows/plugin.rb|test/unit/plugins/guests/windows/cap/rsync_test.rb,0,0.0,0,3,false,Windows rsync needs to create folders before syncing Some of the other guests have a folder structure pre-creation on an rsync command so I thought Windows could benefit from one as well especially those of us using Windows guests on AWS This will fix #5255 (without the need for the work-around),,1327,0.7430293896006028,0.5765765765765766,29183,581.9826611383339,49.58366172086489,87.0369735805092,7587,23,1839,71,travis,Scythril,mitchellh,false,mitchellh,1,1.0,0,0,634,false,true,false,false,0,0,0,0,0,0,3302
6124217,mitchellh/vagrant,ruby,5280,1422982204,,1424815085,30548,,unknown,false,false,false,250,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.0292663775181605,0.07183005017576452,0,,plugins/guests/linux/cap/halt.rb,0,0.0,0,0,false,linux/cap/halt: dont wait for shutdown -h now to finish When running a Debian 8 lxc guest (with the vagrant-lxc plugin) which has systemd as init system vagrant halt will hang waiting for shutdown -h now to returnDebug output (vagrant halt --debug) looks like this:DEBUG ssh: Exit status: 0 INFO guest: Detected: debianDEBUG guest: Searching for cap: haltDEBUG guest: Checking in: debianDEBUG guest: Checking in: linuxDEBUG guest: Found cap: halt in linux INFO guest: Execute capability: halt [#Vagrant::Machine: default (Vagrant::LXC::Provider)] (debian)DEBUG ssh: Re-using SSH connection INFO ssh: Execute: shutdown -h now (sudotrue)DEBUG ssh: stderr: stdin: is not a ttyDEBUG ssh: Sending SSH keep-aliveDEBUG ssh: Sending SSH keep-aliveDEBUG ssh: Sending SSH keep-aliveDEBUG ssh: Sending SSH keep-aliveDEBUG ssh: Sending SSH keep-aliveAnd then those DEBUG ssh: Sending SSH keep-alive lines will keep coming until I finish vagrant with ctrl-cI have tested with systemd in a virtualbox guest and with sysvinit (Debian 7) in a vagrant-lxc guest and with those combinations this is not an issue I suspect that the  only occurs with systemd under lxc because everything is running under the same kernel and the shutdown provided by systemd is substantially different from the one provided by sysvinit but I dont know exactly whyIn any way after sending the halt vagrant will keep checking for the state of the machine so not waiting for the shutdown command to actually finish does not make much of difference,,1326,0.7435897435897436,0.5765765765765766,29183,581.9826611383339,49.58366172086489,87.0369735805092,7585,23,1839,70,travis,terceiro,mitchellh,false,,0,0,65,6,2297,false,false,false,false,0,0,0,0,0,0,30547
6122259,mitchellh/vagrant,ruby,5277,1422970488,1424815101,1424815101,30743,30743,commits_in_master,false,false,false,43,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.611936524892463,0.08221735694588576,0,,plugins/guests/fedora/guest.rb,0,0.0,0,0,false,detect fedora 21 Last week I noticed that there was some issues regarding the dynamic network cards using Fedora 21 and yesterday I finally tracked down the issue The grepping didnt support Fedora 21 so I added a trailing 1 to the regexp,,1325,0.7433962264150943,0.5765765765765766,29183,581.9826611383339,49.58366172086489,87.0369735805092,7584,23,1839,69,travis,Keeguon,mitchellh,false,mitchellh,0,0,35,49,1675,false,true,false,false,0,0,0,0,0,0,337
6118267,mitchellh/vagrant,ruby,5275,1422938904,,1424815163,31270,,unknown,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.647609410261968,0.0828532137499638,0,,website/docs/source/v2/providers/index.html.md,0,0.0,0,0,false,Note Hyper-V is supported in Vagrant out-of-the-box ,,1324,0.7439577039274925,0.5740181268882175,29183,582.0169276633657,49.58366172086489,87.0369735805092,7580,23,1838,68,travis,rgardler,mitchellh,false,,0,0,22,1,1747,false,false,false,false,0,0,0,0,0,0,31270
6117303,mitchellh/vagrant,ruby,5274,1422933281,1422938241,1422938241,82,82,commits_in_master,false,false,true,11,2,1,0,1,0,1,0,3,0,0,1,2,1,0,0,0,0,2,2,2,0,0,2,0,2,21,3.8464656268553945,0.06857124674555753,5,sethvargo@gmail.com,lib/vagrant/action/builtin/box_add.rb,5,0.01529051987767584,2,1,false,Use the new Atlas APIs for downloading boxes /cc @mitchellh @pearkes ,,1323,0.7437641723356009,0.5718654434250765,29183,581.9826611383339,49.58366172086489,87.0369735805092,7580,23,1838,59,travis,sethvargo,sethvargo,true,sethvargo,36,0.8611111111111112,489,65,1596,true,false,false,false,207,392,95,17,167,7,2
6111770,mitchellh/vagrant,ruby,5272,1422907710,1422907797,1422907797,1,1,commits_in_master,false,false,true,33,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,27,0,27,0,4.979832484114007,0.08877446887425507,0,,website/docs/source/v2/vmware/usage.html.md,0,0.0,0,0,false,Do not encourage users to download a box directly Instead of having the user download a box file and manually installing it just use the hashicorp/precise64 box and let Vagrant handle the download,,1322,0.74357034795764,0.5723076923076923,29183,581.9826611383339,49.58366172086489,87.0369735805092,7576,23,1838,59,travis,sethvargo,sethvargo,true,sethvargo,35,0.8571428571428571,489,65,1596,true,false,false,false,206,391,93,17,165,7,-1
6067221,mitchellh/vagrant,ruby,5264,1422563426,1422563967,1422563967,9,9,commits_in_master,false,false,false,42,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.42440940252169,0.07887344666888903,0,,website/docs/source/v2/cli/index.html.md,0,0.0,0,0,false,Make the environment variable documentation more easy to find I was looking for the environment variable definition at the place where the cli is documented Didnt find it For the next guy who ticks like I do lets put a link there,,1320,0.7439393939393939,0.5452127659574468,29183,581.9826611383339,49.58366172086489,87.0369735805092,7548,24,1834,58,travis,aknrdureegaesr,sethvargo,false,sethvargo,1,1.0,5,0,1240,false,false,false,false,0,3,1,0,0,0,-1
6058308,mitchellh/vagrant,ruby,5261,1422507669,1424815194,1424815194,38458,38458,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,30,0,30,0,4.692221967406104,0.08364808639090979,0,,plugins/guests/windows/cap/change_host_name.rb,0,0.0,0,0,false,Revert Rename Windows guest without reboot This is causing Windows server to crash,,1319,0.7437452615617892,0.544,29183,581.9826611383339,49.58366172086489,87.0369735805092,7543,24,1834,68,travis,blairham,mitchellh,false,mitchellh,0,0,0,0,559,false,false,false,false,0,2,0,0,0,0,38458
6056279,mitchellh/vagrant,ruby,5259,1422497941,,1433149432,177524,,unknown,false,false,false,144,2,2,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,20,0,9.022578146968378,0.16084520330643295,3,simon.beaumont@citrix.com,plugins/hosts/bsd/cap/nfs.rb|plugins/hosts/bsd/cap/nfs.rb,3,0.008,0,1,false,NFS filesync: Prevent sed from creating tmp files Even if one tries hard to prevent vagrant from asking for password while using the NFS file sync and does following:sudo chown root:admin /etc/exportssudo chmod g+w /etc/exportsecho %admin ALL(root) NOPASSWD: /sbin/nfsd  /etc/sudoersthen there is still this sed which tries to create temp files in /etc and as that requires su perms and no sudo is provided it ends up in following errors:sed: couldnt open temporary file /etc/sedKEZcGM: Permission deniedand from security point of view I dont see a reason to allow write for all admins on that system just because sed wants to put temp files thereIf you think that using open3 or generally the approach taken is not the best solution here Im really open for suggestions and happy to modify the PR,,1318,0.7443095599393019,0.544,29183,581.9826611383339,49.58366172086489,87.0369735805092,7539,24,1833,93,travis,radeksimko,radeksimko,true,,0,0,51,115,1708,false,true,false,false,0,0,0,0,0,0,177317
6050426,mitchellh/vagrant,ruby,5257,1422473953,1422562816,1422562816,1481,1481,commits_in_master,false,false,false,97,2,2,0,6,0,6,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,14,0,14,0,9.379669549679775,0.16721105997539323,0,,website/docs/source/v2/cli/version.html.md|website/docs/source/v2/other/environmental-variables.html.md,0,0.0,0,5,false,Kindly document how to disable checkpoint remote call The hashicorp checkpoint gems [current documentation](http://wwwrubydocinfo/gems/hashicorp-checkpoint/014) has this to say: We understand that software making remote calls over the internet for any reason can be undesirable Because of this Checkpoint can be disabled in all of our software that includes it You can view the source of this client to see that were not sending any private informationInstructions how to do the disabling have been omitted from the Vagrant documentation This pull request contains a (very minimal) fix for that omissionThank you for providing fine software,,1317,0.7441154138192863,0.546916890080429,29183,581.9826611383339,49.58366172086489,87.0369735805092,7537,24,1833,58,travis,aknrdureegaesr,sethvargo,false,sethvargo,0,0,5,0,1239,false,false,false,false,0,0,0,0,0,0,42
6008523,mitchellh/vagrant,ruby,5246,1422218481,,1424815343,43281,,unknown,false,false,false,25,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.844116996368306,0.08628450038422966,3,sethvargo@gmail.com,website/docs/source/v2/synced-folders/nfs.html.md,3,0.00804289544235925,0,0,false,Edit NFS docs for windows users There is an alternative for Windows users that want to run NFS documentation should be updated to inform them ,,1316,0.7446808510638298,0.546916890080429,29286,579.9358055043366,49.40927405586287,86.73086116233013,7506,24,1830,67,travis,alfonsodev,mitchellh,false,,0,0,9,16,898,false,false,false,false,0,0,0,0,0,0,43281
6001102,mitchellh/vagrant,ruby,5244,1422141658,1422152252,1422152252,176,176,commits_in_master,false,false,true,59,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.455700755830901,0.07936608653435415,2,sethvargo@gmail.com,lib/vagrant/action/runner.rb,2,0.005291005291005291,0,0,false,core: log action name to info I found this output to be very helpful in debugging an action hookproblem in a plugin  problem Im not sure why the callable_id isuseful (seem to always show up as an instance of Builder or Wardenfor me) but I left it in there just in case its useful to someone,,1315,0.7444866920152091,0.5502645502645502,29286,579.9358055043366,49.40927405586287,86.73086116233013,7503,24,1829,56,travis,phinze,mitchellh,false,mitchellh,10,1.0,279,42,2245,true,true,false,false,1,7,4,4,14,0,176
5978114,mitchellh/vagrant,ruby,5238,1421972367,1421973115,1421973115,12,12,commits_in_master,false,false,false,7,2,2,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,8.678690872871538,0.15458702633121732,3,vagrant@adamspiers.org,website/docs/source/v2/synced-folders/basic_usage.html.md|website/docs/source/v2/synced-folders/basic_usage.html.md,3,0.005859375,0,0,false,Updated wording around synced folder optional arguments ,,1314,0.7442922374429224,0.650390625,29286,579.9358055043366,49.40927405586287,86.73086116233013,7494,24,1827,56,travis,dragon788,sethvargo,false,sethvargo,0,0,3,8,1526,false,false,false,false,0,2,0,0,0,0,-1
5962191,mitchellh/vagrant,ruby,5233,1421882061,1421903471,1421903471,356,356,commits_in_master,false,false,true,42,1,1,0,2,0,2,0,2,0,0,5,5,5,0,0,0,0,5,5,5,0,0,8,5,8,5,21.911493262085358,0.3903047419661645,7,xmitchx@gmail.com,plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|test/unit/plugins/providers/virtualbox/support/shared/virtualbox_driver_version_4_x_examples.rb,7,0.013207547169811321,0,0,false,providers/virtualbox: read netmask from dhcpservers This should fix the cleaning up of the default VirtualBox dhcpserverwhich weve been fighting with for ages over in #3083 We were checkingfor a structure _including_ a netmask but the driver was not populatingnetmask,,1313,0.7440974866717441,0.6566037735849056,29288,579.1108986615678,49.37175635072385,86.45178912865336,7488,23,1826,57,travis,phinze,phinze,true,phinze,9,1.0,279,42,2242,true,true,false,false,1,5,2,4,11,0,240
5958745,mitchellh/vagrant,ruby,5230,1421868221,1421868337,1421868337,1,1,commits_in_master,false,false,false,15,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.6797185252438736,0.0833588862049664,0,,website/docs/source/v2/provisioning/shell.html.md,0,0.0,0,0,false,Add a note to the external script section how to run existing scripts Closes-bug: #5228,,1312,0.7439024390243902,0.6565464895635673,29288,579.1108986615678,49.37175635072385,86.45178912865336,7487,23,1826,57,travis,berendt,sethvargo,false,sethvargo,14,0.7142857142857143,24,8,1576,false,false,false,false,1,2,0,0,0,0,-1
5949781,mitchellh/vagrant,ruby,5225,1421808027,1422309332,1422309332,8355,8355,commits_in_master,false,false,true,22,1,1,0,1,0,1,0,1,0,1,2,3,3,0,0,0,1,2,3,3,0,0,174,0,174,0,9.191831031409942,0.16373224005446999,16,xmitchx@gmail.com,plugins/communicators/winrm/file_manager.rb|plugins/communicators/winrm/shell.rb|vagrant.gemspec,15,0.0018975332068311196,0,0,false,Use winrm-fs for file uploads Replace the Vagrant native winrm file upload functionality with the new winrm-fs gem (which requires winrm 13+),,1311,0.7437070938215103,0.6565464895635673,29288,579.1108986615678,49.37175635072385,86.45178912865336,7484,23,1825,57,travis,sneal,sneal,true,sneal,28,0.8928571428571429,36,0,1811,true,false,false,false,8,17,4,2,6,1,6
5942804,mitchellh/vagrant,ruby,5222,1421778080,1421780313,1421780313,37,37,commits_in_master,false,false,false,122,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,9.495333568864188,0.1691386907623371,7,xmitchx@gmail.com,plugins/hosts/bsd/cap/nfs.rb|plugins/hosts/linux/cap/nfs.rb,5,0.009765625,0,1,false,Allow colon in NFS ID regex In developing a Vagrant plugin for XenServer[1] the unique identifier that the API uses for VMs contains a colon They are of the form:    OpaqueRef:1530c1b3-2cd8-9561-5dc8-7aaa160fb641It seems the other plugins use their platforms unique identifier for the machine ID and so do weThe issue is that this machine ID is used by the SyncedFolders built-in plugin to create an entry in /etc/exports This functions correctly however the SyncedFoldersCleanup plugin doesnt clean them up because the regex in prune_nfs doesnt allow for colons in the lineAn alternative would be to allow any string after the VAGRANT-BEGIN uid since there are no limitations on what can be put into the machines IDSigned-off-by: Si Beaumont simonbeaumont@citrixcom,,1310,0.7435114503816794,0.662109375,29288,579.0767549849768,49.37175635072385,86.41764545206227,7479,23,1825,59,travis,simonjbeaumont,sethvargo,false,sethvargo,0,0,12,2,1195,false,false,false,false,0,0,0,0,0,0,37
5942397,mitchellh/vagrant,ruby,5221,1421776012,1421888708,1421888708,1878,1878,commits_in_master,false,false,false,88,2,1,0,2,0,2,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,4,0,4,27,4.3828597494306525,0.07807110244599015,3,xmitchx@gmail.com,lib/vagrant/action/builtin/handle_box.rb,3,0.005859375,0,2,false,fix checksum verification for downloaded boxes (fixes #4665) This fixes https://githubcom/mitchellh/vagrant/issues/4665 which I ran into todayI had added the wrong shasum to my Vagrantfile but the box still got downloaded and imported so I decided to take a stab at fixing itManually adding the box from the command line withvagrant box add --name randombox --checksum-type sha256 --checksum sha256_of_boxvalidates the checksum just fine so I used plugins/commands/box/command/addrb as modelIt turned out that lib/vagrant/action/builtin/handle_boxrb wasnt passing either of box_checksum and box_checksum_type to Vagrant::Actionaction_box_add,,1309,0.7433155080213903,0.662109375,29288,579.0767549849768,49.37175635072385,86.41764545206227,7479,23,1825,60,travis,simonvetter,sethvargo,false,sethvargo,0,0,15,21,2058,false,false,false,false,2,2,0,0,0,0,69
5940581,mitchellh/vagrant,ruby,5220,1421765671,1421780028,1421780028,239,239,commits_in_master,false,false,false,13,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0.0,0,,plugins/communicators/winrm/command_filters/mkdir.rb,0,0.0,0,0,false,Remove unneeded executable permissions There is no shebang the file cant be executed,,1308,0.7431192660550459,0.662109375,29288,579.0767549849768,49.37175635072385,86.41764545206227,7479,23,1825,59,travis,voxik,sethvargo,false,sethvargo,3,0.6666666666666666,21,2,2405,false,false,false,false,0,4,3,1,0,0,-1
5938899,mitchellh/vagrant,ruby,5218,1421753854,1421785452,1421785452,526,526,commits_in_master,false,false,false,51,2,1,0,4,0,4,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,2,0,2,3,4.440035079468179,0.07908955644724422,3,sethvargo@gmail.com,lib/vagrant.rb,3,0.005859375,0,5,false,Check plugin name with version spec in has_plugin If one passes a version spec to Vagranthas_plugin the actual plugin name is ignored and any installed plugin which matches the version spec makes the check pass Fix this by also checking for plugin name match in addition to the requested version spec,,1307,0.7429227237949503,0.662109375,29288,579.0767549849768,49.37175635072385,86.41764545206227,7479,23,1825,57,travis,mbrodala,sethvargo,false,sethvargo,0,0,3,0,551,false,true,false,false,1,5,0,0,0,0,434
5937426,mitchellh/vagrant,ruby,5217,1421738465,,1436484390,245765,,unknown,false,false,false,44,1,1,0,15,0,15,0,13,1,0,1,2,2,0,0,1,0,1,2,2,0,0,2,79,2,79,9.172866747089019,0.16339464652694663,9,xmitchx@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb|test/unit/plugins/provisioners/chef/provisioner/chef_solo_test.rb,9,0.017578125,2,5,false,Dont use cache for synced folders in ChefSolo This disables using the synced_folders cache for ChefSolo Ive also added tests for the ChefSolo provisioner in regards to the conflicts and confirming the counter updates correctlyThis should close #5199 #5200 and #5140@mitchellh @sethvargo ,,1306,0.7434915773353752,0.662109375,29288,579.0767549849768,49.37175635072385,86.41764545206227,7476,23,1825,100,travis,BlakeMesdag,mitchellh,false,,0,0,20,6,1393,false,false,false,false,0,3,0,0,0,0,690
5934880,mitchellh/vagrant,ruby,5216,1421719484,1421779771,1421779771,1004,1004,commits_in_master,false,false,false,34,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.523171610639273,0.08057045271432324,2,xmitchx@gmail.com,plugins/provisioners/docker/cap/debian/docker_install.rb,2,0.00390625,0,0,false,Switch to dockercom dockerio seems to be deprecated & handled differently from dockercom see https://twittercom/clint_newsom/status/557290529810313217Anecdotally the dockercom URLs worked while the dockerio URLs were failing so I have more long-term confidence in them,,1305,0.7432950191570882,0.662109375,29288,579.0767549849768,49.37175635072385,86.41764545206227,7474,23,1824,59,travis,clayallsopp,sethvargo,false,sethvargo,0,0,412,2,1891,false,false,false,false,0,1,0,0,0,0,0
5913863,mitchellh/vagrant,ruby,5210,1421541346,1424815393,1424815393,54567,54567,commits_in_master,false,false,false,41,4,4,0,1,0,1,0,2,2,2,5,9,7,0,0,2,2,5,9,7,0,0,116,24,116,24,49.44742979753102,0.8807982865332232,3,vvchik@gmail.com,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_vlan.ps1|test/unit/plugins/providers/hyperv/config_test.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_vlan.ps1|test/unit/plugins/providers/hyperv/config_test.rb|plugins/providers/hyperv/scripts/import_vm.ps1,2,0.0,0,0,false,Fix for: #5209 (hyperv) import respects boxs original Secure Boot setting The code takes secure_boot_enabled setting from boxs XML (hyperv config) file and passes the value into the new VM in hyperv The fix allows to create and boot non-uefi boxes ,,1304,0.7430981595092024,0.6653771760154739,29288,579.0767549849768,49.37175635072385,86.41764545206227,7464,24,1822,65,travis,tomassrnka,mitchellh,false,mitchellh,2,1.0,6,3,1079,true,false,true,false,2,3,3,0,1,0,54567
5912463,mitchellh/vagrant,ruby,5207,1421529115,1433022310,1433022310,191553,191553,commits_in_master,false,false,false,152,2,1,0,4,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,46,0,48,0,4.191158109718073,0.07465635517852187,2,vvchik@gmail.com,plugins/providers/hyperv/action/import.rb,2,0.0038684719535783366,1,2,false,select a Hyper-V switch based on a network_name Currently if one has more than one Hyper-V switch vagrant will require user intervention to select the switch to use when importing a machine This is always slightly annoying and problematic when using applications such as Test-Kitchen that do not allow interactive setup of a vagrant boxThis PR allows a Vagrantfile to include a public or private network with a network name If a switch exists with the same name it is the one that will be chosen:configvmnetwork public_network network_name: External Virtual SwitchConsidering one has multiple switches and one is named after the network_name that switch will be chosen If no network name is specified the the current behavior takes over and prompts the userThis is a blatant steal from @Taliesins PR #3480 that was previously closed (due to too broad of scope from what I can tell),,1303,0.7429009976976209,0.6653771760154739,29288,579.0767549849768,49.37175635072385,86.41764545206227,7463,24,1822,136,travis,mwrock,sethvargo,false,sethvargo,10,0.8,127,3,1412,false,false,false,false,2,15,2,0,0,0,78881
5902211,mitchellh/vagrant,ruby,5201,1421438754,1421456287,1421456287,292,292,commits_in_master,false,false,true,19,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.385084393715021,0.07811074663695818,0,,lib/vagrant/util/is_port_open.rb,0,0.0,0,0,true,Fix issue 3031 Sometimes in use ports can raise a Errno::EACCES exeptions on Windows hosts This fixes issue #3031,,1302,0.7427035330261137,0.657088122605364,29287,579.0965274695258,49.37344214156451,86.42059616894868,7459,24,1821,52,travis,sneal,sneal,true,sneal,27,0.8888888888888888,36,0,1807,true,false,false,false,8,17,2,0,4,1,2
5888250,mitchellh/vagrant,ruby,5190,1421347925,1421349906,1421349906,33,33,github,false,false,false,8,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.818173485884835,0.08582529749558898,9,xmitchx@gmail.com,website/docs/source/v2/synced-folders/rsync.html.md,9,0.017142857142857144,0,0,false,Add missing comma in folder syncing code snippet ,,1300,0.7430769230769231,0.6514285714285715,29287,579.0965274695258,49.37344214156451,86.42059616894868,7447,24,1820,51,travis,thierrymarianne,thierrymarianne,true,thierrymarianne,1,1.0,105,993,1218,true,true,false,false,0,0,0,0,1,0,-1
5868054,mitchellh/vagrant,ruby,5183,1421262953,1421268824,1421268824,97,97,github,false,false,false,64,2,1,0,4,2,6,0,3,0,0,4,5,4,0,0,0,0,5,5,5,0,0,88,0,88,29,18.548447238984906,0.3304011271074897,0,,plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/scripts/import_vm.ps1|website/docs/source/v2/hyperv/configuration.html.md,0,0.0,0,4,false,Added possibility to configure memory cpus count and vmname in vagrant I think it is long-awaited feature for Hyper-V pluginThis PR gives possibility to manipulate following parameters in Vagrant file for configvmprovider :hyperv1 memory: type allocation and size 2 numbers of CPU3 Virtual machine name (it is not hostname but visible in hyper-v manager name)More details in documentationregards Volodymyr,,1299,0.7428791377983064,0.6576402321083172,29263,578.6146328127669,49.27724430167789,86.35478248983358,7441,24,1819,51,travis,vvchik,vvchik,true,vvchik,0,0,2,0,560,true,false,false,false,0,1,0,0,1,0,7
5884567,mitchellh/vagrant,ruby,5182,1421218018,1424815517,1424815517,59958,59958,commits_in_master,false,false,false,16,1,1,0,1,0,1,0,1,2,0,1,3,3,0,0,2,0,1,3,3,0,0,54,0,54,0,13.665679770684967,0.24342501238779887,0,,plugins/guests/solaris/cap/insert_public_key.rb|plugins/guests/solaris/cap/remove_public_key.rb|plugins/guests/solaris/plugin.rb,0,0.0,0,0,false,Add insert/remove public key guest capability for solaris Implementation identical to linux tested on omnios 151012,,1298,0.7426810477657936,0.6589147286821705,29263,578.6146328127669,49.27724430167789,86.35478248983358,7436,23,1819,64,travis,clintoncwolfe,mitchellh,false,mitchellh,1,1.0,14,1,1880,true,false,false,false,0,0,3,0,0,0,59958
5882442,mitchellh/vagrant,ruby,5181,1421205973,1433136058,1433136058,198834,198834,commits_in_master,false,true,false,8,9,2,0,2,3,5,0,2,0,0,3,3,1,2,0,0,0,3,3,1,2,0,14,0,30,0,27.59056753729063,0.492228747834313,2,sethvargo@gmail.com,plugins/guests/debian/cap/configure_networks.rb|templates/guests/debian/network_dhcp.erb|templates/guests/debian/network_static.erb|plugins/guests/debian/cap/configure_networks.rb|templates/guests/debian/network_dhcp.erb|templates/guests/debian/network_static.erb,2,0.0,0,4,false,(#5180) Fix interface definition with multiple private interfaces ,,1297,0.7424826522744795,0.6608187134502924,29220,579.4661190965093,49.34976043805612,86.48186173853526,7434,22,1818,100,travis,clinstid,sethvargo,false,sethvargo,0,0,5,5,1583,true,false,false,false,1,1,0,0,2,0,13998
5882096,mitchellh/vagrant,ruby,5179,1421203834,1421216597,1421216597,212,212,github,false,false,false,6,1,1,0,0,1,1,0,1,2,0,1,3,3,0,0,2,0,1,3,3,0,0,54,0,54,0,13.273170443804368,0.23679962576031935,9,sethvargo@users.noreply.github.com,plugins/provisioners/chef/cap/omnios/chef_install.rb|plugins/provisioners/chef/cap/omnios/chef_installed.rb|plugins/provisioners/chef/plugin.rb,9,0.0,0,0,false,Add chef_install(ed) guest capability for omnios ,,1296,0.7422839506172839,0.6660117878192534,29220,579.4661190965093,49.34976043805612,86.48186173853526,7432,21,1818,50,travis,clintoncwolfe,clintoncwolfe,true,clintoncwolfe,0,0,14,1,1879,false,false,false,false,0,0,0,0,0,0,-1
5850989,mitchellh/vagrant,ruby,5176,1421098353,1421099731,1421099731,22,22,github,false,false,true,12,2,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,160,0,163,0,4.8164565228824285,0.08593007598985138,0,,website/docs/source/v2/vmware/installation.html.md,0,0.0,2,0,false,Improve the documentation around install VMware plugins + FAQ /cc @mitchellh @KFishner ,,1295,0.7420849420849421,0.6660039761431411,29220,579.4661190965093,49.34976043805612,86.48186173853526,7420,22,1817,49,travis,sethvargo,sethvargo,true,sethvargo,34,0.8529411764705882,486,65,1575,true,false,false,false,194,392,99,18,227,8,13
5859537,mitchellh/vagrant,ruby,5175,1421086791,1424815584,1424815584,62146,62146,commits_in_master,false,false,false,12,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.538910861965268,0.08097840257186059,0,,plugins/synced_folders/rsync/helper.rb,0,0.0,0,0,false,synced/folders/rsync Add IdentitiesOnlyyes Added IdentiesOnlyyes to avoid Too Many Authentication Failures error,,1294,0.7418856259659969,0.6673306772908366,29220,579.4661190965093,49.34976043805612,86.48186173853526,7417,22,1817,63,travis,hdeheer,mitchellh,false,mitchellh,0,0,2,6,1250,false,false,false,false,0,0,0,0,0,0,21
5839999,mitchellh/vagrant,ruby,5170,1421016335,1424815894,1424815894,63325,63325,commit_sha_in_comments,false,false,false,25,1,1,0,2,0,2,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,9,0,9,0,8.325302223364123,0.1485311153933204,36,xmitchx@gmail.com,plugins/provisioners/chef/provisioner/base.rb|templates/locales/en.yml,34,0.06813627254509018,0,3,false,check for which binary A quick attempt to overcome an issue I had with a Docker image where the which binary was not presenthttps://githubcom/mitchellh/vagrant/issues/5167,,1293,0.7416860015467904,0.6613226452905812,29217,577.8485128521068,49.25214772221652,86.1484752027929,7410,22,1816,63,travis,windowsrefund,mitchellh,false,mitchellh,0,0,3,1,1497,false,false,false,false,1,4,0,0,0,0,43
5839444,mitchellh/vagrant,ruby,5169,1421011825,1421018838,1421018838,116,116,commits_in_master,false,false,false,38,3,3,0,0,0,0,0,1,2,2,4,8,6,0,0,2,2,4,8,6,0,0,159,36,159,36,71.32152943733435,1.272442253105876,0,,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_vlan.ps1|test/unit/plugins/providers/hyperv/config_test.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_vlan.ps1|test/unit/plugins/providers/hyperv/config_test.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/net_set_vlan.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/set_network_vlan.ps1|test/unit/plugins/providers/hyperv/config_test.rb,0,0.0,0,0,false,(#5168) Add option to specify VlanID to Network Adapter when using HyperV provider  Pull request adds option vlan_id option to VagrantFile which allows to specify vlan_id for each VMs Network Adapter Default value is set to 0 (untagged),,1292,0.7414860681114551,0.6613226452905812,29217,577.8485128521068,49.25214772221652,86.1484752027929,7408,22,1816,48,travis,tomassrnka,tomassrnka,true,tomassrnka,1,1.0,5,3,1073,true,false,false,false,1,1,1,0,1,0,-1
5792295,mitchellh/vagrant,ruby,5157,1420847745,,1420850678,48,,unknown,false,false,false,14,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.777858288319089,0.06740049673958753,0,,plugins/provisioners/file/config.rb,0,0.0,0,0,true,fix for issue #5156  File provisioner will no longer copy folders as empty files,,1291,0.7420604182804028,0.6554455445544555,29217,577.8485128521068,49.25214772221652,86.1484752027929,7399,23,1814,48,travis,bvalerius,bvalerius,true,,0,0,2,2,1785,false,false,false,false,1,0,0,0,0,0,-1
5786059,mitchellh/vagrant,ruby,5147,1420813342,1420834286,1420834286,349,349,commits_in_master,false,false,false,15,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.55720872100452,0.08137086800059513,0,,README.md,0,0.0,0,0,true,README: improve wording A trivial improvement of wording in the READMEThanks for considerationMichael,,1290,0.7418604651162791,0.654,29201,575.6309715420705,49.03941645834046,85.95596041231465,7397,23,1814,50,travis,obnoxxx,mitchellh,false,mitchellh,0,0,11,4,186,false,false,false,false,0,0,0,0,0,0,349
5785678,mitchellh/vagrant,ruby,5146,1420810363,1420833968,1420833968,393,393,commits_in_master,false,false,false,2,1,1,0,1,3,4,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.288932539227888,0.07658068455465498,32,xmitchx@gmail.com,templates/locales/en.yml,32,0.064,0,0,true,fix typo ,,1289,0.7416602017067494,0.654,29201,575.6309715420705,49.03941645834046,85.95596041231465,7397,23,1814,50,travis,peterood,mitchellh,false,mitchellh,0,0,36,558,1079,false,false,true,false,0,0,0,0,0,0,393
5781172,mitchellh/vagrant,ruby,5145,1420770361,1420842818,1420842818,1207,1207,commits_in_master,false,false,true,6,5,4,0,1,0,1,0,1,1,0,4,6,4,0,1,1,0,5,6,4,0,1,44,78,53,108,21.9391059079964,0.39173191314729805,9,xmitchx@gmail.com,website/docs/source/v2/cli/login.html.md|website/docs/Gemfile.lock|plugins/commands/login/command.rb|plugins/commands/login/locales/en.yml|test/unit/plugins/commands/login/command_test.rb,4,0.006,0,0,false,Allow specifying a token at login ,,1288,0.7414596273291926,0.654,29201,575.6309715420705,49.03941645834046,85.95596041231465,7396,23,1813,48,travis,sethvargo,sethvargo,true,sethvargo,33,0.8484848484848485,486,65,1571,true,false,false,false,190,386,98,18,226,8,82
5773419,mitchellh/vagrant,ruby,5138,1420730996,1420747117,1420747117,268,268,commits_in_master,false,false,false,117,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.6327366005158535,0.0827196236227465,0,,plugins/providers/docker/hostmachine/Vagrantfile,0,0.0,0,0,false,Disable insert_key for boot2docker host Vagrant 17 is unable to login to the default boot2docker host if it hasbeen halted and brought back up againThis is because the insecure SSH keypair is replaced but boot2docker doesntpersist filesystem changes between reboots So when next brought up Vagranttries to use the new keypair which is no longer valid and subsequently isntable to loginPrevent this from happening by disabling the sshinsert_key option onversions where it is available---Im not sure how this will affect users that upgrade from an earlier version to 17 because this Vagrantfile will have already been copied out to ~/vagrantd/data/docker-host and they wont receive this change Any ideas,,1287,0.7412587412587412,0.6579476861167002,29201,575.6309715420705,49.03941645834046,85.95596041231465,7395,24,1813,48,travis,dcarley,mitchellh,false,mitchellh,3,1.0,40,0,1714,false,false,false,false,0,0,1,0,0,0,268
5769602,mitchellh/vagrant,ruby,5136,1420694674,,1424816001,68688,,unknown,false,false,true,37,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.717770400486122,0.08423794087997397,0,,website/docs/source/v2/providers/index.html.md,0,0.0,0,0,false,docs: Mention Docker and Hyper-V on provider index page A very small change but Im not sure about the wording here so I thought it would be better to run it through some native english speakers :smile: ,,1286,0.7418351477449455,0.6579476861167002,29201,575.6309715420705,49.03941645834046,85.95596041231465,7394,24,1813,62,travis,fgrehm,mitchellh,false,,29,0.896551724137931,377,143,2073,true,true,true,false,3,0,0,0,1,0,68688
5764909,mitchellh/vagrant,ruby,5130,1420669427,1420679644,1420679644,170,170,commits_in_master,false,false,true,93,5,3,7,2,0,9,0,2,0,0,5,7,5,0,0,0,0,7,7,7,0,0,30,78,57,165,22.677405008838985,0.404920919674951,35,sethvargo@gmail.com,test/unit/plugins/commands/push/command_test.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|plugins/commands/push/command.rb|plugins/commands/login/client.rb,15,0.018292682926829267,2,1,false,Actually validate push configurations In 5903bfb3c6f767f05ad9f1c4c6ef5237de039ea8 we added validation for global configuration but that does not actually invoke the individual push validations As a result the push-specific configs were never validated The tests did not catch this because they test at a lower level and manually call #validateThis is the root cause of vagrant push with the Atlas strategy not choosing the login token since the login token is actually [set during validation](https://githubcom/mitchellh/vagrant/blob/42b7f13790c779671e472010ac988c3401efc593/plugins/pushes/atlas/configrb#L87-L94) because we require access to the machine objectThis PR also adds much-needed logging to vagrant-login/cc @mitchellh @pearkes ,,1285,0.7416342412451362,0.6605691056910569,29178,575.8105421893207,49.07807252039208,85.98944410172048,7390,23,1812,47,travis,sethvargo,sethvargo,true,sethvargo,32,0.84375,486,65,1570,true,false,false,false,184,381,97,16,219,8,61
5755981,mitchellh/vagrant,ruby,5124,1420604570,1420614778,1420614778,170,170,commits_in_master,false,false,false,2,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.648120796542828,0.08298664205351222,103,xmitchx@gmail.com,CHANGELOG.md,103,0.21149897330595482,0,0,false,Fixed typos ,,1284,0.7414330218068536,0.6632443531827515,29178,575.8105421893207,49.07807252039208,85.98944410172048,7384,23,1811,47,travis,johnclaus,sethvargo,false,sethvargo,0,0,27,26,2499,false,false,false,false,1,4,0,0,0,0,-1
5752211,mitchellh/vagrant,ruby,5121,1420583645,1420585603,1420585603,32,32,commits_in_master,false,false,true,171,4,1,7,2,0,9,0,2,0,0,3,9,3,0,0,0,0,9,9,9,0,0,68,0,113,4,13.304204138854084,0.23753323906950402,11,sethvargo@users.noreply.github.com,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/provisioner/chef_solo.rb,7,0.01263157894736842,0,1,false,provisioners/chef: use synced folder cache instead of counter Fixes #4988 This changes the Chef provisioner from using counters to using predictable names based on the MD5 of the local path These are then verified using the synced folder cache This removes the need for two things causing problems1 Counter usage for synced folder paths in the provisioner itself This was originally necessary to avoid conflicts We no longer worry about this anymore since use the MD5 of the local path as the name this avoids conflicts and if they do conflict its the same folder so it doesnt matter2 Counter usage for the provisioning path We needed this in case multiple configvmprovision was there since the counters from 1 above were scoped to each provisioner We no longer need this because 1 is gone and the same logic applies for conflicting folders (it doesnt matter since theyre the same)Once this is in Ill fix Puppet as well which is the only other provisioner with this problem I believe,,1283,0.7412314886983632,0.6610526315789473,29173,575.9092311383813,49.086484077743116,86.0041819490625,7380,23,1811,48,travis,mitchellh,mitchellh,true,mitchellh,29,0.8620689655172413,3715,0,2505,true,true,false,false,360,536,65,10,193,8,2
5743314,mitchellh/vagrant,ruby,5116,1420517243,1420517288,1420517288,0,0,commits_in_master,false,false,true,7,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.538246418683921,0.0810250691466917,2,sethvargo@users.noreply.github.com,lib/vagrant/util/env.rb,2,0.004273504273504274,0,0,false,Make with_clean_env a class method Fixes #5021,,1282,0.7410296411856474,0.6538461538461539,29163,576.1067105578987,49.10331584542057,86.03367280458114,7374,24,1810,48,travis,sethvargo,sethvargo,true,sethvargo,31,0.8387096774193549,486,65,1568,true,false,false,false,133,342,93,12,209,8,-1
5743246,mitchellh/vagrant,ruby,5115,1420516755,1420517051,1420517051,4,4,commits_in_master,false,false,true,10,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.741562989644178,0.06680114901209487,5,sethvargo@gmail.com,plugins/commands/package/command.rb,5,0.01072961373390558,1,0,false,Do not use keyword arguments for string keys /cc @mitchellh ,,1281,0.7408274785323966,0.6545064377682404,29163,576.1067105578987,49.10331584542057,86.03367280458114,7374,24,1810,48,travis,sethvargo,sethvargo,true,sethvargo,30,0.8333333333333334,486,65,1568,true,false,false,false,133,341,91,12,207,8,3
5743118,mitchellh/vagrant,ruby,5114,1420515847,1420516257,1420516257,6,6,commits_in_master,false,false,true,23,1,1,0,2,0,2,0,2,0,0,42,42,42,0,0,0,0,42,42,42,0,0,163,4,163,4,181.06850365255323,3.232706327048227,78,xmitchx@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/config_validate.rb|lib/vagrant/action/builtin/graceful_halt.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action/runner.rb|lib/vagrant/capability_host.rb|lib/vagrant/config/loader.rb|lib/vagrant/config/v1/loader.rb|lib/vagrant/config/v1/root.rb|lib/vagrant/config/v2/loader.rb|lib/vagrant/config/v2/root.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/registry.rb|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|plugins/commands/destroy/command.rb|plugins/commands/plugin/action/plugin_exists_check.rb|plugins/commands/up/command.rb|plugins/communicators/ssh/communicator.rb|plugins/guests/darwin/cap/rsync.rb|plugins/guests/freebsd/cap/rsync.rb|plugins/guests/linux/cap/rsync.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/docker/action/host_machine_sync_folders.rb|plugins/providers/virtualbox/action/prepare_nfs_settings.rb|plugins/providers/virtualbox/action/set_name.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/model/forwarded_port.rb|plugins/provisioners/docker/config.rb|plugins/synced_folders/nfs/synced_folder.rb|plugins/synced_folders/rsync/command/rsync_auto.rb|test/unit/vagrant/action/warden_test.rb|test/unit/vagrant/util/hash_with_indifferent_access_test.rb,17,0.0,0,1,false,Use key instead of has_key This fixes a Ruby deprecation issue I was seeing Apparently has_key is deprecated in favor or key :smile: ,,1280,0.740625,0.6551724137931034,29162,576.1264659488376,49.104999657087994,86.03662300253755,7374,24,1810,48,travis,sethvargo,sethvargo,true,sethvargo,29,0.8275862068965517,486,65,1568,true,false,false,false,133,338,89,12,205,8,1
5742963,mitchellh/vagrant,ruby,5113,1420514799,1436511612,1436511612,266613,266613,merged_in_comments,false,false,true,24,3,3,0,5,0,5,0,2,0,0,40,40,40,0,0,0,0,40,40,40,0,0,368,192,368,192,515.6601576426892,9.206338046604284,69,xmitchx@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/confirm.rb|lib/vagrant/action/builtin/is_state.rb|lib/vagrant/action/builtin/message.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/synced_folders.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|lib/vagrant/box_metadata.rb|lib/vagrant/bundler.rb|lib/vagrant/environment.rb|lib/vagrant/machine_index.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|lib/vagrant/util/powershell.rb|plugins/commands/package/command.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/push.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/command/logs.rb|plugins/providers/docker/communicator.rb|plugins/providers/docker/driver.rb|plugins/providers/docker/executor/local.rb|plugins/providers/docker/executor/vagrant.rb|plugins/providers/hyperv/driver.rb|plugins/providers/virtualbox/action/prepare_nfs_settings.rb|plugins/providers/virtualbox/config.rb|plugins/provisioners/docker/config.rb|test/unit/plugins/commands/box/command/add_test.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb|test/unit/support/isolated_environment.rb|test/unit/support/shared/plugin_command_context.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/vagrant/ui_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/confirm.rb|lib/vagrant/action/builtin/is_state.rb|lib/vagrant/action/builtin/message.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/synced_folders.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|lib/vagrant/box_metadata.rb|lib/vagrant/bundler.rb|lib/vagrant/environment.rb|lib/vagrant/machine_index.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|lib/vagrant/util/powershell.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/push.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/command/logs.rb|plugins/providers/docker/communicator.rb|plugins/providers/docker/driver.rb|plugins/providers/docker/executor/local.rb|plugins/providers/docker/executor/vagrant.rb|plugins/providers/hyperv/driver.rb|plugins/providers/virtualbox/action/prepare_nfs_settings.rb|plugins/providers/virtualbox/config.rb|plugins/provisioners/docker/config.rb|test/unit/plugins/commands/box/command/add_test.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb|test/unit/support/isolated_environment.rb|test/unit/support/shared/plugin_command_context.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/vagrant/ui_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/confirm.rb|lib/vagrant/action/builtin/is_state.rb|lib/vagrant/action/builtin/message.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/synced_folders.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|lib/vagrant/box_metadata.rb|lib/vagrant/bundler.rb|lib/vagrant/environment.rb|lib/vagrant/machine_index.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|lib/vagrant/util/powershell.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/push.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/command/logs.rb|plugins/providers/docker/communicator.rb|plugins/providers/docker/driver.rb|plugins/providers/docker/executor/local.rb|plugins/providers/docker/executor/vagrant.rb|plugins/providers/hyperv/driver.rb|plugins/providers/virtualbox/action/prepare_nfs_settings.rb|plugins/providers/virtualbox/config.rb|plugins/provisioners/docker/config.rb|test/unit/plugins/commands/box/command/add_test.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb|test/unit/support/isolated_environment.rb|test/unit/support/shared/plugin_command_context.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/vagrant/ui_test.rb,13,0.0,1,2,false,Use option hashes instead of keywords args /cc @mitchellh this makes me really :panda_face: TLDR you cant use string keys in **opts keyword hashes,,1279,0.7404222048475372,0.6565874730021598,29162,576.1264659488376,49.104999657087994,86.03662300253755,7374,24,1810,84,travis,sethvargo,sethvargo,true,sethvargo,28,0.8214285714285714,486,65,1568,true,false,false,false,133,338,88,12,204,8,20
5741217,mitchellh/vagrant,ruby,5110,1420505492,1420506809,1420506809,21,21,commits_in_master,false,false,true,11,2,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,10,0,9.375294113596183,0.16738195626230024,8,sethvargo@gmail.com,lib/vagrant/shared_helpers.rb|plugins/pushes/atlas/push.rb,6,0.013215859030837005,1,0,false,Turn on Atlas debug logging if Vagrant is logging /cc @mitchellh ,,1278,0.7402190923317684,0.6585903083700441,29158,576.2055010631731,49.11173605871459,86.04842581795734,7374,24,1810,47,travis,sethvargo,sethvargo,true,sethvargo,27,0.8148148148148148,486,65,1568,true,false,false,false,133,333,86,12,195,8,1
5737662,mitchellh/vagrant,ruby,5108,1420487354,1420488777,1420488777,23,23,commits_in_master,false,false,true,19,3,1,0,0,0,0,0,2,0,0,2,4,2,0,0,0,0,4,4,4,0,0,6,0,6,11,8.613786706460118,0.15378829515750445,15,xmitchx@gmail.com,lib/vagrant/machine.rb|plugins/commands/package/command.rb,13,0.029953917050691243,1,1,false,Symbolize and stringify keys in options hash @mitchellh these are some remaining fixes from #4962 that users have reported,,1277,0.7400156617071261,0.6543778801843319,29153,575.7897986485095,49.08585737316915,86.02888210475766,7374,24,1810,55,travis,sethvargo,sethvargo,true,sethvargo,26,0.8076923076923077,486,65,1568,true,false,false,false,133,328,83,12,190,8,-1
5735779,mitchellh/vagrant,ruby,5107,1420477504,,1420487384,164,,unknown,false,false,false,12,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,0,5,0,8.283861115350543,0.14789788993682249,15,xmitchx@gmail.com,lib/vagrant/machine.rb|plugins/commands/package/command.rb,13,0.03002309468822171,0,1,false,attempt at fixing #4972 (#4962) fwiw _seems_ to behave locally so far,,1276,0.7405956112852664,0.6558891454965358,29153,575.7897986485095,49.08585737316915,86.02888210475766,7373,24,1810,55,travis,AntonioMeireles,sethvargo,false,,1,0.0,18,11,1355,false,false,false,false,0,6,2,0,0,0,164
5733781,mitchellh/vagrant,ruby,5106,1420461713,,1420463790,34,,unknown,false,false,false,15,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.041449091906536,0.07215497515674738,2,sethvargo@gmail.com,plugins/commands/package/command.rb,2,0.004618937644341801,1,0,false,really fix #4972 (#4962) actual fix was from a comment from @alu in # 4962,,1275,0.7411764705882353,0.6558891454965358,29153,575.7897986485095,49.08585737316915,86.02888210475766,7371,24,1810,54,travis,AntonioMeireles,AntonioMeireles,true,,0,0,18,11,1355,false,false,false,false,0,3,0,0,0,0,34
5731062,mitchellh/vagrant,ruby,5104,1420428665,1420428999,1420428999,5,5,commits_in_master,false,false,true,6,9,8,0,1,0,1,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,49,32,49,37,38.73898702073647,0.6916553419971246,4,sethvargo@gmail.com,test/unit/plugins/pushes/ftp/adapter_test.rb|plugins/pushes/ftp/adapter.rb|plugins/pushes/ftp/adapter.rb|plugins/pushes/ftp/push.rb|test/unit/plugins/pushes/ftp/push_test.rb|plugins/pushes/ftp/push.rb|plugins/pushes/ftp/push.rb|plugins/pushes/ftp/push.rb|plugins/pushes/ftp/push.rb,3,0.004662004662004662,0,0,false,Various fixes for FTP Fixes https://githubcom/mitchellh/vagrant/issues/5095,,1274,0.7409733124018838,0.655011655011655,29138,576.2921271192257,49.17976525499348,86.14180794838356,7368,24,1809,54,travis,sethvargo,sethvargo,true,sethvargo,25,0.8,486,65,1567,true,false,false,false,133,327,81,12,186,8,0
5724379,mitchellh/vagrant,ruby,5102,1420341904,1420494242,1420494242,2538,2538,commits_in_master,false,false,false,18,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.622234494960452,0.08252650433764491,0,,plugins/providers/hyperv/scripts/start_vm.ps1,0,0.0,0,2,false,Fix catching Start-VM exceptions on Hyper-V during starting up VM Fix for Start-VM exceptions are not caught #5101,,1273,0.7407698350353495,0.6643026004728132,29138,576.2921271192257,49.17976525499348,86.14180794838356,7363,24,1808,53,travis,tomassrnka,mitchellh,false,mitchellh,0,0,5,3,1065,false,false,true,false,0,0,0,0,0,0,1110
5709523,mitchellh/vagrant,ruby,5094,1420162340,1420494596,1420494596,5537,5537,commits_in_master,false,false,false,25,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,18,0,18,0,12.981119944519904,0.23176808804852225,10,xmitchx@gmail.com,plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb,10,0.01182033096926714,0,0,false,enable symlinks before adding shared folder Fix for issue #5093 to allow symlinks to work in Docker shared folders with using VirtualBox as the host ,,1272,0.7405660377358491,0.6643026004728132,29138,576.2921271192257,49.17976525499348,86.14180794838356,7343,24,1806,52,travis,wkolean,mitchellh,false,mitchellh,0,0,0,0,816,false,false,false,false,0,0,0,0,0,0,5537
5694342,mitchellh/vagrant,ruby,5087,1419970519,1419970522,1419970522,0,0,github,false,false,true,10,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,4.800537490488636,0.0857100833135999,5,sethvargo@users.noreply.github.com,website/docs/source/v2/synced-folders/rsync.html.md,5,0.011848341232227487,0,0,false,Revert Doc: Fix double underscore rsync attribute documentation Reverts mitchellh/vagrant#5031,,1269,0.7415287628053585,0.6635071090047393,29138,576.2921271192257,49.17976525499348,86.14180794838356,7329,24,1804,50,travis,sethvargo,sethvargo,true,sethvargo,24,0.7916666666666666,486,65,1562,true,false,false,false,129,315,79,12,179,8,-1
5689954,mitchellh/vagrant,ruby,5085,1419924623,1420501511,1420501511,9614,9614,commits_in_master,false,false,false,22,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.258935168827646,0.07604017026649287,0,,plugins/commands/up/start_mixins.rb,0,0.0,0,0,false,Enable provision with --provision-with flag Type vagrant reload --provision-with  instead ofvagrant reload --provision --provision-with Same as for vagrant up,,1268,0.7413249211356467,0.665083135391924,29138,576.2921271192257,49.17976525499348,86.14180794838356,7323,24,1804,51,travis,evverx,mitchellh,false,mitchellh,2,1.0,9,11,15,false,true,false,false,0,0,2,0,0,0,9614
5688246,mitchellh/vagrant,ruby,5084,1419907326,,1436486641,276321,,unknown,false,false,false,10,1,1,1,6,0,7,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,8,0,8,0,13.500203850598817,0.24103432926651883,19,xmitchx@gmail.com,lib/vagrant/machine.rb|plugins/communicators/ssh/communicator.rb|plugins/synced_folders/rsync/helper.rb,13,0.01904761904761905,0,2,false,Skip sudo when accessing as root Signed-off-by: Federico Simoncelli fsimonce@redhatcom,,1267,0.7419100236779794,0.6642857142857143,29135,576.3514673073623,49.184829243178314,86.15067787883989,7321,24,1803,91,travis,simon3z,mitchellh,false,,1,0.0,13,1,1923,false,false,false,false,0,1,1,0,0,0,2
5688217,mitchellh/vagrant,ruby,5083,1419907081,,1420502108,9917,,unknown,false,false,false,8,1,1,0,6,0,6,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.60960708871707,0.08230050191144532,12,vondruch@redhat.com,vagrant.gemspec,12,0.02857142857142857,0,4,false,Gem: reintroduce json dependency Signed-off-by: Federico Simoncelli fsimonce@redhatcom,,1266,0.7424960505529226,0.6642857142857143,29135,576.3514673073623,49.184829243178314,86.15067787883989,7321,24,1803,51,travis,simon3z,mitchellh,false,,0,0,13,1,1923,false,false,false,false,0,0,0,0,0,0,1
5678604,mitchellh/vagrant,ruby,5078,1419804825,1419805339,1419805339,8,8,commits_in_master,false,false,true,4,2,2,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.747799469244342,0.08476835912076766,3,xmitchx@gmail.com,website/docs/source/v2/vagrantfile/winrm_settings.html.md,3,0.007142857142857143,0,0,false,Improved windows guest documentation ,,1264,0.742879746835443,0.6595238095238095,29135,576.3514673073623,49.184829243178314,86.15067787883989,7308,26,1802,47,travis,MobileWiseguyTX,sethvargo,false,sethvargo,0,0,0,0,4,false,false,false,false,0,0,0,0,0,0,-1
5678508,mitchellh/vagrant,ruby,5077,1419803587,1419914231,1419914231,1844,1844,commits_in_master,false,false,true,7,1,1,0,1,0,1,0,2,0,0,3,3,2,0,1,0,0,3,3,2,0,1,14,0,14,0,12.336807329617308,0.22026433948929258,32,xmitchx@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/locales/en.yml,30,0.011904761904761904,0,0,false,Log chef-zero instead of chef-solo Fixes https://githubcom/mitchellh/vagrant/issues/5072,,1263,0.7426761678543151,0.6595238095238095,29135,576.3514673073623,49.184829243178314,86.15067787883989,7308,26,1802,49,travis,sethvargo,sethvargo,true,sethvargo,23,0.782608695652174,485,65,1560,true,false,false,false,126,299,76,12,176,8,1831
5660532,mitchellh/vagrant,ruby,5062,1419504979,1419536327,1419536327,522,522,commits_in_master,false,false,false,3,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.731737010479349,0.0844815744168787,6,xmitchx@gmail.com,website/docs/source/v2/vagrantfile/machine_settings.html.md,6,0.014319809069212411,0,0,false,Remove extra point ,,1262,0.742472266244057,0.6587112171837709,29135,576.3514673073623,49.184829243178314,86.15067787883989,7288,26,1799,46,travis,evverx,sethvargo,false,sethvargo,1,1.0,9,11,10,false,true,true,false,0,0,1,0,0,0,-1
5652840,mitchellh/vagrant,ruby,5057,1419396890,1419454957,1419454957,967,967,commits_in_master,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.546469589751315,0.08117387358187682,7,sethvargo@users.noreply.github.com,plugins/provisioners/chef/plugin.rb,7,0.016666666666666666,0,0,false,Update Chef plugin description ,,1261,0.7422680412371134,0.6547619047619048,29135,576.3514673073623,49.184829243178314,86.15067787883989,7281,26,1797,48,travis,evverx,sethvargo,false,sethvargo,0,0,9,11,8,false,true,true,false,0,0,0,0,0,0,-1
5646781,mitchellh/vagrant,ruby,5055,1419352176,1419362729,1419362729,175,175,commits_in_master,false,false,false,53,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.590905043553803,0.08196754801663388,0,,contrib/bash/completion.sh,0,0.0,0,0,false,bash completion doesnt respect VAGRANT_HOME When VAGRANT_HOME is set to a different path than $HOME/vagrantd bashcompletions regarding box names fails with an error like:$ vagrant init TAB find: /home/mert/vagrantd/boxes: No such file or directoryThis commit makes completionsh respect VAGRANT_HOME if it is set It will continue to use $HOME/vagrantd otherwise,,1260,0.7420634920634921,0.6539379474940334,29135,576.3514673073623,49.184829243178314,86.15067787883989,7277,26,1797,48,travis,mdirik,sethvargo,false,sethvargo,0,0,1,0,945,false,false,false,false,0,0,0,0,0,0,-1
5641641,mitchellh/vagrant,ruby,5053,1419299213,1419300524,1419300524,21,21,commits_in_master,false,false,false,24,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.522336280153444,0.0807432630039708,0,,website/docs/source/v2/docker/basics.html.md,0,0.0,0,0,false,Docs: Docker doesnt support pub/priv networks The Docker provider ignores the network identifiers private_network andpublic_network Document this fact because its not immediately obvious,,1259,0.7418586179507546,0.65311004784689,29135,576.3514673073623,49.184829243178314,86.15067787883989,7271,26,1796,48,travis,dcarley,sethvargo,false,sethvargo,2,1.0,40,0,1697,false,false,false,false,0,0,0,0,0,0,-1
5634298,mitchellh/vagrant,ruby,5049,1419240063,,1419409548,2824,,unknown,false,false,false,77,1,1,0,8,0,8,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.22232295584858,0.0753867275213372,2,sethvargo@users.noreply.github.com,plugins/provisioners/chef/cap/linux/chef_installed.rb,2,0.004784688995215311,2,8,false,The install path of knife is changed (install check failing) At plugins/provisioners/chef/cap/linux/chef_installedrbIt supposed the path of knife to opt/chef/bin/knifeBut the real path is /usr/bin/knife on version 1182vagrant@vagrant-ubuntu-trusty-64:/etc$ which knife/usr/bin/knifevagrant@vagrant-ubuntu-trusty-64:/etc$ knife --versionChef: 1182So the check method chef_installed should be changedI dont make testcase for this because I dont know how to make a testcase for this caseI hope someone help itThank you for reading this request,,1258,0.7424483306836248,0.65311004784689,29135,576.3514673073623,49.184829243178314,86.15067787883989,7262,26,1796,48,travis,ermaker,ermaker,true,,0,0,11,28,2043,false,false,false,false,0,0,0,0,0,0,714
5628865,mitchellh/vagrant,ruby,5045,1419162036,1419194625,1419194625,543,543,commits_in_master,false,false,false,19,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.263088061468393,0.07611459459597124,0,,plugins/guests/fedora/cap/configure_networks.rb,0,0.0,0,0,false,Fix new-style Network Device Naming on CentOS7+VMwarefusion Support new-style Network Device Naming for :private_networkTested with [box-cutter](https://githubcom/box-cutter/centos-vmbox-cutter) for CentOS7+VMwareFusion,,1257,0.7422434367541766,0.6601941747572816,29135,576.3514673073623,49.184829243178314,86.15067787883989,7254,25,1795,47,travis,tai-ga,sethvargo,false,sethvargo,0,0,13,129,1402,false,false,true,false,0,0,0,0,0,0,543
5628391,mitchellh/vagrant,ruby,5044,1419151682,1421001427,1421001427,30829,30829,commit_sha_in_comments,false,true,false,54,3,1,0,4,0,4,0,6,0,0,1,2,1,0,0,0,0,2,2,2,0,0,5,0,5,35,4.614420043776289,0.08238739286248267,9,xmitchx@gmail.com,plugins/provisioners/ansible/provisioner.rb,9,0.021844660194174758,0,15,false,provisioners/ansible: Support multiple ssh keys Vagrant 171 creates new ssh keys for each virtual machine Whenit started ansible it would only send the ssh key of the lastvirtual machine it created  With this change vagrant now providesansible with the ssh key for each of the virtual machinesSigned-off-by: Luis Pabón lpabon@redhatcom,,1256,0.7420382165605095,0.6601941747572816,29135,576.3514673073623,49.184829243178314,86.15067787883989,7254,25,1795,53,travis,lpabon,gildegoma,false,gildegoma,0,0,22,4,645,false,false,false,false,0,0,0,0,3,0,715
5627045,mitchellh/vagrant,ruby,5042,1419128387,1420502435,1420502435,22900,22900,commits_in_master,false,false,false,56,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.3569682252351045,0.0777907623182128,0,,plugins/providers/virtualbox/config.rb,0,0.0,0,0,false,providers/virtualbox: Add post-comm to the list of valid events Commit 6a5fee0 is considered as a fix for [GH-3080]Actually the new customization event has been added - post-comm But it doesnt work because this event is not passing the validation (virtualbox/configrb#validate) So we just need to add this event to the list of valid events :),,1255,0.7418326693227092,0.6650366748166259,29135,576.3514673073623,49.184829243178314,86.15067787883989,7254,25,1794,50,travis,legal90,mitchellh,false,mitchellh,1,1.0,27,4,541,false,true,true,false,1,5,1,0,0,1,22900
5616848,mitchellh/vagrant,ruby,5034,1419018958,1419020509,1419020509,25,25,commits_in_master,false,false,false,53,4,2,0,1,0,1,0,1,0,0,12,12,11,1,0,0,0,12,12,11,1,0,45,0,45,0,56.76157749977766,1.0135446919575863,7,xmitchx@gmail.com,website/docs/source/v2/getting-started/boxes.html.md|website/docs/source/v2/getting-started/index.html.md|website/docs/source/v2/getting-started/networking.html.md|website/docs/source/v2/getting-started/project_setup.html.md|website/docs/source/v2/getting-started/providers.html.md|website/docs/source/v2/getting-started/provisioning.html.md|website/docs/source/v2/getting-started/rebuild.html.md|website/docs/source/v2/getting-started/share.html.md|website/docs/source/v2/getting-started/synced_folders.html.md|website/docs/source/v2/getting-started/teardown.html.md|website/docs/source/v2/getting-started/up.html.md|website/docs/source/stylesheets/_base.less,4,0.0,0,0,true,Add pagination to getting started guide refs #5033 – was annoyed by the missing previous/next buttons in the Getting Started guide so I thought Id add themOf course the other docs pages are still missing these I wanted to have this first bunch in there at last Rest can be added afterwards,,1254,0.7416267942583732,0.6666666666666666,29135,576.3514673073623,49.184829243178314,86.15067787883989,7251,24,1793,46,travis,HerrBertling,sethvargo,false,sethvargo,0,0,6,25,925,false,true,false,false,0,0,0,0,0,0,25
5615553,mitchellh/vagrant,ruby,5031,1419011164,1419019878,1419019878,145,145,commits_in_master,false,false,false,7,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,4.800537490488636,0.08571924013294394,3,sethvargo@users.noreply.github.com,website/docs/source/v2/synced-folders/rsync.html.md,3,0.007407407407407408,0,1,true,Doc: Fix double underscore rsync attribute documentation ,,1253,0.7414205905826018,0.6666666666666666,29135,576.3514673073623,49.184829243178314,86.15067787883989,7251,24,1793,46,travis,databus23,sethvargo,false,sethvargo,4,1.0,3,0,1527,false,false,false,false,0,2,1,0,0,0,-1
5614361,mitchellh/vagrant,ruby,5030,1419002870,,1433184671,236363,,unknown,false,true,false,81,1,1,2,5,0,7,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.001986263394061,0.08931634478495017,5,xmitchx@gmail.com,plugins/hosts/linux/cap/nfs.rb,5,0.012345679012345678,0,2,true,Being able to edit a file does not mean you can write in its parent directory Interactive sed needs write permission on the file itself However it may create a backup file which leads to the fact that the directory where the file is located must be writable as well That is a side effect because this directory does not need to be writableThis patch fixes this side effect by editing the file in /tmp and replaces it right after,,1252,0.7420127795527156,0.6666666666666666,29135,576.3514673073623,49.184829243178314,86.15067787883989,7250,24,1793,88,travis,willdurand,sethvargo,false,,0,0,894,56,1748,false,false,false,false,1,0,0,0,0,5,10934
5606239,mitchellh/vagrant,ruby,5025,1418940010,1418940072,1418940072,1,1,github,false,false,false,49,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.747799469244342,0.0911266601899624,2,sneal@sneal.net,website/docs/source/v2/vagrantfile/winrm_settings.html.md,2,0.0049504950495049506,0,0,false,Added documentation for enabling unencrypted WinRM Per GH#4752 unencrypted WinRM access must be configured on the guestmachine before Vagrant can communicate with the box This is sometimesenabled by default on public boxes but needs to be documented forthose of us that are using custom made boxes,,1251,0.7418065547561951,0.6683168316831684,26856,511.058981233244,43.11885612153709,79.72147750968126,7247,23,1792,44,travis,zmingee,zmingee,true,zmingee,0,0,2,3,349,false,true,false,false,0,1,0,0,0,0,-1
5594545,mitchellh/vagrant,ruby,5013,1418861443,1436486765,1436486765,293755,293755,commits_in_master,false,false,false,278,6,6,0,5,0,5,0,6,0,0,3,3,3,0,0,0,0,3,3,3,0,0,44,68,44,68,52.544436337310145,0.9382451819526827,8,xmitchx@gmail.com,lib/vagrant/action/builtin/mixin_synced_folders.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|plugins/kernel_v2/config/vm.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|plugins/kernel_v2/config/vm.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|plugins/kernel_v2/config/vm.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|plugins/kernel_v2/config/vm.rb,6,0.004962779156327543,0,2,false,Allow filtering/reprioritization of synced folder preferences Currently Vagrant selects the default synced folder type based on hardcoded priorities It will select the highest-priority usable plugin Usable doesnt necessary mean working it usually just checks that pre-requisite software is either installed or can be installed automatically It might still be unusable in practice because of security policies or the need for additional configurationIve also found that the order is not always deterministic Currently rsync and nfs have equal priority Ive seen some users report that NFS is selected and others report that rsync is selected when both are usable on their system The confignfsfunctional  false property can let you disable nfs to ensure rsync is selected but there currently isnt a way to disable rsync and force NFS to be selected (other than customizing the settings of *each* shared folder which requires knowing the synced folders setup by provisioners and other plugins)This PR adds a property that both filters and reprioritizes the available synced folder types before selecting a default type This way you can force a specific selection:ruby  configvmallowed_synced_folder_types  :rsyncAllow Vagrant to choose from a subset of available types:ruby  # Will use rsync if its usable nfs if it isnt  configvmallowed_synced_folder_types  [:rsync :nfs]And swap the preferences:ruby  # Will use nfs if its usable rsync if it isnt  configvmallowed_synced_folder_types  [:nfs :rsync]In addition to giving the user more control of the priorities so they can easily choose nfs vs rsync this is currently the only way to select a very low-priority synced folder type like [WinRM](https://githubcom/mitchellh/vagrant/pull/4983) over higher-priority and nearly always usable types like rsync,,1250,0.7416,0.6674937965260546,29135,576.3514673073623,49.184829243178314,86.15067787883989,7242,23,1791,87,travis,maxlinc,mitchellh,false,mitchellh,4,0.75,43,12,1261,true,false,false,false,2,10,2,0,10,0,83888
5591037,mitchellh/vagrant,ruby,5009,1418844102,1418847366,1418847366,54,54,commits_in_master,false,false,false,12,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.4169244851404015,0.07886958936295942,0,,website/docs/source/v2/plugins/hosts.html.md,0,0.0,0,0,false,website/www: fix typo in plugins/hosts doc This change replaces hsot with host,,1249,0.7413931144915933,0.6683291770573566,29135,576.3514673073623,49.184829243178314,86.15067787883989,7240,23,1791,44,travis,tjouan,sethvargo,false,sethvargo,0,0,6,4,2110,false,false,false,false,0,0,0,0,0,0,-1
5584932,mitchellh/vagrant,ruby,5003,1418796530,1418796657,1418796657,2,2,commits_in_master,false,false,true,5,1,1,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,78,0,78,0,22.96251711833365,0.4100327205137382,5,sethvargo@gmail.com,website/docs/source/v2/provisioning/chef_apply.html.md|website/docs/source/v2/provisioning/chef_client.html.md|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_solo.html.md|website/docs/source/v2/provisioning/chef_zero.html.md,3,0.005050505050505051,0,0,false,Improve Chef documentation Fixes #4998,,1248,0.7411858974358975,0.6691919191919192,29127,576.0291138805918,49.12967349881553,86.10567514677103,7237,23,1791,45,travis,sethvargo,sethvargo,true,sethvargo,22,0.7727272727272727,485,65,1549,true,false,false,false,100,239,64,12,163,8,-1
5584035,mitchellh/vagrant,ruby,5002,1418789288,1418796708,1418796708,123,123,commits_in_master,false,false,false,172,4,4,0,0,0,0,0,1,0,0,8,8,8,0,0,0,0,8,8,8,0,0,30,23,30,23,34.38965851324033,0.6140827316559293,11,sethvargo@users.noreply.github.com,plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/cap/debian/chef_install.rb|plugins/provisioners/chef/cap/redhat/chef_install.rb|plugins/provisioners/chef/installer.rb|plugins/provisioners/chef/config/base.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|plugins/provisioners/chef/omnibus.rb|test/unit/plugins/provisioners/chef/omnibus_test.rb,7,0.005063291139240506,0,1,false,Add installer_download_path config option to chef provisioners This PR adds the installer_download_path config option to all chef provisioners It is effective only when the Chef auto-install feature is usedExample Vagrantfile:rubyVagrant::configure(2) do |config|  configvmdefine :foo do | foo_config |      foo_configvmbox  chef/ubuntu-1204-i386    foo_configvmprovision :chef_solo do |chef|      chefversion  1201      chefinstaller_download_path  /tmp/vagrant-cache/vagrant_omnibus      chefcookbooks_path  /cookbooks      chefadd_recipe hello    end  end endThis will ensure that the omnibus package is downloaded to the given directory (ie /tmp/vagrant-cache/vagrant_omnibus/chef_1201-1_amd64deb in this case)It is a prerequisite for enabling caching of the omnibus packages via vagrant-cachier (see #4989)For further details and context: * original addition of the -d and -f flag to installsh: https://githubcom/opscode/opscode-omnitruck/pull/33 * adding omnibus package cacheability to the vagrant-omnibus plugin: https://githubcom/opscode/vagrant-omnibus/pull/73 * request for including the -d and -f flag in the official docs: https://githubcom/opscode/chef-docs/issues/429Within this PR I only added support for the -d flag as this is the only thing required for enabling caching So far I never needed the -f option Sacrificing completeness for YAGNI here -) ,,1247,0.7409783480352847,0.6708860759493671,29127,576.0291138805918,49.12967349881553,86.10567514677103,7236,23,1790,44,travis,tknerr,sethvargo,false,sethvargo,3,0.3333333333333333,23,5,1583,true,true,false,false,3,16,0,0,2,1,-1
5579200,mitchellh/vagrant,ruby,4996,1418765129,1418773626,1418773626,141,141,commits_in_master,false,false,true,43,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,33,12,33,12,9.044879858736598,0.16151036958306955,0,,test/unit/plugins/communicators/winrm/communicator_test.rb|plugins/communicators/winrm/communicator.rb,0,0.0,0,0,false,4976 fix guest autodetection with windows guests Fixes guest auto-detection #4976 when using a Windows guest This ensures that any non-Windows friendly test command that any other guest may use doesnt erroneously return true causing Vagrant to detect a Windows guest as Ubuntu,,1245,0.7413654618473896,0.6726342710997443,29112,576.0854630392965,49.1206375377851,86.08134102775487,7234,22,1790,44,travis,sneal,sneal,true,sneal,26,0.8846153846153846,35,0,1776,true,false,false,false,7,13,2,0,7,0,9
5579087,mitchellh/vagrant,ruby,4995,1418764586,1418765681,1418765681,18,18,commits_in_master,false,false,true,8,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.74033258347383,0.08464599634941608,2,sethvargo@users.noreply.github.com,plugins/provisioners/chef/omnibus.rb,2,0.005115089514066497,0,0,false,Use new Chef Omnibus URL Super simple one,,1244,0.7411575562700965,0.6726342710997443,29112,576.0854630392965,49.1206375377851,86.08134102775487,7234,22,1790,44,travis,sethvargo,sethvargo,true,sethvargo,21,0.7619047619047619,484,65,1548,true,false,false,false,97,230,62,12,161,7,-1
5567081,mitchellh/vagrant,ruby,4983,1418682448,,1448076480,489900,,unknown,false,true,false,179,9,4,0,13,0,13,0,5,3,0,2,8,4,0,1,3,0,5,8,6,0,1,346,0,408,0,46.4389398026415,0.8292466234154812,0,,plugins/synced_folders/winrm/helper.rb|plugins/synced_folders/winrm/plugin.rb|plugins/synced_folders/winrm/synced_folder.rb|templates/locales/comm_winrm.yml|plugins/communicators/winrm/file_manager.rb|plugins/communicators/winrm/file_manager.rb|plugins/synced_folders/winrm/helper.rb|plugins/synced_folders/winrm/plugin.rb|plugins/synced_folders/winrm/synced_folder.rb|templates/locales/comm_winrm.yml,0,0.0,1,6,false,WinRM synced folder plugin This adds (very low-priority) support for WinRM synced folders The real work was done by @sneal to implement the WinRM FileManager I just exposed it as a pluginIts probably the slowest synced folder plugin but it has the advantage of working directly over the WinRM communicator So if the communicator is working and secure so is this synced folder plugin - there are no other provider platform or capability limitationsCurrently this will never be selected as the default synced folder type unless you are are a host where all other types are unusable In particular if rsync is installed on the host it will always win over WinRM both because the rsync usability check only takes the host into account and because there are capability detection bugs for Windows guests that result in false positivesSo Vagrant will sometimes pick a non-functional rsync or other synced folder implementation over a working WinRM synced folders Right now the only way to use this is to explicitly set a specific synced folders type to winrm,,1243,0.7417538213998391,0.6717948717948717,29113,576.0656751279497,49.118950297118126,86.07838422697763,7223,23,1789,88,travis,maxlinc,mitchellh,false,,3,1.0,43,12,1259,true,false,false,false,1,7,1,0,7,0,14
5561472,mitchellh/vagrant,ruby,4977,1418651711,1418674162,1418674162,374,374,commits_in_master,false,false,false,5,1,1,0,0,0,0,0,1,1,0,1,2,1,0,2,1,0,1,2,1,0,2,16,0,16,0,10.5768690103222,0.18904655476777646,0,,contrib/sudoers/linux-fedora|contrib/sudoers/linux-ubuntu|website/docs/source/v2/synced-folders/nfs.html.md,0,0.0,0,0,false,Sudoers example for Fedora distros  ,,1242,0.7415458937198067,0.6701030927835051,29113,576.0656751279497,49.118950297118126,86.07838422697763,7218,24,1789,43,travis,iNecas,sethvargo,false,sethvargo,0,0,37,11,1784,false,false,false,false,0,0,0,0,0,0,-1
5559573,mitchellh/vagrant,ruby,4975,1418632630,1418632850,1418632850,3,3,commits_in_master,false,false,true,118,3,3,0,0,0,0,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,12,55,12,55,17.898901359920636,0.31992156539080624,10,sethvargo@gmail.com,test/unit/plugins/pushes/local-exec/push_test.rb|plugins/kernel_v2/config/push.rb|test/unit/plugins/commands/login/middleware/add_authentication_test.rb|test/unit/support/shared/base_context.rb,5,0.010638297872340425,1,0,false,Sethvargo/fix push @mitchellh this is a partial revert of 84ae22e It took me a little bitto figure out why this broke everything but then I finally realized it84ae22e changes the finalize function to lookup pushes by strategytype but pushes are keyed by push strategy name In other words given:    configpushdefine(foo strategy: bar)the push_configs has will look like:    { :foo  [:bar #PushConfig] }This is important because if we key by strategy the user cannot specify the same push strategy more than once:    configpushdefine(foo strategy: bar)    configpushdefine(zip strategy: bar)If we keyed off of the strategy this would be impossibleThis also fixes a couple other errors that were causing the build to fail,,1241,0.741337630942788,0.6595744680851063,29099,575.4493281556066,49.0051204508746,86.05106704697755,7216,24,1789,49,travis,sethvargo,sethvargo,true,sethvargo,20,0.75,483,65,1547,true,false,false,false,85,195,51,7,147,7,-1
5559218,mitchellh/vagrant,ruby,4973,1418628145,1418633188,1418633188,84,84,commits_in_master,false,false,true,6,2,2,0,0,0,0,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,9.439656593601256,0.16872263014638736,2,sethvargo@gmail.com,templates/provisioners/chef_solo/solo.erb|templates/provisioners/chef_solo/solo.erb,2,0.005361930294906166,0,0,false,Fix Chef Solo template Fixes https://githubcom/mitchellh/vagrant/issues/4912,,1240,0.7411290322580645,0.6648793565683646,29099,575.4493281556066,49.0051204508746,86.05106704697755,7216,24,1789,48,travis,sethvargo,sethvargo,true,sethvargo,19,0.7368421052631579,483,65,1547,true,false,false,false,85,195,50,7,144,7,-1
5559614,mitchellh/vagrant,ruby,4972,1418627147,1418633216,1418633218,101,101,github,false,false,true,24,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.741562989644178,0.06687538643024424,0,,plugins/commands/package/command.rb,0,0.0,0,0,false,Force opts to be options cb6f3e5 introduced a change to the method airty of machine actions to remove the extra_env attribute- Fixes #4960,,1239,0.7409200968523002,0.6684636118598383,29099,574.6932884291557,48.936389566651776,85.94797072064333,7216,24,1789,48,travis,sethvargo,sethvargo,true,sethvargo,18,0.7222222222222222,483,65,1547,true,false,false,false,78,193,49,7,142,7,-1
5550545,mitchellh/vagrant,ruby,4964,1418515977,1418520618,1418520618,77,77,commits_in_master,false,false,false,12,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,16,0,16,0,4.365390723064058,0.07803114270577648,1,xmitchx@gmail.com,plugins/guests/arch/cap/configure_networks.rb,1,0.0027247956403269754,0,0,false,Fix line breaks Fix line breaks which cause virtual machine configuration errors,,1238,0.7407108239095315,0.667574931880109,29104,575.3504672897196,48.99670148433205,86.03628367234745,7208,24,1787,47,travis,c0dxtr3m1st,mitchellh,false,mitchellh,1,1.0,2,0,-253,false,false,false,false,0,0,0,0,0,0,77
5545965,mitchellh/vagrant,ruby,4961,1418454895,1418463253,1418463253,139,139,commits_in_master,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.569472237327356,0.08167907853669575,2,sethvargo@gmail.com,website/docs/source/v2/push/heroku.html.md,2,0.00546448087431694,0,0,false,Heroku is a PAAS not an IAAS ,,1237,0.740501212611156,0.6666666666666666,29104,575.3504672897196,48.99670148433205,86.03628367234745,7200,24,1787,47,travis,frodenas,mitchellh,false,mitchellh,0,0,69,0,1547,false,false,false,false,0,0,0,0,0,0,139
5540651,mitchellh/vagrant,ruby,4958,1418419059,1418419195,1418419195,2,2,commits_in_master,false,false,false,24,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.454619331174426,0.07970624574837208,2,xmitchx@gmail.com,website/docs/source/v2/provisioning/basic_usage.html.md,2,0.00558659217877095,0,0,true,Named Provisioners only in v170 We couldnt figure out why Vagrant would throw an error turns out this feature is only available in 170,,1236,0.7402912621359223,0.659217877094972,29099,574.8651156397126,48.97075500876319,85.9136052785319,7196,24,1786,47,travis,heydonovan,sethvargo,false,sethvargo,0,0,33,44,1245,false,true,true,false,1,0,0,0,0,0,-1
5536247,mitchellh/vagrant,ruby,4953,1418392621,1418418243,1418418243,427,427,commits_in_master,false,false,false,46,2,2,0,3,0,3,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,10.047934061914424,0.17978825419883032,0,,website/www/source/downloads.html.erb|website/www/source/downloads.html.erb,0,0.0,2,0,true,Adding link to changelog This is a fix for #4488 in order to add an obvious link to the changelog from the main Vagrant website This change will make it more visible to users on what major features have changed in previous releases cc/ @sethvargo @mitchellh,,1235,0.740080971659919,0.6582633053221288,29099,574.8651156397126,48.97075500876319,85.9136052785319,7191,24,1786,47,travis,imjacobclark,sethvargo,false,sethvargo,1,1.0,50,18,973,true,false,false,false,0,3,3,0,0,0,22
5533289,mitchellh/vagrant,ruby,4947,1418360938,1418361375,1418361375,7,7,github,false,false,false,18,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.893723633840628,0.08755798318317584,12,xmitchx@gmail.com,website/docs/source/layouts/layout.erb,12,0.03488372093023256,0,0,true,added chec_zerohtml page to be shown in sidebar Noticed https://docsvagrantupcom/v2/provisioning/chef_zerohtml already exists but not listed in side bar,,1234,0.7398703403565641,0.6453488372093024,29092,575.0034373710986,48.98253815481919,85.93427746459507,7185,23,1786,52,travis,joelhandwell,joelhandwell,true,joelhandwell,0,0,11,44,639,false,true,false,false,0,0,0,0,0,0,-1
5533183,mitchellh/vagrant,ruby,4946,1418359872,1418359974,1418359974,1,1,github,false,false,true,4,3,3,0,2,2,4,0,2,0,0,2,2,0,2,0,0,0,2,2,0,2,0,0,0,0,0,14.348892587025983,0.2567243911778482,5,xmitchx@gmail.com,templates/commands/init/Vagrantfile.erb|templates/commands/init/Vagrantfile.min.erb|templates/commands/init/Vagrantfile.erb,5,0.014619883040935672,1,0,false,Cleanup Vagrantfile /cc @KFishner ,,1233,0.7396593673965937,0.6432748538011696,29094,574.9639100845535,48.97917096308517,85.92837011067574,7185,23,1785,53,travis,sethvargo,sethvargo,true,sethvargo,17,0.7058823529411765,483,65,1543,true,false,false,false,57,154,43,7,133,3,1
5530120,mitchellh/vagrant,ruby,4943,1418340355,1424124974,1424124974,96410,96410,commits_in_master,false,false,false,200,27,20,4,8,0,12,0,4,0,0,11,11,10,0,1,0,0,11,11,10,0,1,476,249,511,264,229.22091336054493,4.101124812999454,20,xmitchx@gmail.com,plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/shell.rb|plugins/kernel_v2/config/vm.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|vagrant.gemspec|Gemfile|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/shell.rb|vagrant.gemspec|plugins/communicators/winrm/config.rb|plugins/kernel_v2/config/vm.rb|plugins/communicators/winrm/shell.rb|plugins/communicators/winrm/config.rb|Gemfile|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|vagrant.gemspec|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/shell.rb|test/unit/plugins/communicators/winrm/shell_test.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/shell.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/errors.rb|plugins/communicators/winrm/shell.rb|templates/locales/comm_winrm.yml|test/unit/plugins/communicators/winrm/shell_test.rb|plugins/communicators/winrm/shell.rb|plugins/communicators/winrm/config.rb|test/unit/plugins/communicators/winrm/shell_test.rb|plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/shell.rb|vagrant.gemspec|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/errors.rb|plugins/communicators/winrm/shell.rb|templates/locales/comm_winrm.yml|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/shell.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,12,0.0,0,8,false,Improved WinRM error handling (including better ready and wait_for_ready) I split this from #4236 to make things easier to review That PR contains just changes for SSL This PR builds on that PR so the diff currently shows SSL support but itll shrink once that PR is merged and I rebaseA few notes:1 Authentication failures are currently retriable and I havent changed the default max_times which was set to 20 with a 10 second sleep That means WinRM will retry authentication for 10 minutes attempt authentication2 This uses a pre-release gem for WinRM So its technically releasable (as opposed to using git) but ideally wed wait for an official WinRM release3 Ive modeled it after SSH Im not sure about all the possible errors we could get from WinRM but I think its a good assumption that it either throws - or should throw applicable errors from Errno4 Since its modeled after SSH there is a lot of duplicate code and duplicate translation keys It might be worth refactoring so they share errors and translations (eg Vagrant::Errors::Communicator::ConnectionRefused instead of Vagrant::Errors::SSHConnectionRefused and VagrantPlugins::CommunicatorWinRM::Errors::ConnectionRefused) but Id rather focus on WinRM and save refactoring for a separate PR,,1232,0.739448051948052,0.6489675516224189,29094,574.9639100845535,48.97917096308517,85.92837011067574,7183,23,1785,91,travis,maxlinc,sneal,false,sneal,2,1.0,43,12,1255,true,false,false,false,0,1,0,0,5,0,4902
5527002,mitchellh/vagrant,ruby,4939,1418323967,1418334290,1418334290,172,172,github,false,false,false,64,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.317066646772412,0.07723992281415777,0,,website/docs/source/v2/vagrantfile/index.html.md,0,0.0,2,0,false,Updates documentation to respect Vagrantfile case sensitivity on strict file systems This is a fix for issue #4907 On strict case sensitive filesystems the Vagrantfile must follow that exact casing otherwise Vagrant will fail to launch and will complain no Vagrantfile exists This change adds further accuracy to the documentation to prevent people stumbling into a trap on such file systems cc/ @mitchellh @sethvargo ,,1231,0.7392363931762794,0.6467065868263473,29090,574.9742179443108,48.917153661051906,85.90580955654865,7181,22,1785,53,travis,imjacobclark,imjacobclark,true,imjacobclark,0,0,50,18,972,false,false,false,false,0,0,0,0,0,0,8
5524056,mitchellh/vagrant,ruby,4937,1418304123,1418360085,1418360085,932,932,commits_in_master,false,false,true,9,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.320477071723949,0.07730094132083687,4,sethvargo@gmail.com,plugins/commands/login/client.rb,4,0.011976047904191617,2,0,false,Use the new Rails error format Ping @mitchellh @pearkes ,,1230,0.7390243902439024,0.6467065868263473,29090,574.9742179443108,48.917153661051906,85.90580955654865,7179,22,1785,53,travis,sethvargo,sethvargo,true,sethvargo,16,0.6875,483,65,1543,true,false,false,false,54,149,40,7,127,3,-1
5520239,mitchellh/vagrant,ruby,4934,1418267485,1418337932,1418337932,1174,1174,github,false,false,true,6,2,2,0,2,0,2,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,18,132,18,132,17.897614487426512,0.3202198332054737,11,sethvargo@gmail.com,plugins/pushes/atlas/config.rb|test/unit/plugins/pushes/atlas/config_test.rb|plugins/commands/login/client.rb|test/unit/plugins/commands/login/client_test.rb,7,0.017857142857142856,1,1,false,Read ATLAS_TOKEN in vagrant-login /cc @mitchellh ,,1229,0.7388120423108218,0.6428571428571429,29090,574.9742179443108,48.917153661051906,85.90580955654865,7176,23,1784,52,travis,sethvargo,sethvargo,true,sethvargo,15,0.6666666666666666,483,65,1542,true,false,false,false,53,147,39,7,126,3,1
5516327,mitchellh/vagrant,ruby,4929,1418245234,1418246322,1418246322,18,18,github,false,false,false,52,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.449137512309295,0.07960405030055602,3,xmitchx@gmail.com,plugins/guests/freebsd/cap/mount_nfs_folder.rb,3,0.00909090909090909,0,0,false,Add back creation of mount point I think this was accidentally removed in ad4b30dd  Because its missing a FreeBSD guest can no longer have an NFS mount that doesnt previously exist on the box  Since this runs before provisioning we cant even fix it via puppetIt results in this error:[error](http://iimgurcom/CABDfXepng),,1228,0.738599348534202,0.6454545454545455,29089,574.9939839801988,48.91883529856647,85.9087627625563,7174,22,1784,52,travis,kalifg,kalifg,true,kalifg,0,0,3,2,1483,false,false,false,false,0,0,0,0,0,0,18
5516037,mitchellh/vagrant,ruby,4928,1418243847,,1418246341,41,,unknown,false,false,false,24,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.738886462637563,0.08478824385552054,3,tarrant@keyneston.com,plugins/hosts/bsd/cap/nfs.rb,3,0.00909090909090909,0,1,false,Escape - in regex Im getting this when using 170opt/rubies/200-p451/lib/ruby/gems/200/bundler/gems/vagrant-ce037b6ff476/plugins/hosts/bsd/cap/nfsrb:140: warning: character class has - without escape: /^# VAGRANT-BEGIN:( 503) ([\\/A-Za-z0-9-_]+)$/,,1227,0.73920130399348,0.6454545454545455,29089,574.9939839801988,48.91883529856647,85.9087627625563,7174,22,1784,51,travis,petems,petems,true,,1,0.0,62,170,1177,false,false,false,false,0,0,0,0,0,0,-1
5499112,mitchellh/vagrant,ruby,4916,1418128668,1420502599,1420502599,39565,39565,commits_in_master,false,false,false,27,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.620604945398991,0.08620981320818862,6,vondruch@redhat.com,vagrant.gemspec,6,0.018691588785046728,0,1,false,Allow listen 28 gem FreeBSD ports tree now carries 28 so we need a local patch to allow vagrant to run until this is fixed upstreamhttps://bugsfreebsdorg/bugzilla/show_bugcgiid195588,,1226,0.7389885807504079,0.6386292834890965,27939,530.2623572783565,45.09824975840224,81.3200186119761,7163,22,1783,60,travis,kev009,mitchellh,false,mitchellh,0,0,33,18,2020,false,false,false,false,0,0,0,0,0,0,2
5491618,mitchellh/vagrant,ruby,4913,1418073416,,1418633188,9329,,unknown,false,false,false,13,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.648490732756682,0.08673037224845732,2,sethvargo@gmail.com,templates/provisioners/chef_solo/solo.erb,2,0.006493506493506494,0,0,false,Issue 4912: Flex role_path configuration based on number of paths configured Fixes #4912 ,,1225,0.7395918367346939,0.6298701298701299,27935,530.6604617862896,45.17630212994452,81.18847324145337,7157,21,1782,53,travis,tboettch,sethvargo,false,,0,0,0,0,1238,false,false,false,false,0,0,0,0,0,0,-1
5479972,mitchellh/vagrant,ruby,4906,1417962238,1418361641,1418361641,6656,6656,commits_in_master,false,false,true,72,1,1,0,6,0,6,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,19,0,19,0,9.721580664473468,0.18138223524327418,71,tarrant@keyneston.com,CHANGELOG.md|plugins/provisioners/ansible/provisioner.rb,69,0.2247557003257329,2,3,false,provisioners/ansible: use Docker proxy when needed Close #4071@jabclab could you please tell us if you have time to review this on monday Yeah sorry for the very short delay but @mitchell aims at shipping Vagrant 17 next weekPS: unit tests are missing for the moment due to personal lack of time If its ok for you Ill implement them after #4883 being integrated and when resuming my work on #2103,,1223,0.7391659852820932,0.6319218241042345,27939,530.2623572783565,45.09824975840224,81.3200186119761,7149,21,1781,52,travis,gildegoma,mitchellh,false,mitchellh,18,0.9444444444444444,46,127,1519,true,true,true,false,7,31,3,2,9,0,4
5479941,mitchellh/vagrant,ruby,4905,1417961564,1418361719,1418361719,6669,6669,commits_in_master,false,false,true,33,2,1,0,3,0,3,0,2,0,0,2,3,2,0,0,0,0,3,3,3,0,0,28,0,29,0,8.854503179181087,0.16520509579463152,0,,plugins/providers/docker/action/prepare_ssh.rb|plugins/providers/docker/communicator.rb,0,0.0,1,2,false,providers/docker: fix support of agent forwarding Without this change vagrant ssh machine0 with the :docker provider wont forward ssh identity when configsshforward_agent  trueWith the fix:vagrant@machine0:~$ echo $SSH_AUTH_SOCK /tmp/ssh-28S1mzZ9Ga/agent355,,1222,0.7389525368248773,0.6339869281045751,27935,530.6604617862896,45.17630212994452,81.18847324145337,7149,21,1781,51,travis,gildegoma,mitchellh,false,mitchellh,17,0.9411764705882353,46,127,1519,true,true,true,false,7,31,2,2,8,0,1097
5458504,mitchellh/vagrant,ruby,4901,1417720181,1420502638,1420502638,46374,46374,commits_in_master,false,false,false,21,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.667561796131494,0.08708621541060266,3,sethvargo@users.noreply.github.com,website/docs/source/v2/synced-folders/rsync.html.md,3,0.009554140127388535,0,0,false,New default option of rsync --copy-links As can be seen in [rsync/helperrb](https://githubcom/mitchellh/vagrant/blob/efd1d5e11bfc5a72c7a1d1eae294b4751d841544/plugins/synced_folders/rsync/helperrb#L81) the --copy-links option has been added to the defaults,,1221,0.7387387387387387,0.6146496815286624,27935,530.6604617862896,45.17630212994452,81.18847324145337,7138,23,1778,57,travis,riquito,mitchellh,false,mitchellh,0,0,13,0,1701,false,false,false,false,0,0,0,0,0,0,46374
5291333,mitchellh/vagrant,ruby,4900,1417686596,1417728979,1417728979,706,706,commits_in_master,false,false,false,53,1,1,4,1,0,5,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.210963117381,0.07856711001240133,4,xmitchx@gmail.com,plugins/provisioners/salt/provisioner.rb,4,0.012738853503184714,0,0,false,Avoid double-newlines in salt-call output When using the salt provisioner with verbosetrue most lines read with an extra newline:[INFO    ] Syncing modules for environment base[INFO    ] Loading cache from salt://_modules for base)because the line read has a newline and emitting the log entry again includes an additional newline,,1220,0.7385245901639345,0.6146496815286624,27935,530.6604617862896,45.17630212994452,81.18847324145337,7135,23,1778,47,travis,jquast,sethvargo,false,sethvargo,0,0,48,76,1212,false,false,false,false,0,0,0,0,0,0,619
5489948,mitchellh/vagrant,ruby,4898,1418064437,1418931015,1418931015,14442,14442,commits_in_master,false,false,false,353,1,1,0,3,0,3,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,12,0,12,0,9.134593371021527,0.1704309482267514,0,,plugins/guests/solaris/cap/rsync.rb|plugins/guests/solaris11/cap/rsync.rb,0,0.0,0,0,false,rsynced folders dont work with Solaris based OS Hitesting OmniOS (r151010j) under VMware the tools dont fully work since they cause the OS to panic on shutdown As a temporary workaround we tried to enable rsync based folders in vagrant but that doesnt to work either On vagrant up:shell/opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/plugin/v2/configrb:73:in method_missing: undefined method su_cmd for #VagrantPlugins::GuestSolaris::Config:0x000000014a78c8 (NoMethodError)        from /opt/vagrant/embedded/gems/gems/vagrant-165/plugins/guests/solaris/cap/rsyncrb:20:in rsync_post        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/capability_hostrb:111:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/capability_hostrb:111:in capability        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/guestrb:43:in capability        from /opt/vagrant/embedded/gems/gems/vagrant-165/plugins/synced_folders/rsync/helperrb:141:in rsync_single        from /opt/vagrant/embedded/gems/gems/vagrant-165/plugins/synced_folders/rsync/synced_folderrb:48:in block in enable        from /opt/vagrant/embedded/gems/gems/vagrant-165/plugins/synced_folders/rsync/synced_folderrb:47:in each        from /opt/vagrant/embedded/gems/gems/vagrant-165/plugins/synced_folders/rsync/synced_folderrb:47:in enable        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/synced_foldersrb:90:in block in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/synced_foldersrb:87:in each        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/synced_foldersrb:87:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/synced_folder_cleanuprb:28:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/plugins/synced_folders/nfs/action_cleanuprb:25:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:992:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/provisionrb:80:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:95:in block in finalize_action        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/callrb:53:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:71:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:1022:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:95:in block in finalize_action        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/callrb:53:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/box_check_outdatedrb:36:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:1236:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:273:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:143:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:1101:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:466:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/handle_boxrb:56:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:95:in block in finalize_action        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/callrb:53:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:1236:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:99:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:273:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builtin/config_validaterb:25:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /home/bamboo/vagrantd/gems/gems/vagrant-vmware-workstation-312/lib/vagrant-vmware-workstation/action_farmrb:160:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/wardenrb:34:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/builderrb:116:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in block in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/util/busyrb:19:in busy        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/action/runnerrb:66:in run        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/machinerb:196:in action_raw        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/machinerb:173:in block in action        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/environmentrb:474:in lock        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/machinerb:161:in call        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/machinerb:161:in action        from /opt/vagrant/embedded/gems/gems/vagrant-165/lib/vagrant/batch_actionrb:82:in block (2 levels) in runVM must be created before running this command Run vagrant up firstThanksAtha,,1224,0.7393790849673203,0.6298701298701299,27935,530.6604617862896,45.17630212994452,81.18847324145337,7155,21,1782,54,travis,athak,sethvargo,false,sethvargo,0,0,5,0,2079,false,false,false,false,0,0,0,0,0,0,-2214
5437853,mitchellh/vagrant,ruby,4896,1417571484,1418633284,1418633284,17696,17696,commits_in_master,false,false,false,7,1,1,0,1,0,1,0,1,0,0,5,5,4,0,1,0,0,5,5,4,0,1,20,18,20,18,21.935827482050293,0.4092732524494749,23,xmitchx@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|templates/locales/en.yml|test/unit/plugins/provisioners/salt/config_test.rb|website/docs/source/v2/provisioning/salt.html.md,19,0.0,0,0,false,Issue #4895: Support grains config for salt ,,1219,0.7383100902379,0.5975232198142415,27935,530.6604617862896,45.17630212994452,81.18847324145337,7126,26,1776,50,travis,oeuftete,sethvargo,false,sethvargo,0,0,1,3,1807,false,false,false,false,1,0,0,0,0,0,17696
5434961,mitchellh/vagrant,ruby,4893,1417556033,1417556165,1417556165,2,2,github,false,false,true,19,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.939289435636524,0.09215604411063695,3,sethvargo@gmail.com,lib/vagrant/bundler.rb,3,0.009316770186335404,2,0,false,Revert Merge pull request #4861 from obfusk/fix-tmpdir-delete This reverts commit 00e388a8977f519f077dda44aff2ddc4c1b9b05a reversing changes made to d1691c21c7c61b84c6c98169ca9e3195f8848510/cc @joshfng @mitchellh ,,1218,0.7380952380952381,0.5900621118012422,27936,530.6414662084766,45.174684994272624,81.18556701030928,7124,26,1776,46,travis,sethvargo,sethvargo,true,sethvargo,14,0.6428571428571429,482,65,1534,true,false,false,false,44,124,35,5,108,2,0
5291302,mitchellh/vagrant,ruby,4883,1417353105,1418084965,1418084965,12197,12197,commits_in_master,false,false,true,118,4,3,5,5,0,10,0,6,0,0,4,4,4,0,0,0,0,4,4,4,0,0,79,122,83,122,57.96362047483669,1.082441576058944,73,xmitchx@gmail.com,CHANGELOG.md|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md|CHANGELOG.md|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md|CHANGELOG.md|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|website/docs/source/v2/provisioning/ansible.html.md,70,0.0058309037900874635,2,2,false,Non-trivial changes and bug fixes for the Ansible provisioner :construction: **NOT READY FOR MERGE** :construction_worker: *(Ill try to push more stuff to this branch within the next days)*As discussed with @mitchellh Vagrant 17 will introduce some bug fixes and little breaking changes that can affect following user profiles: * Vagrant is installed on a [rather old RedHat-family host](http://docsansiblecom/faqhtml#how-do-i-get-ansible-to-reuse-connections-enable-kerberized-ssh-or-have-ansible-pay-attention-to-my-local-ssh-config-file) (like RHEL 6 CentOS 6 SLES 10 or SLES 11) * ansibleraw_arguments provisioner option rashly contains settings that overlap with other options of the Ansible provisioner//cc @sethvargo Additional Notes: * this pull request is a prerequisite to the finalization of (too long waited) #2103* Wobbly RSpec style is kept as is and will be improved/refactored via #2103,,1217,0.7378800328677074,0.5510204081632653,27889,522.2847717738176,44.856394994442255,80.7845387070171,7108,29,1774,52,travis,gildegoma,gildegoma,true,gildegoma,16,0.9375,46,127,1512,true,true,false,false,7,17,1,2,6,0,2
5272917,mitchellh/vagrant,ruby,4882,1417298526,1417462329,1417462329,2730,2730,commits_in_master,false,false,true,99,3,0,8,4,0,12,0,2,0,0,0,11,0,0,0,1,0,11,12,10,0,1,0,0,370,327,0,0.0,0,,,0,0.0,0,1,false,providers/virtualbox: extract reading dhcpservers from hostonlyifs This is just a refactor no behavior changeInstead of stitching together dhcpserver info in the structure returnedfrom read_host_only_interfaces sprout a new driver method calledread_dhcp_servers to return that information separatelyThis means that driver clients (well theres really only _one_ client inProviderVirtualBox::Action::Network) have to do a bit more work to getinterface and DHCP server informationBut this gives us (a) a cleaner and more consistent driver interface and(b) groundwork for a fix for #3083 which will require interacting withDHCP servers outside of the context of host-only interfaces,,1216,0.7376644736842105,0.5427728613569321,27889,522.2847717738176,44.856394994442255,80.7845387070171,7104,30,1773,46,travis,phinze,phinze,true,phinze,8,1.0,279,42,2189,true,true,false,false,1,0,0,0,1,0,1646
5402891,mitchellh/vagrant,ruby,4881,1417219431,1418361932,1418361932,19041,19041,commits_in_master,false,false,false,19,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.569416552950735,0.08533156512183442,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/docker/configuration.html.md,3,0.008152173913043478,0,0,true,Documentation: Clarify usage of dockerlink() Minor clarification of dockerlink(string) The previous documentation did not explain why db was repeated,,1215,0.7374485596707819,0.49728260869565216,27889,522.2847717738176,44.856394994442255,80.7845387070171,7101,30,1772,50,travis,dharmab,mitchellh,false,mitchellh,0,0,3,0,561,false,true,false,false,0,0,0,0,0,0,19041
5391825,mitchellh/vagrant,ruby,4878,1417111726,,1436473613,322698,,unknown,false,false,false,148,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,0,10,0,8.258118754006869,0.15421623090727588,0,,plugins/provisioners/puppet/config/puppet_server.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb,0,0.0,0,2,false,Added ignore_errors to pupper_server provisioner  - this will continue with provisioning even if some stuff in puppet   failed - it will just return true regardless of the actual return value of   puppet agentWe have some very long puppet runs here where some stuff may fail but we then want to fix this within the vagrant created boxWe have more provisioners after puppet and want to be sure they are run as wellThus we need to be able to ignore the result of the puppet_provisionSince this is completely optional it should not harmThanksSvenPS: With my combination of rbenv bundler and such I wasnt able to get vagrant to run properly sorry Id loved to properly test and such Maybe one of you can let me know in a understandable way how I can get vagrant to run under rbenv/bundler/gem you name it,,1214,0.7380560131795717,0.49326145552560646,27889,522.2847717738176,44.856394994442255,80.7845387070171,7092,31,1771,99,travis,svenXY,mitchellh,false,,0,0,3,8,1372,false,false,false,false,0,0,0,0,0,0,265762
5377427,mitchellh/vagrant,ruby,4873,1416998466,,1417045502,783,,unknown,false,true,false,16,2,2,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,31,0,31,0,9.665460330782249,0.18049762985956094,4,sethvargo@gmail.com,lib/vagrant/bundler.rb|lib/vagrant/bundler.rb,4,0.01078167115902965,0,1,false,better cleanup of tempfiles Ive tried to improve the cleanup of tempfiles (supersedes #4870)\- Felix,,1212,0.7392739273927392,0.49326145552560646,27889,522.2847717738176,44.856394994442255,80.7845387070171,7082,31,1770,43,travis,obfusk,obfusk,true,,3,0.6666666666666666,21,13,1079,true,false,false,false,0,5,2,0,1,0,444
5376074,mitchellh/vagrant,ruby,4870,1416982444,,1418634436,27533,,unknown,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.781158976937108,0.08928574881948405,4,sethvargo@gmail.com,lib/vagrant/bundler.rb,4,0.01078167115902965,0,0,false,only deinit bundler if @enabled This should fix #4869 properly\- Felix,,1211,0.7398843930635838,0.49326145552560646,27889,522.2847717738176,44.856394994442255,80.7845387070171,7081,31,1770,47,travis,obfusk,sethvargo,false,,2,1.0,21,13,1079,true,false,false,false,0,1,1,0,1,0,27533
5375035,mitchellh/vagrant,ruby,4869,1416973189,,1417650583,11289,,unknown,false,true,false,49,1,1,0,5,0,5,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.939289435636524,0.09223875592178932,4,sethvargo@gmail.com,lib/vagrant/bundler.rb,4,0.01078167115902965,0,1,false,Stop deleting Gemfile in plugin dev environment The change in pull request #4861 causes Gemfile to be deleted whenever a bundle exec vagrant command is run preventing any more bundle commands before a git checkout Gemfile making development extremely difficultThis pull request simply reverts the merge commit 00e388a8977f519f077dda44aff2ddc4c1b9b05a,,1210,0.740495867768595,0.49326145552560646,27889,522.2847717738176,44.856394994442255,80.7845387070171,7080,31,1769,46,travis,michaeljb,michaeljb,true,,0,0,14,12,1170,false,false,false,false,0,0,0,0,0,0,10
5740663,mitchellh/vagrant,ruby,4867,1416955502,1433056886,1433056886,268356,268356,commits_in_master,false,false,false,47,7,1,0,4,0,4,0,3,0,0,4,4,3,0,1,0,0,4,4,3,0,1,18,0,43,0,18.613069651801194,0.34758975171223294,110,xmitchx@gmail.com,CHANGELOG.md|plugins/synced_folders/rsync/helper.rb|templates/locales/en.yml|website/docs/source/v2/synced-folders/rsync.html.md,90,0.06199460916442048,0,1,false,GH-4201: Added rsync__showoutput to display rsync output to console Enhancement #4201 implementation to bridge the Process output for rsync to the console Configurable with rsync__showoutput in synced folder declaration in Vagrantfile Added doc and changelog Wasnt smart enough to figure out how to unit test it Sorry,,1209,0.7402812241521919,0.49326145552560646,27889,522.2847717738176,44.856394994442255,80.7845387070171,7078,31,1769,111,travis,malonecm,sethvargo,false,sethvargo,0,0,1,0,194,false,false,false,false,1,0,0,0,0,0,59119
5352403,mitchellh/vagrant,ruby,4861,1416807089,1416860172,1416860172,884,884,commits_in_master,false,false,false,48,2,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,9,0,4.851284751952063,0.09059564904896623,1,mitchell.hashimoto@gmail.com,lib/vagrant/bundler.rb,1,0.002688172043010753,0,2,false,fix broken tempdir removal HiFileunlink() rescue nil was silently not actually removing a temporary directoryI understand why rescue nil was used but when I see it used I always wonder what might silently go wrong Might there be a better way to do this\- Felix,,1208,0.7400662251655629,0.48655913978494625,27888,521.873207114171,44.82214572576018,80.71572002294894,7063,32,1768,39,travis,obfusk,sethvargo,false,sethvargo,1,1.0,21,13,1077,false,false,false,false,0,0,0,0,0,0,801
5311964,mitchellh/vagrant,ruby,4847,1416437435,1433135225,1433135225,278296,278296,merged_in_comments,false,false,false,15,5,5,4,0,0,4,0,4,2,0,5,7,5,0,0,2,0,5,7,5,0,0,76,0,76,0,34.12119644665192,0.6371986177821987,2,xmitchx@gmail.com,plugins/guests/fedora/cap/flavor.rb|plugins/guests/fedora/cap/nfs_client.rb|plugins/guests/fedora/plugin.rb|plugins/guests/redhat/cap/nfs_client.rb|plugins/guests/redhat/cap/rsync.rb|plugins/guests/fedora/cap/flavor.rb|plugins/guests/fedora/cap/flavor.rb|plugins/guests/fedora/cap/nfs_client.rb,2,0.0,0,1,false,A few modifications to fedora and redhat guests Mostly cleanup related to systemd vs sysvinit,,1207,0.7398508699254349,0.48525469168900803,27888,521.873207114171,44.82214572576018,80.71572002294894,7019,33,1763,100,travis,whitel,sethvargo,false,sethvargo,0,0,7,1,894,false,false,false,false,0,0,0,0,1,0,30183
5285525,mitchellh/vagrant,ruby,4840,1416291117,1418634402,1418634402,39054,39054,commits_in_master,false,false,false,109,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.0952329317780825,0.07647670760036275,23,xmitchx@gmail.com,templates/locales/en.yml,23,0.06149732620320856,0,0,false,You need to press enter to migrate from 11 to 15 $ vagrant versionVagrant is upgrading some internal state for the latest versionPlease do not quit Vagrant at this time While upgrading Vagrantwill need to copy all your boxes so it will use a considerableamount of disk space After it is done upgrading the temporary diskspace will be freedPress ctrl-c now to exit if you want to remove some boxes or freeup some disk spacePress any other key to continueI pressed the spacebar nothing happenedI pressed lots of other keys nothing happenedI pressed enter something happened,,1206,0.7396351575456053,0.4839572192513369,27888,521.873207114171,44.82214572576018,80.71572002294894,7003,33,1762,46,travis,MiLk,sethvargo,false,sethvargo,1,0.0,53,87,2221,false,false,false,false,0,0,0,0,0,0,-1
5254375,mitchellh/vagrant,ruby,4831,1416036724,1418361889,1418361889,38752,38752,commits_in_master,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.432564011465356,0.08277596690165888,0,,website/docs/source/v2/share/connect.html.md,0,0.0,0,0,false,typo Simple typo in the docs for Vagrant Share,,1205,0.7394190871369295,0.48525469168900803,27888,521.873207114171,44.82214572576018,80.71572002294894,6977,33,1759,49,travis,jcollins1991,mitchellh,false,mitchellh,0,0,3,1,1481,false,false,false,false,0,0,0,0,0,0,38752
5251084,mitchellh/vagrant,ruby,4829,1416012999,1419429091,1419429091,56934,56934,commit_sha_in_comments,false,false,false,30,4,1,0,4,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,14,0,4.340005251871434,0.0810474772959166,0,,plugins/communicators/winrm/communicator.rb,0,0.0,0,1,true,Fix for issue 4806 Added ability to detect errors printed to stderr in the WinRM communicator and an options flag to fail tests if the stderr has values in it,,1204,0.739202657807309,0.48525469168900803,27888,521.873207114171,44.82214572576018,80.71572002294894,6976,33,1758,49,travis,aidanmorgan,aidanmorgan,true,aidanmorgan,0,0,10,10,1263,false,true,false,false,2,9,0,0,0,0,617
5242018,mitchellh/vagrant,ruby,4825,1415962566,1433024520,1433024520,284365,284365,commits_in_master,false,false,false,67,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.538412405096035,0.08475263392893782,0,,website/docs/source/v2/cli/destroy.html.md,0,0.0,0,0,true,doc destroy - notice about space occupied by the box HiBecause vagrant destroy doesnt remove the box installed during vagrant up the statement:    After running this command your computer should be left at a clean state     as if you never created the guest machine in the first placeis a bit of an exaggeration I think Maybe you will find the notice I have written useful,,1203,0.7389858686616791,0.48525469168900803,27888,521.873207114171,44.82214572576018,80.71572002294894,6972,33,1758,119,travis,gajdaw,sethvargo,false,sethvargo,0,0,69,4,1337,false,true,false,false,0,0,0,0,0,0,-1
5241317,mitchellh/vagrant,ruby,4824,1415955616,,1433134136,286308,,unknown,false,false,false,145,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.625903929627206,0.08638649539603341,7,xmitchx@gmail.com,plugins/providers/virtualbox/driver/version_4_3.rb,7,0.01876675603217158,0,1,true,Force at least one retry in vm_exists for provider VirtualBox 43 Due to [VirtualBox #13190](https://wwwvirtualboxorg/ticket/13190) on Windows VBoxManager showvminfo crashes if the VM is suspended (and maybe in other occasions) This leads Vagrant to think the VM does not exist This has bad consequences for lot of commands since machine uuid is cleared which leads to a new VM being started Since there is already a retry mechanism in place simply force at least one retry of the command The second invocation should work correctly if the machine is presentDownside of this patch it takes 2 more seconds for the UI to respond if the vm really does not exist We could remove this by forcing a retry without a sleepLinked to #1454 (Maybe we should start a brand new issue for this however since we hijacked the initial bug report)RegardsMatt,,1202,0.7396006655574043,0.48525469168900803,27888,521.873207114171,44.82214572576018,80.71572002294894,6972,33,1758,96,travis,maoueh,sethvargo,false,,0,0,11,0,1898,false,false,false,false,0,4,0,0,0,0,228305
5199936,mitchellh/vagrant,ruby,4813,1415729679,1420595384,1420595384,81095,81095,commits_in_master,false,false,false,29,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.325485157667899,0.08077632163204083,0,,plugins/guests/funtoo/cap/configure_networks.rb,0,0.0,0,0,false,Update configure_networksrb for funtoo fixed name of temporary network configuration file to work with the further process of copying file to configuration directory in funtoo guestsfix for https://githubcom/mitchellh/vagrant/issues/4812,,1201,0.7393838467943381,0.4839572192513369,27888,521.873207114171,44.82214572576018,80.71572002294894,6953,32,1755,49,travis,derdanne,sethvargo,false,sethvargo,0,0,1,0,1058,false,false,false,false,0,0,0,0,0,0,-1
5191746,mitchellh/vagrant,ruby,4808,1415677566,,1415680242,44,,unknown,false,false,true,11,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.465549695009201,0.08346501980279393,13,xmitchx@gmail.com,lib/vagrant/machine.rb,13,0.034482758620689655,0,0,false,Always clear the machine state when a new one is created ,,1200,0.74,0.48010610079575594,27871,521.9044885364716,44.84948512791073,80.83671199454629,6946,32,1754,33,travis,sethvargo,sethvargo,true,,13,0.6923076923076923,480,65,1512,true,false,false,false,27,98,30,1,104,1,2
5192554,mitchellh/vagrant,ruby,4801,1415494139,1415680721,1415680722,3109,3109,github,false,false,true,9,1,1,0,1,0,1,0,1,1,0,2,3,3,0,0,1,0,2,3,3,0,0,46,0,46,0,13.038381202591964,0.2436984915271332,4,sethvargo@users.noreply.github.com,lib/vagrant/util.rb|lib/vagrant/util/env.rb|plugins/provisioners/chef/provisioner/chef_client.rb,4,0.0,0,0,false,Add Envwith_clean_env for resetting the Ruby and Rubygems environment ,,1199,0.7397831526271893,0.47757255936675463,27872,521.6346153846155,44.81199770378875,80.90556831228474,6942,32,1752,35,travis,sethvargo,sethvargo,true,sethvargo,12,0.6666666666666666,480,65,1510,true,false,false,false,20,91,27,1,100,1,3100
5177793,mitchellh/vagrant,ruby,4792,1415307370,1415654664,1415654664,5788,5788,commits_in_master,false,false,false,47,1,1,0,0,0,0,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,22,39,22,39,17.178800968651636,0.32319428157825325,14,xmitchx@gmail.com,lib/vagrant/machine.rb|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/plugin/v2/command_test.rb,11,0.0225,0,0,false,fixes infinite loop in machine state call if provider calls machineaction This should fix #4776 and #4717 caused by https://githubcom/mitchellh/vagrant/commit/f0a73c7c0578605b5cd71ae0d10d41ce4012fd02Im not 100% sure this addresses everything but it fixes the infinite loop and also causes state to be to be refreshed when calling commands like suspend,,1198,0.7395659432387313,0.4525,27695,522.296443401336,44.73731720527171,81.06156345910814,6939,32,1750,35,travis,mwrock,sethvargo,false,sethvargo,9,0.7777777777777778,125,3,1340,true,false,false,false,3,24,7,0,4,0,-1
5174766,mitchellh/vagrant,ruby,4790,1415283218,1415298793,1415298793,259,259,commits_in_master,false,false,false,4,2,2,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,9.199942113135892,0.1730835618763704,0,,CONTRIBUTING.md|CONTRIBUTING.md,0,0.0,0,0,false,Fix typos in CONTRIBUTINGmd ,,1197,0.7393483709273183,0.4268867924528302,27695,522.296443401336,44.73731720527171,81.06156345910814,6939,32,1750,34,travis,julienvey,sethvargo,false,sethvargo,2,0.5,34,18,1471,true,true,false,false,1,3,4,0,0,0,20
5170468,mitchellh/vagrant,ruby,4788,1415234934,1415236644,1415236644,28,28,commits_in_master,false,false,false,51,2,2,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,19,0,19,0,9.258914767536265,0.17419372094231828,0,,website/docs/source/v2/synced-folders/rsync.html.md|website/docs/source/v2/synced-folders/rsync.html.md,0,0.0,0,0,false,doc rsync - use sudo rsync for a restricted folder As rsync is run as vagrant user this required the destination folder to be writable by vagrantThis PR add the option to run sudo rsync on the guest in order to let sync to restricted foldersie bin to /usr/local/bin,,1196,0.7391304347826086,0.4095022624434389,27695,522.296443401336,44.73731720527171,81.06156345910814,6935,32,1749,34,travis,kikitux,sethvargo,false,sethvargo,0,0,15,67,1060,false,false,true,false,10,63,0,0,0,0,-1
5154828,mitchellh/vagrant,ruby,4779,1415130453,1415133400,1415133400,49,49,commits_in_master,false,false,true,84,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.845682083535772,0.09116494055404509,4,sethvargo@users.noreply.github.com,website/www/source/vmware/index.html.erb,4,0.009070294784580499,0,0,false,Explain that older Vagrant plugin licenses may not work with new VMware This is the result of an unhappy customer who raised a very valid point If you are not on the official Vagrant mailing list you would be unaware that upgrading VMware would cause your plugin to stop functioningWhile this does not solve the problem of dispersing that information it helps clarify that plugin version support is for the latest version of the Vagrant plugin and does not extend to previous ones,,1195,0.7389121338912134,0.41043083900226757,27695,522.296443401336,44.73731720527171,81.06156345910814,6923,32,1748,34,travis,sethvargo,sethvargo,true,sethvargo,11,0.6363636363636364,479,65,1506,true,false,false,false,13,68,23,1,96,1,-1
5151222,mitchellh/vagrant,ruby,4777,1415106344,1415125770,1415125770,323,323,commits_in_master,false,false,false,42,4,1,0,2,0,2,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,0,1,3,1,4.800131341625926,0.09030798831939664,1,mitchell.hashimoto@gmail.com,test/unit/base.rb,1,0.002277904328018223,0,1,false,Remove useless expect_with This seems to be relict of old days and it just forces unnecessary dependency on Rubys test unitI am executing the test suite unit using ruby -rbundler/setup -I:lib -e Dirglob(test/unit/**/*_testrb)sorteach &method(:require) I hope I have not missed anything,,1194,0.7386934673366834,0.4123006833712984,27695,522.332551001986,44.73731720527171,81.09767105975808,6923,32,1748,34,travis,voxik,sethvargo,false,sethvargo,2,0.5,21,2,2328,false,false,false,false,0,2,2,0,0,0,44
5140195,mitchellh/vagrant,ruby,4770,1415030149,,1415037985,130,,unknown,false,false,false,54,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.596684668943091,0.08648041394014262,4,mitchell.hashimoto@gmail.com,vagrant.gemspec,4,0.009111617312072893,0,1,false,Vagrant is using JSON so it should properly specify this dependency Vagrant is using JSON so it should properly specify this dependency as it does for Rake and MinitestI can understand if you reject this PR but it would help us on Fedora where the JSON gem is not treated as default gem,,1193,0.7393126571668064,0.4123006833712984,27695,522.332551001986,44.73731720527171,81.09767105975808,6920,32,1747,34,travis,voxik,sethvargo,false,,1,1.0,21,2,2327,false,false,false,false,0,1,1,0,0,0,13
5129509,mitchellh/vagrant,ruby,4767,1414893844,,1415332754,7315,,unknown,false,false,false,20,2,2,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,4,1,4,1,11.549715067741369,0.21729229039733852,3,vlajos@gmail.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/config_test.rb,3,0.0,0,0,false,Added support for Ansibles new --force-read option The option is forthcoming when the following Ansible pull request isaccepted:ansible/ansible#9463,,1192,0.7399328859060402,0.4123006833712984,27695,522.332551001986,44.73731720527171,81.09767105975808,6910,32,1745,34,travis,stephenwithav,stephenwithav,true,,1,0.0,2,13,2086,false,false,false,false,0,4,1,0,0,0,7315
5127266,mitchellh/vagrant,ruby,4765,1414870564,,1436487208,360277,,unknown,false,false,false,101,1,1,0,8,0,8,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,6,6,6,8.638258958744863,0.1625171758075298,10,xmitchx@gmail.com,plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,10,0.022779043280182234,0,9,false,Allow specifying post_up_message block This PR allows users to configure a callable post_up_message to print values at a later time:rubyVagrantconfigure(2) do |config|  configvmpost_up_message  - {    ip  vagrant ssh -- ifconfig eth1 | grep -o -E [0-9]+\[0-9]+\[0-9]+\[0-9]+ | head -n1chomp        Your instance is configured    https://#{ip}    Username: foo    Password: bar      }endI also thought about changing the method signature to be more DSL-like but decided against it for minimal changes Open to updating the PR to this if it feels more naturalrubyVagrantconfigure(2) do |config|  configvmpost_up_message do    deferred message here  endendThoughts,,1191,0.7405541561712846,0.4123006833712984,27695,522.332551001986,44.73731720527171,81.09767105975808,6908,32,1745,78,travis,jch,mitchellh,false,,0,0,221,6,2277,false,true,false,false,0,0,0,0,0,0,98
5122356,mitchellh/vagrant,ruby,4761,1414800385,1415653167,1415653167,14213,14213,commits_in_master,false,false,true,7,13,8,0,3,0,3,0,2,8,0,12,23,19,0,1,8,0,15,23,20,1,2,1274,1096,1276,1096,209.2123539830579,3.936047886009666,36,xmitchx@gmail.com,plugins/provisioners/chef/cap/debian/chef_install.rb|plugins/provisioners/chef/cap/linux/chef_installed.rb|plugins/provisioners/chef/cap/redhat/chef_install.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_apply.rb|plugins/provisioners/chef/installer.rb|plugins/provisioners/chef/omnibus.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_apply.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/locales/en.yml|test/unit/plugins/provisioners/chef/config/base_test.rb|test/unit/plugins/provisioners/chef/omnibus_test.rb|test/unit/plugins/provisioners/chef/config/base_runner_test.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|test/unit/plugins/provisioners/chef/config/chef_apply_test.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/config/chef_apply.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/base_runner.rb|plugins/provisioners/chef/config/chef_apply.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/base.rb|test/unit/plugins/provisioners/chef/config/base_runner_test.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|test/unit/plugins/provisioners/chef/config/chef_apply_test.rb|plugins/provisioners/chef/cap/debian/chef_install.rb|plugins/provisioners/chef/cap/linux/chef_installed.rb|plugins/provisioners/chef/cap/redhat/chef_install.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_apply.rb|plugins/provisioners/chef/installer.rb|plugins/provisioners/chef/omnibus.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_apply.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/locales/en.yml|test/unit/plugins/provisioners/chef/config/base_test.rb|test/unit/plugins/provisioners/chef/omnibus_test.rb,26,0.004618937644341801,0,3,true,Automatically install Chef when provisioning with Chef ,,1189,0.7409587888982339,0.4133949191685912,27695,522.332551001986,44.73731720527171,81.09767105975808,6905,32,1744,34,travis,sethvargo,sethvargo,true,sethvargo,10,0.6,479,65,1502,true,false,false,false,11,55,20,1,88,1,29
5121877,mitchellh/vagrant,ruby,4760,1414797474,1414797712,1414797712,3,3,commits_in_master,false,false,false,31,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.6986577603964297,0.06958525262812848,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,2,0.004662004662004662,0,0,true,Grammar fix to the network interface bridging question Grammar police here The number network interfaces is always finite when this question is asked Therefore it should be which rather than what,,1188,0.7407407407407407,0.4149184149184149,27695,522.332551001986,44.73731720527171,81.09767105975808,6905,32,1744,30,travis,llamallama,sethvargo,false,sethvargo,0,0,2,0,1644,false,false,false,false,0,0,0,0,0,0,-1
5120585,mitchellh/vagrant,ruby,4759,1414790549,,1447995996,553424,,unknown,false,false,false,34,1,1,0,2,0,2,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,39,3,39,3,13.654674544650497,0.25689426794722947,3,tarrant@keyneston.com,plugins/hosts/bsd/cap/nfs.rb|plugins/synced_folders/nfs/action_cleanup.rb|test/unit/plugins/synced_folders/nfs/action_cleanup_test.rb,3,0.0,0,0,true,avoid sudo for changing /etc/exports when no change needed also fix NFS pruning to avoid pruning the machine were startingeven if the provider doesnt return non-running machines (as is thecase with vmware),,1187,0.7413647851727043,0.4166666666666667,27695,522.332551001986,44.73731720527171,81.09767105975808,6905,32,1744,81,travis,ccutrer,sethvargo,false,,0,0,32,18,1737,false,false,false,false,0,0,0,0,0,0,305724
5120577,mitchellh/vagrant,ruby,4758,1414790529,,1433292270,308362,,unknown,false,false,false,8,6,1,2,3,0,5,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,12,0,4.188860990915905,0.07880776464318073,2,sethvargo@gmail.com,lib/vagrant/box_collection.rb,2,0.004761904761904762,0,2,true,Ignore possible version directories that are hidden folders ,,1186,0.7419898819561551,0.4166666666666667,27695,522.332551001986,44.73731720527171,81.09767105975808,6905,32,1744,79,travis,philwrenn,sethvargo,false,,0,0,0,1,1674,false,false,false,false,0,0,0,0,1,0,305722
5110217,mitchellh/vagrant,ruby,4753,1414713218,1414716801,1414716801,59,59,commits_in_master,false,false,true,6,3,3,0,1,0,1,0,2,4,0,4,8,6,1,1,4,0,4,8,6,1,1,270,98,270,98,36.06276614552092,0.6807867941077401,33,xmitchx@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/provisioning/chef_apply.html.md|plugins/provisioners/chef/config/chef_apply.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_apply.rb|templates/locales/en.yml|test/unit/plugins/provisioners/chef/config/chef_apply_test.rb|plugins/provisioners/chef/config/chef_client.rb,24,0.007177033492822967,1,1,false,Add Chef Apply provisioner /cc @mitchellh ,,1185,0.7417721518987341,0.41866028708133973,27605,521.1012497735917,44.55714544466582,81.03604419489223,6898,32,1743,28,travis,sethvargo,sethvargo,true,sethvargo,9,0.5555555555555556,479,65,1501,true,false,false,false,7,47,17,1,72,1,26
5108239,mitchellh/vagrant,ruby,4750,1414703666,1414705214,1414705214,25,25,commits_in_master,false,false,true,6,1,1,0,0,0,0,0,0,0,0,5,5,3,2,0,0,0,5,5,3,2,0,18,0,18,0,23.082436857915543,0.4383147063072906,5,mitchell.hashimoto@gmail.com,website/www/source/support.html.erb|website/www/source/vmware/index.html.erb|website/www/source/vmware/privacy-policy.html.md|website/www/source/vmware/reseller.html.md|website/www/source/vmware/terms-of-service.html.md,4,0.0,0,0,false,Replace biz@hashicorpcom with sales@ or support@ ,,1184,0.7415540540540541,0.4199029126213592,27545,505.02813577781814,42.58486113632238,78.92539480849518,6897,32,1743,30,travis,KFishner,sethvargo,false,sethvargo,1,1.0,10,1,839,true,false,false,false,0,0,1,0,2,0,-1
5107320,mitchellh/vagrant,ruby,4749,1414699537,,1414705428,98,,unknown,false,false,true,9,14,13,0,0,0,0,0,4,7,0,12,19,14,1,1,7,0,12,19,14,1,1,254,566,254,912,105.33403590874133,2.0001985621231713,25,xmitchx@gmail.com,website/docs/source/v2/provisioning/chef_zero.html.md|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/provisioners/chef_solo/solo.erb|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_solo.html.md|website/docs/source/v2/provisioning/chef_zero.html.md|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|test/unit/plugins/provisioners/chef/config/base_test.rb|templates/locales/en.yml|plugins/provisioners/chef/config/chef_client.rb|test/unit/plugins/provisioners/chef/config/chef_client_test.rb|plugins/provisioners/chef/config/chef_solo.rb|test/unit/plugins/provisioners/chef/config/chef_solo_test.rb,22,0.0,0,2,false,Add Chef Zero provision + improve Chef test coverage ,,1183,0.7421808960270498,0.42053789731051344,27545,505.02813577781814,42.58486113632238,78.92539480849518,6897,32,1743,31,travis,sethvargo,sethvargo,true,,8,0.625,479,65,1501,true,false,false,false,7,42,11,1,64,1,-1
5088918,mitchellh/vagrant,ruby,4738,1414562469,1447888834,1447888834,555439,555439,commits_in_master,false,false,false,190,1,1,0,4,0,4,0,4,0,0,3,3,2,0,1,0,0,3,3,2,0,1,16,0,16,0,13.707794049935508,0.2602986747067783,5,xmitchx@gmail.com,.gitignore|lib/vagrant/bundler.rb|plugins/commands/plugin/command/mixin_install_opts.rb,3,0.00516795865633075,0,1,false,Added a --plugin-clean-sources parameter This parameter that will allow for only those sources that are defined by the user to be used I also added editor swapfiles to the gitignoreI work in a corporate environment behind firewalls which prevent access to both rubygemsorg and gemshashicorpcom We have our own rubygems repository where we host (among other things) Vagrant plugins (both internally-created and external) Without a patch like this vagrant plugin install vagrant-triggers (for instance) will fail because it cannot retrieve the specs from gemshashicorpcom Furthermore we need something like this so that the risk and audit groups dont see the attempts at forbidden trafficIm not thrilled with the parameter behavior I created - it means that parameter parsing is a state machine and that could be surprising I would have preferred --plugin-source to have the behavior of overwriting the defaults But that would have been a breaking API change and I didnt want to propose that in the initial requestAlso this leads to the desire of having a vagrantrc that we can use to set these values by default on a project basis But thats another changeset,,1182,0.7419627749576988,0.4160206718346253,27545,505.02813577781814,42.58486113632238,78.92539480849518,6883,32,1742,149,travis,robkinyon,mitchellh,false,mitchellh,0,0,22,3,2156,false,false,false,false,0,2,0,0,0,0,284883
5071785,mitchellh/vagrant,ruby,4726,1414444872,1433024310,1433024310,309657,309657,commits_in_master,false,false,false,36,2,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,16,0,4.026506947782532,0.07645974387909331,0,,plugins/commands/rdp/command.rb,0,0.0,0,0,false,Add password to rdp_info hash Any specific reason the password was omitted from the rdp_info hashWithout the password in the rdp_info hash I see no way of figuring out the password in the rdp_client capability,,1181,0.7417442845046571,0.41494845360824745,27545,505.02813577781814,42.58486113632238,78.92539480849518,6863,32,1740,121,travis,databus23,sethvargo,false,sethvargo,3,1.0,3,0,1474,false,false,false,false,0,1,2,0,0,0,-1
5055363,mitchellh/vagrant,ruby,4713,1414258810,1414283138,1414283138,405,405,commits_in_master,false,false,false,25,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.738886462637563,0.08998745176270394,3,tarrant@keyneston.com,plugins/hosts/linux/cap/nfs.rb,3,0.007712082262210797,0,0,false,silence warnings about unescaped - in re char class Eliminate warnings like this:    vagrant/plugins/hosts/linux/cap/nfsrb:74: warning: character class has - without escape: /^# VAGRANT-BEGIN:( 1000) ([\\/A-Za-z0-9-_]+)$/,,1180,0.7415254237288136,0.4087403598971722,27545,505.02813577781814,42.58486113632238,78.92539480849518,6851,33,1738,31,travis,aspiers,mitchellh,false,mitchellh,12,0.8333333333333334,67,35,1942,true,true,false,false,1,19,5,0,0,0,405
5055272,mitchellh/vagrant,ruby,4712,1414257625,1414262669,1414262669,84,84,commits_in_master,false,false,false,5,2,2,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,9.130432821206934,0.1733792082905631,0,,website/docs/source/v2/synced-folders/basic_usage.html.md|website/docs/source/v2/synced-folders/basic_usage.html.md,0,0.0,0,0,false,Improve docs for synced folders ,,1179,0.741306191687871,0.4087403598971722,27545,505.02813577781814,42.58486113632238,78.92539480849518,6851,33,1738,31,travis,aspiers,sethvargo,false,sethvargo,11,0.8181818181818182,67,35,1942,true,true,false,false,1,19,4,0,0,0,-1
5055202,mitchellh/vagrant,ruby,4711,1414256778,,1433133548,314612,,unknown,false,false,false,55,1,1,0,3,0,3,0,2,0,0,3,3,2,0,1,0,0,3,3,2,0,1,8,0,8,0,12.227363073319129,0.23218729830740953,32,xmitchx@gmail.com,lib/vagrant/config/loader.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml,22,0.028277634961439587,0,0,false,eliminate guesswork with Vagrantfile errors If the Vagrantfile has some kind of error display not only its path and the exception message but also the originatingline number and exception classAlso log the full backtrace when the error is in a provider block just as it is done when its outside a provider block,,1178,0.7419354838709677,0.4087403598971722,27545,505.02813577781814,42.58486113632238,78.92539480849518,6851,33,1738,98,travis,aspiers,sethvargo,false,,10,0.9,67,35,1942,true,true,false,false,1,17,3,0,0,0,0
5050957,mitchellh/vagrant,ruby,4710,1414194984,1414197568,1414197568,43,43,commits_in_master,false,false,false,36,3,3,0,2,0,2,0,2,0,2,2,4,3,0,1,0,2,2,4,3,0,1,38,0,38,0,13.173971224421082,0.24975712736027866,1,mitchell.hashimoto@gmail.com,plugins/guests/tinycore/cap/configure_networks.rb|plugins/guests/tinycore/cap/configure_networks.rb|plugins/guests/tinycore/errors.rb|plugins/guests/tinycore/plugin.rb|templates/locales/guest_tinycore.yml,1,0.0026041666666666665,0,0,true,Add DHCP support for tinycore This will cause tinycore to support :type  dhcp Ive tested on my own machine to decent effect The only issue I have now is how vmware fusion configures its dhcp,,1177,0.7417162276975361,0.4036458333333333,27566,504.643401291446,42.552419647391716,78.86526880940289,6851,33,1737,29,travis,Tarrant,mitchellh,false,mitchellh,0,0,10,2,2146,false,false,false,false,0,5,0,0,0,0,2
5048921,mitchellh/vagrant,ruby,4707,1414183078,1414183097,1414183097,0,0,commits_in_master,false,false,true,47,5,5,0,0,2,2,0,15,6,0,9,15,14,0,1,6,0,9,15,14,0,1,250,34,250,34,67.92151743835458,1.2976457709312998,37,xmitchx@gmail.com,lib/vagrant/action/general/package.rb|plugins/guests/freebsd/cap/remove_public_key.rb|plugins/guests/freebsd/plugin.rb|plugins/guests/netbsd/cap/remove_public_key.rb|plugins/guests/netbsd/plugin.rb|plugins/guests/openbsd/cap/remove_public_key.rb|plugins/guests/openbsd/plugin.rb|website/docs/source/v2/boxes/base.html.md|lib/vagrant/util/keypair.rb|test/unit/vagrant/util/keypair_test.rb|lib/vagrant/errors.rb|plugins/communicators/ssh/communicator.rb|plugins/guests/linux/cap/remove_public_key.rb|plugins/guests/linux/plugin.rb|templates/locales/en.yml,20,0.0,0,11,true,Generate Random SSH key on vagrant up This PR makes it so that on vagrant up Vagrant will randomly generate a keypair and use that if the insecure keypair is detected This adds an extra level of security when doing things such as bridge networking Fixes GH-2608,,1176,0.7414965986394558,0.3893333333333333,27366,507.4910472849521,42.79032375940948,79.36855952641965,6850,33,1737,29,travis,mitchellh,mitchellh,true,mitchellh,28,0.8571428571428571,3659,0,2431,true,true,false,false,450,677,96,6,280,1,-1
5045114,mitchellh/vagrant,ruby,4703,1414161356,1414178468,1414178468,285,285,commits_in_master,false,false,false,19,1,1,0,3,0,3,0,3,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.7718284907378985,0.0911764104866151,2,mitchell.hashimoto@gmail.com,bin/vagrant,2,0.005449591280653951,0,1,true,Do not load the gem and all dependencies due to version This should be faster since it cicrumvent RubyGems,,1175,0.7412765957446809,0.3896457765667575,27356,507.6765609007164,42.80596578447141,79.39757274455329,6848,33,1737,29,travis,voxik,mitchellh,false,mitchellh,0,0,21,2,2317,false,false,false,false,0,0,0,0,0,0,6
5041650,mitchellh/vagrant,ruby,4700,1414126947,1414127019,1414127019,1,1,commits_in_master,false,false,true,113,4,4,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,6,6,6,0,0,113,16,113,16,41.64959353982268,0.7958180806496518,12,xmitchx@gmail.com,website/docs/source/v2/provisioning/basic_usage.html.md|lib/vagrant/action/builtin/provision.rb|plugins/kernel_v2/config/vm.rb|lib/vagrant/action/builtin/mixin_provisioners.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action/builtin/mixin_provisioners.rb|lib/vagrant/action/builtin/provision.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,8,0.008379888268156424,0,0,true,Named Provisioners This adds named provisioners to Vagrant fixing a variety of issues such as #2850 There are a few changes in here:* The syntax of configvmprovision has changed to configvmprovision NAME type: TYPE If no type is specified the name is assumed to be the type This keeps backwards compatibility * The old syntax of specifying an ID with configvmprovision TYPE id: ID still works but outputs a deprecation warning and will be removing in Vagrant 18* --provision-with flag on up reload etc works with names as well as IDs* The output during up reload provision etc now shoes the name and the type if there is a name,,1174,0.7410562180579217,0.3743016759776536,27316,508.4199736418217,42.86864841118758,79.51383804363743,6848,33,1737,31,travis,mitchellh,mitchellh,true,mitchellh,27,0.8518518518518519,3659,0,2431,true,true,false,false,399,623,91,6,263,1,-1
5038378,mitchellh/vagrant,ruby,4698,1414103250,1414103309,1414103309,0,0,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.241576217753523,0.081045524505939,0,,Gemfile,0,0.0,0,0,false,Change Gemfile source to HTTPS Change Gemfile from source http://rubygemsorg to source https://rubygemsorg,,1173,0.7408354646206309,0.34226190476190477,27266,506.60162840167243,42.69053033081494,79.32956796009682,6847,32,1736,31,travis,cllns,mitchellh,false,mitchellh,0,0,9,11,1339,false,false,false,false,0,0,0,0,0,0,0
5033276,mitchellh/vagrant,ruby,4696,1414077091,1414091137,1414091137,234,234,commits_in_master,false,false,false,73,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.0760189445405315,0.078124307540088,10,nicolas.philippe@forgerock.com,plugins/communicators/ssh/communicator.rb,10,0.0364963503649635,0,0,false,Addresses issue #2163 In the situation where the SSH key has invalid permissions/owner the reconnect-loop keeps failing repeatedly yet stays silent about the reasons A message must be reported from the default exception handler (added) In addition the situations where the SSH key owner or permissions are wrong must lead to a proper failure (added) Ideally though the owner/permissions check must happen before launching the VM hence this is not a perfect fix,,1172,0.7406143344709898,0.18613138686131386,27051,507.8924993530738,42.844996488115044,79.4425344719234,6846,32,1736,63,travis,konstantint,mitchellh,false,mitchellh,0,0,16,0,1688,false,false,false,false,0,0,0,0,0,0,233
5031046,mitchellh/vagrant,ruby,4694,1414059014,1414089019,1414089019,500,500,commits_in_master,false,false,false,16,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.216257167666125,0.08081222784208118,5,simo@squareup.com,plugins/providers/virtualbox/action/prepare_nfs_settings.rb,5,0.01824817518248175,0,0,false,providers/virtualbox: Remove unused method using_nfs After commit 7ccec33 method VagrantPlugins::ProviderVirtualBox::Action::PrepareNFSSettings#using_nfs became unused and can be deleted,,1171,0.740392826643894,0.18613138686131386,27051,507.8924993530738,42.844996488115044,79.4425344719234,6842,32,1736,63,travis,legal90,mitchellh,false,mitchellh,0,0,27,4,483,false,true,true,false,1,4,0,0,0,0,500
5030794,mitchellh/vagrant,ruby,4693,1414056601,1414091216,1414091216,576,576,commits_in_master,false,false,false,17,2,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,29,0,48,0,4.665510025193719,0.08942297496624733,0,,plugins/guests/windows/cap/change_host_name.rb,0,0.0,0,0,false,Rename Windows guest without reboot Adds feature request #4687 Tested on Windows 7 Windows 8 Windows 81,,1170,0.7401709401709402,0.18613138686131386,27051,507.8924993530738,42.844996488115044,79.4425344719234,6842,32,1736,61,travis,uchagani,mitchellh,false,mitchellh,0,0,0,1,1134,false,false,false,false,2,14,0,1,0,0,576
5029910,mitchellh/vagrant,ruby,4691,1414045298,1414045982,1414045982,11,11,commits_in_master,false,false,false,14,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.494666290744,0.16294188436992782,5,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/handle_box.rb,5,0.018867924528301886,0,0,false,Fix typo that prevents vagrant box add --cert certfile -name foo URL from working ,,1169,0.7399486740804107,0.15849056603773584,27031,508.2682845621693,42.87669712552255,79.50131330694387,6839,32,1736,64,travis,awithersdd,mitchellh,false,mitchellh,0,0,0,1,1116,false,false,false,false,0,0,0,0,0,0,11
5027620,mitchellh/vagrant,ruby,4690,1414024839,,1414031997,119,,unknown,false,false,true,5,2,2,2,0,0,2,0,1,5,0,3,8,7,0,1,5,0,3,8,7,0,1,123,34,123,34,35.03835244200767,0.6726131131692727,13,mitchell.hashimoto@gmail.com,plugins/pushes/file/config.rb|plugins/pushes/file/plugin.rb|plugins/pushes/file/push.rb|templates/locales/en.yml|test/unit/plugins/pushes/file/config_test.rb|lib/vagrant/plugin/v2.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/plugin/v2/push.rb,13,0.0,0,0,false,Add basic vagrant push skeleton ,,1168,0.740582191780822,0.12403100775193798,26982,509.19131272700326,42.95456230079312,79.64568971907197,6838,32,1735,66,travis,sethvargo,mitchellh,false,,7,0.7142857142857143,479,65,1493,true,false,true,false,5,28,8,1,22,0,14
5027014,mitchellh/vagrant,ruby,4689,1414021826,1414021923,1414021923,1,1,commits_in_master,false,false,true,5,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.892721174087515,0.09392303551427078,2,jackpearkes@gmail.com,website/www/source/vmware/reseller.html.md,2,0.007874015748031496,0,0,false,Update eula to pdf version ,,1167,0.7403598971722365,0.1141732283464567,26982,509.19131272700326,42.95456230079312,79.64568971907197,6838,32,1735,66,travis,KFishner,pearkes,false,pearkes,0,0,10,1,831,true,false,false,false,0,0,0,0,1,0,-1
5021428,mitchellh/vagrant,ruby,4686,1413994568,1414032024,1414032024,624,624,commits_in_master,false,false,true,65,2,1,0,1,0,1,0,1,0,0,1,3,1,0,0,0,0,3,3,3,0,0,2,0,18,0,4.819854081674692,0.09260213041946824,0,,website/docs/source/v2/getting-started/index.html.md,0,0.0,0,0,false,Use https://wwwvirtualboxorg for all VirtualBox links From an internal ticket: Just noticed that the Link to Virtualbox points to the not-www-Subdomain And on that domain I got an https-error If you change the link to the www-subdomain there’s no errorI believe the URL was being rewritten by the HTML compressor and upgrading Vagrant to middleman-hashicorp is a much bigger task than imagined :frowning:,,1166,0.7401372212692967,0.0823045267489712,26900,510.2602230483272,43.04832713754647,79.62825278810409,6837,31,1735,65,travis,sethvargo,mitchellh,false,mitchellh,6,0.6666666666666666,479,65,1493,true,false,true,false,5,28,7,1,17,0,624
5021255,mitchellh/vagrant,ruby,4685,1413993612,1414032042,1414032042,640,640,commits_in_master,false,false,true,9,1,1,0,1,0,1,0,2,0,0,2,2,0,2,0,0,0,2,2,0,2,0,0,0,0,0,9.528069732289119,0.18305939164213386,0,,website/docs/source/layouts/layout.erb|website/www/source/layouts/layout.erb,0,0.0,0,0,false,Use a dynamic year on template layouts Refs: https://twittercom/sebbo/status/524839571364646912,,1165,0.7399141630901288,0.08264462809917356,26900,510.2602230483272,43.04832713754647,79.62825278810409,6837,31,1735,64,travis,sethvargo,mitchellh,false,mitchellh,5,0.6,479,65,1493,true,false,true,false,5,28,6,1,16,0,640
5005563,mitchellh/vagrant,ruby,4675,1413883473,1414091372,1414091372,3464,3464,commits_in_master,false,false,false,152,2,2,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,25,0,25,0,8.626877234984322,0.16573177531970826,7,sneal@sneal.net,plugins/kernel_v2/config/vm.rb|plugins/synced_folders/smb/synced_folder.rb,5,0.021739130434782608,0,0,false,use smb configured credentials from vagrantfile if available The current SMB implementation will prompt the user for credentials if any synced folder entry lacks a username or password setting Further if a used does not explicitly create a synced folder with a /vagrant guest path one will automatically be created (without credentials) This introduces at least two problem scenarios:1 A user adds a synced folder for the current path but not named /vagrant and provides smb credentials:configvmsynced_folder  /chocolateypackages smb_username: Matt smb_password: hot_mama2 A user adds synced folders for other paths all with credentials:configvmsynced_folder /dog /a_folder_for_dogs smb_username: Matt smb_password: hot_mamaconfigvmsynced_folder /ham_sandwich /a_folder_for_ham_sandwiches smb_username: Matt smb_password: hot_mamaIn both scenarios the user will be prompted for smb credentials This PR would:* eliminate the duplicate /vagrant folder in the first scenario* reuse the Matt credentials for the /vagrant folder in the second scenario,,1164,0.7396907216494846,0.0391304347826087,26859,511.0018988048699,43.11403998659667,79.71257306675602,6821,31,1734,64,travis,mwrock,mitchellh,false,mitchellh,8,0.75,123,3,1324,true,false,false,false,2,15,6,0,4,0,3464
4999691,mitchellh/vagrant,ruby,4671,1413838080,1414091521,1414091521,4224,4224,commits_in_master,false,false,false,57,1,1,0,2,0,2,0,1,0,0,5,5,5,0,0,0,0,5,5,5,0,0,68,11,68,11,22.478353633635574,0.43183383192926694,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|test/unit/plugins/providers/virtualbox/support/shared/virtualbox_driver_version_4_x_examples.rb,1,0.0,0,0,false,Fix #4658 Bad NFS exports file on OS X & BSD hosts For FreeBSD guests Virtualbox can sometimes report the private networkinterface IP address as 0000  This will cause an invalid NFSexports file to be generated for FreeBSD and OS X hostsFixed by not allowing Virtualbox to report a guest IP address of0000,,1163,0.7394668959587274,0.0391304347826087,26859,511.0018988048699,43.11403998659667,79.71257306675602,6817,31,1733,63,travis,jramnani,mitchellh,false,mitchellh,0,0,13,6,2031,false,false,false,false,0,1,0,0,0,0,4223
4998392,mitchellh/vagrant,ruby,4670,1413831537,1414091673,1414091673,4335,4335,commits_in_master,false,false,false,91,2,2,0,4,0,4,0,3,0,0,6,6,6,0,0,0,0,6,6,6,0,0,39,62,39,62,35.69340985413892,0.6857095587672591,15,vlajos@gmail.com,lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/action/builtin/ssh_exec.rb|lib/vagrant/action/builtin/ssh_run.rb|lib/vagrant/machine.rb|plugins/communicators/ssh/communicator.rb|test/unit/vagrant/action/builtin/ssh_exec_test.rb|test/unit/vagrant/machine_test.rb,9,0.017391304347826087,2,3,false,Check SSH key permissions in machinessh_info @mitchellh while working on #4652 I thought that it might be better to apply check_key_permissions in single place That will avoid duplication and ensure that this best effort is always appliedNotes:- With this change something like vagrant ssh-config will now also fix the private key permissions (if needed)- I am totally unsure if machinessh_info can be memoized (as proposed in 89a4a29) Is there some VM provider that can change these SSH information during the execution of the same Vagrant command//cc @julienvey,,1162,0.7392426850258176,0.0391304347826087,26859,511.0018988048699,43.11403998659667,79.71257306675602,6817,31,1733,62,travis,gildegoma,mitchellh,false,mitchellh,15,0.9333333333333333,46,127,1471,false,true,true,false,2,4,0,2,0,0,78
5829050,mitchellh/vagrant,ruby,4655,1413570231,1413570245,1413570245,0,0,commits_in_master,false,false,true,1,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,70,0,70,0,23.195489721843696,0.44561304125852463,0,,website/docs/source/v2/cli/up.html.md|website/docs/source/v2/vmware/usage.html.md|website/docs/Gemfile|website/docs/Gemfile.lock|website/docs/source/v2/virtualbox/usage.html.md,0,0.0,0,0,true,4653  ,,1159,0.7394305435720449,0.017467248908296942,26856,511.058981233244,43.11885612153709,79.72147750968126,6802,31,1730,62,travis,sethvargo,sethvargo,true,sethvargo,3,0.3333333333333333,479,65,1488,true,false,false,false,3,19,3,0,13,0,-1
4974524,mitchellh/vagrant,ruby,4653,1413570271,1413941760,1413941760,6191,6191,commits_in_master,false,false,true,39,6,5,4,11,0,15,0,3,0,0,5,5,5,0,0,0,0,5,5,5,0,0,70,0,74,0,23.195489721843696,0.44561304125852463,0,,website/docs/source/v2/cli/up.html.md|website/docs/source/v2/vmware/usage.html.md|website/docs/Gemfile|website/docs/Gemfile.lock|website/docs/source/v2/virtualbox/usage.html.md,0,0.0,1,2,true,VMWare does not support --parallel I am not sure if this is a bug or just undocumented but neither VMWare Fusion or VMWare workstation support the --parallel flag We have received a few support tickets around this /cc @mitchellh,,1160,0.7396551724137931,0.017467248908296942,26856,511.058981233244,43.11885612153709,79.72147750968126,6802,31,1730,66,travis,sethvargo,mitchellh,false,mitchellh,4,0.5,479,65,1488,true,false,true,false,3,19,5,0,13,0,-32
5036149,mitchellh/vagrant,ruby,4650,1413482189,1414097547,1414097547,10255,10255,commit_sha_in_comments,false,false,false,30,1,1,0,4,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.597691271735244,0.08832713665175712,0,,lib/vagrant.rb,0,0.0,0,1,false,check for plugin versions hey guys I find it necessary to confirm that specific versions of a plugin are installed for my users so I monkey patched this locally Thoughts,,1157,0.7398444252376837,0.017937219730941704,26856,511.058981233244,43.11885612153709,79.72147750968126,6796,31,1729,62,travis,orenmazor,mitchellh,false,mitchellh,0,0,40,15,1506,false,false,false,false,0,0,0,0,0,0,10161
4957281,mitchellh/vagrant,ruby,4646,1413406730,,1413448950,703,,unknown,false,false,false,22,1,1,0,5,0,5,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.950349543963335,0.07589092946211819,0,,plugins/guests/redhat/cap/rsync.rb,0,0.0,0,5,false,Avoid running yum if rsync is already present in the guest Fairly straight forwardAssuming _type_ should work in the sudo communicate,,1156,0.740484429065744,0.018018018018018018,26856,511.058981233244,43.11885612153709,79.72147750968126,6793,31,1728,60,travis,purpleidea,purpleidea,true,,2,1.0,113,97,1836,true,false,false,false,2,11,3,0,0,0,225
5036138,mitchellh/vagrant,ruby,4641,1413318531,1414091901,1414091901,12889,12889,commits_in_master,false,false,false,50,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.011926861283919,0.07707390322006932,0,,plugins/guests/linux/cap/mount_smb_shared_folder.rb,0,0.0,0,0,false,Provide output on raising LinuxMountFailed Need to provide output to LinuxMountFailed or else failure results in a horrible big stack talk about missing interpolation and no useful errorIve copied the code from MountVirtualBoxSharedFolder into MountSMBSharedFolder  I now see a (slightly) more helpful error when failing to mount my share,,1155,0.7402597402597403,0.018018018018018018,26856,511.058981233244,43.11885612153709,79.72147750968126,6784,31,1727,62,travis,dimbleby,mitchellh,false,mitchellh,0,0,1,0,1207,true,false,false,false,0,0,0,0,1,0,12889
4984295,mitchellh/vagrant,ruby,4638,1413303323,1413684489,1413684489,6352,6352,github,false,false,false,111,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.540962464285337,0.08723730855509414,3,nitzan@photomania.net,lib/vagrant/util/ssh.rb,3,0.013574660633484163,0,0,false,Allow SSH LogLevel to be overridden in VagrantUtilSSHexec Fix #4637In SSHexec from [sshrb](https://githubcom/julienvey/vagrant/blob/58b1bc317f9fa237a05e3024a54e1fb823523394/lib/vagrant/util/sshrb#L66) the LogLevel is set to FATAL by defaultThis class can be used in many actions such as [ssh_runrb](https://githubcom/julienvey/vagrant/blob/58b1bc317f9fa237a05e3024a54e1fb823523394/lib/vagrant/action/builtin/ssh_runrb) or [ssh_execrb](https://githubcom/julienvey/vagrant/blob/58b1bc317f9fa237a05e3024a54e1fb823523394/lib/vagrant/action/builtin/ssh_runrb) but can also be called from custom providers actionsThere are some cases where the SSH command will fail silently for instance in a network unreachable error I suggest to keep the LogLevel default value to FATAL but to allow custom providers or other plugins to override this option Doing this it will not change vagrant default behaviour but will allow plugins to adjust the LogLevel at their will and provide more meaningful information when necessary,,1154,0.7400346620450606,0.01809954751131222,26856,511.058981233244,43.11885612153709,79.72147750968126,6782,30,1727,63,travis,julienvey,julienvey,true,julienvey,0,0,34,18,1448,false,false,false,false,0,1,0,0,0,0,6352
4936041,mitchellh/vagrant,ruby,4632,1413219953,1413232015,1413232017,201,201,github,false,false,false,30,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.380326001913391,0.08415129121559736,0,,website/docs/source/v2/share/http.html.md,0,0.0,0,0,false,docs - http sharing: fix typo I saw https://githubcom/mitchellh/vagrant/blob/master/CONTRIBUTINGmd but decided that creating an issue would be unnecessary bureaucracy for fixing typo - I hope youre ok with this :),,1153,0.7398091934084996,0.01809954751131222,26856,511.058981233244,43.11885612153709,79.72147750968126,6780,30,1726,59,travis,janek-warchol,tmatilai,false,tmatilai,0,0,17,23,995,false,false,false,false,0,0,0,0,0,0,200
4923318,mitchellh/vagrant,ruby,4625,1413053940,1413054128,1413054128,3,3,github,false,false,false,23,1,1,0,1,0,1,0,3,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.411228513771299,0.08474324051501254,0,,.travis.yml,0,0.0,0,3,false,Force compatible Bundler version in Travis Uninstall all other Bunlder versions and install one that fulfills our requirements ( 170)Refs: #4617 #3587,,1152,0.7395833333333334,0.009216589861751152,26856,511.058981233244,43.11885612153709,79.72147750968126,6774,29,1724,58,travis,tmatilai,tmatilai,true,tmatilai,22,0.9545454545454546,47,41,1991,false,true,false,false,1,4,0,0,0,0,3
5036156,mitchellh/vagrant,ruby,4621,1412975763,1414092010,1414092010,18604,18604,commits_in_master,false,false,false,55,3,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,13,0,4.646184467320544,0.08925693297503777,0,,plugins/guests/solaris11/cap/configure_networks.rb,0,0.0,0,0,true,Solving #2905 - Restarting Solaris 11 boxes with static ip addresses Adding condition for the ipadm command on static ip addressesThis will enable restarting solaris 11 vagrant boxes with static ip addressesThe problem was reported in #2905 The fix in #3793 did only solve the problem for dhcp not for static ip addresses,,1151,0.739357080799305,0.009302325581395349,26856,511.058981233244,43.11885612153709,79.72147750968126,6769,29,1723,60,travis,jschwarze,mitchellh,false,mitchellh,0,0,0,0,386,false,false,false,false,0,1,0,0,0,0,18603
5036173,mitchellh/vagrant,ruby,4619,1412967786,1414092081,1414092081,18738,18738,commits_in_master,false,false,false,25,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,29,0,29,0,4.277626999880299,0.08217664819509769,0,,plugins/synced_folders/nfs/synced_folder.rb,0,0.0,0,0,true,Dont update the NFS exports file [GH-4148] Wrapped the NFS export modification process with a check for when there are not exports to be modified,,1150,0.7391304347826086,0.009345794392523364,26856,511.058981233244,43.11885612153709,79.72147750968126,6769,29,1723,60,travis,dlundgren,mitchellh,false,mitchellh,0,0,6,5,1003,true,false,false,false,1,0,0,0,1,0,4266
4917377,mitchellh/vagrant,ruby,4617,1412958683,,1412967923,154,,unknown,false,false,true,10,1,1,0,4,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.706018067171639,0.09040638445487631,2,mitchell.hashimoto@gmail.com,vagrant.gemspec,2,0.009389671361502348,0,0,true,Relax the constraint on bundler to  150 Refs #3587,,1149,0.7397737162750218,0.009389671361502348,26856,511.058981233244,43.11885612153709,79.72147750968126,6768,28,1723,57,travis,sethvargo,mitchellh,false,,2,0.5,479,65,1481,true,false,true,false,2,12,2,0,6,0,4
5036241,mitchellh/vagrant,ruby,4616,1412955687,1414092392,1414092392,18945,18945,commits_in_master,false,true,false,79,2,1,0,1,0,1,0,5,0,0,3,3,3,0,0,0,0,3,3,3,0,0,24,0,24,0,13.002235666426223,0.24978338367032904,1,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/handle_forwarded_port_collisions.rb|plugins/providers/virtualbox/action/prepare_forwarded_port_collision_params.rb|plugins/providers/virtualbox/driver/version_4_3.rb,1,0.0,0,0,true,Consider the host_ip value when handling port collisions In response to issue #4608 this fix allows vagrant to handle forwarding port collisions by considering the :host_ip flag as well This allows vagrant to bind to multiple interfaces on host machine (or loopbacks) if there are anyFor example:guest1 forwards port 80 to 12711253:80 on hostguest2 forwards port 80 to 12711254:80 on hostPreviously vagrant was not considering that host can have multiple interfaces to forwards ports to,,1148,0.7395470383275261,0.009433962264150943,26856,511.058981233244,43.11885612153709,79.72147750968126,6768,28,1723,58,travis,crypt1d,mitchellh,false,mitchellh,0,0,1,0,289,false,false,false,false,0,1,0,0,0,0,18945
4921221,mitchellh/vagrant,ruby,4615,1412947664,1413684801,1413684801,12285,12285,commits_in_master,false,false,false,41,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.333211154975903,0.08324446443027693,2,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/provisioner.rb,2,0.009433962264150943,0,0,true,Check whether Salt bootstrap script exists before deleting it GH-4614 A small fix for preventing Salt provisioning errors via WinRM when trying to delete a missing fileTested to make sure it doesnt break Linux minions provisioning via SSHIssue #4614,,1147,0.7393199651264167,0.009433962264150943,26856,511.058981233244,43.11885612153709,79.72147750968126,6768,28,1723,62,travis,styro,mitchellh,false,mitchellh,0,0,2,2,1673,false,true,false,false,1,0,0,0,0,0,907
5036318,mitchellh/vagrant,ruby,4607,1412817904,,1414092721,21246,,unknown,false,false,false,18,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,3.5563069336025874,0.06831951073916084,1,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/provisioner.rb,1,0.0047169811320754715,0,0,false,Fixed #4606 by modifying the output statement Modifying the shell provisioner output statement to include the inlined command,,1146,0.7399650959860384,0.009433962264150943,26856,511.058981233244,43.11885612153709,79.72147750968126,6764,28,1721,56,travis,danielsiwiec,mitchellh,false,,0,0,1,3,946,false,false,false,false,0,0,0,0,0,0,21246
5036211,mitchellh/vagrant,ruby,4605,1412809320,1414092255,1414092255,21382,21382,commits_in_master,false,false,false,49,1,1,0,1,0,1,0,1,0,0,5,5,3,2,0,0,0,5,5,3,2,0,14,0,14,0,25.9932676930044,0.4993515364263398,1,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb|templates/commands/init/Vagrantfile.min.erb|website/docs/Vagrantfile|website/docs/source/v2/vagrantfile/version.html.md|website/www/Vagrantfile,1,0.0,0,0,false,Only define VAGRANTFILE_API_VERSION if not yet defined Sometime VAGRANTFILE_API_VERSION is already defined in $HOME/vagrantd/VagrantfileThis will result in the following issue when trying to define VAGRANTFILE_API_VERSIONagain in a Vagrantfile of a box---snip---/Vagrantfile:5: warning: already initialized constant VAGRANTFILE_API_VERSION$HOME/vagrantd/Vagrantfile:1: warning: previous definition of VAGRANTFILE_API_VERSION was here---snap---,,1145,0.7397379912663755,0.009345794392523364,26856,511.058981233244,43.11885612153709,79.72147750968126,6763,28,1721,57,travis,berendt,mitchellh,false,mitchellh,13,0.6923076923076923,22,8,1471,true,false,true,false,0,1,0,0,1,0,21382
4896695,mitchellh/vagrant,ruby,4601,1412759760,1412794663,1412794663,581,581,commits_in_master,false,false,false,79,1,1,0,2,0,2,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,13,0,13,0,4.7806836344237045,0.09184098847850224,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/public_network.html.md,1,0.0047169811320754715,0,1,false,Add security note to documentation for public networks This pull request adds some clarity around security for boxes on a shared network Id configured configured my boxes to be bridged onto the local (firewalled) network without realising how insecure Vagrant boxes are by default  I see the details are present in the the box format documentation but I had never read these until just now this PR ensures the box format documentation is clearly linked from the networking documentation,,1144,0.7395104895104895,0.0047169811320754715,26856,511.058981233244,43.11885612153709,79.72147750968126,6760,27,1721,52,travis,davidjb,sethvargo,false,sethvargo,0,0,17,0,1141,false,false,false,false,0,0,0,0,0,0,570
4889223,mitchellh/vagrant,ruby,4597,1412703864,,1414092880,23150,,unknown,false,false,false,17,1,1,0,7,0,7,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.337619795560575,0.083392382846383,0,,plugins/provisioners/docker/cap/debian/docker_install.rb,0,0.0,0,4,false,Fixed #4569 by adding redirect support Installer now mimics behavior set forth in shell scrip at http://getdockercom,,1143,0.7401574803149606,0.004694835680751174,26826,511.0340714232461,43.12979944829643,79.77335420860359,6753,27,1720,55,travis,dannykansas,mitchellh,false,,0,0,15,14,602,false,false,false,false,1,6,0,0,0,0,4
4880064,mitchellh/vagrant,ruby,4596,1412630594,1414092777,1414092777,24369,24369,commits_in_master,false,false,false,114,4,3,0,4,1,5,1,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,8,0,12.963187039216283,0.24922217885255818,0,,plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/debian/docker_install.rb,0,0.0,0,1,false,Make curl follow dockerio redirect Vagrant if failing while trying to add docker gpg  default: Installing Docker (latest) onto machineThe following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failedcurl http://getdockerio/gpg | apt-key add -Stdout from the command:Stderr from the command:stdin: is not a tty  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                 Dload  Upload   Total   Spent    Left  Speed100   184  100   184    0     0     71      0  0:00:02  0:00:02 --:--:-- 18400gpg: no valid OpenPGP data found$ curl http://getdockerio/gpghtmlheadtitle301 Moved Permanently/title/headbody bgcolorwhitecenterh1301 Moved Permanently/h1/centerhrcenternginx/162/center/body/htmlFixed #4569,,1142,0.7399299474605955,0.0047169811320754715,26826,511.0340714232461,43.12979944829643,79.77335420860359,6748,27,1719,55,travis,miguel250,mitchellh,false,mitchellh,0,0,25,27,1472,true,true,false,false,1,0,0,0,1,0,23
4861851,mitchellh/vagrant,ruby,4588,1412393622,,1414093017,28323,,unknown,false,false,true,21,2,2,0,1,0,1,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,465,0,465,0,18.091978691243867,0.3478251401870112,0,,website/www/Gemfile|website/www/Gemfile.lock|website/docs/Gemfile|website/docs/Gemfile.lock,0,0.0,0,0,true,Update docs/www to latest middleman This is part of a cross-project effort to get everyone on the same version of middleman,,1141,0.740578439964943,0.004739336492890996,26826,511.0340714232461,43.12979944829643,79.77335420860359,6727,26,1716,53,travis,sethvargo,sethvargo,true,,1,1.0,479,65,1474,true,false,false,false,2,3,0,0,4,0,28323
5036410,mitchellh/vagrant,ruby,4573,1412026784,1414093174,1414093174,34439,34439,commits_in_master,false,false,false,39,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.258360942547309,0.08186860138881677,0,,lib/vagrant/action/builtin/handle_box.rb,0,0.0,0,0,false,configvmbox_server_url setting is ignored https://githubcom/mitchellh/vagrant/pull/4282 introduced new setting to set alternate vagrant cloud server URLs but it doesnt work actually: the value is ignored and env[:box_server_url] in [box_addrb](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/action/builtin/box_addrb#L56) is always emptyThis PR helps to process the value correctly,,1140,0.7403508771929824,0.004651162790697674,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,27,1712,52,travis,mkuzmin,mitchellh,false,mitchellh,1,0.0,20,9,1272,true,false,true,false,0,9,0,0,1,0,34439
5036489,mitchellh/vagrant,ruby,4571,1412021613,1414093515,1414093515,34531,34531,commits_in_master,false,false,false,379,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,6,4,6,8.426923559484937,0.16201079596902598,8,rclanan@utopianconcept.com,plugins/providers/docker/action/create.rb|test/unit/plugins/providers/docker/driver_test.rb,6,0.028037383177570093,0,0,false,providers/docker: allow multiple links to same backend (different aliases) # The issueThe docker provider silently discards docker run --link definitions when the backend is linked multiple times under different aliases eg docker run --link backend:alias1 --link backend:alias2This is an uncommon case but I have a container that expects the ALIAS1_* and ALIAS2_* environment variables to be present and will not boot the container if they are notThat container runs just fine if I assemble the docker run command line by hand but it wont if I use a Vagrantfile: the container seems to boot but if I look carefully only the last defined alias to the backend is actually created## How to reproduceCreate a Vagrantfile with the following content:# Force the provider so we dont have to type in --providerdocker all the timeENV[VAGRANT_DEFAULT_PROVIDER]  dockerVagrantconfigure(2) do |config|  configvmprovider :docker do |docker|    dockerimage      phusion/baseimage:0913    dockercmd        %w[/sbin/my_init --enable-insecure-key]    # backend links    dockerlink( backend:b1 )    dockerlink( backend:b2 )  end  # workaround https://githubcom/mitchellh/vagrant/issues/3799  configsshusername  root  configsshprivate_key_path  insecure-phusion-key  configsshport  22endTo be able to ssh into the container download and save the following key into the same directory as the above Vagrantfile:ssh$ wget -O insecure-phusion-key https://githubcom/phusion/baseimage-docker/raw/master/image/insecure_keyThen:$ docker run -d --name backend busybox:ubuntu-1404 top # cheapest running container possible$ vagrant upThe output from vagrant up looks like this:shBringing machine default up with docker provider default: Creating the container    default:   Name: vagrant-docker-link-bug_default_1412005293    default:  Image: phusion/baseimage:0913    default:    Cmd: /sbin/my_init --enable-insecure-key    default: Volume: /home/julien/RubymineProjects/vagrant-docker-link-bug:/vagrant    default:   Link: backend:b2    default:      default: Container created: e1289e9e178b51cb default: Starting containerNotice that there is a line for Link: backend:b2 but no line for Link: backend:b1Sshing into the container we can see that no link environment variables for B1 is present either:sh$ vagrant ssh -c env | grep ^BB2_NAME/vagrant-docker-link-bug_default_1412008835/b2# Proposed fixThis PR fixes the issue by storing the links passed to docker run in an Array of [backend alias] pairs rather than a Hash[backend: alias] which wont allow for multiple aliases to the same backendAfter applying fix the above ssh command would look like:sh$ vagrant ssh -c env | grep ^BB2_NAME/vagrant-docker-link-bug_default_1412010763/b2B1_NAME/vagrant-docker-link-bug_default_1412010763/b1,,1139,0.7401229148375769,0.004672897196261682,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,26,1712,51,travis,jperville,mitchellh,false,mitchellh,0,0,6,1,1210,true,false,false,false,0,0,0,0,1,0,34531
4791698,mitchellh/vagrant,ruby,4565,1411744503,1414093616,1414093616,39151,39151,commits_in_master,false,false,false,40,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.552405862130003,0.08752172924152647,0,,plugins/guests/ubuntu/guest.rb,0,0.0,0,0,true,A more reliable way to detect Ubuntu via lsb_release The default /etc/issue might have been changed by the administrator and not contain the string Ubuntu anymore The tool lsb_release is the recommended tool from the Linux Standards Base (LSB) project,,1138,0.7398945518453427,0.004694835680751174,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,25,1709,50,travis,dup2,mitchellh,false,mitchellh,0,0,2,0,1843,false,false,false,false,0,0,0,0,0,0,3
4788108,mitchellh/vagrant,ruby,4562,1411704663,,1414093588,39815,,unknown,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.65050193550612,0.08940766345602648,0,,website/docs/source/layouts/layout.erb,0,0.0,0,1,false,Update vagrant docs footer copyright to 2014 ,,1137,0.7405452946350044,0.004694835680751174,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,25,1708,50,travis,rogeriopradoj,mitchellh,false,,6,0.5,251,298,1438,false,true,true,false,0,0,0,0,0,0,39815
4777919,mitchellh/vagrant,ruby,4557,1411617660,,1447106088,591473,,unknown,false,false,false,15,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,33,5,33,8.688546605577423,0.16704060370397952,0,,lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/plugin/v2/command_test.rb,0,0.0,0,1,false,Always call @enmachine_names to check if there is a machine with a name  Fixes #4556,,1136,0.7411971830985915,0.004694835680751174,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,25,1707,166,travis,ilucker,sethvargo,false,,0,0,5,5,1283,false,false,false,false,0,1,0,0,1,0,358597
4765136,mitchellh/vagrant,ruby,4548,1411513004,1414093852,1414093852,43014,43014,commits_in_master,false,false,false,31,1,1,0,2,0,2,0,1,0,0,4,4,2,0,2,0,0,4,4,2,0,2,19,0,19,0,17.702410107631707,0.3403354580917124,14,mitchell.hashimoto@gmail.com,.gitignore|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|templates/locales/en.yml,11,0.009302325581395349,0,0,false,Update powershell provisioning to fix #4547 Update shell provisioner for powershell to add shell_args saner defaults and more useful detail in logging output Add Eclipse project file to gitignore IDE section,,1135,0.7409691629955947,0.004651162790697674,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,25,1706,48,travis,ebelew,mitchellh,false,mitchellh,0,0,0,0,558,false,false,false,false,0,0,0,0,0,0,43014
4764484,mitchellh/vagrant,ruby,4545,1411508387,1414052327,1414052327,42399,42399,commits_in_master,false,false,false,2,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.553202595787106,0.08753702359169284,0,,website/docs/source/v2/provisioning/ansible.html.md,0,0.0,0,0,false,fix typos ,,1134,0.7407407407407407,0.004651162790697674,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,25,1706,64,travis,mrwhelan,mitchellh,false,mitchellh,0,0,1,11,921,false,false,false,false,0,0,0,0,0,0,20146
4744384,mitchellh/vagrant,ruby,4535,1411331113,1414094113,1414094113,46050,46050,commits_in_master,false,false,false,31,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.329802021917343,0.08324206396847528,0,,plugins/guests/darwin/cap/change_host_name.rb,0,0.0,0,0,false,Set ComputerName and LocalHostName on darwin guests This sets the bonjour host name for darwin guests to the same valueas configvmhostname It also sets the user-friendly name for thesystem,,1133,0.7405119152691968,0.004651162790697674,26826,511.0340714232461,43.12979944829643,79.77335420860359,6686,25,1704,46,travis,plu,mitchellh,false,mitchellh,0,0,182,524,2153,false,true,false,false,0,0,0,0,0,0,46049
4743269,mitchellh/vagrant,ruby,4534,1411316327,1414094172,1414094172,46297,46297,commits_in_master,false,false,false,29,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,3.911252504266323,0.0751952928815025,0,,plugins/hosts/windows/cap/rdp.rb,0,0.0,0,0,false,hosts/windows: Dont mount all drives into the RDP session This setting mounts all available drives (C:\ and mapped networkdrives) into the RDP session This shouldnt be the default,,1132,0.7402826855123675,0.004651162790697674,26826,511.0340714232461,43.12979944829643,79.77335420860359,6683,25,1704,45,travis,matgnt,mitchellh,false,mitchellh,0,0,0,0,1688,false,false,false,false,0,0,0,0,0,0,46297
4738834,mitchellh/vagrant,ruby,4527,1411238659,1414094233,1414094233,47592,47592,commits_in_master,false,false,false,48,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,31,0,31,0,4.093997357174841,0.07870863105694734,3,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb,3,0.013888888888888888,0,0,false,Fix #4465 update /etc/hosts on rhel 7 and derivatives (CentOS) the previous fix for #4465 assumed that the NetworkManager takes care of updating /etc/hosts withthe new hostname but testing shows it doesnt This change ensures that the change is always addedto /etc/hosts when the name changes,,1131,0.7400530503978779,0.009259259259259259,26826,511.0340714232461,43.12979944829643,79.77335420860359,6679,25,1703,44,travis,Xylakant,mitchellh,false,mitchellh,0,0,25,5,1524,false,false,false,false,2,3,0,0,0,0,47592
4731846,mitchellh/vagrant,ruby,4524,1411158855,1414050684,1414050684,48197,48197,merged_in_comments,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.360658527521867,0.08383529183440849,5,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_add.rb,5,0.023148148148148147,0,0,true,This fix is for issue #4494 This fix is for issue #4494,,1130,0.7398230088495575,0.009259259259259259,26826,511.0340714232461,43.12979944829643,79.77335420860359,6673,25,1702,64,travis,kbohnenberger,mitchellh,false,mitchellh,0,0,0,0,386,false,false,false,false,1,1,0,0,0,0,48197
4591789,mitchellh/vagrant,ruby,4518,1411064214,1414094622,1414094622,50506,50506,commits_in_master,false,false,false,2,1,1,1,2,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.5332033543154955,0.08715253069121526,0,,plugins/guests/freebsd/cap/mount_nfs_folder.rb,0,0.0,0,1,false,Allow nfs ,,1129,0.7395925597874224,0.009259259259259259,26826,511.0340714232461,43.12979944829643,79.77335420860359,6666,25,1701,42,travis,lunetics,mitchellh,false,mitchellh,0,0,28,13,1777,false,false,false,false,0,0,0,0,0,0,1294
4706600,mitchellh/vagrant,ruby,4510,1410928496,1414094816,1414094816,52772,52772,commits_in_master,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.380326001913391,0.08421340638863299,0,,website/docs/source/v2/share/http.html.md,0,0.0,0,0,false,Fix typo in HTTP sharing docs ,,1128,0.7393617021276596,0.009216589861751152,26826,511.0340714232461,43.12979944829643,79.77335420860359,6659,25,1699,41,travis,chriskuehl,mitchellh,false,mitchellh,0,0,30,85,1284,false,false,false,false,0,0,0,0,0,0,52771
4702006,mitchellh/vagrant,ruby,4509,1410893272,1410893823,1410893823,9,9,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.383789736006909,0.08427986001431852,0,,website/docs/source/v2/networking/forwarded_ports.html.md,0,0.0,0,0,false,fix forwared typo ,,1127,0.7391304347826086,0.009302325581395349,26826,511.0340714232461,43.12979944829643,79.77335420860359,6658,24,1699,37,travis,aspiers,aspiers,true,aspiers,9,0.8888888888888888,66,35,1903,false,true,false,false,1,12,0,0,0,0,9
4676424,mitchellh/vagrant,ruby,4499,1410571922,1414094953,1414094953,58717,58717,commits_in_master,false,false,false,36,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.130534704258782,0.07948341869995587,3,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/nfs_client.rb,3,0.014150943396226415,0,0,true,Fix NFSClient plugin for Redhat / Centos 7 guests Fixes #4476All unit tests pass Created new Centos 7 box and verified NFS client was installed without error The NFS mount itself was also immediately available,,1126,0.738898756660746,0.009433962264150943,26826,511.0340714232461,43.12979944829643,79.77335420860359,6637,23,1695,40,travis,sprin,mitchellh,false,mitchellh,0,0,9,7,936,false,false,false,false,1,0,0,0,0,0,17121
4667424,mitchellh/vagrant,ruby,4496,1410489087,,1436487337,433304,,unknown,false,false,false,70,2,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.292646363004925,0.08260291527142367,11,sneal@sneal.net,plugins/communicators/ssh/communicator.rb,11,0.05045871559633028,0,1,false,Restore ability to manage boxes with older versions of the sudo package This reverts the change introduced in 9cd9e6e55d802553fa90e63d966b302006b45de5 (sudo -E to preserve env)  It seems like the -E option would be useful for most instances but since you cannot guarantee that all versions of sudo support this flag this needs to be reverted  I might suggest that you refactor and give us a config option to enable/disable this behavior,,1125,0.7395555555555555,0.009174311926605505,26826,511.0340714232461,43.12979944829643,79.77335420860359,6632,23,1694,87,travis,donckers,mitchellh,false,,0,0,0,0,860,false,false,false,false,0,0,0,0,0,1,377276
4660241,mitchellh/vagrant,ruby,4492,1410436760,1414095089,1414095089,60972,60972,commits_in_master,false,false,false,68,7,5,1,4,0,5,0,4,2,0,12,14,14,0,0,2,0,12,14,14,0,0,124,0,135,0,61.740986715280194,1.188074922353098,2,mitchell.hashimoto@gmail.com,plugins/guests/fedora/cap/network_scripts_dir.rb|plugins/guests/suse/cap/change_host_name.rb|plugins/guests/suse/cap/configure_networks.rb|plugins/guests/suse/cap/halt.rb|plugins/guests/suse/cap/network_scripts_dir.rb|plugins/guests/suse/cap/nfs_client.rb|plugins/guests/suse/cap/rsync.rb|plugins/guests/suse/guest.rb|plugins/guests/suse/plugin.rb|plugins/hosts/suse/cap/nfs.rb|plugins/hosts/suse/host.rb|plugins/hosts/suse/plugin.rb|plugins/hosts/suse/cap/nfs.rb|plugins/hosts/suse/host.rb|plugins/hosts/suse/plugin.rb|plugins/provisioners/cfengine/cap/suse/cfengine_install.rb|plugins/provisioners/cfengine/plugin.rb,2,0.0,0,0,false,SUSE naming and capability fixes I have corrected some SUSE spellings its not called SuSE anymore so I replaced all places with SUSEto get a minimal openSUSE/SLES box working I have fixed some capabilities as they have been based on redhat what does not work of course as SUSE do not provide yum for installing packages If you have some improvements Im totally open for it :),,1124,0.7393238434163701,0.009174311926605505,26826,511.0340714232461,43.12979944829643,79.77335420860359,6623,23,1694,39,travis,tboerger,mitchellh,false,mitchellh,0,0,21,1,1753,true,false,false,false,0,0,0,0,3,0,142
4649425,mitchellh/vagrant,ruby,4484,1410344209,1444165975,1444165975,563696,563696,commits_in_master,false,false,false,155,8,1,7,21,0,28,0,8,2,0,6,12,7,0,1,2,0,10,12,10,0,1,168,0,295,0,34.87931520797856,0.6711787730012518,17,sneal@sneal.net,lib/vagrant/errors.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/create_clone.rb|plugins/providers/virtualbox/action/import_master.rb|plugins/providers/virtualbox/config.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_4_3.rb|templates/locales/en.yml,12,0.0,0,4,false,Add support for linked clones for VirtualBox This allow creation of linked clones using the VirtualBox 43 provider:configvmprovider virtualbox do |vb|    vbuse_linked_clone  trueendInstead of creating a fresh machine via importing the ovf file a master VM is created once (via ovf import) and the clones are created based on this master VM The id of the master VM is stored in a file master_id in the directory of the according boxThere are a few bits missing like preventing concurrent creation of master VMs for the same box as well as maintaining the lifetime of the master VM (when shall it be destroyed and who is responsible for it)Also the code might need a few adaptions since this is the first time I wrote some RubyHowever I thought this might be a good starting point for a discussion about how this feature could be added to Vagrant,,1123,0.7390917186108638,0.009302325581395349,26826,511.0340714232461,43.12979944829643,79.77335420860359,6611,22,1693,131,travis,mpoeter,mitchellh,false,mitchellh,0,0,0,0,6,false,false,false,false,0,0,0,0,0,0,38987
4633931,mitchellh/vagrant,ruby,4475,1410203065,,1414095304,64870,,unknown,false,false,false,139,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,8,4,8,8.989429045400495,0.1729825806698627,0,,plugins/synced_folders/rsync/helper.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb,0,0.0,1,0,false,Shared folder sync hook In gh-4394 I proposed a general sync action hook that would be triggeredwhenever folder synchronization occurred Ive been able to implement the hookfor the rsync mechanism but Im not sure how to proceed with the nfs andsmb mechanismIdeally I would want to implement this at some higher level (instead ofextending each mechanism explicitly) Based on my current understandingthough it looks like Vagrant isnt generally aware of when sycnhronizationoccurs The more that I look at the code for nfs the more I think thatVagrant may not be aware of synchronization for that mechansim at all If thisis the case then the proposed sync hook (triggered regardless ofsynchronization mechanism) will not be possible@mitchellh Would you mind giving me some advice on where to go from here,,1122,0.7397504456327986,0.009259259259259259,26826,511.0340714232461,43.12979944829643,79.77335420860359,6597,22,1691,38,travis,jugglinmike,mitchellh,false,,0,0,171,5,1270,false,false,false,false,0,1,0,0,0,0,64870
4629487,mitchellh/vagrant,ruby,4473,1410159659,1447993009,1447993009,630555,630555,commits_in_master,false,false,false,183,1,1,0,9,0,9,0,5,1,0,7,8,8,0,0,1,0,7,8,8,0,0,123,219,123,219,34.98739904587616,0.6732586182410112,3,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_check_outdated.rb|lib/vagrant/box.rb|plugins/commands/box/command/add.rb|plugins/commands/box/command/download_mixins.rb|plugins/commands/box/command/outdated.rb|plugins/commands/box/command/update.rb|test/unit/plugins/commands/box/command/update_test.rb|test/unit/vagrant/action/builtin/box_check_outdated_test.rb,2,0.0,0,7,false,Add HTTPS download options to box update and box outdated Vagrant::Boxload_metadata did not provide a way to specify the HTTPSdownload options that could be specified when downloading boxes(ca cert ca path client cert insecure) As a result while it waspossible to add a box whose metadata file needed to be downloaded with one ofthose options specified it was impossible to check for updates The followingchanges have been made to address the situation:1 Create a DownloadMixins module to provide the --insecure --cacert --capth   and --cert command line options to all of vagrant box add   vagrant box update and vagrant box outdated2 Extend Vagrant::Boxhas_update and Vagrant::Boxload_metadata to accept   said download options3 Extend box outdated and box update commands to pass download options   down4 Extend Vagrant::Builtin::Action::BoxCheckOutdated to honour download   options5 Options specified on the command line take precedence over options specified   in the machine configuration if any6 Fix bug in vagrant box add where client cert was being passed down using   the wrong environment key7 Unit test coverage in update_test and box_check_outdated_testResolves #4420,,1121,0.7395182872435325,0.009259259259259259,26826,511.0340714232461,43.12979944829643,79.77335420860359,6588,22,1691,85,travis,rtkrruvinskiy,mitchellh,false,mitchellh,1,0.0,0,0,559,false,false,false,false,2,1,1,0,0,0,70246
4626946,mitchellh/vagrant,ruby,4472,1410123180,1414051428,1414051428,65470,65470,commits_in_master,false,false,false,33,1,1,0,4,0,4,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.492781633018742,0.08645409595433518,2,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/provisioner.rb,2,0.009259259259259259,0,1,false,Fix statehighstate run when using salt master Remove --retcode-passthrough option when running with salt master This option is available only for masterless salt-call salt returns only binary retcode not salt callResolves #4471,,1120,0.7392857142857143,0.009259259259259259,26826,511.0340714232461,43.12979944829643,79.77335420860359,6582,22,1690,63,travis,abele,mitchellh,false,mitchellh,0,0,23,64,1667,false,false,false,false,0,0,0,0,0,0,16124
4623067,mitchellh/vagrant,ruby,4469,1410047497,1414095537,1414095537,67467,67467,commits_in_master,false,false,false,138,1,1,0,1,0,1,0,1,1,0,0,1,1,0,0,1,0,0,1,1,0,0,14,0,14,0,4.429531136288969,0.0852369736991053,0,,plugins/guests/tinycore/cap/change_host_name.rb,0,0.0,0,0,false,change_host_namerb for TinyCore Linux HelloMost TinyCore based vagrant boxes (at least boot2docker) run in memory and do no persist Im mentioning this because if you were to restart a persistent vanilla TinyCore box /opt/bootsyncsh runs after boot and has its own /usr/bin/sethostname box statement in which case we might need to make changes to the script Btw boot2dockers /opt/bootsyncsh calls /etc/rcd/hostname script for this Playing with these files would probably be messy and unacceptableHowever if the change_host_name method is run every time after the box is up (am I right about this) I dont believe we need to override any of the hostname scripts making this pull request LookingGTM(I want to try https://githubcom/phinze/landrush plugin for docker containers which uses hostname value from configvmhostname setting which warns about missing change_host_name cap)PS: Im new to vagrant,,1119,0.7390527256478999,0.009174311926605505,26826,511.0340714232461,43.12979944829643,79.77335420860359,6576,22,1689,36,travis,Gurpartap,mitchellh,false,mitchellh,0,0,74,58,2095,false,true,false,false,0,0,0,0,0,0,67467
4619411,mitchellh/vagrant,ruby,4468,1409983669,1414095602,1414095602,68532,68532,commits_in_master,false,false,false,45,2,1,0,1,2,3,0,1,0,0,3,3,1,2,0,0,0,3,3,1,2,0,46,0,54,0,13.520108481298182,0.26016593981884667,0,,plugins/guests/arch/cap/configure_networks.rb|templates/guests/arch/network_dhcp.erb|templates/guests/arch/network_static.erb,0,0.0,0,0,false,Add support for predictable network interfaces names Most of Archlinux boxes rely on adding udev rules in order to rename network interfaces (as described here : http://wwwfreedesktoporg/wiki/Software/systemd/PredictableNetworkInterfaceNames/)This fix prevents interfaces renaming need generate and enable proper config files for host-only interfacesTested with Virtuabox,,1118,0.738819320214669,0.009174311926605505,26826,511.0340714232461,43.12979944829643,79.77335420860359,6569,22,1689,35,travis,c0dxtr3m1st,mitchellh,false,mitchellh,0,0,1,0,-351,false,false,false,false,0,0,0,0,0,0,68532
4608110,mitchellh/vagrant,ruby,4463,1409875990,,1414095872,70331,,unknown,false,false,false,163,1,1,0,1,0,1,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,2,0,2,0,8.289567053473366,0.15951639848455484,14,steve@daikaiju.org.uk,plugins/providers/virtualbox/action/network.rb|templates/locales/en.yml,12,0.05581395348837209,0,1,false,Explain the most common choice when choosing which network to bridge to I recently brought up a vagrant VM which uses public_network as configvmnetwork I was then presented with this question:  default: Available bridged network interfaces:1) en0: Wi-Fi (AirPort)2) en1: Thunderbolt 13) en2: Thunderbolt 24) bridge05) p2p0    default: What interface should the network bridge toI had no idea honestly And then I Googled what to select and the answers were pretty much unanimous:https://githubcom/mitchellh/vagrant/issues/1226#issuecomment-12929493https://githubcom/mitchellh/vagrant/issues/886#issuecomment-45163341https://wwwnewmediadenvercom/blog/public-network-vagrant-vmYou select the one which is connected to the internet I thought a good idea would be to add this piece of knowledge to the question above so it would now look like this: default: Available bridged network interfaces:1) en0: Wi-Fi (AirPort)2) en1: Thunderbolt 13) en2: Thunderbolt 24) bridge05) p2p0    default: What interface should the network bridge to (Usually the internet-connected interface)Tried to keep it as short as possible,,1116,0.7401433691756273,0.009302325581395349,26826,511.0340714232461,43.12979944829643,79.77335420860359,6557,23,1687,34,travis,jure,mitchellh,false,,0,0,48,65,1611,false,false,false,false,0,0,0,0,0,0,70329
4608033,mitchellh/vagrant,ruby,4462,1409875426,1409875592,1409875592,2,2,github,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.149327046945855,0.07984637722693531,1,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/flavor.rb,1,0.004739336492890996,0,0,false,Fix failure to detect RHEL 7 flavours This PR is to resolve #4450,,1115,0.7399103139013453,0.009478672985781991,26825,510.90400745573163,43.131407269338304,79.62721342031686,6557,23,1687,28,travis,andytson,andytson,true,andytson,2,1.0,12,10,1669,true,false,false,false,6,18,6,0,3,2,2
4607360,mitchellh/vagrant,ruby,4461,1409871100,1409874210,1409874210,51,51,github,false,false,false,193,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5890256914381915,0.08830761437482926,3,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/configure_networks.rb,3,0.014354066985645933,0,0,false,Fixes #4450 add another expand_path / to get back to the guests directory When installing from master after #4438 fix was in I get the following error which this PR fixes:    vagrant up test7    Bringing machine test7 up with virtualbox provider     test7: Importing base box opscode-centos-70     test7: Matching MAC address for NAT networking     test7: Setting the name of the VM: test7     test7: Clearing any previously set network interfaces     test7: Preparing network interfaces based on configuration        test7: Adapter 1: nat        test7: Adapter 2: hostonly     test7: Forwarding ports        test7: 22  2222 (adapter 1)     test7: Running pre-boot VM customizations     test7: Booting VM     test7: Waiting for machine to boot This may take a few minutes        test7: SSH address: 127001:2222        test7: SSH username: vagrant        test7: SSH auth method: private key        test7: Warning: Connection timeout Retrying     test7: Machine booted and ready     test7: Checking for guest additions in VM     test7: Setting hostname     test7: Configuring and enabling network interfaces     test7: Forcing shutdown of VM     test7: Destroying VM and associated drives    /path/to/gems/vagrant-164/plugins/guests/redhat/cap/configure_networksrb:26:in require: cannot load such file -- /path/to/gems/vagrant-164/plugins/guests/redhat/fedora/cap/configure_networks (LoadError)      from /path/to/gems/vagrant-164/plugins/guests/redhat/cap/configure_networksrb:26:in configure_networks_rhel7      from /path/to/gems/vagrant-164/plugins/guests/redhat/cap/configure_networksrb:17:in configure_networks,,1114,0.7396768402154399,0.009569377990430622,26825,510.90400745573163,43.131407269338304,79.62721342031686,6555,23,1687,28,travis,andytson,andytson,true,andytson,1,1.0,12,10,1669,true,false,false,false,6,8,3,0,2,1,51
4598673,mitchellh/vagrant,ruby,4454,1409806239,1409809486,1409809486,54,54,github,false,false,false,27,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.944317883958156,0.09514458498108043,9,sneal@sneal.net,plugins/communicators/ssh/communicator.rb,9,0.043478260869565216,0,0,false,Fix for issue #4452 : undefined stdout in communicatorrb Fixes #4452The stdout variable was changed during commithttps://githubcom/mitchellh/vagrant/commit/138aa5aad375ac0c076a0e0a3493e25906ce0434  This commit just corrects this omission,,1113,0.7394429469901168,0.00966183574879227,26825,510.90400745573163,43.131407269338304,79.62721342031686,6550,23,1686,28,travis,npvisual,npvisual,true,npvisual,0,0,0,0,597,true,false,false,false,1,0,0,0,1,0,54
4592519,mitchellh/vagrant,ruby,4446,1409767830,1409771603,1409771603,62,62,github,false,false,false,11,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.151790033224155,0.07989397057495844,1,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/configure_networks.rb,1,0.0049261083743842365,0,0,false,Fixes #4438 typo missing sending networks param for rhel guest network ,,1112,0.7392086330935251,0.009852216748768473,26825,510.90400745573163,43.131407269338304,79.62721342031686,6543,22,1686,29,travis,andytson,andytson,true,andytson,0,0,12,10,1668,true,false,false,false,5,6,0,0,1,0,62
4591782,mitchellh/vagrant,ruby,4445,1409764410,1409771679,1409771679,121,121,github,false,false,false,34,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.527966473407629,0.08713283121157686,0,,website/docs/source/v2/getting-started/provisioning.html.md,0,0.0,0,0,false,add guard for provisioning script in getting-started If user experimenting while learning through getting started and run as suggested vagrant reload --provision but more than one time itll remove all work that user did,,1111,0.738973897389739,0.009900990099009901,26825,510.90400745573163,43.131407269338304,79.62721342031686,6542,21,1686,28,travis,igas,igas,true,igas,0,0,65,129,1704,true,true,false,false,0,0,0,0,1,0,120
4587122,mitchellh/vagrant,ruby,4443,1409730995,1409735436,1409735436,74,74,github,false,false,false,5,1,1,0,1,0,1,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.186659653958934,0.0805649756625031,1,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb,1,0.004901960784313725,0,2,false,Fixed typo:  hostnamectl vs homenamectl ,,1110,0.7387387387387387,0.00980392156862745,26825,510.90400745573163,43.131407269338304,79.62721342031686,6539,20,1686,29,travis,keithchambers,keithchambers,true,keithchambers,0,0,76,88,943,true,false,false,false,0,0,0,0,1,0,73
4586664,mitchellh/vagrant,ruby,4441,1409726103,,1409735655,159,,unknown,false,true,false,19,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.186659653958934,0.0805649756625031,1,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb,1,0.004651162790697674,0,0,false,Fix wrong command to set hostname on RHEL7 The command to set hostnames on EL7 is hostnamectl not homenamectl,,1109,0.739404869251578,0.009302325581395349,26825,510.90400745573163,43.131407269338304,79.62721342031686,6539,20,1686,28,travis,juliandunn,juliandunn,true,,1,0.0,91,60,1181,false,false,false,false,0,0,0,0,0,0,159
4586463,mitchellh/vagrant,ruby,4440,1409723717,,1409875921,2536,,unknown,false,true,false,4,2,1,0,0,0,0,0,1,0,0,1,2,1,0,0,0,0,2,2,2,0,0,2,0,4,0,4.186659653958934,0.0805649756625031,1,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb,1,0.004651162790697674,0,0,false,Fixed typo for hostnamectl ,,1108,0.740072202166065,0.009302325581395349,26825,510.90400745573163,43.131407269338304,79.62721342031686,6539,20,1686,27,travis,cdenneen,cdenneen,true,,0,0,0,1,1242,false,false,false,false,1,0,0,0,0,2,-1
4585434,mitchellh/vagrant,ruby,4439,1409713160,1414095939,1414095939,73046,73046,merged_in_comments,false,false,false,58,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.609605165174627,0.08870382563695377,0,,website/docs/source/v2/virtualbox/index.html.md,0,0.0,0,0,false,Note that the VirtualBox provider does not support --parallel I spent a day refactoring code to generate multi-machine Vagrantfiles only to discover my time was wasted because the VirtualBox provider doesnt support --parallel Would have been nice to know that before I started so I added a note to the documentation in what seemed like the logical place,,1107,0.7398373983739838,0.009302325581395349,26825,510.90400745573163,43.131407269338304,79.62721342031686,6539,20,1685,34,travis,omehegan,mitchellh,false,mitchellh,0,0,2,0,831,false,false,false,false,0,0,0,0,0,0,73046
4583378,mitchellh/vagrant,ruby,4434,1409700306,1409875961,1409875961,2927,2927,github,false,false,false,34,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.1693292600677765,0.08023148240595372,0,,plugins/providers/virtualbox/action/prepare_nfs_settings.rb,0,0.0,0,0,false,Fix NFS when DHCP settings use a custom IP range Only use the static IP if it is indeed a static IP Otherwise assumeits DHCP and get the IP that wayFixes #4433 ,,1106,0.7396021699819169,0.009302325581395349,26825,510.90400745573163,43.131407269338304,79.62721342031686,6539,20,1685,26,travis,simoleone,simoleone,true,simoleone,0,0,65,9,1759,true,false,false,false,0,0,0,0,1,0,2927
4581039,mitchellh/vagrant,ruby,4431,1409687351,1409687384,1409687384,0,0,github,false,false,false,42,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.178953846848174,0.0804075157762854,2,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/cap/redhat/docker_install.rb,2,0.009433962264150943,0,0,false,Remove erroneous yum upgrade This upgrade shouldnt be part of the docker setup process If anupgrade is needed it should be done independently of the docker setupDo it to your base image or if needed as a shell provisioner step,,1105,0.7393665158371041,0.009433962264150943,26826,510.8849623499589,43.12979944829643,79.62424513531649,6538,18,1685,25,travis,purpleidea,purpleidea,true,purpleidea,1,1.0,113,97,1793,false,false,false,false,2,7,0,0,0,0,0
4566942,mitchellh/vagrant,ruby,4422,1409574457,1433100964,1433100964,392108,392108,commit_sha_in_comments,false,false,false,33,1,1,0,2,0,2,0,1,0,0,6,6,6,0,0,0,0,6,6,6,0,0,58,0,58,0,26.13360202586549,0.5028392499090796,8,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/handle_box.rb|lib/vagrant/util/downloader.rb|plugins/commands/box/command/add.rb|plugins/kernel_v2/config/vm.rb|website/docs/source/v2/vagrantfile/machine_settings.html.md,5,0.0048543689320388345,0,0,false,Add option to enable trusted HTTP redirects This is needed in case if we have password-protected URL which is actually redirect to another password-protected URL which accept the same credentials as initial URL,,1104,0.7391304347826086,0.009708737864077669,26808,511.15338704864223,43.1587585795285,79.67770814682184,6527,18,1684,101,travis,dmcrystax,sethvargo,false,sethvargo,0,0,48,0,-469,false,false,false,false,0,0,0,0,1,0,392108
4561011,mitchellh/vagrant,ruby,4418,1409485356,1409518272,1409518272,548,548,github,false,false,false,20,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.024855715567944,0.07744324584103922,0,,plugins/hosts/gentoo/cap/nfs.rb,0,0.0,0,0,false,fix nfs on gentoo with systemd Similarly to Arch (#4224) Gentoo adopted the service name nfs-serverservice for the nfs server,,1103,0.7388939256572983,0.009950248756218905,26793,511.3275855633934,43.18292091217855,79.72231553017579,6523,18,1683,24,travis,gpoulin2,gpoulin2,true,gpoulin2,0,0,0,0,215,true,false,false,false,0,0,0,0,1,0,548
4555233,mitchellh/vagrant,ruby,4417,1409380372,1409473405,1409473405,1550,1550,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.418943954195314,0.08508891283900437,3,pholley@Pariss-MacBook-Pro.local,plugins/providers/docker/action/create.rb,3,0.015789473684210527,0,0,false,Unset container name if docker_run is called Fixes #4294 ,,1102,0.7386569872958257,0.010526315789473684,26743,512.4705530419175,43.30105074225031,79.90876117114759,6517,17,1682,26,travis,rclanan,rclanan,true,rclanan,0,0,5,44,1839,true,false,false,false,1,0,0,0,1,0,1550
4552798,mitchellh/vagrant,ruby,4415,1409357955,1409359111,1409359111,19,19,github,false,false,false,56,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,2,2,2,9.27276182061247,0.17855222561076903,2,sax@livinginthepast.org,plugins/guests/smartos/cap/rsync.rb|test/unit/plugins/guests/smartos/cap/rsync_test.rb,2,0.010638297872340425,0,1,true,Ensure rsync_post has find permissions on smartos I didnt run into problems in my initial tests but as Ive been playing around with synced folders in local zones in a custom plugin this turns out to be an issue Find needs permission to read the files that were just written out by root in any case,,1101,0.7384196185286104,0.010638297872340425,26743,512.4705530419175,43.30105074225031,79.90876117114759,6516,16,1681,26,travis,sax,sax,true,sax,2,1.0,34,31,1954,true,false,false,false,0,1,1,0,1,0,19
4550864,mitchellh/vagrant,ruby,4413,1409346300,,1436487389,452351,,unknown,false,false,true,117,2,2,0,2,0,2,0,2,0,0,36,36,36,0,0,0,0,36,36,36,0,0,328,106,328,106,163.92267058591233,3.156470145660896,28,williamtriest@dhcp-128-146-49-215.cns.ohio-state.edu,lib/vagrant/machine.rb|plugins/communicators/winrm/communicator.rb|plugins/providers/virtualbox/cap.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/plugin.rb|plugins/providers/virtualbox/provider.rb|lib/vagrant/action/builtin/ssh_exec.rb|lib/vagrant/machine.rb|plugins/commands/rdp/command.rb|plugins/commands/ssh_config/command.rb|plugins/communicators/ssh/communicator.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/helper.rb|plugins/providers/docker/cap/public_address.rb|plugins/providers/docker/communicator.rb|plugins/providers/hyperv/cap/public_address.rb|plugins/providers/virtualbox/synced_folder.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/docker/cap/linux/docker_configure_vagrant_user.rb|plugins/provisioners/shell/provisioner.rb|plugins/synced_folders/rsync/command/rsync.rb|plugins/synced_folders/rsync/command/rsync_auto.rb|plugins/synced_folders/rsync/helper.rb|plugins/synced_folders/rsync/synced_folder.rb|plugins/synced_folders/smb/synced_folder.rb|test/unit/plugins/commands/ssh_config/command_test.rb|test/unit/plugins/communicators/winrm/helper_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|test/unit/plugins/synced_folders/rsync/command/rsync_auto_test.rb|test/unit/plugins/synced_folders/rsync/command/rsync_test.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb|test/unit/vagrant/action/builtin/ssh_exec_test.rb,8,0.0,1,1,true,Communicator info abstraction :warning: DO NOT PULL :warning: @mitchellh This is a spike to fix #4372 Im submitting this for early feedback before continuingI attempted to make the WinRM and SSH machine connection information separate but equal (that sounds horrible) previously the WinRM connection info would be built from the ssh_info which is unexpected Vagrant would be easier to maintain if the two communicator systems followed similar patterns and layoutI replaced usages of machinessh_info with machineconnection_info perhaps a little too zealously For example SSH commands will get WinRM connection info if the communicator type is :winrm It might make more sense to have the SSH commands just fail fast if the communicator type is WinRM ,,1100,0.7390909090909091,0.011049723756906077,26722,512.8358655789237,43.335079709602574,79.97155901504378,6512,15,1681,80,travis,sneal,mitchellh,false,,24,0.9583333333333334,33,0,1667,true,false,false,false,35,104,19,5,17,0,394629
4545609,mitchellh/vagrant,ruby,4410,1409313305,1409334027,1409334027,345,345,github,false,false,false,56,1,1,0,1,0,1,0,1,0,0,11,11,11,0,0,0,0,11,11,11,0,0,30,4,30,4,48.25349051742365,0.9291090661320762,4,pholley@Pariss-MacBook-Pro.local,plugins/guests/darwin/cap/mount_vmware_shared_folder.rb|plugins/guests/debian/cap/configure_networks.rb|plugins/guests/esxi/cap/mount_nfs_folder.rb|plugins/guests/fedora/cap/configure_networks.rb|plugins/guests/freebsd/cap/configure_networks.rb|plugins/guests/gentoo/cap/configure_networks.rb|plugins/guests/netbsd/cap/configure_networks.rb|plugins/guests/suse/cap/configure_networks.rb|plugins/providers/docker/communicator.rb|plugins/providers/docker/driver.rb|test/unit/plugins/providers/docker/driver_test.rb,2,0.0,0,0,true,Use -f argument to rm to force-remove files When using ptytrue removing files using sudo may request confirmationwhich will hang the connectionSimilarly sometimes assumptions about file existence may be wrong andin those cases it seems better to continue on as long as the file doesnot exist so -f makes sense there too,,1099,0.7388535031847133,0.012048192771084338,26625,514.7042253521126,43.49295774647887,80.26291079812206,6512,18,1681,35,travis,lsimons,lsimons,true,lsimons,1,1.0,9,5,2051,true,false,false,false,1,2,1,0,2,0,345
4537624,mitchellh/vagrant,ruby,4408,1409253067,1409340790,1409340790,1462,1462,github,false,false,false,184,2,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,41,0,50,0,4.379146890998624,0.084319393990405,4,sneal@sneal.net,plugins/communicators/ssh/communicator.rb,4,0.023952095808383235,0,0,false,Scrub SSH PTY output to filter out command echo-ing and most other cruft Following up on issue #4404 here is a more conservative patch that does seem to work pretty reliably to allow most built-in vagrant commands to work when configsshpty  trueShould solve #4221 #3939 #3571 #3106 #3063 and othersThe linerubyraise Vagrant::Errors::SSHInvalidShellnewshould raise a dedicated exception I guess but I couldnt quite figure out how all the i18n stuff works sorryThe linerubysleep(01)is quite unfortunate but without it due to the async nature of Net::SSH there is a bit of a timing issue where sometimes the new terminal settings have not been applied before the printf of the delimiters happens 01 should be enough time for almost all terminals and almost all SSH connectionsThe linerubyuse_tty  success and command  has that and command   trick in it because vagrant seems to like sending a lot of empty commands to check that the connection is available and I dont want to slow all those empty checks down,,1098,0.738615664845173,0.011976047904191617,26625,514.7042253521126,43.49295774647887,80.26291079812206,6506,18,1680,34,travis,lsimons,lsimons,true,lsimons,0,0,9,5,2050,true,false,false,false,1,2,0,0,1,0,1038
4527273,mitchellh/vagrant,ruby,4400,1409178285,1447886496,1447886496,645136,645136,commits_in_master,false,false,false,122,8,3,32,12,0,44,0,6,7,0,2,14,8,0,1,7,0,7,14,8,0,1,878,0,929,0,112.53519544890807,2.16683745008605,0,,plugins/commands/ps/command.rb|plugins/commands/ps/errors.rb|plugins/commands/ps/plugin.rb|plugins/commands/ps/scripts/enable_psremoting.ps1|plugins/commands/ps/scripts/reset_trustedhosts.ps1|plugins/communicators/winrm/shell.rb|plugins/hosts/windows/cap/ps.rb|plugins/hosts/windows/plugin.rb|templates/locales/command_ps.yml|plugins/commands/ps/command.rb|plugins/commands/ps/errors.rb|plugins/commands/ps/plugin.rb|plugins/commands/ps/scripts/enable_psremoting.ps1|plugins/commands/ps/scripts/reset_trustedhosts.ps1|plugins/hosts/windows/cap/ps.rb|plugins/hosts/windows/plugin.rb|templates/locales/command_ps.yml|plugins/commands/ps/command.rb|plugins/commands/ps/errors.rb|plugins/commands/ps/plugin.rb|plugins/commands/ps/scripts/enable_psremoting.ps1|plugins/commands/ps/scripts/reset_trustedhosts.ps1|plugins/hosts/windows/cap/ps.rb|plugins/hosts/windows/plugin.rb|templates/locales/command_ps.yml,0,0.0,1,6,false,adds a ps command to vagrant that drops the user into a remote powershell shell This adds a new vagrant command:vagrant psExample:C:\dev\vagrant\win81x64 vagrant ps    default: Creating powershell session to 192168114:5985    default: Username: vagrant[192168114]: PS C:\Users\vagrant\DocumentsThe command is very similar to the ssh command but drops the user into a remote powershell session The command is currently only supported on windows hosts with a guest running via the winrm communicator The command similar to vagrant ssh also supports a --command argument that can execute any powershell command over winrmWould be great to add @sneal s repl to add support for linux hosts*note:* this PR is a squashed and final version of #4330 ,,1097,0.7383773928896992,0.011976047904191617,26625,514.7042253521126,43.49295774647887,80.26291079812206,6491,17,1679,162,travis,mwrock,mitchellh,false,mitchellh,7,0.7142857142857143,122,3,1269,true,false,false,false,1,14,8,0,5,0,2718
4511643,mitchellh/vagrant,ruby,4393,1409080710,,1409344043,4388,,unknown,false,false,false,120,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,86,0,86,0,4.18766906423321,0.08063253563252569,2,vlajos@gmail.com,lib/vagrant/action/builtin/provision.rb,2,0.012121212121212121,0,1,false,Fixed missing sentinel after running provision This fixes a bug I discovered where vagrant provision would never create the sentinel file resulting in provisioners running again on the next vagrant upSteps to reproduce1 Start with no VM2 vagrant up --no-provision3 vagrant provision  - Provisioners are run but no sentinel file is created4 vagrant up  - Provisioners are run again because the sentinel file does not exist This time the sentinel file is created so subsequent up commands do not run provisioners as expectedIve also made the following improvements to the code- Always upgrade sentinel format if pre 15 format sentinel is found- Moved writing of Sentinel file to after provisioning is completed,,1096,0.7390510948905109,0.012121212121212121,26625,514.7042253521126,43.49295774647887,80.26291079812206,6480,17,1678,34,travis,jdmulloy,jdmulloy,true,,1,1.0,1,0,576,false,false,false,false,0,0,1,0,0,0,4388
4550156,mitchellh/vagrant,ruby,4387,1408973312,1409341714,1409341714,6140,6140,github,false,false,false,21,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.574170341132613,0.08807452076991906,0,,lib/vagrant/util/ssh.rb,0,0.0,0,0,false,Ignoring SSHKeyBadOwner if user is root (uid 0) Allows using sudo vagrant up without chowning the insecure private keyFixes #4386 ,,1095,0.7388127853881279,0.011904761904761904,26625,514.7042253521126,43.49295774647887,80.26291079812206,6479,16,1677,34,travis,BackSlasher,mitchellh,false,mitchellh,0,0,1,0,141,true,false,false,false,0,0,0,0,1,0,6140
4502090,mitchellh/vagrant,ruby,4383,1408913345,1409341841,1409341841,7141,7141,commits_in_master,false,false,false,104,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.695911126615718,0.09041860954229368,0,,plugins/communicators/winrm/shell.rb,0,0.0,0,0,false,Handle errors that do not set an exit code Most powershell commands do not natively return an exit code on failure In fact most often an exit code is only returned by command line exeutables For example:C:blahbidyblooblahblouormkdir zzz:\badDirwill both fail (unless you have a zzz:\ drive) Powershell provides $ which returns a boolean value indicating success or failure of the last command This will also return $False if the last comman does return a non 0 exit code So this change checks the output of $ and if there is no $lastexitcode then it exits 1,,1094,0.7385740402193784,0.011904761904761904,26625,514.7042253521126,43.49295774647887,80.26291079812206,6477,15,1676,33,travis,mwrock,mitchellh,false,mitchellh,6,0.6666666666666666,122,3,1266,true,false,false,false,1,14,7,0,3,0,7141
4498327,mitchellh/vagrant,ruby,4379,1408844331,1409341885,1409341885,8292,8292,commits_in_master,false,false,false,28,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.873754323511808,0.09384293639736552,3,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/bootstrap-salt.ps1,3,0.017964071856287425,0,0,false,Update Windows Salt provisioner version Update the salt minion version used when provisioning windows Salt is moving pretty fast and the newer versions fix a lot of issues,,1093,0.7383348581884721,0.011976047904191617,26625,514.7042253521126,43.49295774647887,80.26291079812206,6471,15,1675,32,travis,s7726,mitchellh,false,mitchellh,0,0,1,3,1052,false,false,false,false,0,3,0,0,0,0,8292
4491614,mitchellh/vagrant,ruby,4377,1408732961,1409344159,1409344159,10186,10186,commits_in_master,false,false,false,17,1,1,2,3,0,5,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,28,0,28,0,4.285212194423498,0.08251070298527843,0,,plugins/provisioners/docker/client.rb,0,0.0,0,0,true,Verbose output for docker provisioner Verbose output for docker build and docker pull tasks in docker provisioner,,1092,0.7380952380952381,0.011494252873563218,26625,514.7042253521126,43.49295774647887,80.26291079812206,6461,15,1674,30,travis,sumkincpp,mitchellh,false,mitchellh,0,0,25,59,1221,false,true,false,false,0,0,0,0,0,0,47
4473983,mitchellh/vagrant,ruby,4371,1408579888,1433103474,1433103474,408726,408726,commits_in_master,false,false,false,42,2,2,0,5,0,5,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,60,0,60,0,16.66842514129265,0.32094641144149266,2,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb,2,0.010050251256281407,0,3,false,Added ability to run salt orchestrations to salt provisioner: https://githubcom/mitchellh/vagrant/issues/4370 Fix for https://githubcom/mitchellh/vagrant/issues/4370  Adds a config option orchestrations which when set on the master node (configinstall_master  true) will cause each orchestration in the provided list of orchestrations to be run,,1091,0.7378551787351054,0.010050251256281407,26625,514.7042253521126,43.49295774647887,80.26291079812206,6442,16,1672,107,travis,andrewmains12,sethvargo,false,sethvargo,0,0,6,2,1173,true,false,false,false,0,0,0,0,1,0,14943
4441327,mitchellh/vagrant,ruby,4356,1408299993,1408469420,1408469420,2823,2823,commits_in_master,false,false,false,408,1,1,0,2,0,2,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.0099264196702595,0.0772101297489751,2,mitchell.hashimoto@gmail.com,plugins/communicators/winrm/file_manager.rb,2,0.00904977375565611,1,4,false,fix should_upload_file write to stdout before exit 1 @sneal: I repeatedly come to this solution to fix the upload problem in the WinRM communicator The error described in #4054 occurs very often with Windows 2008 R2 and Windows 7 guests probably without the latest Windows updatesIn previous versions of vagrant these boxes could be provisioned just fineAfter a debugging session I found that writing a message to stdout seems to do the trickWithout the patch my test showed errors like this:$ vagrant upBringing machine default up with vmware_fusion provider default: Cloning VMware VM: windows_7_ultimate This can take some time default: Verifying vmnet devices are healthy default: Preparing network adapters default: Starting the VMware VM default: Waiting for machine to boot This may take a few minutes default: Machine booted and ready default: Forwarding ports    default: -- 3389  3389    default: -- 5985  55985 default: Configuring network adapters within the VM default: Configuring secondary network adapters through VMware  default: on Windows is not yet supported You will need to manually default: configure the network adapter default: Enabling and configuring shared folders    default: -- /Users/stefan/code/tst: /vagrant default: Running provisioner: shell    default: Running: c:\tmp\vagrant-shellps1 default: The argument c:\tmp\vagrant-shellps1 to the -File parameter does not exist Provide the path to an existing ps1 file as an argument to the -File parameter~/code/tst$ vagrant provision default: Running provisioner: shell    default: Running: c:\tmp\vagrant-shellps1 default: The argument c:\tmp\vagrant-shellps1 to the -File parameter does not exist Provide the path to an existing ps1 file as an argument to the -File parameter~/code/tst$ vagrant provision default: Running provisioner: shell    default: Running: c:\tmp\vagrant-shellps1 default: The argument c:\tmp\vagrant-shellps1 to the -File parameter does not exist Provide the path to an existing ps1 file as an argument to the -File parameterRunning vagrant up and more vagrant provision commands just showed the errorAfter adding the Write-Host command inside the should_upload_file function before the exit 1 removed all tese errors and a clean run with vagrant destroy -f and vagrant up were successful from now onI have tested this patch with Vagrant 163 + only this new code line as well as the latest 164dev from master branch (with the rename reboot enhancement) In both cases I had the provisioning problems without it and solved it with this additional code line,,1090,0.7376146788990826,0.013574660633484163,26624,514.7235576923077,43.49459134615385,80.26592548076923,6411,15,1669,28,travis,StefanScherer,sneal,false,sneal,1,1.0,28,1,1638,false,true,false,false,0,22,1,0,0,0,2532
4416380,mitchellh/vagrant,ruby,4348,1408010091,,1409341917,22197,,unknown,false,true,false,60,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,9,0,9,0,8.436122951363464,0.16243543633567256,6,sneal@sneal.net,plugins/communicators/ssh/communicator.rb|plugins/guests/linux/cap/shell_expand_guest_path.rb,6,0.02654867256637168,0,0,false,Fix #4034 by adding an option to set pty to false forcibly Fix for #4034 Multiple synced_folder using NFS is correctly working with configsshpty is false But configsshpty is true mount on same point in later version of VagrantTherefore I added the option and I implemented pty regardless of setting to assume pty false forcibly in shell_expand_guest_path of Linux,,1089,0.7382920110192838,0.01327433628318584,26624,514.7235576923077,43.49459134615385,80.26592548076923,6395,15,1666,31,travis,ewigkeit1204,mitchellh,false,,0,0,9,20,1029,false,false,false,false,0,0,0,0,0,0,22197
4401490,mitchellh/vagrant,ruby,4341,1407880808,1409341953,1409341953,24352,24352,commits_in_master,false,false,false,74,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.15329538503369,0.07997053330496398,4,mitchell.hashimoto@gmail.com,lib/vagrant/util/subprocess.rb,4,0.017241379310344827,0,0,false,Selecting for duration of timeout can cause hang When specifying a timeout the subprocess used to select for timeout seconds on the stdout stderr pipesThis creates a race condition and can cause the Subprocess#execute to hang for the full timeout interval if the process has already exited and no more output is send to the pipesThis race is happening with a higher probability if the subprocess is generating a lot of output,,1088,0.7380514705882353,0.01293103448275862,26624,514.7235576923077,43.49459134615385,80.26592548076923,6375,18,1664,30,travis,databus23,mitchellh,false,mitchellh,2,1.0,3,0,1398,false,false,false,false,0,1,1,0,0,0,24352
4394118,mitchellh/vagrant,ruby,4335,1407816958,1409342005,1409342005,25417,25417,commits_in_master,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.47847639283823,0.08623180205759899,0,,plugins/provisioners/cfengine/config.rb,0,0.0,0,0,false,Changing default repo URL Addresses issue #4315,,1087,0.7378104875804968,0.012552301255230125,26624,514.7235576923077,43.49459134615385,80.26592548076923,6369,20,1663,29,travis,nmische,mitchellh,false,mitchellh,1,1.0,33,11,1724,false,false,false,false,0,0,0,0,0,0,45
4382780,mitchellh/vagrant,ruby,4330,1407709734,,1409178387,24477,,unknown,false,true,false,193,12,6,0,11,1,12,0,5,5,0,3,11,6,0,0,8,1,5,14,9,0,1,756,0,1063,0,109.27046372491776,2.1039666480105446,0,,plugins/commands/ps/command.rb|plugins/hosts/windows/cap/ps.rb|plugins/commands/ps/command.rb|plugins/commands/ps/errors.rb|plugins/commands/ps/plugin.rb|plugins/hosts/windows/cap/ps.rb|plugins/hosts/windows/plugin.rb|send-file.ps1|plugins/commands/ps/command.rb|plugins/commands/ps/errors.rb|plugins/commands/ps/plugin.rb|plugins/hosts/windows/cap/ps.rb|plugins/hosts/windows/plugin.rb|send-file.ps1|plugins/commands/ps/command.rb|plugins/hosts/windows/cap/ps.rb|plugins/commands/ps/command.rb|plugins/commands/ps/errors.rb|plugins/commands/ps/plugin.rb|plugins/hosts/windows/cap/ps.rb|plugins/hosts/windows/plugin.rb|send-file.ps1|plugins/commands/ps/command.rb|plugins/hosts/windows/cap/ps.rb,0,0.0,0,10,false,Adding a ps command for entering a remote powershell session This PR is not quite ready for merging but wanted to add now just to inquire if it would be considered as a new feature This adds a new vagrant command:vagrant psExample:C:\dev\vagrant\win81x64 vagrant ps    default: Creating powershell session to 192168114:5985    default: Username: vagrant[192168114]: PS C:\Users\vagrant\DocumentsThe command is very similar to the ssh command but drops the user into a remote powershell sessionCurrently it is assumed that powershell remoting is enabled on host and guestThings to add before merging:* Prompt the user to enable remoting if it is not already enabled* Add a -Force option that would do the enabling without prompting* Raise appropriate errors if user is not enable and does not accept the prompt* Add a -command option that would remotely execute a command on the guest similar to the same option in vagrant ssh This can use winrm directly and would not need ps remoting enabledAll of the above TO DOs are straight forward and I will have them included in this branch this week,,1086,0.7384898710865562,0.01282051282051282,26609,514.3372543124507,43.44394753654778,80.23601037243037,6361,20,1662,38,travis,mwrock,mwrock,true,,5,0.8,122,3,1252,true,false,false,false,1,9,6,0,2,0,1213
4384740,mitchellh/vagrant,ruby,4327,1407621928,1407738591,1407738591,1944,1944,commits_in_master,false,false,false,66,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,10,0,10,0,12.324311199508188,0.23730053703025564,3,mitchell.hashimoto@gmail.com,plugins/providers/docker/action/create.rb|plugins/providers/docker/command/run.rb|plugins/providers/docker/driver.rb,3,0.0,0,0,false,Clean docker containers when calling vagrant docker-run Fix for #4296 I implemented this to remove by default which can be bypassed by calling it with the --no-rm flag Implementation could easily change to not do by default but given that keeping it around is usually for debugging (my perspective at least) it is good to usually remove itvagrant docker-run --no-rm myapp -- bash,,1085,0.7382488479262673,0.012345679012345678,26609,514.3372543124507,43.44394753654778,80.23601037243037,6355,22,1661,28,travis,parisholley,mitchellh,false,mitchellh,2,0.0,15,0,1425,false,false,false,false,1,5,2,0,0,0,1942
4384764,mitchellh/vagrant,ruby,4326,1407619449,,1407739312,1997,,unknown,false,false,false,72,2,1,1,4,0,5,0,2,0,0,1,8,1,0,0,0,0,8,8,8,0,0,3,0,78,0,4.133865742841929,0.07959621798794833,0,,plugins/providers/docker/action/host_machine_sync_folders.rb,0,0.0,0,0,false,Fix synced folders when running docker-run after vagrant up I believe this fixes the problem in #3873 not sure why the host_sfid is used (appears to randomly generate) instead I would think we should check if that same mount path was already used in the host VM and if so reuse it (instead of trying to remount a new path which doesnt work because it isnt being mounted on the host VM),,1084,0.738929889298893,0.012345679012345678,26609,514.3372543124507,43.44394753654778,80.23601037243037,6355,22,1661,27,travis,parisholley,mitchellh,false,,1,0.0,15,0,1425,false,false,false,false,1,5,1,0,0,0,137
4384770,mitchellh/vagrant,ruby,4325,1407616808,,1407739029,2037,,unknown,false,false,false,33,2,2,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,18,0,18,0,13.11485334701207,0.25252216468237215,0,,plugins/providers/docker/action/host_machine_sync_folders.rb|plugins/providers/docker/config.rb|plugins/providers/docker/action/host_machine_sync_folders.rb,0,0.0,0,0,false,Option to enable symlinks for docker mounted volumes Example of how this is configured:Vagrantconfigure(2) do |config|configvmdefine app do |v|vvmprovider docker do |d|dsymlink_volumes  trueendendend,,1083,0.739612188365651,0.012345679012345678,26609,514.3372543124507,43.44394753654778,80.23601037243037,6354,22,1661,27,travis,parisholley,mitchellh,false,,0,0,15,0,1425,false,false,false,false,1,4,0,0,0,0,5
4377831,mitchellh/vagrant,ruby,4324,1407616739,1407739350,1407739350,2043,2043,commits_in_master,false,false,false,89,1,1,0,1,0,1,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.019218096395398,0.09664338480791818,2,mitchell.hashimoto@gmail.com,plugins/providers/hyperv/scripts/import_vm.ps1,2,0.00823045267489712,0,0,false,fixes import for hyper-v generation 2 VMs Currently packaging a Hyper-V Generation 2 VM and running Vagrant UP will result in a VM being created that cannot boot into the OS and the vagrant up command will throw since it cannot discover the guest IPThis simply finds the subtype of the vm in the vm config which is the zero based generation and adds the Generation parameter to the New-VM cmdlet passing the one-based valueThis can be tested using:vagrant box add mwrock/Windows81-amd64 --provider hyperv,,1082,0.7393715341959335,0.012345679012345678,26609,514.3372543124507,43.44394753654778,80.23601037243037,6354,22,1661,25,travis,mwrock,mitchellh,false,mitchellh,4,0.75,122,3,1251,true,false,false,false,1,8,5,0,2,0,2043
4372759,mitchellh/vagrant,ruby,4318,1407536048,1407536136,1407536136,1,1,merged_in_comments,false,false,false,31,2,2,0,0,0,0,0,2,1,0,2,3,2,0,0,1,0,2,3,2,0,0,2,96,2,96,14.280295206787317,0.27522768431183847,2,mitchell.hashimoto@gmail.com,plugins/providers/hyperv/action/import.rb|test/unit/plugins/providers/hyperv/action/import_test.rb|test/unit/plugins/providers/hyperv/action/import_test.rb,2,0.008130081300813009,1,0,true,fix double dot in the drive file name for hyperv This fixes an issue in my previous pull request #4208 found by @ziyan and adds unit tests to cover the scenarios,,1081,0.7391304347826086,0.012195121951219513,26584,514.7457117062895,43.48480288895577,80.27384893168824,6346,22,1660,24,travis,mwrock,mitchellh,false,mitchellh,3,0.6666666666666666,122,3,1250,true,false,false,false,1,4,4,0,1,0,-1
4358549,mitchellh/vagrant,ruby,4312,1407416810,1418371415,1418371415,182576,182576,commit_sha_in_comments,false,true,false,5,3,1,2,5,0,7,0,3,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.8213186939998245,0.09292267057152609,4,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,4,0.014652014652014652,0,4,false,Added Ansible Example in Vagrantfile ,,1080,0.7388888888888889,0.01098901098901099,26564,514.9450383978317,43.47989760578226,80.2966420719771,6330,26,1659,57,travis,justanshulsharma,gildegoma,false,gildegoma,1,0.0,6,11,436,true,false,false,false,0,0,2,0,1,0,93339
4354560,mitchellh/vagrant,ruby,4308,1407371076,1409342071,1409342071,32849,32849,commits_in_master,false,false,false,55,2,1,0,2,0,2,0,2,0,0,3,3,1,2,0,0,0,3,3,1,2,0,2,0,2,0,13.704809313357156,0.26413271137937366,2,mitchell.hashimoto@gmail.com,plugins/guests/freebsd/cap/configure_networks.rb|templates/guests/freebsd/network_dhcp.erb|templates/guests/freebsd/network_static.erb,2,0.0,0,0,false,Fix Issue 4307: FreeBSD fix interface device names in /etc/rcconf https://githubcom/mitchellh/vagrant/issues/4307Fix details:Pass network interface name to template renderer and use itin static and dhcp templates to render /etc/rcconf entries  modified:   plugins/guests/freebsd/cap/configure_networksrb  modified:   templates/guests/freebsd/network_dhcperb  modified:   templates/guests/freebsd/network_staticerbVerification scenario:Check if /etc/rcconf contains vtnet entries when paravirtualizedNIC devices are used in FreeBSD guest,,1079,0.7386468952734013,0.01090909090909091,26547,514.1070554111575,43.3947338682337,80.19738576863676,6328,27,1658,27,travis,acidum,mitchellh,false,mitchellh,0,0,1,1,762,false,false,false,false,1,0,0,0,0,0,11361
4352049,mitchellh/vagrant,ruby,4306,1407354595,,1407359287,78,,unknown,false,false,false,25,1,1,0,1,0,1,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,65,0,65,0,13.173323196852463,0.2538948549784195,6,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md,5,0.00784313725490196,0,0,false,[salt] added new configuration parameter : minion_fail_on_error If true Vagrant will return an error code if Salt provisionning has failedThis is related to https://githubcom/mitchellh/vagrant/issues/4304,,1078,0.7393320964749536,0.011764705882352941,26523,514.3083361610677,43.39629755306715,80.23225125362893,6325,27,1658,42,travis,trivoallan,trivoallan,true,,0,0,30,25,2157,false,false,false,false,1,0,0,0,0,0,78
4336008,mitchellh/vagrant,ruby,4297,1407219630,1407295003,1407295003,1256,1256,commits_in_master,false,false,false,72,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,41,0,41,0,4.345073090931889,0.08381055968504791,2,mitchell.hashimoto@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,2,0.007751937984496124,0,0,false,Fixes Fedora 20 network issues when virtual On Fedora 20 virtual machines biosdevname commandReturns 4 if running in a virtual machineThis patch:  - Uses the biosdevname command return value to detect if virtual  - Uses /sys/net to get interface names - Might be better solution  - Leaves unchanged the original bare metal case - I wonder what for    thoughTested with Fedora Cloud image adapted for vagrant-libvirtFixes issue #4104,,1077,0.7390900649953575,0.023255813953488372,26472,511.8993653671804,43.177697189483226,79.744635841644,6312,31,1657,52,travis,gildub,mitchellh,false,mitchellh,0,0,6,3,768,false,false,false,false,1,0,0,0,0,0,1256
4310604,mitchellh/vagrant,ruby,4282,1406907700,1407295153,1407295153,6457,6457,commits_in_master,false,false,false,35,1,1,0,3,0,3,0,3,0,0,5,5,5,0,0,0,0,5,5,5,0,0,7,59,7,59,21.9598293998444,0.42357528954579765,17,yungsang@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/shared_helpers.rb|plugins/kernel_v2/config/vm.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/vagrant/shared_helpers_test.rb,13,0.006688963210702341,0,0,true,Add configvmbox_server_url setting This commits adds a new config setting configvmbox_server_url to set the URL of a local VagrantCloud instance in the Vagrantfile If the environment variable VAGRANT_SERVER_URL is set it will still be preferred,,1076,0.7388475836431226,0.10367892976588629,26472,511.8993653671804,43.177697189483226,79.744635841644,6283,34,1653,51,travis,fpletz,mitchellh,false,mitchellh,1,1.0,104,115,1816,false,false,false,false,0,0,0,0,0,0,119
4305527,mitchellh/vagrant,ruby,4274,1406853716,1407295239,1407295239,7358,7358,commits_in_master,false,false,false,6,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,14,6,14,9.184567292085307,0.1771578312045294,2,teemu.matilainen@iki.fi,plugins/guests/smartos/cap/rsync.rb|test/unit/plugins/guests/smartos/cap/rsync_test.rb,2,0.006349206349206349,0,0,false,rsync on SmartOS should use pfexec ,,1075,0.7386046511627907,0.13968253968253969,26472,511.8993653671804,43.177697189483226,79.744635841644,6278,34,1652,50,travis,sax,mitchellh,false,mitchellh,1,1.0,34,31,1925,false,false,false,false,0,0,0,0,0,0,7358
4299234,mitchellh/vagrant,ruby,4273,1406809948,1406832532,1406832532,376,376,commits_in_master,false,false,false,6,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.473842225266307,0.08629439210308798,2,mitchell.hashimoto@gmail.com,lib/vagrant/util/subprocess.rb,2,0.006309148264984227,0,0,false,Subprocess: respect listeners on final yield ,,1074,0.7383612662942272,0.14826498422712933,26472,511.8993653671804,43.177697189483226,79.744635841644,6275,34,1652,50,travis,databus23,mitchellh,false,mitchellh,1,1.0,3,0,1386,false,false,false,false,0,0,0,0,0,0,376
4294399,mitchellh/vagrant,ruby,4271,1406761712,1407295344,1407295344,8893,8893,commits_in_master,false,false,false,181,3,2,0,4,0,4,0,3,1,0,2,4,3,0,0,1,0,3,4,4,0,0,57,0,57,19,12.086292208248977,0.23312830144095,0,,plugins/communicators/winrm/command_filters/rm.rb|plugins/communicators/winrm/command_filter.rb|plugins/communicators/winrm/command_filters/mkdir.rb,0,0.0,0,2,false,Fixed some WinRM command filters I was running vagrant in debug on a Windows guest with the chef provisioner and noticed that mkdir and rm were both throwing errors left and right (though they were silently being ignored) My Windows guest was 2012 R2 so it was running PowerShell 4 This version introduced a problem with any commands runningmkdir -pbecause they created a new switch that made -p ambiguous This switch doesnt mean the same thing in PowerShell as on *nix (On PS 4 it would resolve to -Path but *nix is recursive which mkdir in PS is by default) When using PS4+ the command errors outThe chef provisioner is also runningrm -f patha lot but the previous version of the rm command filter was picking up -f as the path and always failing as well I also fixed the recursive check on the rm command filter to include a few extra common combinations of switches to rm (-r -rf -fr) when running recursively and try to more intelligently find the path,,1073,0.7381174277726001,0.14012738853503184,26472,511.8993653671804,43.177697189483226,79.744635841644,6270,34,1651,49,travis,Scythril,mitchellh,false,mitchellh,0,0,0,0,446,false,true,false,false,0,0,0,0,0,0,6
4276933,mitchellh/vagrant,ruby,4262,1406625535,1407295414,1407295414,11164,11164,commits_in_master,false,false,false,47,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.6404953502906645,0.08950890647170784,0,,templates/guests/debian/network_dhcp.erb,0,0.0,0,0,false,Fix #3860 by making sure post-up command never returns an error code I suspect the post-up command could just be removed but this is the more conservative option If deleting the default route for an interface fails its unlikely to start working after some number of seconds,,1072,0.7378731343283582,0.17717717717717718,26472,511.8993653671804,43.177697189483226,79.744635841644,6252,35,1650,48,travis,danielparks,mitchellh,false,mitchellh,0,0,3,4,1715,false,false,false,false,0,2,0,0,0,0,11164
4262510,mitchellh/vagrant,ruby,4255,1406461582,1406582856,1406582856,2021,2021,commits_in_master,false,false,false,4,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.798379477473703,0.09255427868019601,0,,lib/vagrant/shared_helpers.rb,0,0.0,0,0,false,Update shared_helpersrb typo fix,,1071,0.7376283846872083,0.23013698630136986,26472,511.8993653671804,43.177697189483226,79.744635841644,6234,35,1648,48,travis,glensc,fgrehm,false,fgrehm,5,1.0,30,5,1631,false,false,false,false,0,0,1,0,0,1,2021
4243436,mitchellh/vagrant,ruby,4246,1406228638,1407295632,1407295632,17783,17783,commits_in_master,false,false,false,41,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.506229806881244,0.08691910493971103,5,ryan@ryanberdeen.com,website/docs/source/v2/docker/basics.html.md,5,0.012987012987012988,0,0,false,Fix vagrant up command in Docker docs Without the --providerdocker argument running vagrant up causes an error:    There are errors in the configuration of this machine Please fix    the following errors and try again:    vm:     * A box must be specified,,1070,0.7373831775700934,0.2597402597402597,26472,511.8993653671804,43.177697189483226,79.744635841644,6220,34,1645,48,travis,synth3tk,mitchellh,false,mitchellh,0,0,4,2,718,false,false,false,false,0,0,0,0,0,0,17783
4234250,mitchellh/vagrant,ruby,4242,1406153430,,1406320493,2784,,unknown,false,false,false,4,3,1,1,0,0,1,0,1,0,0,41,316,41,0,0,0,0,316,316,315,0,1,154,10,5847,10,176.7528465587453,3.4093243968542906,71,yungsang@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/config_validate.rb|lib/vagrant/action/builtin/graceful_halt.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action/runner.rb|lib/vagrant/capability_host.rb|lib/vagrant/config/loader.rb|lib/vagrant/config/v1/loader.rb|lib/vagrant/config/v1/root.rb|lib/vagrant/config/v2/loader.rb|lib/vagrant/config/v2/root.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/registry.rb|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|plugins/commands/destroy/command.rb|plugins/commands/plugin/action/plugin_exists_check.rb|plugins/commands/up/command.rb|plugins/communicators/ssh/communicator.rb|plugins/guests/darwin/cap/rsync.rb|plugins/guests/freebsd/cap/rsync.rb|plugins/guests/linux/cap/rsync.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/docker/action/host_machine_sync_folders.rb|plugins/providers/virtualbox/action/set_name.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/model/forwarded_port.rb|plugins/provisioners/docker/config.rb|plugins/synced_folders/nfs/synced_folder.rb|plugins/synced_folders/rsync/command/rsync_auto.rb|test/unit/vagrant/action/warden_test.rb|test/unit/vagrant/registry_test.rb|test/unit/vagrant/util/hash_with_indifferent_access_test.rb,14,0.0049504950495049506,0,0,false,Removed Deprecated has_key method ,,1069,0.7380729653882133,0.25742574257425743,26472,511.8993653671804,43.177697189483226,79.744635841644,6206,34,1644,48,travis,justanshulsharma,justanshulsharma,true,,0,0,6,11,421,false,false,false,false,0,0,0,0,0,0,2757
4225034,mitchellh/vagrant,ruby,4236,1406075911,1423891619,1423891619,296928,296928,commits_in_master,false,true,false,176,17,6,7,14,0,21,0,4,0,0,8,11,8,0,0,0,0,11,11,10,0,1,38,42,275,186,54.06141388856967,1.0427718754587638,35,yungsang@gmail.com,Gemfile|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|vagrant.gemspec|plugins/communicators/winrm/config.rb|Gemfile|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/shell.rb|vagrant.gemspec|plugins/communicators/winrm/config.rb|plugins/kernel_v2/config/vm.rb|plugins/communicators/winrm/shell.rb,16,0.012135922330097087,1,14,false,Add WinRM over SSL support - (replaces #3960) I updated @pdericsons PR #3960 to:- Use the released winrm Gem- Fixed the testsIm planning to address my comments from that PR as well: 1 There should be a configuration option for no_ssl_peer_verification Right now it is hardcoded to true (no verification) 2 I think the default for no_ssl_peer_verification should be false I think its better to be secure by default and let users opt-out of security if theyre not worried about using self-signed certificates for testing 3 It is using the :plaintext transport rather than the :ssl transport WinRM does make an SSL connection even with the :plaintext transport but there are some differences so :ssl is preferable In fact I think configwinrmtransport  :ssl may be better than configwinrmssl  true It matches up with the knife-windows option and would make it easier to support other winrm transports in the future like :kerberosI just wanted to start see Travis go green and open the discussion back up,,1067,0.7385192127460168,0.25728155339805825,26472,511.8993653671804,43.177697189483226,79.744635841644,6200,34,1643,108,travis,maxlinc,sneal,false,sneal,1,1.0,43,12,1113,true,false,false,false,0,3,0,1,10,0,10
4223929,mitchellh/vagrant,ruby,4234,1406069162,1407295800,1407295800,20443,20443,commits_in_master,false,false,false,51,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,18,4,18,8.680871582769406,0.16744232327403227,2,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/config.rb|test/unit/plugins/provisioners/shell/config_test.rb,2,0.004842615012106538,0,0,false,shell provisioner cannot handle Fixnum array args This is based on some comments on made on an older pull request: mitchellh/vagrant#2982Basically the problem is that if you have an array of args that include Fixnum arguments they dont get properly turned into strings before being given to the shell provisioner,,1066,0.7382739212007504,0.2566585956416465,26472,511.8993653671804,43.177697189483226,79.744635841644,6200,34,1643,46,travis,b-dean,mitchellh,false,mitchellh,0,0,0,0,564,false,false,false,false,0,0,0,0,0,0,20443
4213291,mitchellh/vagrant,ruby,4228,1405976414,1407296675,1407296675,22004,22004,commits_in_master,false,false,false,19,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.332530875631793,0.08356868645680728,0,,plugins/hosts/redhat/cap/nfs.rb,0,0.0,0,0,false,Redhat 7 to use systemd as well … Change nfs plugin to detect distribution and versionFixes issue #4227,,1065,0.7380281690140845,0.2688679245283019,26472,511.8993653671804,43.177697189483226,79.744635841644,6188,35,1642,45,travis,stvleung,mitchellh,false,mitchellh,0,0,1,1,1025,false,false,false,false,1,0,0,0,0,0,22004
4203538,mitchellh/vagrant,ruby,4224,1405861052,1407296800,1407296800,23929,23929,commits_in_master,false,false,false,45,2,2,0,1,1,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,8.166058751141648,0.1575122769927193,0,,plugins/hosts/arch/cap/nfs.rb|plugins/hosts/arch/cap/nfs.rb,0,0.0,0,0,false,Fix NFS server running ans status check According to https://wikiarchlinuxorg/indexphp/NFS#Starting_the_server (and verified on my ArchLinux workstation)The way vagrat currently interacts with NFS via systemd is there for a reason I believe however I didnt find one -- so probably another check should be there,,1064,0.7377819548872181,0.3080357142857143,26472,511.8993653671804,43.177697189483226,79.744635841644,6182,35,1641,44,travis,kamazee,mitchellh,false,mitchellh,0,0,8,4,1576,false,false,false,false,0,0,0,0,0,0,23929
4184697,mitchellh/vagrant,ruby,4211,1405629574,1405630372,1405630372,13,13,commits_in_master,false,false,false,8,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.553216261805068,0.08782516643835646,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/vagrantfile/ssh_settings.html.md,1,0.0021413276231263384,0,0,false,Mention configsshpty in docs Like https://githubcom/mitchellh/vagrant/pull/4205 but cleaner,,1063,0.7375352775164629,0.3468950749464668,26472,511.8993653671804,43.177697189483226,79.744635841644,6155,36,1638,42,travis,emyl,sneal,false,sneal,10,0.9,10,2,1281,true,true,false,false,0,7,3,0,4,0,13
4180836,mitchellh/vagrant,ruby,4209,1405603100,1412705967,1412705967,118381,118381,commits_in_master,false,false,false,54,5,3,0,8,0,8,0,5,1,0,4,6,5,0,0,1,0,5,6,5,0,0,165,57,175,57,65.93810979577786,1.2718538137586792,10,sneal@sneal.net,plugins/guests/windows/cap/choose_addressable_ip_addr.rb|plugins/guests/windows/cap/mount_shared_folder.rb|plugins/guests/windows/plugin.rb|plugins/synced_folders/smb/synced_folder.rb|test/unit/plugins/guests/windows/cap/mount_shared_folder_test.rb|plugins/guests/windows/cap/choose_addressable_ip_addr.rb|plugins/guests/windows/cap/mount_shared_folder.rb|plugins/guests/windows/plugin.rb|plugins/synced_folders/smb/synced_folder.rb|test/unit/plugins/guests/windows/cap/mount_shared_folder_test.rb|plugins/guests/windows/cap/choose_addressable_ip_addr.rb|plugins/guests/windows/cap/mount_shared_folder.rb|plugins/guests/windows/plugin.rb|plugins/synced_folders/smb/synced_folder.rb|test/unit/plugins/guests/windows/cap/mount_shared_folder_test.rb,5,0.004282655246252677,0,2,false,adding smb sync folder implementation for windows guests addressing #3699 This allows smb folder syncing with windows guests CmdKey is used in an elevated command (scheduled task) to add the share credentials to the guests credential store to prevent the the share from losing its credentials or creating annoying login prompts to the user,,1062,0.7372881355932204,0.3490364025695932,26472,511.8993653671804,43.177697189483226,79.744635841644,6152,36,1638,77,travis,mwrock,sneal,false,sneal,2,0.5,119,3,1228,true,false,false,false,1,2,3,0,1,0,282
4180692,mitchellh/vagrant,ruby,4208,1405601831,1407297072,1407297072,28254,28254,commits_in_master,false,false,false,62,1,1,0,2,4,6,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,0,22,0,8.68740516487804,0.16756788183401153,0,,plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/scripts/import_vm.ps1,0,0.0,0,0,false,accept vhd as well as vhdx file types on hyper-v This allows both vhd and vhdx as supportable file extensions for hyper-v Although vhdx is the more modern and possibly preferred extension Microsoft still ships evaluation windows VHDs in using the older vhd format So supporting this format means vagrant boxes can be made from these VHDs without having to migrate them,,1061,0.7370405278039586,0.3497854077253219,26472,511.8993653671804,43.177697189483226,79.744635841644,6151,35,1638,44,travis,mwrock,mitchellh,false,mitchellh,1,0.0,119,3,1228,false,false,false,false,1,2,2,0,0,0,979
4180563,mitchellh/vagrant,ruby,4207,1405600867,1407354691,1407354691,29230,29230,commits_in_master,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.312247666996787,0.08317721964018168,4,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,4,0.008583690987124463,0,0,false,Changed hardcoded number of interfaces fixes #4206 ,,1060,0.7367924528301887,0.3497854077253219,26472,511.8993653671804,43.177697189483226,79.744635841644,6150,35,1638,44,travis,stevemcc,mitchellh,false,mitchellh,0,0,4,1,2052,false,false,false,false,1,0,0,0,0,0,29230
4179550,mitchellh/vagrant,ruby,4205,1405591534,,1405629545,633,,unknown,false,false,false,8,2,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,6,0,4.5346277535566255,0.08746662014121373,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/vagrantfile/ssh_settings.html.md,1,0.002145922746781116,0,0,false,Mention configsshpty in docs As per subject above,,1059,0.7374881964117092,0.3497854077253219,26472,511.8993653671804,43.177697189483226,79.744635841644,6149,35,1638,42,travis,emyl,emyl,true,,9,1.0,10,2,1281,true,true,false,false,0,6,1,0,3,0,467
4160414,mitchellh/vagrant,ruby,4196,1405434750,,1405513319,1309,,unknown,false,false,false,23,1,1,0,1,0,1,0,1,1,0,5,6,5,1,0,1,0,5,6,5,1,0,58,29,58,29,26.97046472624661,0.5202225014814899,10,sneal@sneal.net,plugins/guests/windows/cap/choose_addressable_ip_addr.rb|plugins/guests/windows/cap/mount_shared_folder.rb|plugins/guests/windows/plugin.rb|plugins/guests/windows/scripts/mount_volume.ps1.erb|plugins/synced_folders/smb/synced_folder.rb|test/unit/plugins/guests/windows/cap/mount_shared_folder_test.rb,5,0.003875968992248062,0,0,false,adding smb sync folder implementation for windows guests addressing #3699 This adds a share on the windows guest linking to the host folder,,1058,0.7381852551984878,0.41472868217054265,26472,511.8993653671804,43.177697189483226,79.744635841644,6135,36,1636,39,travis,mwrock,mwrock,true,,0,0,119,3,1226,false,false,false,false,1,1,0,0,0,0,1309
4158688,mitchellh/vagrant,ruby,4195,1405420322,,1409475044,67578,,unknown,false,false,false,31,1,1,0,15,0,15,0,15,2,0,0,2,2,0,0,2,0,0,2,2,0,0,33,0,33,0,9.312988811294542,0.17963451445335962,0,,plugins/guests/enterprise7/guest.rb|plugins/guests/enterprise7/plugin.rb,0,0.0,0,13,false,Enterprise Linux 7 Dynamic network cards fix (ref #4171) Uses fedoras network configuration for RedHat and CentOS 7Possibly fixes #4171 but I doubt this is the cleanest way Pointerswelcome,,1057,0.738883632923368,0.41472868217054265,26472,511.8993653671804,43.177697189483226,79.744635841644,6133,36,1636,45,travis,vStone,mitchellh,false,,0,0,72,24,1439,false,true,false,false,1,2,0,0,0,0,28842
4149198,mitchellh/vagrant,ruby,4186,1405335837,,1407354888,33650,,unknown,false,true,false,22,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.030098571909951,0.077734958651109,0,,plugins/hosts/arch/cap/nfs.rb,0,0.0,0,0,false,hosts/arch: Fix NFS service name [GH-4176] Only the nfs-serverservice needs to be started now to bring up NFS on Arch [See here](https://bbsarchlinuxorg/viewtopicphpid183444),,1056,0.7395833333333334,0.41923076923076924,26472,511.8993653671804,43.177697189483226,79.744635841644,6125,36,1635,42,travis,EvanPurkhiser,mitchellh,false,,0,0,40,47,886,false,true,false,false,2,1,0,0,0,0,1
4147131,mitchellh/vagrant,ruby,4185,1405300409,,1407354967,34242,,unknown,false,false,false,73,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,3.86012771474138,0.07445645880349099,2,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/config/puppet.rb,2,0.003816793893129771,0,0,false,Fix #4039 - Puppet provisioner should support targeting a directory Puppet is dropping support for the import statement It is supersededby the ability to use a directory in place of a site manifest fileSince the puppet provisioner relies on puppet apply to do the workit is sufficient to allow a directory to be specified as the manifestfile because puppet apply will use all manifest files found in saiddirectory,,1055,0.7402843601895734,0.4198473282442748,26472,511.8993653671804,43.177697189483226,79.744635841644,6124,37,1634,41,travis,ffrank,mitchellh,false,,0,0,9,8,1370,false,false,false,false,1,1,0,0,0,0,5
4128891,mitchellh/vagrant,ruby,4175,1405035010,,1405039011,66,,unknown,false,false,false,21,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.282238434417686,0.08259622446189713,6,sneal@sneal.net,plugins/provisioners/chef/provisioner/base.rb,6,0.009708737864077669,0,0,false,Put encrypted data bag secret in default location Following the chef [doc](http://docsopscodecom/chef/essentials_data_bagshtml) the default expected location for the secret is /etc/chef/encrypted_data_bag_secret,,1054,0.7409867172675522,0.46440129449838186,26464,511.97853688029016,43.22853688029021,79.80652962515116,6111,37,1631,37,travis,bbaugher,bbaugher,true,,0,0,12,11,638,false,false,false,false,0,0,0,0,0,0,10
4118356,mitchellh/vagrant,ruby,4169,1404945487,1407354985,1407354985,40158,40158,commits_in_master,false,false,false,18,1,1,0,2,1,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.8910452286286787,0.07505085249623923,2,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/config/puppet.rb,2,0.0030721966205837174,0,1,false,Update puppetrb The main manifest may be a single file or a directory of pp files docspuppetlabscom/puppet/latest/reference/dirs_manifesthtml#with-puppet-masterhttps://githubcom/mitchellh/vagrant/issues/4039,,1053,0.7407407407407407,0.4838709677419355,26464,511.97853688029016,43.22853688029021,79.80652962515116,6108,38,1630,41,travis,schauer,mitchellh,false,mitchellh,0,0,1,0,828,false,false,false,false,1,0,0,0,0,0,29453
4109273,mitchellh/vagrant,ruby,4162,1404861654,1404862064,1404862064,6,6,github,false,false,true,20,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.392218515979104,0.08471753465660284,6,vagrant@adamspiers.org,plugins/commands/init/command.rb,6,0.008995502248875561,0,0,false,Fixed issue 4161 Wrong varaible name was used to try and delete the existing Vagrantfile causing an error Fixes #4161 ,,1052,0.7404942965779467,0.49775112443778113,26464,511.97853688029016,43.22853688029021,79.80652962515116,6101,38,1629,36,travis,sneal,sneal,true,sneal,23,0.9565217391304348,33,0,1615,true,false,false,false,26,92,40,2,51,2,-1
4106244,mitchellh/vagrant,ruby,4159,1404843200,1407355266,1407355266,41867,41867,commits_in_master,false,false,false,41,2,2,0,5,0,5,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.331879245078559,0.16070609104069697,24,mitchell.hashimoto@gmail.com,lib/vagrant/util/platform.rb|lib/vagrant/environment.rb,23,0.03453453453453453,0,0,false,Windows encodings fixes These small fixes allow Vagrant to run under non-ASCII Windows usernamesAs it turns out Windows uses different encodings in different parts of itself and none of them are UTF-8 :)After these patches vagrant init completes successfully,,1051,0.7402473834443387,0.4984984984984985,26464,511.97853688029016,43.22853688029021,79.80652962515116,6099,38,1629,40,travis,vassilevsky,mitchellh,false,mitchellh,0,0,31,96,1535,false,false,false,false,0,2,0,0,0,0,44
4084179,mitchellh/vagrant,ruby,4156,1404779784,1447888514,1447888514,718478,718478,merged_in_comments,false,false,false,109,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,33,0,33,0,17.907600372862017,0.3454035243659424,24,mitchell.hashimoto@gmail.com,lib/vagrant/machine.rb|lib/vagrant/ui.rb|lib/vagrant/machine.rb|lib/vagrant/ui.rb,21,0.03139013452914798,0,0,false,Add machine readable action notifications Associate device oriented log messages with the given device 1404762105infoBringing machine mon1vagrant-tj up with lxc provider1404762105mon1vagrant-tjactionup:start:LXC (new VM)1404762105mon1vagrant-tjinfoImporting base box superbase-mysql55-cloud-base-railsexpress-omnibus1404762105info1404762105mon1vagrant-tjwarnWARNING: You are using a base box that has a format that has been deprecated%(VAGRANT_COMMA) please upgrade to a new one1404762105warn1404762106mon1vagrant-tjoutputSetting up mount entries for shared folders1404762106output1404762106mon1vagrant-tjdetail/vagrant  /home/vagrant/chef-repo/vagrant/openstack1404762106detail1404762106mon1vagrant-tjinfoStarting container1404762106info1404762106mon1vagrant-tjoutputWaiting for machine to boot This may take a few minutes1404762106output1404762107mon1vagrant-tjactionfetch_ip:start:LXC (openstack_mon1vagrant-tj_1404762105734_17930)1404762113mon1vagrant-tjactionfetch_ip:end:LXC (openstack_mon1vagrant-tj_1404762105734_17930)1404762202singleton1vagrant-tjwarnWARNING: You are using a base box that has a format that has been deprecated%(VAGRANT_COMMA) please upgrade to a new one1404762139mon1vagrant-tjinfo[2014-07-07T19:42:19+00:00] FATAL: Net::HTTPServerException: 403 Forbidden1404762203mon1vagrant-tjactionup:end:LXC (openstack_mon1vagrant-tj_1404762105734_17930),,1050,0.74,0.4992526158445441,26464,511.97853688029016,43.22853688029021,79.80652962515116,6093,39,1628,159,travis,aaadschutz,mitchellh,false,mitchellh,1,0.0,0,0,595,false,false,false,false,0,2,2,0,0,0,718474
4069211,mitchellh/vagrant,ruby,4146,1404576810,1407355615,1407355615,46313,46313,commits_in_master,false,false,false,6,2,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,8,0,4.585324563480361,0.0884426443356293,0,,website/docs/source/v2/provisioning/file.html.md,0,0.0,0,0,false,docs: Add usage example to provisioning/file ,,1049,0.7397521448999047,0.5116959064327485,26456,512.1333534925915,43.24160870879951,79.83066223162987,6077,39,1626,43,travis,techtonik,mitchellh,false,mitchellh,0,0,22,24,1304,false,false,false,false,0,1,0,0,0,0,46313
4057272,mitchellh/vagrant,ruby,4143,1404421714,1409476554,1409476554,84247,84247,commits_in_master,false,false,false,54,1,1,0,3,0,3,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.982207642505666,0.09609780342308587,0,,templates/nfs/exports_freebsd.erb,0,0.0,0,0,false,Changed order of nfs exports parameters for FreeBSD The order of parameters in /etc/exports for FreeBSD 10 is different than the current template  I had to swap the nfs_options with the ips and remove the quotes from the directorys exported or I would get permission denied in the guest (which is also FreeBSD 10),,1048,0.7395038167938931,0.5101744186046512,26456,512.1333534925915,43.24160870879951,79.83066223162987,6063,40,1624,44,travis,amracks,mitchellh,false,mitchellh,0,0,0,1,13,false,false,false,false,0,0,0,0,0,0,48942
4039562,mitchellh/vagrant,ruby,4133,1404231067,1404779270,1404779270,9136,9136,commits_in_master,false,false,false,20,4,3,1,11,0,12,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,48,0,66,0,25.95068188244606,0.5005418692224852,7,vagrant@adamspiers.org,plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb,6,0.008207934336525308,0,5,false,Ensure VirtualBox virtual disks are stored in the correct directory on Windows hosts This change is a fix for https://githubcom/mitchellh/vagrant/issues/3584,,1047,0.7392550143266475,0.5417236662106704,26456,512.1333534925915,43.24160870879951,79.83066223162987,6048,43,1622,37,travis,keiths-osc,sneal,false,sneal,0,0,0,0,524,false,false,false,false,1,7,0,0,0,0,102
4035439,mitchellh/vagrant,ruby,4132,1404182580,,1447994287,730195,,unknown,false,false,false,38,2,2,0,7,0,7,0,3,0,0,7,7,7,0,0,0,0,7,7,7,0,0,59,0,59,0,48.68668658409425,0.9390784110970261,37,sneal@sneal.net,lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/kernel_v2/config/ssh.rb|lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v1/config/ssh.rb|plugins/kernel_v2/config/ssh.rb|website/docs/source/v2/vagrantfile/ssh_settings.html.md,21,0.004087193460490463,0,0,false,Support environment variable forwarding Fixes #4131This is pretty much my first time with ruby please point out any dumb mistakes Also Im not super familiar with vagrants architecture so again point out anything I need to change,,1046,0.739961759082218,0.5395095367847411,26456,512.1333534925915,43.24160870879951,79.83066223162987,6046,43,1621,90,travis,skeggse,sethvargo,false,,0,0,11,11,894,false,false,false,false,2,5,0,0,1,0,5
4026336,mitchellh/vagrant,ruby,4126,1404097254,1404100687,1404100687,57,57,commits_in_master,false,false,true,29,1,1,0,0,0,0,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,36,0,36,0,13.690497077875456,0.26406592210522306,0,,website/docs/source/v2/provisioning/chef_client.html.md|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_solo.html.md,0,0.0,1,0,false,Fix spelling of Chef Solo Chef Client and Chef Server in website docs @sethvargo FYI - Updated Vagrant website docs to use Chef Server Chef Client and Chef Solo,,1045,0.7397129186602871,0.5409836065573771,26456,512.1333534925915,43.24160870879951,79.83066223162987,6039,43,1620,34,travis,sneal,sneal,true,sneal,22,0.9545454545454546,33,0,1606,true,false,false,false,19,84,36,1,49,2,-1
4024776,mitchellh/vagrant,ruby,4124,1404075172,,1404779391,11736,,unknown,false,true,false,14,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.658274004324142,0.16700307489100624,8,vagrant@adamspiers.org,plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb,7,0.009575923392612859,0,0,false,Fix error with path to VM that contains name of VM Fix for https://githubcom/mitchellh/vagrant/issues/4123,,1044,0.7404214559386973,0.5417236662106704,26456,512.1333534925915,43.24160870879951,79.83066223162987,6038,43,1620,37,travis,sfx-public,sneal,false,,0,0,0,0,676,false,false,false,false,0,0,0,0,0,0,2234
4018347,mitchellh/vagrant,ruby,4121,1403950626,,1404097149,2442,,unknown,false,false,false,1,1,1,0,5,0,5,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.319444219305247,0.08331458030065783,0,,website/docs/source/v2/provisioning/chef_client.html.md,0,0.0,0,2,false,Typo ,,1043,0.7411313518696069,0.5409836065573771,26456,512.1333534925915,43.24160870879951,79.83066223162987,6028,43,1619,35,travis,Maks3w,sneal,false,,0,0,130,7,907,false,false,false,false,0,0,0,0,0,0,582
4017052,mitchellh/vagrant,ruby,4120,1403922463,1403985659,1403985659,1053,1053,commits_in_master,false,false,false,21,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.124674488847231,0.07955781032644298,10,miurahr@linux.com,plugins/communicators/ssh/communicator.rb,10,0.013477088948787063,0,0,true,Removed extra n from the word connection Removed extra n from the word connection in Attempting SSH connection in logger call,,1042,0.7408829174664108,0.5336927223719676,26456,512.1333534925915,43.24160870879951,79.83066223162987,6027,43,1618,34,travis,jdmulloy,sneal,false,sneal,0,0,1,0,516,false,false,false,false,0,0,0,0,0,0,1053
4012204,mitchellh/vagrant,ruby,4115,1403886563,,1407354901,57805,,unknown,false,true,false,25,1,1,0,2,1,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.0929591401155685,0.07894607630824273,0,,plugins/hosts/arch/cap/nfs.rb,0,0.0,0,0,true,Arch Linux nfs service files changed The systemd service files changed in archlinux:nfsdservice       - nfs-serverservicerpc-idmapdservice - nfs-idmapdservicerpc-mountdservice - nfs-mountdserviceSigned-off-by: BlackEagle ikedevolder@gmailcom,,1041,0.7415946205571565,0.5343203230148048,26456,512.1333534925915,43.24160870879951,79.83066223162987,6021,43,1618,44,travis,BlackIkeEagle,mitchellh,false,,3,0.6666666666666666,54,125,1487,false,true,true,false,0,0,0,0,0,0,30360
4010651,mitchellh/vagrant,ruby,4113,1403871782,1407355594,1407355594,58063,58063,commits_in_master,false,false,false,21,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.762382635430507,0.09185809339282361,5,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,5,0.006729475100942127,0,0,true,Fix value for manifest_file This value should match the default mentioned at the Vagrant Documentation Otherwise new users could be confused,,1040,0.7413461538461539,0.5343203230148048,26456,512.1333534925915,43.24160870879951,79.83066223162987,6020,43,1618,40,travis,dhoppe,mitchellh,false,mitchellh,0,0,26,11,994,false,true,false,false,0,0,0,0,0,0,58063
4007157,mitchellh/vagrant,ruby,4112,1403829434,1407355637,1407355637,58770,58770,commits_in_master,false,false,false,88,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,9.14031024518943,0.1763007167663449,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/synced-folders/rsync.html.md|website/docs/source/v2/synced-folders/rsync.html.md,1,0.001303780964797914,0,0,false,Clarify docs for rsync ownership Ive only ever reached the rsync docs from Google which I imagine is pretty common Its not clear that the options for rsync shared folders also include global options applicable to any shared folder Specifically its very confusing when customizing the rsync command and not having ownership match what the args are settingThis PR adds a link up to the basic usage docs (which should jump out a little more) as well as indicates that owner and group supersede any rsync options,,1039,0.7410972088546679,0.5176010430247718,26456,512.1333534925915,43.24160870879951,79.83066223162987,6018,43,1617,38,travis,deviantintegral,mitchellh,false,mitchellh,0,0,17,0,1520,false,false,false,false,0,1,0,0,0,0,58769
3996237,mitchellh/vagrant,ruby,4102,1403734810,1405035016,1405035016,21670,21670,commits_in_master,false,false,true,83,1,1,0,3,0,3,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,23,24,23,24,9.417976271177766,0.18165641237078792,7,sneal@sneal.net,plugins/guests/windows/cap/change_host_name.rb|test/unit/plugins/guests/windows/cap/change_host_name_test.rb,5,0.00651890482398957,0,1,false,Addressed issues with Windows guest renaming on Win7/8 This addresses the issues raised with PR #4006 Removed dependency upon netdom which is not always available on all Windows versions This implementation that uses PowerShell and WMI should work on all OS and PowerShell versionsFixed another issue where host renames would always happen when the hostname was longer than 15 characters The COMPUTERNAME environment variable only returns the first 15 characters so we no longer use that to check the current host name,,1038,0.7408477842003853,0.5176010430247718,26456,512.1333534925915,43.24160870879951,79.83066223162987,6008,43,1616,39,travis,sneal,sneal,true,sneal,21,0.9523809523809523,33,0,1602,true,false,false,false,16,73,33,1,47,2,20902
3990500,mitchellh/vagrant,ruby,4101,1403691421,,1414142436,174183,,unknown,false,false,false,21,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.6291921747656986,0.08928908062938883,0,,plugins/providers/virtualbox/action/sane_defaults.rb,0,0.0,0,0,false,Add ioapic to sane_defaultsrb #3979At least VBoxManage --ioapic on works with my old WinXP machine so this can be merged,,1037,0.7415621986499518,0.5176010430247718,26456,512.1333534925915,43.24160870879951,79.83066223162987,6005,43,1616,44,travis,cielavenir,mitchellh,false,,3,0.3333333333333333,27,12,844,true,false,false,false,0,5,4,0,1,0,61072
3988532,mitchellh/vagrant,ruby,4099,1403664873,1407356018,1407356018,61519,61519,commits_in_master,false,false,true,92,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,20,0,4.152997454789697,0.08010411116992185,10,sneal@sneal.net,plugins/provisioners/chef/provisioner/chef_client.rb,10,0.01303780964797914,0,0,false,First attempt at trying to fix issue 2476 One possible solution to #2476 although likely incompleteThis addresses the error chef is not part of the bundle when the chef-client provisioner attempts to delete the node or client from the Chef Server While this fixes the specific issue on my system its likely that it does not account for all system configurations like RVMThe Bundlerwith_clean_env should probably be moved internally to Subprocessexecute but thats a riskier change and Id like to get some feedback before even attempting that size of change,,1036,0.7413127413127413,0.5176010430247718,26456,512.1333534925915,43.24160870879951,79.83066223162987,6003,43,1615,36,travis,sneal,mitchellh,false,mitchellh,20,0.95,32,0,1601,true,false,false,false,16,70,32,1,47,2,2244
3986243,mitchellh/vagrant,ruby,4094,1403647872,1407357876,1407357876,61833,61833,commits_in_master,false,false,true,111,1,1,0,1,0,1,0,1,0,0,4,4,3,0,1,0,0,4,4,3,0,1,23,5,23,5,17.535387501180004,0.3382271829187315,30,sneal@sneal.net,plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/errors.rb|templates/locales/comm_winrm.yml|test/unit/plugins/communicators/winrm/communicator_test.rb,23,0.01437908496732026,0,0,false,Better WinRM command failure messaging Non-zero exit command failures should include the stdout and stderr in the error message just like the SSH communicator A new WinRMBadExitStatus class was added to include stdout and stderr that differs from the generic ExecutionError that can occur when WinRM returns a 500 status code Getting the output is helpful during developmentIts now possible to specify only an error_class and have that use the correct error_key by default Previously only specifying an error_class would display the wrong message if the caller didnt also override the error_key option I think the SSH communicator also has this issue since it always provides a default error_key option,,1035,0.7410628019323672,0.5189542483660131,26456,512.1333534925915,43.24160870879951,79.83066223162987,6002,43,1615,35,travis,sneal,mitchellh,false,mitchellh,19,0.9473684210526315,32,0,1601,true,false,false,false,16,66,31,1,45,2,61833
3981299,mitchellh/vagrant,ruby,4092,1403613208,1404779321,1404779321,19435,19435,merged_in_comments,false,true,false,65,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,24,0,24,0,8.727348288454229,0.16833539753574595,12,vagrant@adamspiers.org,plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb,9,0.011764705882352941,0,0,false,VirtualBox driver should replace only last occurence of suggested VM name When suggested VM name is present also in the path the bug encountered:preINFO subprocess: Starting process: [/usr/bin/VBoxManage import /media/arch/srs-vagrant/vagrantd/boxes/debian740_provisioned/virtualbox/boxovf --vsys 0 --vmname srs-vagrant_1403592072958_54939 --vsys 0 --unit 10 --disk /media/arch/bsrs-vagrant_1403592072958_54939/vbox/srs-vagrant/b/box-disk1vmdk]/preBut should bepreINFO subprocess: Starting process: [/usr/bin/VBoxManage import /media/arch/srs-vagrant/vagrantd/boxes/debian740_provisioned/virtualbox/boxovf --vsys 0 --vmname srs-vagrant_1403600101329_78183 --vsys 0 --unit 10 --disk /media/arch/bsrs-vagrant/vbox/srs-vagrant_1403600101329_78183/b/box-disk1vmdk]/pre,,1034,0.7408123791102514,0.5189542483660131,26456,512.1333534925915,43.24160870879951,79.83066223162987,5997,44,1615,36,travis,akzhan,sneal,false,sneal,0,0,114,3,1783,false,false,false,false,0,0,0,0,0,0,9934
3979151,mitchellh/vagrant,ruby,4090,1403587409,1407356956,1407356956,62825,62825,commits_in_master,false,false,true,85,1,1,1,1,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.77236123812364,0.09205056331560899,0,,lib/vagrant/util/file_checksum.rb,0,0.0,0,0,false,Improved box checksum verification performance When adding large boxes verifying the checksum took noticably longer than expected because the Ruby GC was needlessly working overtime With this PR the amount of total RAM consumed by the Ruby process was halved MD5 checksum validation of a 10GB box was cut from 42 seconds to 18 secondsGC stats - existing code-------------------------------{:count2616 :heap_used447 :heap_length802 :heap_increment355 :heap_live_num92545 :heap_free_num89447 :heap_final_num0 :total_allocated_object2071688 :total_freed_object1979143}GC stats - new code-------------------------------{:count31 :heap_used447 :heap_length802 :heap_increment355 :heap_live_num92395 :heap_free_num89443 :heap_final_num1 :total_allocated_object810035 :total_freed_object717640},,1033,0.7405614714424008,0.5189542483660131,26456,512.1333534925915,43.24160870879951,79.83066223162987,5996,44,1615,34,travis,sneal,mitchellh,false,mitchellh,18,0.9444444444444444,32,0,1601,true,false,false,false,16,67,31,1,44,2,777
3973070,mitchellh/vagrant,ruby,4088,1403539422,1407358058,1407358058,63643,63643,commits_in_master,false,false,false,10,2,1,0,4,0,4,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,5,0,4.168944900223355,0.080411709707075,0,,plugins/guests/redhat/cap/nfs_client.rb,0,0.0,0,1,false,Install rpc package while installing nfs client on centos guests  ,,1032,0.7403100775193798,0.5196335078534031,26456,512.1333534925915,43.24160870879951,79.83066223162987,5992,44,1614,32,travis,salimane,mitchellh,false,mitchellh,0,0,47,3,1375,false,false,false,false,0,1,0,0,0,0,4106
3971757,mitchellh/vagrant,ruby,4087,1403527470,1407357134,1407357134,63827,63827,commits_in_master,false,false,false,12,1,1,0,1,0,1,0,1,0,0,2,2,1,0,1,0,0,2,2,1,0,1,6,0,6,0,8.007286712130213,0.15444665977778627,83,vagrant@adamspiers.org,plugins/provisioners/shell/provisioner.rb|templates/locales/en.yml,67,0.08769633507853403,0,0,false,Dont output stdout and stderr twice when shell provisioner fails Issue #4086,,1031,0.7400581959262852,0.5196335078534031,26456,512.1333534925915,43.24160870879951,79.83066223162987,5991,44,1614,33,travis,zr40,mitchellh,false,mitchellh,0,0,9,6,1226,false,false,false,false,1,0,0,0,0,0,63827
3963720,mitchellh/vagrant,ruby,4077,1403382161,1407356911,1407356911,66245,66245,commits_in_master,false,false,false,14,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.623485056869614,0.08917900023290784,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/docker/configuration.html.md,3,0.0039164490861618795,0,0,false,docker/configurationhtmlmd: Fix syntax for link docker provider:* Invalid link (should be name:alias): db,,1030,0.7398058252427184,0.5195822454308094,26456,512.1333534925915,43.24160870879951,79.83066223162987,5979,44,1612,34,travis,simono,mitchellh,false,mitchellh,0,0,22,159,1093,false,false,false,false,0,0,0,0,0,0,66245
3959241,mitchellh/vagrant,ruby,4075,1403306467,,1404767541,24351,,unknown,false,false,false,6,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,21,0,21,0,9.041722917473113,0.17439913836536966,24,mitchell.hashimoto@gmail.com,lib/vagrant/machine.rb|lib/vagrant/ui.rb,21,0.02699228791773779,0,0,true,add machine readable logging action starts/ends ,,1029,0.7405247813411079,0.5244215938303342,26456,512.1333534925915,43.24160870879951,79.83066223162987,5978,44,1611,37,travis,aaadschutz,aaadschutz,true,,0,0,0,0,578,false,false,false,false,0,0,0,0,0,0,4212
3945403,mitchellh/vagrant,ruby,4068,1403191040,,1407358194,69452,,unknown,false,true,false,55,1,1,0,1,0,1,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.0668489649259865,0.0784424563569133,0,,plugins/guests/redhat/cap/nfs_client.rb,0,0.0,0,0,false,correction install nfs client on RHEL On Centos/Redhat just install nfs-utils is not enought We need to startrpcbind else we have this error :mountnfs: rpcstatd is not running but is required for remote lockingmountnfs: Either use -o nolock to keep locks local or start statdmountnfs: an incorrect mount option was specified,,1028,0.7412451361867705,0.5250320924261874,26456,512.1333534925915,43.24160870879951,79.83066223162987,5969,44,1610,28,travis,bewiwi,mitchellh,false,,0,0,11,5,890,false,false,false,false,0,0,0,0,0,0,1096
3942460,mitchellh/vagrant,ruby,4064,1403157182,1407357818,1407357818,70010,70010,commits_in_master,false,false,false,16,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,20,0,4.456551293747531,0.08595913774449658,0,,website/docs/source/v2/getting-started/teardown.html.md,0,0.0,0,0,false,Update Teardown instructions explicitly Explicitly define halting and destroying instructions Leaves no room for implicit assumptions,,1027,0.7409931840311588,0.5250320924261874,26456,512.1333534925915,43.24160870879951,79.83066223162987,5966,44,1610,30,travis,KLVTZ,mitchellh,false,mitchellh,0,0,20,0,487,false,false,false,false,0,0,0,0,0,0,-1
3933753,mitchellh/vagrant,ruby,4059,1403082642,1403114210,1403114210,526,526,commits_in_master,false,false,false,58,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.182161953265969,0.08066666321259293,14,sneal@sneal.net,plugins/provisioners/puppet/provisioner/puppet.rb,14,0.017994858611825194,0,0,false,Unable to use puppetworking_directory on Windows Fix escaping of powershell variableAs this is nested in a powershell variable $command it must be escapedotherwise it is evaluated when the variable is created giving an error thatThe term True is not recognized as the name of a cmdlet functionscript This prevented using a puppetworking_directory on Windows,,1026,0.7407407407407407,0.525706940874036,26456,512.1333534925915,43.24160870879951,79.83066223162987,5962,44,1609,18,travis,brettporter,sneal,false,sneal,0,0,34,13,1970,false,true,false,false,0,0,0,0,0,0,525
3872795,mitchellh/vagrant,ruby,4009,1402438337,1402609051,1402609051,2845,2845,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.099884677910065,0.07908359396658057,5,teemu.matilainen@iki.fi,plugins/guests/freebsd/cap/rsync.rb,5,0.005537098560354375,0,0,false,Updated the rsync freebsd plugin install process for FreeBSD 10 This fixes  #4008,,1025,0.7404878048780488,0.540420819490587,26439,512.1222436552063,43.231589697038466,79.8819925110632,5920,47,1601,20,travis,calvinhp,mitchellh,false,mitchellh,0,0,46,173,1660,false,false,false,false,0,0,0,0,0,0,2845
3866811,mitchellh/vagrant,ruby,4006,1402390282,1402609222,1402609222,3649,3649,commits_in_master,false,false,true,83,1,1,0,1,0,1,0,5,0,0,4,4,3,0,1,0,0,4,4,3,0,1,25,16,25,16,18.15501309002365,0.35019611439443527,7,sneal@sneal.net,plugins/guests/windows/cap/change_host_name.rb|plugins/guests/windows/errors.rb|templates/locales/guest_windows.yml|test/unit/plugins/guests/windows/cap/change_host_name_test.rb,3,0.0022026431718061676,0,5,false,Fixed issue 3987 Fixed issue #3987 Reboot the Windows guest after renaming the computer so changes take affect immediately before attempting to provision the box- Changed rename from wmic to netdom since netdom seems to work correctly in Windows 2008R2 and newer OSs- Fixed Windows guest error translations the wrong namespace was specified in the yaml fileThis potentially wont work on older OSs like Windows7 but I havent confirmed At least for the majority of users this is an improvement,,1024,0.740234375,0.5374449339207048,26439,512.1222436552063,43.231589697038466,79.8819925110632,5916,48,1601,19,travis,sneal,mitchellh,false,mitchellh,17,0.9411764705882353,32,0,1587,true,false,false,false,14,53,29,1,43,2,3648
3863537,mitchellh/vagrant,ruby,4002,1402354294,,1402609817,4258,,unknown,false,false,false,7,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.612293650350546,0.08896756542061976,1,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/bootstrap-salt.sh,1,0.0011025358324145535,0,0,false,Update Salt Bootstrap URLs to offical URLs ,,1023,0.7409579667644184,0.538037486218302,26439,512.1222436552063,43.231589697038466,79.8819925110632,5912,48,1600,18,travis,ifnull,mitchellh,false,,0,0,3,3,860,false,false,false,false,0,0,0,0,0,0,-1
3838910,mitchellh/vagrant,ruby,3983,1402026982,1402120359,1402120359,1556,1556,commits_in_master,false,false,false,5,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,16,0,16,0,8.761540560864164,0.16914304889997658,2,mitchell.hashimoto@gmail.com,plugins/guests/nixos/cap/nfs_client.rb|plugins/guests/nixos/plugin.rb,2,0.0021482277121374865,0,0,false,Add nixos guest capability: nfs_client_installed ,,1022,0.7407045009784736,0.5263157894736842,26424,512.4129579170451,43.25613079019074,79.92733878292461,5888,50,1596,18,travis,dougm,mitchellh,false,mitchellh,1,1.0,71,4,2053,false,false,false,false,0,0,0,0,0,0,1556
3830314,mitchellh/vagrant,ruby,3979,1401950662,,1401951166,8,,unknown,false,false,false,6,1,1,0,0,0,0,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.650039771385339,0.0897696572853748,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/config.rb,2,0.002129925452609159,0,1,false,Add convenient methods to VirtualBox Config ,,1021,0.7414299706170421,0.5218317358892439,26424,512.4129579170451,43.25613079019074,79.92733878292461,5876,50,1596,18,travis,cielavenir,mitchellh,false,,2,0.5,27,12,824,true,false,false,false,0,0,3,0,1,0,-1
3811616,mitchellh/vagrant,ruby,3962,1401782695,1401782894,1401782894,3,3,commits_in_master,false,false,false,90,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.162294219364371,0.08035370331106995,7,mitchell.hashimoto@gmail.com,plugins/hosts/windows/cap/rdp.rb,7,0.007391763463569166,0,0,false,fixed writing rdp file on windows host The last change of #3875 doesnt work on windows host calling vagrant rdp boxnameC:/HashiCorp/Vagrant/embedded/gems/gems/vagrant-163/plugins/hosts/windows/cap/rdprb:24:in block (2 levels) in rdp_client: private method puts called for nil:NilClass (NoMethodError)        from C:/HashiCorp/Vagrant/embedded/gems/gems/vagrant-163/plugins/hosts/windows/cap/rdprb:23:in eachSo I fixed it for me with the following changesBut instead of writing more and more temporary files I suggest writing the rdp file into vagrant/machines/boxname/rdprdp to use the same file name for each box and stored in the local vagrant directory tree Should I create a PR for that,,1020,0.7411764705882353,0.518479408658923,26424,512.4129579170451,43.25613079019074,79.92733878292461,5857,50,1594,19,travis,StefanScherer,mitchellh,false,mitchellh,0,0,26,1,1563,false,false,false,false,0,10,0,0,0,0,3
3811560,mitchellh/vagrant,ruby,3960,1401781674,,1407296212,91908,,unknown,false,true,false,52,5,5,1,9,0,10,0,4,0,0,6,6,6,0,0,0,0,6,6,6,0,0,33,0,33,0,34.929357721701884,0.6743163984319394,59,yungsang@gmail.com,plugins/communicators/winrm/config.rb|plugins/communicators/winrm/shell.rb|Gemfile|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/shell.rb|vagrant.gemspec|plugins/communicators/winrm/config.rb|plugins/kernel_v2/config/vm.rb,27,0.010559662090813094,0,3,false,Add WinRM over SSL support Add WinRM over SSL supportThis was pretty straightforward except a newer version of winrm is required to disable SSL cert validation - I have modified Gemfile and the gemspec file for this but its almost certainly not correct and mergeable as iseg    configwinrmssl  true,,1019,0.7419038272816487,0.518479408658923,26424,512.4129579170451,43.25613079019074,79.92733878292461,5857,50,1594,46,travis,pdericson,mitchellh,false,,0,0,4,0,634,true,false,false,false,0,0,0,0,12,0,49
3811085,mitchellh/vagrant,ruby,3959,1401773957,1401782715,1401782715,145,145,commits_in_master,false,false,false,123,1,1,0,2,3,5,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.063073682418233,0.07843823622298106,12,sneal@sneal.net,plugins/provisioners/puppet/provisioner/puppet.rb,12,0.012834224598930482,0,0,false,Backtick-escape the facter env command in powershell Fixes issue 3958 When a puppetfacter block is defined on windows the puppet apply is succeeding but the ps1 task vagrant runs returns 1I think this is because the env value is not being quoted ie:works:cmd /c powershellexe $env:FACTER_environment puppet applyfails:PS C:\tmp cmd /c powershellexe $env:FACTER_environment puppet applyThe term  is not recognized as the name of a cmdlet function script file or operable program Check the spelling of the name or if a path was included verify that the path is correct and try againAt line:1 char:6       puppet apply        CategoryInfo : ObjectNotFound: (:String) [] CommandNotFoundException        FullyQualifiedErrorId : CommandNotFoundExceptionIf i backtick-escape the $env it works,,1018,0.7416502946954814,0.5251336898395722,26424,512.4129579170451,43.25613079019074,79.92733878292461,5857,48,1594,19,travis,benh57,mitchellh,false,mitchellh,0,0,0,0,1086,false,false,false,false,0,0,0,0,0,0,4
3810995,mitchellh/vagrant,ruby,3956,1401772765,1407357612,1407357612,93080,93080,commits_in_master,false,false,false,19,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.762822026464043,0.09194698112820213,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/public_network.html.md,2,0.0021390374331550803,0,0,false,Updating docs to include :ip option Add documentation for option added recently to set IP address for public/bridged interfaces,,1017,0.7413962635201573,0.5251336898395722,26424,512.4129579170451,43.25613079019074,79.92733878292461,5857,48,1594,29,travis,PerilousApricot,mitchellh,false,mitchellh,1,1.0,16,3,1821,false,false,false,false,0,0,0,0,0,0,93080
3798221,mitchellh/vagrant,ruby,3949,1401626801,,1401658750,532,,unknown,false,false,false,12,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.550303367645538,0.08784427710037959,11,thierrymarianne@users.noreply.github.com,website/docs/source/v2/multi-machine/index.html.md,11,0.011470281543274244,0,0,false,specified versions where autostart option is available autostart was added in v160,,1016,0.7421259842519685,0.5182481751824818,26424,512.4129579170451,43.25613079019074,79.92733878292461,5849,48,1592,16,travis,az7arul,mitchellh,false,,0,0,25,9,841,false,false,false,false,0,0,0,0,0,0,-1
3792397,mitchellh/vagrant,ruby,3946,1401547502,1401562641,1401562641,252,252,commits_in_master,false,false,false,5,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.401232849995223,0.08496644878829783,9,mitchell.hashimoto@gmail.com,website/docs/source/v2/multi-machine/index.html.md,9,0.009307135470527405,0,0,false,Fix typo in multi-machine doc ,,1015,0.741871921182266,0.5139607032057911,26424,512.4129579170451,43.25613079019074,79.92733878292461,5845,48,1591,16,travis,thierrymarianne,mitchellh,false,mitchellh,0,0,100,976,989,false,true,true,false,0,0,0,0,0,0,252
4352447,mitchellh/vagrant,ruby,3934,1401395407,1407356841,1407356841,99357,99357,commits_in_master,false,false,false,31,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.282917703140454,0.08268236475986328,0,,plugins/providers/virtualbox/action/sane_defaults.rb,0,0.0,0,0,false,Disable automatic ennoblement of hostiocache This can cause behavior that requires re stat’ing of filesystem for the guest to realize something has changed Prevents manually dialing this option in VirtualBox UI ,,1014,0.7416173570019724,0.5160955347871236,26424,512.4129579170451,43.25613079019074,79.92733878292461,5837,48,1589,32,travis,xstevecs,mitchellh,false,mitchellh,0,0,0,1,223,true,false,false,false,0,0,0,0,1,0,99357
3794246,mitchellh/vagrant,ruby,3933,1401392034,1401394144,1401394144,35,35,github,false,false,false,47,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,10.322540808416615,0.19927821362457862,1,mitchell.hashimoto@gmail.com,website/docs/Vagrantfile|website/www/Vagrantfile,1,0.001040582726326743,0,0,false,Update the Vagrantfiles included in website When trying to build/use the Vagrantfiles in the website folders I got errors on vagrant up This modifies the configvmbox to be hashicorp/precise64 so that Vagrant downloads the box if I dont have it already and named precisese64 (which I didnt) ,,1013,0.7413622902270484,0.5171696149843913,26424,512.4129579170451,43.25613079019074,79.92733878292461,5837,47,1589,15,travis,catsby,,false,,1,1.0,127,43,1270,true,false,false,false,0,1,3,0,1,0,35
4352411,mitchellh/vagrant,ruby,3932,1401390449,1407356759,1407356759,99438,99438,commits_in_master,false,false,false,18,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,9.97684010310643,0.19260440915322213,9,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/bootstrap-salt.ps1,9,0.009365244536940686,0,0,false,Updates Salt Minion version in Salt Bootstrap script for Windows Updates agent version and always create tmp folder,,1012,0.741106719367589,0.5171696149843913,26424,512.4129579170451,43.25613079019074,79.92733878292461,5836,47,1589,32,travis,marnovdm,mitchellh,false,mitchellh,0,0,0,0,493,false,false,false,false,1,3,0,1,0,0,99438
3779107,mitchellh/vagrant,ruby,3930,1401383682,1401385303,1401385303,27,27,github,false,false,false,34,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,28,0,28,0,9.39292315391284,0.1813316386262031,7,mitchell.hashimoto@gmail.com,website/docs/source/v2/multi-machine/index.html.md|website/docs/source/v2/vagrantfile/tips.html.md,7,0.0073145245559038665,0,0,false,Remove references to slave - instead of referencing things as slaves in the documentation refer to them as nodes or followersdepending on the context- change master to leader in the master-slave reference ,,1011,0.7408506429277942,0.5193312434691745,26424,512.4129579170451,43.25613079019074,79.92733878292461,5836,46,1589,16,travis,catsby,catsby,true,catsby,0,0,127,43,1270,false,false,false,false,0,1,0,0,0,0,26
3793874,mitchellh/vagrant,ruby,3927,1401365390,1401385380,1401385380,333,333,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.399537893222073,0.0849336678586261,69,vagrant@adamspiers.org,templates/locales/en.yml,69,0.0720250521920668,0,0,false,Fixed minor typos ,,1010,0.7405940594059406,0.5187891440501043,26424,512.4129579170451,43.25613079019074,79.92733878292461,5835,46,1589,15,travis,rockymadden,,false,,1,1.0,72,199,1248,true,false,false,false,0,0,1,0,2,0,333
3793870,mitchellh/vagrant,ruby,3926,1401358824,1401385395,1401385395,442,442,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.115645913920023,0.0794530952023671,69,vagrant@adamspiers.org,templates/locales/en.yml,69,0.0720250521920668,0,0,false,Fixed minor typo ,,1009,0.7403369672943508,0.5187891440501043,26424,512.4129579170451,43.25613079019074,79.92733878292461,5835,46,1589,14,travis,rockymadden,,false,,0,0,72,199,1248,true,false,false,false,0,0,0,0,1,0,442
3774094,mitchellh/vagrant,ruby,3922,1401303646,1401318369,1401318369,245,245,commits_in_master,false,false,true,92,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.836780733157898,0.09337493061810098,5,sneal@sneal.net,plugins/communicators/winrm/scripts/elevated_shell.ps1.erb,5,0.005246589716684155,0,0,false,Fixed issue 3918 Fixes issue #3918Running Windows guest commands through a scheduled task were not returning the correct exit codes they were only returning 1 or 0 This has negative consequences especially for Puppet which can return an exit code of 2 for partial successSince were running an executable from inside a powershell encoded command we need to ensure we explicitly propagate the exit code to the original caller just like a regular PowerShell script - in this case cmd /c which in return is called from a scheduled task,,1008,0.7400793650793651,0.521511017838405,26424,512.4129579170451,43.25613079019074,79.92733878292461,5831,45,1588,14,travis,sneal,mitchellh,false,mitchellh,16,0.9375,32,0,1574,true,false,false,false,10,46,28,1,42,2,245
3755308,mitchellh/vagrant,ruby,3903,1401107541,1401127898,1401127898,339,339,commits_in_master,false,false,false,45,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.347007102406784,0.08391978673822242,10,sneal@sneal.net,plugins/provisioners/puppet/provisioner/puppet.rb,10,0.0099601593625498,0,1,false,provisioners/puppet: run in elevated mode on Win guests I think that puppet apply should behave like chef-solo when dealing with Windows guestsCurrently puppet commands are run directly through WinRM and because of WinRM security model issues similar to the following one could happen:https://ticketsopscodecom/browse/COOK-1172,,1007,0.7398212512413108,0.500996015936255,26424,512.4129579170451,43.25613079019074,79.92733878292461,5806,45,1586,14,travis,emyl,mitchellh,false,mitchellh,8,1.0,10,2,1229,false,true,true,false,0,3,1,0,0,0,339
3752648,mitchellh/vagrant,ruby,3902,1401068891,1401070135,1401070135,20,20,commits_in_master,false,false,false,86,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.454408791925547,0.08599317913240499,5,teemu.matilainen@iki.fi,plugins/guests/darwin/cap/rsync.rb,5,0.004975124378109453,0,0,false,drop -r flag from xargs on OS X OS Xs xargs does not support the -r flag (which means do notexecute the command even once if there are no arguments) butbehaves by default as if it was specifiedYou can verify this yourself with this test:    $ touch zero-length-file    $ xargs echo zero-length-fileIf echo is executed you will see a blank line  If it is notexecuted (ie -r is specified or the behavior is implied) thenyou will see no blank line,,1006,0.7395626242544732,0.5004975124378109,26424,512.4129579170451,43.25613079019074,79.92733878292461,5803,45,1585,14,travis,zigg,mitchellh,false,mitchellh,0,0,21,16,1921,true,true,false,false,0,0,0,0,1,0,20
3747559,mitchellh/vagrant,ruby,3899,1400971235,1401058454,1401058454,1453,1453,commits_in_master,false,false,false,22,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,7.898965941466482,0.1524909561748072,7,remi.paulmier@gmail.com,plugins/commands/init/command.rb|plugins/commands/box/command/add.rb,4,0.003976143141153081,0,0,false,make --help text slightly more accurate BTW I didnt actually test this yet but Im reasonably confident its safe to merge -),,1005,0.7393034825870647,0.5,26420,512.4905374716125,43.262679788039364,79.93943981831946,5793,45,1584,14,travis,aspiers,mitchellh,false,mitchellh,8,0.875,66,35,1788,true,false,false,false,4,36,23,0,0,0,1453
3736009,mitchellh/vagrant,ruby,3889,1400840233,,1400875727,591,,unknown,false,false,false,6,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,4.840060818777522,0.09343823870769394,0,,website/docs/source/v2/virtualbox/configuration.html.md,0,0.0,0,0,true,Updated typo for |v| to |vb| ,,1004,0.7400398406374502,0.49362119725220804,26418,512.5293360587478,43.26595503066091,79.94549171019759,5781,45,1583,14,travis,stonith,mitchellh,false,,0,0,4,3,1042,false,true,false,false,0,0,0,0,0,0,591
3730800,mitchellh/vagrant,ruby,3885,1400787428,1400789727,1400789727,38,38,commits_in_master,false,false,false,8,1,1,0,1,0,1,0,3,0,0,173,173,171,1,1,0,0,173,173,171,1,1,1166,352,1166,352,738.7051913125564,14.25667012824813,423,yungsang@gmail.com,Rakefile|bin/vagrant|lib/vagrant/action/builtin/box_remove.rb|lib/vagrant/action/builtin/config_validate.rb|lib/vagrant/action/builtin/destroy_confirm.rb|lib/vagrant/action/builtin/handle_forwarded_port_collisions.rb|lib/vagrant/action/general/package.rb|lib/vagrant/batch_action.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|lib/vagrant/bundler.rb|lib/vagrant/capability_host.rb|lib/vagrant/cli.rb|lib/vagrant/config/loader.rb|lib/vagrant/config/v2/loader.rb|lib/vagrant/config/v2/root.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/state_file.rb|lib/vagrant/plugin/v1/command.rb|lib/vagrant/plugin/v1/guest.rb|lib/vagrant/plugin/v1/provider.rb|lib/vagrant/plugin/v2/command.rb|lib/vagrant/plugin/v2/config.rb|lib/vagrant/plugin/v2/provider.rb|lib/vagrant/registry.rb|lib/vagrant/ui.rb|lib/vagrant/util/downloader.rb|lib/vagrant/util/retryable.rb|lib/vagrant/util/safe_puts.rb|lib/vagrant/util/scoped_hash_override.rb|lib/vagrant/util/ssh.rb|lib/vagrant/util/subprocess.rb|lib/vagrant/util/template_renderer.rb|lib/vagrant/vagrantfile.rb|plugins/commands/box/command/list.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/repackage.rb|plugins/commands/box/command/root.rb|plugins/commands/destroy/command.rb|plugins/commands/halt/command.rb|plugins/commands/init/command.rb|plugins/commands/package/command.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/action/license_plugin.rb|plugins/commands/plugin/action/uninstall_plugin.rb|plugins/commands/plugin/command/install.rb|plugins/commands/plugin/command/license.rb|plugins/commands/plugin/command/list.rb|plugins/commands/plugin/command/root.rb|plugins/commands/plugin/command/uninstall.rb|plugins/commands/plugin/command/update.rb|plugins/commands/ssh/command.rb|plugins/commands/ssh_config/command.rb|plugins/commands/status/command.rb|plugins/commands/up/command.rb|plugins/communicators/ssh/communicator.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/file_manager.rb|plugins/communicators/winrm/shell.rb|plugins/guests/arch/cap/configure_networks.rb|plugins/guests/coreos/cap/configure_networks.rb|plugins/guests/darwin/cap/mount_nfs_folder.rb|plugins/guests/darwin/cap/mount_vmware_shared_folder.rb|plugins/guests/debian/cap/configure_networks.rb|plugins/guests/esxi/cap/mount_nfs_folder.rb|plugins/guests/fedora/cap/configure_networks.rb|plugins/guests/freebsd/cap/change_host_name.rb|plugins/guests/freebsd/cap/configure_networks.rb|plugins/guests/freebsd/cap/halt.rb|plugins/guests/freebsd/cap/mount_nfs_folder.rb|plugins/guests/freebsd/guest.rb|plugins/guests/funtoo/cap/configure_networks.rb|plugins/guests/gentoo/cap/configure_networks.rb|plugins/guests/linux/cap/mount_nfs.rb|plugins/guests/netbsd/cap/change_host_name.rb|plugins/guests/netbsd/cap/configure_networks.rb|plugins/guests/netbsd/cap/mount_nfs_folder.rb|plugins/guests/nixos/cap/change_host_name.rb|plugins/guests/nixos/cap/configure_networks.rb|plugins/guests/openbsd/cap/configure_networks.rb|plugins/guests/redhat/cap/configure_networks.rb|plugins/guests/smartos/cap/mount_nfs.rb|plugins/guests/suse/cap/configure_networks.rb|plugins/guests/windows/cap/change_host_name.rb|plugins/guests/windows/cap/configure_networks.rb|plugins/guests/windows/guest_network.rb|plugins/hosts/bsd/cap/nfs.rb|plugins/hosts/linux/cap/nfs.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/docker/action.rb|plugins/providers/docker/executor/local.rb|plugins/providers/hyperv/action/message_will_not_destroy.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/check_guest_additions.rb|plugins/providers/virtualbox/action/clear_network_interfaces.rb|plugins/providers/virtualbox/action/customize.rb|plugins/providers/virtualbox/action/forward_ports.rb|plugins/providers/virtualbox/action/import.rb|plugins/providers/virtualbox/action/message_will_not_destroy.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/package_vagrantfile.rb|plugins/providers/virtualbox/action/set_name.rb|plugins/providers/virtualbox/action/setup_package_files.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/provider.rb|plugins/providers/virtualbox/synced_folder.rb|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/cfengine/cap/linux/cfengine_needs_bootstrap.rb|plugins/provisioners/cfengine/provisioner.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/file/config.rb|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|plugins/synced_folders/smb/synced_folder.rb|templates/commands/init/Vagrantfile.erb|test/unit/plugins/commands/ssh_config/command_test.rb|test/unit/plugins/communicators/winrm/command_filter_test.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/guests/smartos/cap/configure_networks_test.rb|test/unit/plugins/guests/smartos/cap/mount_nfs_test.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_settings_test.rb|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/support/isolated_environment.rb|test/unit/vagrant/action/builder_test.rb|test/unit/vagrant/action/builtin/call_test.rb|test/unit/vagrant/action/builtin/confirm_test.rb|test/unit/vagrant/action/builtin/env_set_test.rb|test/unit/vagrant/action/builtin/graceful_halt_test.rb|test/unit/vagrant/action/builtin/is_state_test.rb|test/unit/vagrant/action/builtin/lock_test.rb|test/unit/vagrant/action/builtin/message_test.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|test/unit/vagrant/action/builtin/ssh_exec_test.rb|test/unit/vagrant/action/builtin/synced_folder_cleanup_test.rb|test/unit/vagrant/action/builtin/synced_folders_test.rb|test/unit/vagrant/action/warden_test.rb|test/unit/vagrant/batch_action_test.rb|test/unit/vagrant/config/v1/loader_test.rb|test/unit/vagrant/config/v1/root_test.rb|test/unit/vagrant/config/v2/loader_test.rb|test/unit/vagrant/config/v2/root_test.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/guest_test.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/plugin/v1/command_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|test/unit/vagrant/util/downloader_test.rb|test/unit/vagrant/util/retryable_test.rb|test/unit/vagrant/util/scoped_hash_override_test.rb|test/unit/vagrant_test.rb|website/docs/config.rb|website/docs/config.ru|website/docs/source/v2/getting-started/networking.html.md|website/docs/source/v2/getting-started/provisioning.html.md|website/docs/source/v2/multi-machine/index.html.md|website/docs/source/v2/networking/public_network.html.md|website/docs/source/v2/plugins/commands.html.md|website/docs/source/v2/plugins/development-basics.html.md|website/docs/source/v2/plugins/packaging.html.md|website/www/config.rb|website/www/config.ru,37,0.0019743336623889436,0,1,false,Change symbols inside hashes to 19 JSON-like syntax ,,1003,0.7397806580259222,0.49654491609081935,26415,512.5875449555177,43.27086882453152,79.95457126632596,5778,45,1582,18,travis,kalmanh,mitchellh,false,mitchellh,0,0,33,3,1064,false,false,false,false,0,0,0,0,0,0,25
3728452,mitchellh/vagrant,ruby,3882,1400772977,,1400789241,271,,unknown,false,false,false,16,2,2,0,2,0,2,0,4,2,0,1,3,2,0,0,2,0,1,3,2,0,0,63,0,63,0,13.292207670214111,0.2565334889466494,0,,plugins/commands/rebuild/command.rb|plugins/commands/rebuild/command.rb|plugins/commands/rebuild/plugin.rb,0,0.0,0,2,false,Adding rebuild command Adding rebuild command- vagrant rebuild - vagrant destroy -f && vagrant up,,1002,0.7405189620758483,0.49654491609081935,26415,512.5875449555177,43.27086882453152,79.95457126632596,5773,45,1582,18,travis,Freyskeyd,mitchellh,false,,0,0,16,11,842,false,true,false,false,0,0,0,0,0,0,161
3726378,mitchellh/vagrant,ruby,3880,1400756548,1400789504,1400789504,549,549,commits_in_master,false,false,false,17,2,2,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,8.670973334311538,0.16734579365614666,71,vagrant@adamspiers.org,templates/locales/en.yml|templates/locales/en.yml,71,0.0700888450148075,0,0,false,favorite SSH client is not limited to PuTTY https://githubcom/mitchellh/vagrant/pull/3877Followed the guide to make a separate branch,,1001,0.7402597402597403,0.49654491609081935,26415,512.5875449555177,43.27086882453152,79.95457126632596,5771,45,1582,17,travis,cielavenir,mitchellh,false,mitchellh,1,0.0,26,12,810,true,false,false,false,0,0,2,0,1,0,549
3724601,mitchellh/vagrant,ruby,3877,1400733044,,1400756491,390,,unknown,false,false,false,41,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.335486667155769,0.08367289682807333,71,vagrant@adamspiers.org,templates/locales/en.yml,71,0.06967615309126594,0,0,false,favorite SSH client is not limited to PuTTY There are SSH alternatives such as Tera Term and MobaXterm as well as PuTTYBy the way ssh_is_putty_link is unchanged since (I think) Tera Term and MobaXterm dont have CUI client (plink equivalent),,1000,0.741,0.49362119725220804,26415,512.5875449555177,43.27086882453152,79.95457126632596,5769,45,1581,16,travis,cielavenir,cielavenir,true,,0,0,26,12,809,true,false,false,false,0,0,0,0,1,0,-1
3723603,mitchellh/vagrant,ruby,3874,1400721796,1400790150,1400790150,1139,1139,commits_in_master,false,false,false,169,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.453454237672431,0.08594961663249025,0,,plugins/guests/solaris11/cap/configure_networks.rb,0,0.0,0,0,false,Added conditional for temporary interfaces This should fix #3793Heres Oracles take: http://docsoraclecom/cd/E23824_01/html/821-1458/gljtthtml :neckbeard: :zzz: Solaris 11 doesnt like ipadm commands aimed at temporary interfaces so I wrapped it in a conditional that tests for permanent interfaces I cant find a context in Solaris+VBox where you would get a permanent interface so permanent interface dudes beware The first interface isnt even marked permanent from my stock Solaris install In any case this will keep that dhcp command from firing on temporary interfaces causing Vagrant to freak out and bombTurns out if you assign a mac to the adapter with:configvmnetwork :public_network :adapter  2 :mac  deadbeef9999and DHCP is working on the bridged network Solaris 11 is ok with this and you should get assigned an address For static addresses the command on L22 will also blow up on non-permanent interfaces In Solaris they want you to destroy and rebuild into a permanent interface :no_good: The docs dont help at all with that but here we are,,999,0.7407407407407407,0.49410609037328096,26415,512.5875449555177,43.27086882453152,79.95457126632596,5767,44,1581,15,travis,gpurkins,mitchellh,false,mitchellh,0,0,9,5,1142,false,true,false,false,0,0,0,0,0,0,1139
3722035,mitchellh/vagrant,ruby,3872,1400710291,,1400790385,1334,,unknown,false,false,false,7,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.916632015730428,0.09488873452439879,4,ryan@ryanberdeen.com,website/docs/source/v2/docker/basics.html.md,4,0.003929273084479371,0,0,false,Add Rsync prerequisite for Windows Hosts https://githubcom/mitchellh/vagrant/issues/3683#issuecomment-43401263,,998,0.7414829659318637,0.49410609037328096,26415,512.5875449555177,43.27086882453152,79.95457126632596,5764,44,1581,14,travis,snowch,mitchellh,false,,0,0,6,27,1661,false,false,false,false,0,3,0,0,0,0,45
3704066,mitchellh/vagrant,ruby,3856,1400556672,1400571109,1400571109,240,240,commits_in_master,false,false,false,79,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.203066539659046,0.08127158179123299,0,,plugins/guests/coreos/cap/configure_networks.rb,0,0.0,0,0,false,CoreOS vagrants configuration code look for interface names starting with enp0 but in my case when deploying CoreOS image to libvirt environment interfaces had names ens4v1 ens5v2 CoreOS vagrants configuration code look for interface names starting with enp0 but in my case when deploying CoreOS image to libvirt environment interfaces had names ens4v1 ens5v2This patch should fix it but it might be part of a bigger issue and having these two patterns might not cover all possible configurations,,997,0.7412236710130391,0.506036217303823,26276,513.5104277667833,43.30948393971685,80.1491855685797,5759,44,1579,18,travis,hippich,mitchellh,false,mitchellh,0,0,17,2,1377,false,false,false,false,1,0,0,0,0,0,240
3703108,mitchellh/vagrant,ruby,3853,1400547646,1414705480,1414705480,235963,235963,merged_in_comments,false,false,false,46,3,2,0,6,0,6,0,3,2,0,3,7,4,1,0,3,0,5,8,7,1,0,218,0,293,0,43.98381166880973,0.8504823594398374,16,teemu.matilainen@iki.fi,plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/provisioners/chef_solo/solo.erb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|templates/provisioners/chef_solo/solo.erb,11,0.0030120481927710845,0,11,false,provisioners/chef: Add chef_zero provisioner One more approach for adding Chef Zero provisioner Previous ones #2496/#2463 and #3064This PR adds new chef_zero provisioner based on the chef_solo provisioner (like #3064) but uses local_mode configuration option to trigger the Chef Zero server and chef-client with local mode,,996,0.7409638554216867,0.5050200803212851,26276,513.5104277667833,43.30948393971685,80.1491855685797,5759,44,1579,36,travis,tmatilai,sethvargo,false,sethvargo,21,0.9523809523809523,47,41,1846,true,true,true,false,16,36,4,2,16,0,206859
3699959,mitchellh/vagrant,ruby,3848,1400526891,1400655027,1400655027,2135,2135,commits_in_master,false,false,false,93,1,1,0,1,0,1,0,1,0,0,7,7,6,0,1,0,0,7,7,6,0,1,26,0,26,0,30.192764915248063,0.5838151121709596,106,yungsang@gmail.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/handle_box.rb|lib/vagrant/util/downloader.rb|plugins/commands/box/command/add.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|website/docs/source/v2/cli/box.html.md,68,0.004024144869215292,0,0,false,added capath option to curl Downloader HiIn my company we use some repositories which are signed by a private CA The cert of the CA is installed on every server in /etc/ssl/certs rather than added to a bundleI think it may be valuable to have an option which permit to use such a certs dir for the CA when adding a box Currently only the cacert option could be passed to the Downloader component my patch adds the support to the --capath option of curlHope you will merge itRegards,,995,0.7407035175879397,0.5050301810865191,26276,513.5104277667833,43.30948393971685,80.1491855685797,5759,44,1579,17,travis,shtouff,mitchellh,false,mitchellh,0,0,14,3,993,false,false,false,false,0,0,0,0,0,0,2135
3699348,mitchellh/vagrant,ruby,3847,1400523406,1400650733,1400650733,2122,2122,commits_in_master,false,false,true,68,1,1,0,3,0,3,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,35,6,35,6,9.157808852273066,0.1770777607594962,22,sneal@sneal.net,plugins/communicators/winrm/communicator.rb|test/unit/plugins/communicators/winrm/communicator_test.rb,17,0.01710261569416499,0,0,false,Fixed issue 3816 This fixes any of the WinRM command line too long issues weve been seeing with various provisioners ie #3816Elevated command line is now rendered to a script which is uploaded to the guest and executed This allows the command line itself to be less than 100 chars to start the script and any user commands are puts into the script which has unlimited* length,,994,0.7404426559356136,0.5050301810865191,26276,513.5104277667833,43.30948393971685,80.1491855685797,5759,44,1579,17,travis,sneal,mitchellh,false,mitchellh,15,0.9333333333333333,31,0,1565,true,false,false,false,4,35,27,0,41,2,215
3692528,mitchellh/vagrant,ruby,3830,1400411734,1400415723,1400415723,66,66,commits_in_master,false,false,false,12,1,1,0,1,0,1,0,1,6,0,0,6,4,2,0,6,0,0,6,4,2,0,206,0,206,0,26.87359750618501,0.5223114912411677,0,,plugins/guests/nixos/cap/change_host_name.rb|plugins/guests/nixos/cap/configure_networks.rb|plugins/guests/nixos/guest.rb|plugins/guests/nixos/plugin.rb|templates/guests/nixos/hostname.erb|templates/guests/nixos/network.erb,0,0.0,0,0,false,Add NixOS guest support This pull request adds guest support for [NixOS](http://nixosorg/),,993,0.7401812688821753,0.5070707070707071,26119,516.5971132126039,43.569815077146906,80.63095830621386,5759,44,1578,16,travis,cstrahan,mitchellh,false,mitchellh,0,0,41,33,1667,false,false,false,false,0,0,0,0,0,0,66
3686200,mitchellh/vagrant,ruby,3825,1400301868,1400653386,1400653386,5858,5858,commits_in_master,false,false,false,55,10,3,2,5,1,8,0,3,1,0,2,4,2,0,0,1,0,3,4,3,0,0,161,0,304,0,18.56612798784164,0.36083347445419656,13,tim.messier@gmail.com,plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/bootstrap-salt.ps1|plugins/provisioners/salt/provisioner.rb,13,0.013265306122448979,0,1,true,Feature/salt windows guest provisioning Crude implementation of Salt minion provisioning on Windows Deploys salt minion keys checks system architecture downloads correct salt binary installs it & starts the service Could use a lot more error checking support for the salt boostrap command line options etc but this works for me so I thought Id share,,992,0.7399193548387096,0.5122448979591837,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,44,1576,19,travis,targetx007,mitchellh,false,mitchellh,0,0,0,0,480,false,false,false,false,1,6,0,0,0,0,1019
3682118,mitchellh/vagrant,ruby,3818,1400270731,1400278305,1400278305,126,126,commits_in_master,false,false,false,51,1,1,0,8,1,9,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.349830256706385,0.08453913308371093,5,sneal@sneal.net,plugins/guests/windows/cap/configure_networks.rb,5,0.0050968399592252805,0,1,true,Inverting the hash of driver_mac_addresses returned by machineprovider capability(:nic_mac_addresses)The previous code expected the hash to use the mac addresses as the keys the original code had the indices as the keys   This prevented VagrantPlugins::GuestWindows::Cap::ConfigureNetworks::create_vm_interface from matching the mac addresses supplied by the VM to the mac addresses supplied by GuestNetwork::network_adapters,,991,0.739656912209889,0.5117227319062182,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,44,1576,18,travis,RabidGuppy,RabidGuppy,true,RabidGuppy,0,0,0,0,1107,false,false,false,false,0,0,0,0,0,0,105
3690107,mitchellh/vagrant,ruby,3807,1400207295,1400653941,1400653941,7444,7444,commits_in_master,false,false,true,213,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,3.689768225076775,0.07171079987475215,17,mitchell.hashimoto@gmail.com,plugins/providers/docker/provider.rb,17,0.017154389505549948,1,0,false,providers/docker: Fix SSH access to container when no Host VM is in use This should fix GH-3799 Ive tested it on an Ubuntu 1404 host with Docker 0111 using the native driverAlthough it works with @FooBarWidgets Vagrantfile it takes a while for vagrant to be able to SSH into the container (~32s) I dunno why that happens but I hope it has nothing to do with Vagrant :smiley: $ cat Vagrantfile Vagrantconfigure(2) do |config|  configvmprovider :docker do |d override|    dimage    phusion/baseimage:099    dname     vagrant-docker-test    dcmd      [/sbin/my_init --enable-insecure-key]    dhas_ssh  true  end  configsshusername  root  configsshprivate_key_path  insecure_keyend$ time be vagrant up --providerdockerBringing machine default up with docker provider default: Creating the container    default:   Name: vagrant-docker-test    default:  Image: phusion/baseimage:099    default:    Cmd: /sbin/my_init --enable-insecure-key    default: Volume: /home/fabio/projects/oss/vagrant/example:/vagrant    default:   Port: 2222:22    default:      default: Container created: da40f38c38de4a6b default: Starting container default: Waiting for machine to boot This may take a few minutes    default: SSH address: 1721704:22    default: SSH username: root    default: SSH auth method: private key    default: Warning: Connection timeout Retrying    default: Warning: Connection timeout Retrying default: Machine booted and readyreal0m32962suser0m1858ssys0m0313s$ be vagrant ssh -c echo Hello DockerHello DockerConnection to 1721704 closed,,990,0.7393939393939394,0.5065590312815338,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,44,1575,17,travis,fgrehm,mitchellh,false,mitchellh,28,0.8928571428571429,368,143,1835,true,true,true,false,7,31,4,0,45,7,2625
3690087,mitchellh/vagrant,ruby,3804,1400192997,,1400364502,2858,,unknown,false,false,false,91,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.539457971467963,0.08822455565620628,15,nikhil.benesch@gmail.com,plugins/synced_folders/rsync/helper.rb,15,0.015151515151515152,0,0,false,RSync folder synchonization on Windows isnt compatible with MSYS-port of RSync If MSYS port of RSync tool is used on Windows for folder synchronization it fails with errorrsync: change_dir /cygdrive/c/Users/michaelkuzmin/Projects/vagrant failed: Bad file number (9)This is because MSYS expects file paths in form of /c/Users/michaelkuzmin/Projects/vagrant without leading /cygdrive partThe pull request adds additional check for this caseAlso it would be great if you reopen https://githubcom/mitchellh/vagrant/issues/3236 and bundle rsync and openssh right in Vagrant installerThat would significantly simplify Vagrant adoption by developers in our company,,989,0.7401415571284126,0.5070707070707071,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,44,1575,17,travis,mkuzmin,mitchellh,false,,0,0,18,7,1135,false,false,true,false,0,0,0,0,0,0,2858
3677349,mitchellh/vagrant,ruby,3795,1400138908,1433022495,1433022495,548059,548059,merged_in_comments,false,true,false,50,5,5,0,12,0,12,0,6,6,0,7,13,12,0,1,6,0,7,13,12,0,1,910,0,910,0,152.25640463391667,2.9591308606443567,40,takekazuomi@gmail.com,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/customize.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/add_switch_to_vm.ps1|plugins/providers/hyperv/scripts/create_switch.ps1|plugins/providers/hyperv/scripts/find_vm_switch_name.ps1|plugins/providers/hyperv/scripts/get_adapters.ps1|plugins/providers/hyperv/scripts/switch_exist.ps1|templates/locales/providers_hyperv.yml|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/import_vm.ps1|templates/locales/providers_hyperv.yml|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/import_vm.ps1|templates/locales/providers_hyperv.yml|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/customize.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/add_switch_to_vm.ps1|plugins/providers/hyperv/scripts/create_switch.ps1|plugins/providers/hyperv/scripts/find_vm_switch_name.ps1|plugins/providers/hyperv/scripts/get_adapters.ps1|plugins/providers/hyperv/scripts/switch_exist.ps1|templates/locales/providers_hyperv.yml,28,0.007077856420626896,0,12,false,[Vagrant][HyperV] Customization New feature for vagrant-hyperv for including networking customization during pre-boot With this feature one can customize which virtual switch the VM can take from the VagrantfileExample usage rubyconfigvmprovider hyperv do |hv override|   hvcustomize  [virtual_switch { type: External name: External Switch :adapter  Ethernet }]end ,,988,0.7398785425101214,0.5075834175935288,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,45,1575,134,travis,ramakrishnan,sethvargo,false,sethvargo,7,0.5714285714285714,3,3,1106,true,false,false,false,1,2,11,1,0,0,124618
3675721,mitchellh/vagrant,ruby,3788,1400059458,,1400122147,1044,,unknown,false,false,false,50,2,2,0,1,0,1,0,2,6,0,7,13,12,0,1,6,0,7,13,12,0,1,455,0,455,0,76.10217236000581,1.47906140386632,40,takekazuomi@gmail.com,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/customize.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/add_switch_to_vm.ps1|plugins/providers/hyperv/scripts/create_switch.ps1|plugins/providers/hyperv/scripts/find_vm_switch_name.ps1|plugins/providers/hyperv/scripts/get_adapters.ps1|plugins/providers/hyperv/scripts/switch_exist.ps1|templates/locales/providers_hyperv.yml|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/import_vm.ps1|templates/locales/providers_hyperv.yml,28,0.007070707070707071,0,0,false,[Vagrant][HyperV] Customization New feature for vagrant-hyperv for including networking customization during pre-boot With this feature one can customize which virtual switch the VM can take from the VagrantfileExample usage rubyconfigvmprovider hyperv do |hv override|   hvcustomize  [virtual_switch { type: External name: External Switch :adapter  Ethernet }]end ,,987,0.7406281661600811,0.5070707070707071,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,46,1574,13,travis,ramakrishnan,mitchellh,false,,6,0.6666666666666666,3,3,1105,true,false,true,false,1,1,10,1,0,0,1044
3690140,mitchellh/vagrant,ruby,3783,1400029891,1400365191,1400365191,5588,5588,commits_in_master,false,false,false,32,2,1,0,5,0,5,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,1,0,1,2,4.423253779321499,0.08596681620103361,21,mitchell.hashimoto@gmail.com,plugins/kernel_v2/config/vm.rb,21,0.021148036253776436,0,1,false,Set disabled even if no disabled option to override the previous settingsVagrantfile in a boxrubyconfigvmsynced_folder  /vagrant disabled: trueUsers Vagrantfilerubyconfigvmsynced_folder  /vagrant type: nfs,,986,0.7403651115618661,0.5055387713997986,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,45,1573,16,travis,YungSang,mitchellh,false,mitchellh,0,0,46,3,2087,false,true,false,false,0,1,0,0,0,1,7
3811095,mitchellh/vagrant,ruby,3776,1400009536,1400010571,1400010571,17,17,github,false,false,false,70,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.030513099876475,0.07834290445161374,8,sneal@sneal.net,plugins/provisioners/puppet/provisioner/puppet.rb,8,0.008056394763343404,0,0,false,fix windows guest with puppet and a facter block Powershell doesnt understand the unix-style ENVthing command syntax the old vagrant-windows plugin monkey patched the provisioner to put semicolons between statements to set the variables before running puppet - this fixes the issue inside a windows block leaving the normal non-windows code path working - therefore works for me on both unix and windows provisions with a facter block in place,,985,0.7401015228426396,0.5055387713997986,26106,516.8543629816901,43.591511529916495,80.67111008963457,5758,45,1573,12,travis,agilebarbecue,,false,,0,0,0,0,405,true,false,false,false,0,0,0,0,1,0,17
3666322,mitchellh/vagrant,ruby,3719,1399584738,1399585710,1399585710,16,16,github,false,false,false,75,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,4,4,4,9.152472268650442,0.1781802290346474,26,mitchell.hashimoto@gmail.com,test/unit/plugins/providers/docker/driver_test.rb|plugins/providers/docker/driver.rb,23,0.02358974358974359,0,0,false,Fix docker container linking v160 assumed (rightfully) that drivers params[:links] is a hash Then b68cb6d started to treat this param as an array instead (wrongfully) It was included in v161 which tries to run something like this docker run  --link [db db] instead of --link db:dbparams[:links] is [indeed](https://githubcom/mitchellh/vagrant/blob/master/plugins/providers/docker/action/createrb#L92-96) a hash and not an arrayThis PR reverts that commit and fixes the tests to pass a hash and not an array to Driver#create,,984,0.7398373983739838,0.5158974358974359,26035,516.6122527367006,43.5567505281352,80.23814096408681,5758,40,1568,12,travis,goshakkk,goshakkk,true,goshakkk,0,0,193,361,1411,true,true,false,false,0,0,0,0,2,0,15
3664983,mitchellh/vagrant,ruby,3717,1399577138,1399577283,1399577283,2,2,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.20977608726298,0.08195615757362115,1,mitchell.hashimoto@gmail.com,website/www/helpers/download_helpers.rb,1,0.0010319917440660474,0,0,false,changed titles of package downloads Like discussed in #3704,,983,0.7395727365208545,0.5190918472652218,26033,516.6519417662198,43.560096800215106,80.24430530480544,5758,39,1568,12,travis,berendt,berendt,true,berendt,12,0.6666666666666666,22,8,1318,true,false,false,false,3,17,19,0,5,0,2
3663368,mitchellh/vagrant,ruby,3714,1399568882,1399576056,1399576056,119,119,github,false,false,false,16,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.3778818205018695,0.08522882000300958,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/puppet_apply.html.md,3,0.003105590062111801,0,0,false,Amend default manifest name for puppet apply Option listing still quoted initpp as default manifest name,,982,0.7393075356415478,0.520703933747412,26033,516.3062267122498,43.560096800215106,80.205892521031,5758,39,1568,14,travis,szuliq,szuliq,true,szuliq,0,0,15,14,1557,true,false,false,false,0,0,0,0,1,0,119
3661077,mitchellh/vagrant,ruby,3709,1399553368,,1399576691,388,,unknown,false,false,false,53,1,1,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,4.796534245593881,0.09337916613955742,0,,templates/guests/debian/network_bridged.erb,0,0.0,0,0,false,add debian/network_bridgederb template Having templates for bridged type networks allows me to configure a default gateway on the bridged interface instead on the nat eth0for example in my Vagrantfile:  cvmnetwork(:public_network {   :bridge  en2: Thunderbolt Ethernet   :type  :bridged   :ip  17226133137    :netmask  255255255192   :gateway  17226133129   :drop_nat_interface_default_route  true  }),,981,0.7400611620795107,0.5212435233160622,26033,516.3062267122498,43.560096800215106,80.205892521031,5758,38,1568,13,travis,assens,assens,true,,0,0,1,0,461,false,false,false,false,0,0,0,0,0,0,-1
3660702,mitchellh/vagrant,ruby,3707,1399550884,1414142300,1414142300,243190,243190,commits_in_master,false,false,false,36,1,1,0,3,0,3,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,0,3,0,9.149559548438809,0.17812407822633133,2,mitchell.hashimoto@gmail.com,lib/vagrant/util/io.rb|lib/vagrant/util/subprocess.rb,2,0.002072538860103627,0,0,false,fix subprocess external encode issue  fix vagrant up failed if interface name include non ASCII characterhttps://githubcom/mitchellh/vagrant/issues/3706in iorb subprocess resuts convert external encoding to utf-8in subprocessrb command line argument convert utf-8 to  external encoding,,980,0.7397959183673469,0.5212435233160622,26033,516.3062267122498,43.560096800215106,80.205892521031,5758,38,1568,31,travis,takekazuomi,mitchellh,false,mitchellh,0,0,18,29,1851,false,false,false,false,1,0,0,0,0,0,426
3660016,mitchellh/vagrant,ruby,3704,1399545730,,1399576649,515,,unknown,false,false,false,6,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.208992387965013,0.0819408721697252,1,mitchell.hashimoto@gmail.com,website/www/helpers/download_helpers.rb,1,0.0010362694300518134,0,0,false,provided RPMs also work on openSUSE ,,979,0.7405515832482125,0.5212435233160622,26033,516.3062267122498,43.560096800215106,80.205892521031,5758,38,1568,13,travis,berendt,berendt,true,,11,0.7272727272727273,22,8,1318,true,false,false,false,3,15,17,0,4,0,0
3655394,mitchellh/vagrant,ruby,3697,1399503530,,1399510882,122,,unknown,false,false,false,11,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.3485648038188875,0.084661449796158,3,mitchell.hashimoto@gmail.com,plugins/providers/docker/communicator.rb,3,0.0031413612565445027,0,0,false,Fix invalid variable name Missing shell variable: shell_cmd renamed to shell,,978,0.7413087934560327,0.5298429319371728,26008,516.8025223008306,43.60196862503845,80.28298984927714,5758,38,1567,11,travis,tupy,tupy,true,,0,0,43,11,906,false,false,false,false,0,0,0,0,0,0,-1
3652843,mitchellh/vagrant,ruby,3673,1399483391,1399491040,1399491040,127,127,github,false,false,true,19,4,1,0,3,0,3,0,3,0,0,0,2,3,0,0,0,0,2,2,4,0,0,0,0,4,15,0,0.0,0,,test/unit/plugins/providers/docker/config_test.rb|test/unit/plugins/providers/docker/driver_test.rb|test/unit/plugins/providers/docker/synced_folder_test.rb,0,0.0,0,2,false,providers/docker: Rename test files for consistency I just noticed I kept the _spec suffix from the old plugin :blush: ,,977,0.7410440122824974,0.5351521511017838,26005,516.5160546048837,43.530090367237065,80.21534320323015,5757,38,1567,12,travis,fgrehm,mitchellh,false,mitchellh,27,0.8888888888888888,368,143,1827,true,true,true,false,4,22,3,0,38,6,9
3652972,mitchellh/vagrant,ruby,3670,1399475060,1399491653,1399491653,276,276,commits_in_master,false,false,false,64,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.012636185302619,0.07812160937529644,1,mitchell.hashimoto@gmail.com,lib/vagrant/config/v2/loader.rb,1,0.0010504201680672268,0,0,false,public_send vs send when merging configs This fixes the problem when config keys collide with Kernel/Objectmethods (private) An example is exec which is used in vagrant-execpluginCompare:ruby oldsend :execArgumentError: wrong number of arguments (0 for 1+) oldpublic_send :exec #Vagrant::Config::V2::DummyConfig:0x007fe212cc05c8PS You might suggest me to rename method from exec but public_send is still safer to use,,976,0.7407786885245902,0.5357142857142857,26005,516.5160546048837,43.530090367237065,80.21534320323015,5757,38,1567,11,travis,p0deje,mitchellh,false,mitchellh,2,0.0,62,62,1152,true,true,false,false,0,2,1,1,2,0,276
3662836,mitchellh/vagrant,ruby,3643,1399399668,1399401744,1399401744,34,34,github,false,false,false,48,3,3,0,1,0,1,0,2,1,0,4,5,3,2,0,1,0,4,5,3,2,0,84,0,84,0,27.798555237892643,0.5436968942507853,1,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/configure_networks.rb|plugins/guests/redhat/cap/configure_networks.rb|templates/guests/redhat/network_dhcp.erb|templates/guests/redhat/network_static.erb|plugins/guests/redhat/cap/interfaces_list.rb|plugins/guests/redhat/plugin.rb,1,0.0,0,2,false,Rhel7 guest plugin fixes Add guest support for networking in EL7 ahead of its formal release by splitting out the interface listing into its own major version testing capability Uses dmesg parsing for pre el6 and the biosdevname strategy used for FC18+ for later versionsTested in EL5/6/7,,975,0.7405128205128205,0.5471092077087795,25901,517.7020192270568,43.58905061580634,80.42160534342304,5757,37,1566,12,travis,cammoraton,,false,,0,0,2,1,719,true,false,false,false,0,0,0,0,3,0,34
3660100,mitchellh/vagrant,ruby,3640,1399391873,1399392509,1399392509,10,10,github,false,false,false,2,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.078222373089436,0.07976374368542019,103,vagrant@adamspiers.org,templates/locales/en.yml,103,0.11051502145922747,0,0,false,Fix typo ,,974,0.7402464065708418,0.5482832618025751,25901,517.7020192270568,43.58905061580634,80.42160534342304,5757,36,1566,12,travis,felixrabe,,false,,0,0,8,1,1329,true,false,false,false,0,1,0,0,1,0,-1
3642655,mitchellh/vagrant,ruby,3638,1399342097,1399402070,1399402070,999,999,github,false,false,false,160,5,2,1,3,0,4,0,3,0,0,2,2,2,0,0,2,0,2,4,2,0,2,4,0,12,0,8.790841892671612,0.17207827565050757,7,teemu.matilainen@iki.fi,plugins/hosts/bsd/cap/nfs.rb|plugins/hosts/linux/cap/nfs.rb,5,0.005324813631522897,0,0,false,Improve use of sudo for NFS export manipulation Some users (myself and the denizens of #2642 included) want to allow Vagrant to manipulate NFS configs without requesting a sudo password each timeThe current approach using sudo -s requires that we permit the whole shell to be run passwordless in sudoers and thats rather too open to be safeThis patch uses an alternative idiom using tee instead of output redirection to append to the exports file  On application of this patch the following sudoers config (on OSX at least) permits fully passwordless operation in a much safer manner:Cmnd_Alias VAGRANT_EXPORTS_ADD  /usr/bin/tee -a /etc/exportsCmnd_Alias VAGRANT_NFSD  /sbin/nfsd restartCmnd_Alias VAGRANT_EXPORTS_REMOVE  /usr/bin/sed -E -e /*/ d -ibak /etc/exports%admin ALL(root) NOPASSWD: VAGRANT_EXPORTS_ADD VAGRANT_NFSD VAGRANT_EXPORTS_REMOVEThis feels like a good interim step if work on the suid helper has paused for nowNB: Ive been unable to test the patch to the Linux plugin at this time,,973,0.7399794450154162,0.5527156549520766,25847,517.2360428676442,43.56404998645878,80.35748829651409,5757,34,1565,11,travis,jtopper,jtopper,true,jtopper,1,1.0,3,0,1112,true,true,false,false,0,1,0,0,3,0,289
3639088,mitchellh/vagrant,ruby,3632,1399286110,1399317715,1399317715,526,526,commits_in_master,false,false,false,84,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,10,0,10,4.796787844644427,0.09389562567399265,14,mitchell.hashimoto@gmail.com,test/unit/plugins/provisioners/ansible/provisioner_test.rb,14,0.014989293361884369,0,1,false,provisioners/ansible: try to improve unit tests So far I still cannot explain the cause of [these random errors](https://travis-ciorg/mitchellh/vagrant/builds/24283888) in this reusable part of the ansible provisioner unit testsbut it is anyway safe and suitable to update the test code as following:- use stricter regular expression matching (-l is included in --limit)- array lengths substraction instead of array contents substractionLets see if the problem remains with these updatesPS: Travis build currently fails for other reason (unit tests in guest Ubuntu/Debian),,972,0.7397119341563786,0.5524625267665952,25838,516.9517764532858,43.540521712206825,80.3080733802926,5755,33,1565,11,travis,gildegoma,mitchellh,false,mitchellh,14,0.9285714285714286,45,126,1303,true,true,true,false,11,49,15,7,15,0,526
3636558,mitchellh/vagrant,ruby,3630,1399248894,1399249564,1399249564,11,11,commits_in_master,false,false,false,5,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.550695679650584,0.08917086759057595,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/docker/basics.html.md,2,0.0021482277121374865,0,0,false,fix typo link - like,,971,0.7394438722966015,0.5510204081632653,25788,517.0234217465488,43.50860865518846,80.2311152474019,5749,33,1564,13,travis,also,mitchellh,false,mitchellh,0,0,68,35,2133,false,false,false,false,0,0,0,0,0,0,11
3636082,mitchellh/vagrant,ruby,3628,1399243739,1399259806,1399259806,267,267,commits_in_master,false,false,false,48,2,2,1,3,0,4,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,52,62,52,62,18.99053522410178,0.3721194782404287,29,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,18,0.01933404940923738,0,1,false,provisioners/ansible: show ansible-playbook in use #### Motivation:By printing out the ansible command used behind the scene we can certainly easethe support effort (IRC Mailing list and Gitub Issues of Vagrant and Ansible) to quickly identify whether a problem is due to Vagrant provisioner or Ansible itself,,970,0.7391752577319588,0.5510204081632653,25788,517.0234217465488,43.50860865518846,80.2311152474019,5749,33,1564,12,travis,gildegoma,mitchellh,false,mitchellh,13,0.9230769230769231,45,126,1302,true,true,true,false,10,47,14,6,15,0,2
3633241,mitchellh/vagrant,ruby,3626,1399203215,1399230412,1399230412,453,453,commits_in_master,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.254645170395678,0.08336990231773593,12,teemu.matilainen@iki.fi,bin/vagrant,12,0.012834224598930482,0,0,false,do not overflow exit code see discussion herehttps://githubcom/mitchellh/vagrant/commit/ccc45ebd7a83ce35c248ecc53b3e1c1d6cf9181d,,969,0.7389060887512899,0.5518716577540107,25788,516.5968667597333,43.469830929114316,80.2311152474019,5745,34,1564,12,travis,glensc,mitchellh,false,mitchellh,4,1.0,30,5,1547,false,false,false,false,0,0,0,0,0,0,453
3637435,mitchellh/vagrant,ruby,3625,1399162919,1399260790,1399260790,1631,1631,commits_in_master,false,false,false,54,2,2,0,1,0,1,0,1,0,0,4,4,3,0,1,0,0,4,4,3,0,1,23,0,23,0,21.417906532912284,0.41968453395920563,131,vagrant@adamspiers.org,plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|lib/vagrant/errors.rb|plugins/synced_folders/nfs/synced_folder.rb|templates/locales/en.yml,106,0.0379746835443038,0,0,false,Check nfs usability Currently the  nfs synced folder usability check returns true unless the host is windows or *machineconfignfsfunctional* is set to false As discussed in #3622 this returns the value of the  *nfs_installed* host capability insteadI found a reference to the *nfs_installed* capability in VMConfig and removed it since it seemed redundant,,968,0.7386363636363636,0.5516877637130801,25788,516.5968667597333,43.469830929114316,80.2311152474019,5743,34,1563,11,travis,sciurus,mitchellh,false,mitchellh,0,0,20,20,1142,false,false,false,false,1,2,0,0,0,0,1631
3629944,mitchellh/vagrant,ruby,3618,1399076177,1399080622,1399080622,74,74,github,false,false,false,84,5,5,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,130,0,130,0,23.014971886543684,0.4514086304966932,6,mitchell.hashimoto@gmail.com,website/docs/source/v2/boxes/format.html.md|website/docs/source/v2/boxes/format.html.md|website/docs/source/v2/boxes/format.html.md|website/docs/source/v2/boxes/format.html.md|website/docs/source/v2/boxes/format.html.md,6,0.006179196704428424,0,0,true,Box format doc improvements These changes address most of the issues described in #3613However its still unclear why use of the box catalog metadata JSON document is highly recommended given that:* No explanation is given about how the catalog metadata is used if you create it as a local file* No explanation is given about how the catalog metadata could (or even should) be hosted online* If you create a box via vagrant cloud it will be created automatically anyway,,967,0.7383660806618407,0.5540679711637487,25787,516.6168999883662,43.471516655679224,80.23422654826075,5739,34,1562,12,travis,aspiers,aspiers,true,aspiers,7,0.8571428571428571,66,35,1766,true,false,false,false,2,22,18,0,0,0,73
3629638,mitchellh/vagrant,ruby,3616,1399073515,1399080647,1399080647,118,118,github,false,false,false,38,1,1,0,1,0,1,0,1,1,0,2,3,2,1,0,1,0,2,3,2,1,0,64,0,64,0,14.732491735269953,0.288958594032017,24,odigity@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/networking/private_network.html.md|website/docs/source/v2/virtualbox/networking.html.md,20,0.0041279669762641896,0,0,true,split off virtualbox networking into separate page v2/networking/indexhtmlmd encourages the reader to seekprovider-specific information under the documentation for the providerso for consistency any virtualbox-specific networking info should beplaced there not in the general networking section,,966,0.7380952380952381,0.5562435500515995,25787,516.6168999883662,43.471516655679224,80.23422654826075,5739,34,1562,11,travis,aspiers,aspiers,true,aspiers,6,0.8333333333333334,66,35,1766,true,false,false,false,2,22,17,0,0,0,118
3627062,mitchellh/vagrant,ruby,3614,1399053160,,1399060456,121,,unknown,false,false,false,9,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,3.403463146655633,0.0667527955401312,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,2,0.002066115702479339,0,0,true,remove debug accidentally introduced by 9c420b87 in #3588 https://githubcom/mitchellh/vagrant/issues/3588,,965,0.738860103626943,0.5557851239669421,25787,516.6168999883662,43.471516655679224,80.23422654826075,5730,34,1562,11,travis,aspiers,aspiers,true,,5,1.0,66,35,1766,true,false,false,false,2,19,15,0,0,0,-1
3623543,mitchellh/vagrant,ruby,3607,1399002160,1399002214,1399002214,0,0,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.1714442111769126,0.08181538126800159,104,teemu.matilainen@iki.fi,templates/locales/en.yml,104,0.1077720207253886,0,0,false,fix maintiner typo ,,964,0.7385892116182573,0.5544041450777202,25778,516.7972689890604,43.486694080223444,80.26223911862829,5726,34,1561,12,travis,aspiers,aspiers,true,aspiers,4,1.0,66,35,1765,true,false,false,false,0,16,12,0,0,0,0
3623043,mitchellh/vagrant,ruby,3605,1398996358,,1399015188,313,,unknown,false,false,false,16,1,1,0,4,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.574367977762658,0.08971800681356806,11,vagrant@adamspiers.org,vagrant.gemspec,11,0.011398963730569948,0,21,false,Update net-ssh to 290 This fixes issues when using recent ssh ciphers like Ed25519See https://githubcom/net-ssh/net-ssh/pull/160,,963,0.7393561786085151,0.5544041450777202,25778,516.7972689890604,43.486694080223444,80.26223911862829,5725,34,1561,11,travis,chr4,chr4,true,,0,0,20,7,332,false,false,false,false,0,0,0,0,0,0,0
3622794,mitchellh/vagrant,ruby,3604,1398994317,1398995212,1398995212,14,14,github,false,false,false,97,2,1,0,4,0,4,0,3,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.902591082721444,0.09615419898233152,5,teemu.matilainen@iki.fi,templates/provisioners/chef_solo/solo.erb,5,0.005192107995846314,0,3,false,fix chef version checking the version checking here uses a function which is intended onlyfor chef cookbook versions which must be xy or xyz  when feda legal chef prerelease version the prior code throws an exception:[2014-05-01T22:08:01+00:00] FATAL: Configuration error Chef::Exceptions::InvalidCookbookVersion: 11140alpha1 does not match xyz or xy[2014-05-01T22:08:01+00:00] FATAL:   /tmp/vagrant-chef-2/solorb:6:in from_string[2014-05-01T22:08:01+00:00] FATAL: Aborting due to error in /tmp/vagrant-chef-2/solorbsince we only need to compare the major and minor version numbers asimple #to_f sufficies for this testalternative we could use Gem::Version here but i didnt really seethe need to,,962,0.739085239085239,0.553478712357217,25778,516.7972689890604,43.486694080223444,80.26223911862829,5725,33,1561,11,travis,lamont-granquist,lamont-granquist,true,lamont-granquist,0,0,21,0,1283,false,false,false,false,0,0,0,0,0,0,1
3608167,mitchellh/vagrant,ruby,3603,1398986571,1398988064,1398988064,24,24,github,false,false,false,43,1,1,1,1,0,2,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,34,0,34,0,13.406933423577193,0.26295118720446575,17,tim.messier@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb|website/docs/source/v2/provisioning/salt.html.md,11,0.00625,0,0,false,Add colorization and log_level support to salt provisioner This commit adds two new options to the salt provisioner:- colorize: controls color output Defaults to no-color (present behavior)- log_level: controls log level Defaults to debug (present behavior)Docs includedThis resolves #2314,,961,0.7388137356919875,0.5520833333333334,25761,517.1383098482202,43.51539148324987,80.31520515507938,5723,32,1561,11,travis,eykd,eykd,true,eykd,0,0,14,0,1641,false,false,false,false,0,0,0,0,0,0,24
3620202,mitchellh/vagrant,ruby,3600,1398974037,1398975549,1398975549,25,25,github,false,false,true,37,9,6,0,0,0,0,0,0,0,0,7,9,7,0,0,0,0,9,9,9,0,0,59,87,64,91,55.14012511647201,1.0814794168020352,66,nikhil.benesch@gmail.com,lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/environment.rb|test/unit/support/shared/capability_helpers_context.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|plugins/providers/docker/plugin.rb,36,0.011530398322851153,0,0,false,Default Provider By Priority This introduces smarter Environment#default_provider logic which is done by priority and usability of providers VAGRANT_DEFAULT_PROVIDER still trumps the rest but if that isnt set Vagrant does its best to choose thebest provider,,960,0.7385416666666667,0.5524109014675053,25736,515.387006527821,43.40223811004041,80.12123096052223,5721,32,1561,11,travis,mitchellh,mitchellh,true,mitchellh,26,0.8461538461538461,3510,0,2255,true,true,false,false,476,962,152,11,815,19,-1
3619821,mitchellh/vagrant,ruby,3599,1398971180,1398971393,1398971393,3,3,github,false,false,true,21,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,39,0,39,0,13.4058799776004,0.2629533129102832,2,sax@livinginthepast.org,plugins/guests/smartos/config.rb|plugins/guests/solaris/config.rb|plugins/guests/solaris11/config.rb,2,0.0,0,0,false,Display deprecation warning for unused halt config properties halt_timeout and halt_check_interval will be removed in the next version of Vagrant 17,,959,0.7382690302398331,0.5563751317175974,25712,515.8680771624145,43.442750466708155,80.196017423771,5721,32,1561,11,travis,sneal,sneal,true,sneal,14,0.9285714285714286,31,0,1547,true,false,false,false,1,25,24,0,39,2,3
3619396,mitchellh/vagrant,ruby,3598,1398967520,1398968990,1398968990,24,24,github,false,false,true,17,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,7,10,7,9.15231000288948,0.17951772013599313,3,sneal@sneal.net,plugins/guests/windows/config.rb|test/unit/plugins/guests/windows/config_test.rb,3,0.0031746031746031746,0,0,false,Removed unused halt timeout and check interval settings Removed Windows guest settings which are not used anywhere,,958,0.7379958246346555,0.5555555555555556,25720,515.7853810264386,43.429237947122864,80.248833592535,5721,32,1561,15,travis,sneal,sneal,true,sneal,13,0.9230769230769231,31,0,1547,true,false,false,false,1,24,18,0,38,2,-1
3619347,mitchellh/vagrant,ruby,3597,1398967099,1398969027,1398969027,32,32,github,false,false,true,21,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.503375309395719,0.08833132490094965,10,mitchell.hashimoto@gmail.com,website/docs/source/v2/vagrantfile/machine_settings.html.md,10,0.01059322033898305,0,0,false,Updated website documentation for graceful_halt_timeout The default value in the code is actually [60 seconds](https://githubcom/mitchellh/vagrant/blob/master/plugins/kernel_v2/config/vmrb#L327) so now the docs match that,,957,0.7377220480668757,0.5561440677966102,25720,515.7853810264386,43.429237947122864,80.248833592535,5721,32,1561,14,travis,sneal,sneal,true,sneal,12,0.9166666666666666,31,0,1547,true,false,false,false,1,24,17,0,37,2,-1
3619312,mitchellh/vagrant,ruby,3596,1398966792,,1398971163,72,,unknown,false,false,true,47,1,1,0,1,0,1,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,16,0,16,0,17.838137718094078,0.34988563691714203,172,teemu.matilainen@iki.fi,CHANGELOG.md|plugins/guests/smartos/config.rb|plugins/guests/solaris/config.rb|plugins/guests/solaris11/config.rb,170,0.0021208907741251328,0,0,false,Removed unused Solaris and SmartOS halt config properties These config properties were removed or replaced by graceful_halt_timeout in a prior release of VagrantI dont have a Solaris box so I couldnt try this out but there are no usages of these config properties inside Vagrant itself,,956,0.7384937238493724,0.5567338282078473,25720,515.7853810264386,43.429237947122864,80.248833592535,5721,32,1561,13,travis,sneal,sneal,true,,11,1.0,31,0,1547,true,false,false,false,1,24,16,0,36,2,48
3619110,mitchellh/vagrant,ruby,3595,1398964981,1398969114,1398969114,68,68,github,false,false,false,14,1,1,0,1,0,1,0,1,0,0,12,12,9,0,0,0,0,12,12,9,0,0,28,0,28,0,54.601961834205376,1.07098860291385,186,teemu.matilainen@iki.fi,CHANGELOG.md|website/docs/source/v2/cli/machine-readable.html.md|website/docs/source/v2/cli/share.html.md|website/docs/source/v2/multi-machine/index.html.md|website/docs/source/v2/networking/forwarded_ports.html.md|website/docs/source/v2/providers/configuration.html.md|website/docs/source/v2/provisioning/cfengine.html.md|website/docs/source/v2/provisioning/puppet_agent.html.md|website/docs/source/v2/provisioning/puppet_apply.html.md|website/www/source/about.html.markdown|website/www/source/blog/2014-02-19-feature-preview-vagrant-1-5-boxes-2-0.html.markdown|website/www/source/blog/2014-02-24-feature-preview-vagrant-1-5-share.html.markdown,170,0.0021231422505307855,0,0,false,fixed typos found by topy in all Markdown files Topy is available at https://githubcom/intgr/topy,,955,0.7382198952879581,0.5573248407643312,25720,515.7853810264386,43.429237947122864,80.248833592535,5721,32,1561,13,travis,berendt,berendt,true,berendt,10,0.7,22,8,1311,true,false,false,false,3,15,14,0,4,0,68
3617771,mitchellh/vagrant,ruby,3594,1398947980,1398969459,1398969459,357,357,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.332974880762466,0.0849890106164925,0,,website/docs/source/v2/providers/configuration.html.md,0,0.0,0,0,false,fix necessarilly typo ,,954,0.7379454926624738,0.5573248407643312,25720,515.7853810264386,43.429237947122864,80.248833592535,5721,32,1561,13,travis,aspiers,aspiers,true,aspiers,3,1.0,66,35,1765,true,false,false,false,0,14,9,0,0,0,357
3616656,mitchellh/vagrant,ruby,3593,1398926480,1398937606,1398937606,185,185,github,false,false,true,54,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,8.219530816393517,0.1613690586645644,14,ru@ryanuber.com,plugins/provisioners/shell/provisioner.rb|plugins/provisioners/shell/provisioner.rb,14,0.014893617021276596,0,0,false,Elevated winrm shell provisioner Defaults to running the WinRM shell provisioner elevated via a scheduled task - like the Chef provisioner This makes it possible for example to install NET via the shell provisionerFixed remote shell scripts for all platforms The with_script_file method was deleting the temporary script file on the host twice,,953,0.7376705141657922,0.5563829787234043,25723,515.7252264510361,43.424172919177394,80.23947440034212,5721,32,1561,11,travis,sneal,sneal,true,sneal,10,1.0,31,0,1547,true,false,false,false,1,24,13,0,35,2,185
3615956,mitchellh/vagrant,ruby,3592,1398915602,1398916006,1398916006,6,6,github,false,false,true,18,2,2,0,1,0,1,0,2,0,0,5,5,5,0,0,0,0,5,5,5,0,0,28,22,28,22,20.79721851011596,0.41057019426568797,18,teemu.matilainen@iki.fi,test/unit/plugins/guests/windows/cap/reboot_test.rb|plugins/guests/windows/cap/reboot.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/puppet/provisioner/puppet.rb,11,0.00536480686695279,0,1,false,Reboot capability should fix symlinks This cleans up some of the duplication and guest branching in the provisioners,,952,0.7373949579831933,0.5547210300429185,25737,515.2892722539535,43.36169716750204,80.19582701946614,5721,32,1560,11,travis,sneal,sneal,true,sneal,9,1.0,31,0,1546,true,false,false,false,1,23,10,0,33,2,6
3605821,mitchellh/vagrant,ruby,3587,1398896749,1398908052,1398908052,188,188,github,false,false,false,83,1,1,1,3,0,4,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,11,0,11,0,8.916861849555541,0.17602892129729142,12,vagrant@adamspiers.org,lib/vagrant/bundler.rb|vagrant.gemspec,9,0.00967741935483871,0,2,false,add support for bundler  16x bundler changed their API for Bundler::UI in 160 via this commit:* https://githubcom/bundler/bundler/commit/5e38e2d7This caused various issues eg* https://githubcom/mitchellh/vagrant/issues/3451* https://githubcom/test-kitchen/test-kitchen/issues/401which will hopefully be resolved by teaching vagrant to cope with both API versions**NB I was not able to test this against any bundler ~ 152 yet  Please test that before merging  It seems to work for me with 162 so far though I have not done anything other than a basic vagrant up**,,951,0.7371188222923238,0.553763440860215,25731,515.409428316039,43.37180832458902,80.21452722397109,5720,32,1560,11,travis,aspiers,aspiers,true,aspiers,2,1.0,66,35,1764,true,false,false,false,0,13,6,0,0,0,176
3611971,mitchellh/vagrant,ruby,3585,1398881290,1398885779,1398885779,74,74,github,false,false,false,45,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,12,0,12,0,11.997625182198522,0.23684658599064967,6,oscar@renalias.net,plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb,6,0.003236245954692557,0,0,false,backport GH-3277 fix for missing interpolation to older drivers The original fix for the missing interpolation argument :stderr bugwas in d4b3f226 but it only addressed the driver for VirtualBox 43:  https://githubcom/mitchellh/vagrant/issues/3277This backports the fix to the drivers for VirtualBox 40 41 and 42,,950,0.7368421052631579,0.552319309600863,25725,515.5296404275996,43.38192419825073,80.23323615160349,5720,32,1560,11,travis,aspiers,aspiers,true,aspiers,1,1.0,66,35,1764,true,false,false,false,0,12,3,0,0,0,74
3605972,mitchellh/vagrant,ruby,3581,1398826979,1398827049,1398827049,1,1,github,false,false,false,32,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.542041783896822,0.08966501926136868,7,mitchell.hashimoto@gmail.com,vagrant.gemspec,7,0.00755939524838013,0,0,false,add dependency on Ruby  200 Vagrant requires Ruby 2 eg for ** keyword argumentsNB I havent been able to fully test this myself yet so please sanity check before merging,,949,0.7365648050579557,0.5518358531317494,25725,515.5296404275996,43.38192419825073,80.23323615160349,5715,31,1559,11,travis,aspiers,aspiers,true,aspiers,0,0,66,35,1763,false,false,false,false,0,12,0,0,0,0,0
3605760,mitchellh/vagrant,ruby,3580,1398825188,1398825191,1398825191,0,0,github,false,false,true,17,3,3,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,6,6,6,0,0,66,0,66,0,38.06159340987217,0.7283087850789054,31,mitchell.hashimoto@gmail.com,plugins/providers/docker/command/run.rb|lib/vagrant/util/ssh.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/driver.rb|plugins/providers/docker/executor/local.rb|plugins/providers/docker/executor/vagrant.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/command/run.rb|plugins/providers/docker/driver.rb,19,0.004343105320304018,0,0,false,vagrant docker-run tty This adds the --tty flag which allocates a pty for docker-run allowing interactive stuff,,948,0.7362869198312236,0.5494028230184582,25702,553.2254299276321,45.40502684615983,88.20325266516224,5715,31,1559,11,travis,mitchellh,mitchellh,true,mitchellh,25,0.84,3510,0,2253,true,true,false,false,468,938,149,10,789,19,-1
3601979,mitchellh/vagrant,ruby,3576,1398800415,,1398800694,4,,unknown,false,false,false,26,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,22,0,22,0,4.329099096996322,0.08291085954490825,9,tim.messier@gmail.com,plugins/provisioners/salt/provisioner.rb,9,0.009868421052631578,0,0,false,Added function to cleanup temp files after salt bootstrap This will ensure that clean files are always copied into tmp during eachvagrant provision See #3542,,947,0.737064413938754,0.5493421052631579,25697,553.3330738996771,45.413861540257614,88.22041483441646,5707,30,1559,12,travis,shadowfax-chc,shadowfax-chc,true,,3,1.0,8,0,490,false,true,false,false,4,5,3,0,0,0,-1
3602025,mitchellh/vagrant,ruby,3575,1398800409,1398800685,1398800685,4,4,github,false,false,false,29,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.517198747418089,0.08651334203540752,9,tim.messier@gmail.com,plugins/provisioners/salt/provisioner.rb,9,0.009868421052631578,0,0,false,Set u+w perms on private keys in tmp dir This should allow additional vagrant provision calls to work whenusing the salt provisioner and providing private keys See #3542,,946,0.7367864693446089,0.5493421052631579,25697,553.3330738996771,45.413861540257614,88.22041483441646,5707,30,1559,12,travis,shadowfax-chc,shadowfax-chc,true,shadowfax-chc,2,1.0,8,0,490,false,true,false,false,4,5,2,0,0,0,4
3599024,mitchellh/vagrant,ruby,3572,1398778772,1398784716,1398784716,99,99,commits_in_master,false,false,false,8,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.533493175225154,0.08682541376933726,11,mitchell.hashimoto@gmail.com,bin/vagrant,11,0.012074643249176729,0,0,false,[ci skip] Fix a typo in bin/vagrant comment ,,945,0.7365079365079366,0.5488474204171241,25697,553.3330738996771,45.413861540257614,88.22041483441646,5704,30,1559,11,travis,JuanitoFatas,tmatilai,false,tmatilai,0,0,501,327,979,false,true,false,false,0,0,0,0,0,0,-1
3586681,mitchellh/vagrant,ruby,3560,1398659900,1398660800,1398660800,15,15,commits_in_master,false,false,true,36,8,8,0,0,0,0,0,0,1,0,11,12,11,0,1,1,0,11,12,11,0,1,232,25,232,25,81.00837635219388,1.5527053979324128,97,mitchell.hashimoto@gmail.com,plugins/providers/docker/action/create.rb|plugins/providers/docker/config.rb|plugins/providers/docker/driver.rb|test/unit/plugins/providers/docker/config_spec.rb|plugins/providers/docker/action.rb|lib/vagrant/environment.rb|plugins/providers/virtualbox/provider.rb|plugins/providers/docker/action.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/command/run.rb|plugins/providers/docker/driver.rb|plugins/providers/docker/plugin.rb|templates/locales/providers_docker.yml|lib/vagrant/ui.rb|plugins/providers/docker/action/create.rb|plugins/providers/docker/driver.rb|templates/locales/providers_docker.yml|plugins/providers/docker/action/create.rb|plugins/providers/docker/executor/vagrant.rb,34,0.01220865704772475,0,0,false,docker-run command This will run one-off commands against a docker container This is useful if for example you want to initialize a rails env using a Rail docker container: vagrant docker-run web -- rails new ,,944,0.736228813559322,0.5438401775804661,25597,554.7134429815994,45.51314607180529,88.40879790600462,5690,30,1557,11,travis,mitchellh,mitchellh,true,mitchellh,24,0.8333333333333334,3508,0,2251,true,true,false,false,452,904,147,10,771,17,-1
3584579,mitchellh/vagrant,ruby,3559,1398631870,,1398649731,297,,unknown,false,false,false,41,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.630012634295809,0.08851738431248815,159,teemu.matilainen@iki.fi,CHANGELOG.md,159,0.18088737201365188,0,0,false,Document the change to use a directory for vagrant in CHANGELOGmd Prior to 110 vagrant was a file and once you run Vagrant 11+ on aproject Vagrant 10x will stop working  This change happened atapproximately commit 4e649cc98792c192c1589a0bd86e8433e90f60cdAddresses https://githubcom/mitchellh/vagrant/issues/3558,,943,0.7370095440084835,0.5415244596131968,25619,550.9582731566416,44.9666263320192,87.63027440571452,5687,30,1557,19,travis,wtanaka,mitchellh,false,,0,0,5,6,1983,false,false,false,false,1,0,0,0,0,0,297
3584226,mitchellh/vagrant,ruby,3557,1398627417,1398649778,1398649778,372,372,commits_in_master,false,false,false,36,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,32,0,32,0,7.862898552511448,0.15032425782756415,6,tim.messier@gmail.com,plugins/provisioners/salt/provisioner.rb|plugins/provisioners/salt/provisioner.rb,6,0.006825938566552901,0,0,false,Correct bootstrap args  The various install args should always be passed to salt-bootstrapEven when preforming config only the install flags (ie -M -S -N)are used by the bootstrap to determine which configs to copy,,942,0.7367303609341825,0.5415244596131968,25619,550.9582731566416,44.9666263320192,87.63027440571452,5686,30,1557,18,travis,shadowfax-chc,mitchellh,false,mitchellh,1,1.0,8,0,488,false,true,false,false,4,4,1,0,0,0,372
3581992,mitchellh/vagrant,ruby,3554,1398583457,1398649890,1398649890,1107,1107,commits_in_master,false,false,true,103,9,9,0,1,0,1,0,1,3,6,9,18,11,4,0,3,6,9,18,11,4,0,256,230,256,230,72.82331205544102,1.3922487062716478,27,teemu.matilainen@iki.fi,plugins/provisioners/chef/command_builder.rb|plugins/provisioners/chef/command_builder_linux.rb|plugins/provisioners/chef/command_builder_windows.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/base.rb|test/unit/plugins/provisioners/chef/command_build_windows_spec.rb|test/unit/plugins/provisioners/chef/command_builder_spec.rb|plugins/provisioners/chef/command_builder_windows.rb|test/unit/plugins/provisioners/chef/command_build_windows_spec.rb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|plugins/communicators/winrm/scripts/elevated_shell.ps1.erb|plugins/communicators/winrm/communicator.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|plugins/communicators/winrm/communicator.rb|plugins/provisioners/chef/command_builder_windows.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/scripts/cheftask.ps1.erb|plugins/provisioners/chef/scripts/cheftask.xml.erb|plugins/provisioners/chef/scripts/cheftaskrun.ps1.erb,12,0.0011389521640091116,0,0,false,Chef provisioner cleanup Replaced the Chef only elevated shell scripts with a single reusable PowerShell script that can be used by any command that spawns a new process This will be used by the shell and puppet provisioners for Windows guestsBuilding the Chef client and solo commands is now done by a single class for all platforms This reduced a lot of duplication and allowed unit tests to be added around itReboot capability was not getting invoked like it should have been by the Chef provisioners - fixedChef binary_path config setting was not getting properly consumed on Linux - fixed,,941,0.7364505844845909,0.541002277904328,25619,550.9582731566416,44.9666263320192,87.63027440571452,5684,30,1557,17,travis,sneal,mitchellh,false,mitchellh,8,1.0,31,0,1543,true,false,false,false,1,21,9,0,31,2,1107
3580641,mitchellh/vagrant,ruby,3553,1398558275,1398649938,1398649938,1527,1527,commits_in_master,false,false,false,24,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.51060561727994,0.08623454025791484,9,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/helper.rb,9,0.01021566401816118,0,0,false,Add SSH proxy_command functionality to rsync Brings SSH proxy_command to rsync  Tested with vagrant-libvirt plugin can now properly rsync to machine on remote server,,940,0.7361702127659574,0.5402951191827469,25619,550.9582731566416,44.9666263320192,87.63027440571452,5683,30,1556,16,travis,bclarkindy,mitchellh,false,mitchellh,0,0,0,0,442,false,true,false,false,0,0,0,0,0,0,1527
3580410,mitchellh/vagrant,ruby,3552,1398554874,1398650064,1398650064,1586,1586,commits_in_master,false,false,false,88,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.836488564209142,0.07334665355620926,11,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/command/rsync_auto.rb,11,0.012485811577752554,0,0,false,command/rsync-auto: properly exit on interrupt Currently interrupting vagrant rsync-auto once its waiting forfilesystem events has no effect Appears to be a deadlock related tosignal handlers in Ruby 20 [0]Remove call to threadjoin in signal handler The handler doesntneed to wait for true to be added to the queue it just needs tolaunch the threadTo reproduce: 1 Launch vagrant rsync-auto1 Wait for Vagrant to print Watching: paths1 Press Ctrl+C repeatedly Note that nothing happensOS X 1092 Ruby 200p353[0]: https://bugsruby-langorg/issues/7917,,939,0.7358892438764644,0.5402951191827469,25619,550.9582731566416,44.9666263320192,87.63027440571452,5683,30,1556,15,travis,benesch,mitchellh,false,mitchellh,3,1.0,8,1,1032,false,false,false,false,2,4,3,0,0,0,1586
3580189,mitchellh/vagrant,ruby,3551,1398551946,1398650126,1398650126,1636,1636,commits_in_master,false,false,false,44,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,4,5,4,8.249072512689349,0.15770719855462367,11,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/mixin_synced_folders.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb,9,0.01021566401816118,0,0,false,core: return {} if cached synced folders file missing [GH-3550] A missing synced folders cache indicates an empty cache not a failure thatshould be handled by the caller The cache file is missing from data dirscreated by an earlier version of Vagrant,,938,0.7356076759061834,0.5402951191827469,25619,550.9582731566416,44.9666263320192,87.63027440571452,5683,30,1556,14,travis,benesch,mitchellh,false,mitchellh,2,1.0,8,1,1032,false,false,false,false,2,4,2,0,0,0,1636
3577513,mitchellh/vagrant,ruby,3549,1398510645,1398650197,1398650197,2325,2325,commits_in_master,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.049152648073633,0.07741224640012442,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/base.rb,2,0.0022727272727272726,0,0,false,Fix vbox install path detection on Windows ,,937,0.7353255069370331,0.5397727272727273,25619,550.6850384480268,44.9666263320192,87.66930793551661,5675,30,1556,14,travis,javornikolov,mitchellh,false,mitchellh,0,0,2,0,1532,false,false,false,false,0,1,0,0,0,0,2325
3577472,mitchellh/vagrant,ruby,3548,1398509421,,1398650301,2348,,unknown,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,3.854667552808766,0.0736940541203253,6,tim.messier@gmail.com,plugins/provisioners/salt/provisioner.rb,6,0.006818181818181818,0,1,false,no_minion option is relevant when only configuring salt (#3542) ,,936,0.7361111111111112,0.5397727272727273,25619,550.6850384480268,44.9666263320192,87.66930793551661,5675,30,1556,13,travis,bmcorser,mitchellh,false,,0,0,6,1,798,false,false,false,false,2,1,0,0,0,0,2347
3572354,mitchellh/vagrant,ruby,3544,1398467494,1398650380,1398650380,3048,3048,commits_in_master,false,false,false,119,1,1,0,1,0,1,0,1,0,0,17,17,17,0,0,0,0,17,17,17,0,0,167,20,167,20,75.94811475935572,1.451982158335705,35,teemu.matilainen@iki.fi,plugins/guests/darwin/cap/rsync.rb|plugins/guests/darwin/plugin.rb|plugins/guests/freebsd/cap/rsync.rb|plugins/guests/freebsd/plugin.rb|plugins/guests/linux/cap/rsync.rb|plugins/guests/linux/plugin.rb|plugins/guests/netbsd/cap/rsync.rb|plugins/guests/netbsd/plugin.rb|plugins/guests/openbsd/cap/rsync.rb|plugins/guests/openbsd/plugin.rb|plugins/guests/smartos/cap/rsync.rb|plugins/guests/smartos/plugin.rb|plugins/guests/solaris/cap/rsync.rb|plugins/guests/solaris/plugin.rb|plugins/guests/solaris11/cap/rsync.rb|plugins/synced_folders/rsync/helper.rb|test/unit/plugins/guests/smartos/cap/rsync_test.rb,9,0.003389830508474576,0,0,true,synced_folders/rsync: only chown when necessary Run remote rsync as root to guarantee that rsync can write to guestpathThis obviates the need to chown the guestpath to the SSH user prior tosyncThis brings a substantial speedup (2x on a moderately-sized sharedfolder) and properly triggers filesystem notifications on only the fileschanged by a given syncThis is the fix I described for #3525—I figured Id put my money where my mouth isTested with an Ubuntu 1204 box and works like a charmNote that though I changed the capabilities for all guests that support rsync I havent actually tested on those OSes I figured Id wait for your feedback before trying to test this everywhere,,935,0.7358288770053476,0.5423728813559322,25619,550.2166360904016,44.927592802217106,87.51317381630821,5671,30,1555,12,travis,benesch,mitchellh,false,mitchellh,1,1.0,8,1,1031,false,false,false,false,1,4,1,0,0,0,3048
3562254,mitchellh/vagrant,ruby,3540,1398405376,1398406202,1398406202,13,13,commits_in_master,false,false,true,15,2,1,0,0,0,0,0,0,3,0,2,7,3,1,1,3,0,4,7,4,1,1,93,0,130,0,23.043421866183184,0.44167144443759004,116,teemu.matilainen@iki.fi,plugins/commands/version/command.rb|plugins/commands/version/plugin.rb|templates/locales/en.yml|website/docs/source/layouts/layout.erb|website/docs/source/v2/cli/version.html.md,102,0.0,0,0,true,vagrant version command This command outputs the current version AND checks for the latest version,,934,0.7355460385438972,0.5379388448471121,25531,550.5463945791391,44.96494457718069,87.57980494301046,5664,30,1555,14,travis,mitchellh,mitchellh,true,mitchellh,23,0.8260869565217391,3506,0,2249,true,true,false,false,445,886,139,10,762,17,-1
3557502,mitchellh/vagrant,ruby,3538,1398371882,1398372122,1398372122,4,4,commits_in_master,false,false,true,53,9,9,0,1,0,1,0,3,0,0,11,11,10,0,1,0,0,11,11,10,0,1,116,189,116,189,72.58492407368128,1.392342120602175,165,teemu.matilainen@iki.fi,lib/vagrant/environment.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/machine.rb|lib/vagrant/machine_index.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/machine_index.rb|plugins/commands/global-status/command.rb|test/unit/vagrant/machine_index_test.rb|lib/vagrant/environment.rb|lib/vagrant/action/builtin/box_remove.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_remove_test.rb|plugins/commands/box/command/remove.rb|test/unit/plugins/commands/box/command/remove_test.rb|plugins/commands/global-status/command.rb,100,0.010752688172043012,0,0,false,Track box usage (local) to know if envs are using boxes This PR adds the ability for Vagrant to know if other Vagrant environments are using boxes We use this to warn users when you do a vagrant box remove more importantly this lays the foundation for what is required for linked clones,,933,0.7352625937834941,0.5344086021505376,25487,545.8076666535882,44.650213834503866,86.78934358692666,5660,30,1554,15,travis,mitchellh,mitchellh,true,mitchellh,22,0.8181818181818182,3504,0,2248,true,true,false,false,443,876,136,10,809,17,3
3556428,mitchellh/vagrant,ruby,3536,1398366348,1398402881,1398402881,608,608,commits_in_master,false,false,false,85,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.1121999216689415,0.07888124472603375,4,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/provisioner.rb,4,0.004305705059203444,0,3,false,Force overwrite of salt configs and keys This will tell the salt-bootstrap script to overwrite the master/minionconfigs and/or keys each time provision is called #3524 #3176Not sure if this is the desired solution This would change the default behavior to always overwrite the configs and keys If the current behavior (which is to never overwrite the config and keys) is the desired default behavior then users can set saltbootstrap_options  -F in the Vagrantfile to overwrite configs and keys on each vagrant provision,,932,0.7349785407725322,0.5339074273412271,25487,545.8076666535882,44.650213834503866,86.78934358692666,5657,30,1554,15,travis,shadowfax-chc,mitchellh,false,mitchellh,0,0,8,0,485,false,true,false,false,2,0,0,0,0,0,14
3555474,mitchellh/vagrant,ruby,3535,1398362282,1398365114,1398365114,47,47,commits_in_master,false,false,true,11,3,3,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,11,11,11,0,0,59,0,59,0,50.1211824867791,0.9614401868399101,16,sneal@sneal.net,plugins/communicators/winrm/command_filter.rb|plugins/communicators/winrm/file_manager.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/command_filter.rb|plugins/communicators/winrm/command_filters/cat.rb|plugins/communicators/winrm/command_filters/chmod.rb|plugins/communicators/winrm/command_filters/chown.rb|plugins/communicators/winrm/command_filters/grep.rb|plugins/communicators/winrm/command_filters/rm.rb|plugins/communicators/winrm/command_filters/test.rb|plugins/communicators/winrm/command_filters/uname.rb|plugins/communicators/winrm/command_filters/which.rb,10,0.002162162162162162,0,0,false,Winrm command filters code review feedback Fixed style issues from #3530 ,,931,0.7346938775510204,0.5351351351351351,25487,545.8076666535882,44.650213834503866,86.78934358692666,5657,30,1554,15,travis,sneal,sneal,true,sneal,7,1.0,31,0,1540,true,false,false,false,1,19,7,0,22,2,-1
3554272,mitchellh/vagrant,ruby,3533,1398356480,1398370631,1398370631,235,235,commits_in_master,false,false,false,4,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.541623559621546,0.08711884251475643,153,teemu.matilainen@iki.fi,CHANGELOG.md,153,0.16612377850162866,0,0,false,Fix typo in CHANGELOGmd ,,930,0.7344086021505376,0.5374592833876222,25487,545.8076666535882,44.650213834503866,86.78934358692666,5655,30,1554,15,travis,ronnix,mitchellh,false,mitchellh,0,0,81,40,1391,false,false,false,false,0,0,0,0,0,0,235
3553842,mitchellh/vagrant,ruby,3530,1398326313,1398339514,1398339514,220,220,github,false,false,true,51,7,7,3,1,0,4,0,1,10,1,6,17,14,0,0,10,1,6,17,14,0,0,410,104,410,104,83.1023356908752,1.6056215578236124,15,sneal@sneal.net,plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/command_filters/test.rb|test/unit/plugins/communicators/winrm/command_filter_test.rb|plugins/communicators/winrm/command_filter.rb|plugins/communicators/winrm/command_filters/cat.rb|plugins/communicators/winrm/command_filters/chmod.rb|plugins/communicators/winrm/command_filters/chown.rb|plugins/communicators/winrm/command_filters/rm.rb|plugins/communicators/winrm/command_filters/test.rb|plugins/communicators/winrm/command_filters/uname.rb|plugins/communicators/winrm/command_filters/which.rb|test/unit/plugins/communicators/winrm/command_filter_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|plugins/communicators/winrm/command_filters/test.rb|plugins/communicators/winrm/command_filter.rb|plugins/communicators/winrm/command_filters/grep.rb|test/unit/plugins/communicators/winrm/command_filter_test.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/scripts/command_alias.ps1|plugins/communicators/winrm/shell.rb,7,0.0,0,0,false,Linux command filters for winrm communicator Handle Linux shell specific commands on the host before attempting to send them to the guestThis allows the removal of the PowerShell *nix command alias script and allows larger commands to be run on the guest Removed the hacky (and broken) test command regex,,929,0.7341227125941873,0.5356762513312034,25287,547.5540791711155,44.449717246015744,86.76394985565705,5651,30,1554,14,travis,sneal,,false,,6,1.0,31,0,1540,true,false,false,false,1,19,6,0,18,2,218
3571306,mitchellh/vagrant,ruby,3527,1398305862,1398325019,1398325019,319,319,github,false,false,true,28,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,0,34,0,34,18.244742164063357,0.35250430428284896,2,sneal@sneal.net,test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb,2,0.0020855057351407717,0,0,false,Windows unit test code review feedback - Fixed Windows test code style to use more elegant tap method- Fixed Windows tests to use modern Ruby hash style,,928,0.7338362068965517,0.5380604796663191,25287,547.5540791711155,44.449717246015744,86.76394985565705,5651,30,1553,14,travis,sneal,,false,,5,1.0,31,0,1539,true,false,false,false,1,19,5,0,11,2,319
3575887,mitchellh/vagrant,ruby,3519,1398214962,1398268919,1398268919,899,899,github,false,false,true,29,2,2,0,1,0,1,0,1,1,0,3,4,3,0,1,1,0,3,4,3,0,1,196,0,196,0,18.05843985580388,0.35180300730416336,2,mitchell.hashimoto@gmail.com,plugins/communicators/winrm/errors.rb|templates/locales/comm_winrm.yml|plugins/communicators/winrm/file_manager.rb|plugins/communicators/winrm/shell.rb,2,0.0009765625,0,0,false,Windows guest file manager The basic mechanism is unchanged for single file uploads its still slow and chatty Since WinRM uploads are so slow MD5 content checking is used,,927,0.7335490830636462,0.5625,25213,535.3190814262484,43.271328283028595,84.8768492444374,5645,30,1552,16,travis,sneal,,false,,4,1.0,31,0,1538,true,false,false,false,1,19,4,0,9,2,899
3575890,mitchellh/vagrant,ruby,3517,1398212901,1398268944,1398268944,934,934,github,false,false,true,38,5,5,0,1,0,1,0,1,8,0,6,14,14,0,0,8,0,6,14,14,0,0,93,441,93,441,71.00005696646713,1.3831778248297708,9,mitchell.hashimoto@gmail.com,plugins/guests/windows/config.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/helper_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/guests/windows/cap/change_host_name_test.rb|test/unit/plugins/guests/windows/cap/halt_test.rb|test/unit/plugins/guests/windows/cap/mount_shared_folder_test.rb|test/unit/plugins/guests/windows/cap/reboot_test.rb|test/unit/plugins/guests/windows/config_test.rb|test/unit/plugins/guests/windows/guest_network_test.rb|plugins/guests/windows/guest_network.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/shell.rb|plugins/guests/windows/cap/configure_networks.rb|plugins/guests/windows/guest_network.rb,5,0.0,0,0,false,Communicator support for wql Exposes WQL queries via the Vagrant communicator thus reducing some of the LoD violations- Adds unit tests for GuestNetwork- Cleans up how DHCP is detected for a network adapterBranched from https://githubcom/mitchellh/vagrant/tree/backfill-windows-guest-unit-tests,,926,0.7332613390928726,0.5636007827788649,25213,535.3190814262484,43.271328283028595,84.8768492444374,5644,30,1552,15,travis,sneal,,false,,3,1.0,31,0,1538,true,false,false,false,1,19,3,0,7,2,933
3556607,mitchellh/vagrant,ruby,3516,1398200924,1398268832,1398268832,1131,1131,github,false,false,true,44,1,1,2,2,0,4,0,1,7,0,2,9,9,0,0,7,0,2,9,9,0,0,11,391,11,391,42.7072767223758,0.8319959257097227,2,mitchell.hashimoto@gmail.com,plugins/guests/windows/config.rb|test/unit/plugins/communicators/winrm/communicator_test.rb|test/unit/plugins/communicators/winrm/helper_test.rb|test/unit/plugins/communicators/winrm/shell_test.rb|test/unit/plugins/guests/windows/cap/change_host_name_test.rb|test/unit/plugins/guests/windows/cap/halt_test.rb|test/unit/plugins/guests/windows/cap/mount_shared_folder_test.rb|test/unit/plugins/guests/windows/cap/reboot_test.rb|test/unit/plugins/guests/windows/config_test.rb,1,0.0,0,0,false,Backfilled unit tests for Windows guest support Added 37 examples specific to Windows guest support- Fixed typo in helper test- Removed extraneous machineconfig prefix from Windows guest config validation- Added WinRM communicator unit tests- Added Windows guest capability unit tests,,925,0.7329729729729729,0.5706051873198847,25213,535.3190814262484,43.271328283028595,84.8768492444374,5644,30,1552,16,travis,sneal,,false,,2,1.0,31,0,1538,true,false,false,false,1,19,2,0,3,2,1
3538225,mitchellh/vagrant,ruby,3506,1397953767,1398116925,1398116925,2719,2719,github,false,false,false,23,1,1,0,1,0,1,0,1,0,0,3,3,2,0,1,0,0,3,3,2,0,1,7,18,7,18,12.79461952945486,0.26890290218338714,88,teemu.matilainen@iki.fi,plugins/provisioners/salt/config.rb|templates/locales/en.yml|test/unit/plugins/provisioners/salt/config_test.rb,85,0.00390625,0,0,false,[BUG] Attempt to fix #3505 in the Salt provisioner I shamelessly copied from https://githubcom/mitchellh/vagrant/commit/6c5179602ceb4779a4111790d4a675ecdc01c1ab to try and fix #3505Pardon the Magritte joke,,924,0.7326839826839827,0.5625,21537,568.4635743139713,45.317360820912846,89.98467753168966,5614,29,1549,14,travis,rasschaert,rasschaert,true,rasschaert,0,0,20,48,897,false,true,false,false,0,1,0,0,0,0,2719
3527505,mitchellh/vagrant,ruby,3497,1397782197,1397782318,1397782318,2,2,github,false,false,false,15,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.264760009340949,0.0896322987448121,23,ramakrishnan.v@happiestminds.com,plugins/providers/hyperv/action.rb,23,0.022504892367906065,0,0,false,Small fix to hyper-v provision action Line was outputting a syntax error Unknown symbol Created,,923,0.7323943661971831,0.5528375733855186,21536,568.4899702823179,45.31946508172362,89.9888558692422,5596,28,1547,14,travis,jingchan,jingchan,true,jingchan,0,0,1,0,1338,false,false,false,false,0,1,0,0,0,0,1
3508915,mitchellh/vagrant,ruby,3491,1397690782,1398525650,1398525650,13914,13914,merged_in_comments,false,false,false,5,1,1,1,8,0,9,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,14,2,14,8.870249134488944,0.18642474437473908,26,mshirley@comprehend.com,plugins/provisioners/ansible/provisioner.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,20,0.01966568338249754,0,10,false,Dont run with two --limits ,,922,0.7321041214750542,0.5496558505408063,21516,569.0184049079755,45.36159137386131,90.07250418293363,5583,28,1546,16,travis,jjshoe,gildegoma,false,gildegoma,1,1.0,7,4,628,true,false,false,false,0,1,3,0,2,0,4
3515110,mitchellh/vagrant,ruby,3488,1397659432,,1397674991,259,,unknown,false,false,false,12,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.941392256847309,0.10385275260291262,0,,website/docs/source/v2/providers/default.html.md,0,0.0,0,0,false,added a note how to set the default provider in a Vagrantfile ,,921,0.7328990228013029,0.5451837140019861,21516,569.0184049079755,45.36159137386131,90.07250418293363,5576,28,1546,14,travis,berendt,berendt,true,,9,0.7777777777777778,22,8,1296,true,false,false,false,3,14,12,0,4,0,-1
3517469,mitchellh/vagrant,ruby,3486,1397606456,1397675513,1397675514,1150,1150,github,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5282878465286664,0.0951705780468359,7,teemu.matilainen@iki.fi,plugins/guests/linux/cap/rsync.rb,7,0.0069721115537848604,0,0,false,guests/linux: rsync chown if either user or group incorrect [GH-3485] Fixes #3485,,920,0.7326086956521739,0.5438247011952191,21516,569.0184049079755,45.36159137386131,90.07250418293363,5568,28,1545,14,travis,benesch,mitchellh,false,mitchellh,0,0,8,1,1021,false,false,false,false,1,0,0,0,0,0,1150
3507168,mitchellh/vagrant,ruby,3476,1397571573,,1397586986,256,,unknown,false,false,false,76,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.376260313398071,0.09206237754050638,0,,plugins/synced_folders/rsync/plugin.rb,0,0.0,0,0,false,changed rsync and rsync-auto to be primary commands At the moment rsync and rsync-auto are not listed in the list of common commandsexample list of common commands with this patch:[]     reload       restarts vagrant machine loads new Vagrantfile configuration     resume       resume a suspended vagrant machine     rsync        syncs rsync synced folders to remote machine     rsync-auto   syncs rsync synced folders automatically when files change     share        share your Vagrant environment with anyone in the world[],,919,0.7334058759521219,0.548768472906404,21507,568.7450597479891,45.334077277165576,89.87771423257544,5564,28,1545,13,travis,berendt,berendt,true,,8,0.875,22,8,1295,true,false,false,false,3,14,10,0,4,0,-1
3489478,mitchellh/vagrant,ruby,3465,1397433979,1397434218,1397434218,3,3,commits_in_master,false,false,false,2,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.432284680182625,0.093242129781946,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/getting-started/boxes.html.md,3,0.002952755905511811,0,0,false,Fix typo ,,917,0.7339149400218102,0.5462598425196851,21502,568.8773137382569,45.34461910519952,89.89861408241094,5563,27,1543,12,travis,mjfroehlich,mitchellh,false,mitchellh,0,0,4,14,377,false,false,false,false,0,0,0,0,0,0,3
3486956,mitchellh/vagrant,ruby,3462,1397395497,1447076266,1447076266,828012,828012,commit_sha_in_comments,false,false,false,129,4,4,0,9,0,9,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,293,0,293,0,36.38245915895881,0.7653790817755438,19,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|website/docs/source/v2/cli/box.html.md,10,0.005911330049261084,0,5,false,remove all available versions of a box This patch introduces a new parameter --all for the remove command of the box pluginWhile using the parameter --all when removing a box will remove all available versions of the boxExample usage:berendt/ubuntu-1404-amd64          (virtualbox 0211)berendt/ubuntu-1404-amd64          (virtualbox 0212)berendt/ubuntu-1404-amd64          (virtualbox 0213)You requested to remove the box berendt/ubuntu-1404-amd64 with providervirtualbox This box has multiple versions You mustexplicitly specify which version you want to remove withthe --box-version flagVersions:0213 0212  0211Using the --all parameter now its possible to remove all versions at onceRemoving box berendt/ubuntu-1404-amd64 with provider virtualbox in version 0213Removing box berendt/ubuntu-1404-amd64 with provider virtualbox in version 0212Removing box berendt/ubuntu-1404-amd64 with provider virtualbox in version 0211,,916,0.7336244541484717,0.5399014778325123,21502,568.8773137382569,45.34461910519952,89.89861408241094,5563,27,1543,140,travis,berendt,sethvargo,false,sethvargo,6,1.0,22,8,1293,true,false,false,false,3,10,8,0,4,0,175609
3482172,mitchellh/vagrant,ruby,3452,1397304356,1397352323,1397352323,799,799,commits_in_master,false,false,false,167,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.97356016804979,0.08383689868998111,8,mitchell.hashimoto@gmail.com,plugins/commands/box/command/update.rb,8,0.00823045267489712,0,0,false,When there are multiple versions of a box are available it should be che cked if an update is available for the highest versionExample:There are version 0210 and 0211 available The latest update is version 0212berendt/ubuntu-1404-amd64          (virtualbox 0210)berendt/ubuntu-1404-amd64          (virtualbox 0211)Without this patch it will be checked if a higher version than 0210 is availableChecking for updates to berendt/ubuntu-1404-amd64Version constraints:  0210Provider: virtualboxUpdating berendt/ubuntu-1404-amd64 with provider virtualbox from version0210 to 0212Loading metadata for box https://vagrantcloudcom/berendt/ubuntu-1404-amd64Adding box berendt/ubuntu-1404-amd64 (v0212) for provider: virtualboxDownloading: https://vagrantcloudcom/berendt/ubuntu-1404-amd64/version/23/provider/virtualboxboxSuccessfully added box berendt/ubuntu-1404-amd64 (v0212) for virtualboxwith this patch it will be checked if a higher version than 0211 is available (the expected behaviour)Checking for updates to berendt/ubuntu-1404-amd64Version constraints:  0211Provider: virtualboxUpdating berendt/ubuntu-1404-amd64 with provider virtualbox from version0211 to 0212Loading metadata for box https://vagrantcloudcom/berendt/ubuntu-1404-amd64Adding box berendt/ubuntu-1404-amd64 (v0212) for provider: virtualboxDownloading: https://vagrantcloudcom/berendt/ubuntu-1404-amd64/version/23/provider/virtualboxboxSuccessfully added box berendt/ubuntu-1404-amd64 (v0212) for virtualbox,,912,0.7357456140350878,0.5390946502057613,21499,544.7695241639145,43.769477650123264,84.93418298525512,5563,27,1542,13,travis,berendt,mitchellh,false,mitchellh,5,1.0,22,8,1292,true,false,true,false,3,10,7,0,0,0,799
3480188,mitchellh/vagrant,ruby,3447,1397264763,,1397268484,62,,unknown,false,false,false,17,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,9.329833072039502,0.1968464259281549,21,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/helper.rb|website/docs/source/v2/synced-folders/rsync.html.md,15,0.015789473684210527,0,0,true,Make it so the rsync synced folder type follows symlinks on the host machine per issue #3444,,911,0.7365532381997805,0.5378947368421053,21483,545.128706419029,43.80207606014058,84.99743983614952,5563,27,1541,17,travis,brenttheisen,mitchellh,false,,1,1.0,7,5,1130,false,false,false,false,1,0,1,0,0,0,62
3480078,mitchellh/vagrant,ruby,3446,1397263840,1397264022,1397264022,3,3,commits_in_master,false,false,false,12,1,1,0,1,0,1,0,1,0,0,2,2,1,0,1,0,0,2,2,1,0,1,7,0,7,0,8.373555764448689,0.17667032264752602,95,teemu.matilainen@iki.fi,plugins/synced_folders/rsync/command/rsync_auto.rb|templates/locales/en.yml,88,0.09302325581395349,0,0,true,Print message and exit rsync-auto immediately if there is nothing to watch  ,,910,0.7362637362637363,0.5359408033826638,21479,545.2302248708041,43.81023325108245,85.0132687741515,5563,27,1541,17,travis,brenttheisen,mitchellh,false,mitchellh,0,0,7,5,1130,false,false,false,false,0,0,0,0,0,0,2
3477730,mitchellh/vagrant,ruby,3445,1397245518,1397245845,1397245845,5,5,commits_in_master,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.333769059826719,0.0914364065311692,86,teemu.matilainen@iki.fi,templates/locales/en.yml,86,0.09024134312696747,0,0,true,add missing translation message for docker_building_images ,,909,0.735973597359736,0.5309548793284365,21476,545.3063885267276,43.816353138387036,85.02514434717824,5563,27,1541,17,travis,Mulkave,mitchellh,false,mitchellh,0,0,17,29,533,false,false,false,false,0,0,0,0,0,0,5
3474636,mitchellh/vagrant,ruby,3441,1397220053,1397244729,1397244729,411,411,commits_in_master,false,false,false,98,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.0766616812006795,0.08601230639081604,5,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_remove.rb,5,0.005274261603375527,0,0,true,sort versions and print them as listing before this patch:$ vagrant box remove --box-version 029 berendt/ubuntu-1404-amd64You requested to remove the box berendt/ubuntu-1404-amd64 version 029 withprovider virtualbox but that specific version of the box isnot install Please double-check and try again The available versionsfor this box are:0211 0210after this patch:You requested to remove the box berendt/ubuntu-1404-amd64 version 029 withprovider virtualbox but that specific version of the box isnot install Please double-check and try again The available versionsfor this box are: * 0210 * 0211,,908,0.73568281938326,0.5284810126582279,21475,545.3317811408615,43.81839348079162,85.02910360884749,5563,27,1541,20,travis,berendt,mitchellh,false,mitchellh,4,1.0,22,8,1291,true,false,true,false,3,10,6,0,0,0,411
3474470,mitchellh/vagrant,ruby,3440,1397218559,1397244576,1397244576,433,433,commits_in_master,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.316604374183201,0.09107478791098272,83,teemu.matilainen@iki.fi,templates/locales/en.yml,83,0.08755274261603375,0,0,true,fixed spelling install should be installed,,907,0.7353914002205072,0.5284810126582279,21475,545.3317811408615,43.81839348079162,85.02910360884749,5563,27,1541,20,travis,berendt,mitchellh,false,mitchellh,3,1.0,22,8,1291,true,false,true,false,3,10,5,0,0,0,433
3474076,mitchellh/vagrant,ruby,3438,1397214401,1397244639,1397244639,503,503,commits_in_master,false,false,false,26,1,1,0,2,0,2,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,3,0,3,0,8.126058205229368,0.1714493531118671,83,teemu.matilainen@iki.fi,lib/vagrant/action/builtin/box_remove.rb|templates/locales/en.yml,83,0.08755274261603375,0,0,true,print version when removing a specific box Example:$ vagrant box remove --box-version 029 berendt/ubuntu-1404-amd64Removing box berendt/ubuntu-1404-amd64 with provider virtualbox in version 029,,906,0.7350993377483444,0.5284810126582279,21475,545.3317811408615,43.81839348079162,85.02910360884749,5563,27,1541,19,travis,berendt,mitchellh,false,mitchellh,2,1.0,22,8,1291,true,false,true,false,3,9,4,0,0,0,55
3473621,mitchellh/vagrant,ruby,3436,1397208653,1397286975,1397286975,1305,1305,commits_in_master,false,false,false,48,1,1,0,5,0,5,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.7151998563198094,0.07838592783367268,18,mshirley@comprehend.com,plugins/provisioners/ansible/provisioner.rb,18,0.0189873417721519,2,2,true,provisioners/ansible: refer to directory that contains the generated inventory file By referring to the directory that contains the generated inventory fileusers can easily provide more settings with additional files stored inthe same directoryRelated issues and comments:- https://githubcom/mitchellh/vagrant/pull/2991#issuecomment-35978587- #3004- #3434/cc: @retr0h @zeroem ,,905,0.7348066298342542,0.5284810126582279,21475,545.3317811408615,43.81839348079162,85.02910360884749,5563,27,1541,17,travis,gildegoma,mitchellh,false,mitchellh,12,0.9166666666666666,45,126,1279,true,true,true,false,9,34,12,8,8,0,8
3471553,mitchellh/vagrant,ruby,3434,1397179151,,1397269473,1505,,unknown,false,true,false,133,1,1,0,4,0,4,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,20,0,20,0,8.899830354921558,0.18777494802765693,20,mshirley@comprehend.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb,18,0.018711018711018712,1,6,false,Decouple inventory_path and inventory generation Supports the use case where data from outside of Vagrant (hosts and vars) are desired in addition to the inventory file that vagrant generatesPreviously if the inventory_path was set the vagrant inventory file would not be generated This introduces the generate_inventory flag to decouple the inventory_path from the inventory generation process allowing user inventories to be merged with the vagrant generated inventoryIf the generate_inventory is set to true and an inventory_path is set and is a directory the generated inventory file will be placed in that directory and that directory will be passed to ansibleIf the generate_inventory flag is not set previous behavior is maintained eg the inventory will not be generated if inventory_path is setTODO: Update Docs to reflect new functionalityCC: @gildegoma,,904,0.7356194690265486,0.5301455301455301,21475,545.3317811408615,43.81839348079162,85.02910360884749,5563,27,1540,17,travis,zeroem,mitchellh,false,,0,0,12,20,1513,false,false,false,false,0,0,0,0,0,0,458
3461686,mitchellh/vagrant,ruby,3423,1397088296,1397089041,1397089041,12,12,commits_in_master,false,false,false,173,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.833080452891523,0.08101393066321733,4,ru@ryanuber.com,plugins/provisioners/shell/config.rb,4,0.004287245444801715,0,0,false,Error with empty shell provisioners Specifying an empty file as a shell provisioner throws an errorThis can be tested with a minimal Vagrantfile:ruby# -*- mode: ruby -*-# vi: set ftruby :VAGRANTFILE_API_VERSION  2Vagrantconfigure(VAGRANTFILE_API_VERSION) do |config|  configvmbox  hashicorp/precise32    configvmprovision :shell :path  bootstrapshend(You will also need an empty bootstrapsh in the same folder)The error message is:Bringing machine default up with virtualbox provider/opt/vagrant/embedded/gems/gems/vagrant-151/plugins/provisioners/shell/configrb:56:in validate: undefined method valid_encoding for nil:NilClass (NoMethodError)from /opt/vagrant/embedded/gems/gems/vagrant-151/plugins/kernel_v2/config/vmrb:614:in block in validatefrom /opt/vagrant/embedded/gems/gems/vagrant-151/plugins/kernel_v2/config/vmrb:606:in eachfrom /opt/vagrant/embedded/gems/gems/vagrant-151/plugins/kernel_v2/config/vmrb:606:in validatefrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/config/v2/rootrb:68:in block in validatefrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/config/v2/rootrb:64:in eachfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/config/v2/rootrb:64:in validatefrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builtin/config_validaterb:15:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/wardenrb:34:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builtin/callrb:57:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/wardenrb:34:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/plugins/providers/virtualbox/action/check_virtualboxrb:17:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/wardenrb:34:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builderrb:116:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/runnerrb:69:in block in runfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/util/busyrb:19:in busyfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/runnerrb:69:in runfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/machinerb:157:in actionfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/batch_actionrb:72:in block (2 levels) in runWhile this is not fatal behavior it is still confusing to the userThis pull request fixes this by skipping the encoding test for empty files,,901,0.7369589345172031,0.5198285101822079,21437,546.2984559406633,43.89606754676493,85.17982926715491,5563,27,1539,17,travis,bmorg,mitchellh,false,mitchellh,1,1.0,2,7,1034,false,false,false,false,0,2,1,0,0,0,12
3450230,mitchellh/vagrant,ruby,3417,1396990143,,1397068021,1297,,unknown,false,false,false,68,1,1,0,4,0,4,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.639822836262144,0.09826730083021189,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/getting-started/index.html.md,1,0.0010649627263045794,1,1,false,Add box before vagrant up in Getting Started Migrating https://githubcom/hashicorp/vagrant-docs-old/issues/11Hi @mitchellh  just a suggestion but shouldnt users have to add the hashicorp/precise32 box before trying to vagrant up as listed in the [Getting Started](http://docsvagrantupcom/v2/getting-started/indexhtml) pageId suggest this:$ vagrant init hashicorp/precise32$ vagrant upBe changed to this: $ vagrant box add hashicorp/precise32 http://filesvagrantupcom/precise32box$ vagrant init hashicorp/precise32$ vagrant up,,900,0.7377777777777778,0.5239616613418531,21382,546.6280048639042,43.96221120568703,85.30539706295015,5563,26,1538,18,travis,b-long,mitchellh,false,,0,0,11,70,1840,false,false,false,false,0,4,0,0,0,0,657
3449159,mitchellh/vagrant,ruby,3416,1396983050,,1396984066,16,,unknown,false,false,false,32,3,3,0,2,0,2,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,29,86,29,86,25.068869368218834,0.5309362479160104,12,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/command/rsync.rb|test/unit/plugins/synced_folders/rsync/command/rsync_test.rb|plugins/synced_folders/rsync/command/rsync_auto.rb|test/unit/plugins/synced_folders/rsync/command/rsync_auto_test.rb|plugins/synced_folders/rsync/command/rsync.rb|test/unit/plugins/synced_folders/rsync/command/rsync_test.rb,7,0.00425531914893617,0,1,false,Fix/master/rsync command install first This is an attempt to resolve #3415 (could resolve #3327 actually)Please tell me if there is conception/code issues Im quite new to ruby and its ecosystem :),,899,0.7385984427141268,0.524468085106383,21382,546.6280048639042,43.96221120568703,85.30539706295015,5563,26,1538,18,travis,cuberri,mitchellh,false,,1,1.0,7,2,1019,true,false,false,false,0,0,1,0,1,0,1
3443566,mitchellh/vagrant,ruby,3410,1396924874,1396926302,1396926302,23,23,commits_in_master,false,false,false,18,1,1,0,1,0,1,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.7001564133131986,0.09954459557267514,1,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,1,0.0010416666666666667,0,1,false,CFEngine example block in Vagrantfile template Added an example block for the CFEngine provisioner to the Vagrantfiletemplate,,898,0.7383073496659243,0.5135416666666667,21382,546.6280048639042,43.96221120568703,85.30539706295015,5563,25,1537,18,travis,zzamboni,mitchellh,false,mitchellh,1,1.0,25,17,1979,false,true,false,false,0,2,1,0,0,0,23
3443353,mitchellh/vagrant,ruby,3409,1396922703,1396923287,1396923287,9,9,commits_in_master,false,false,false,11,1,1,0,1,0,1,0,2,1,0,1,2,1,1,0,1,0,1,2,1,1,0,170,0,170,0,9.643589131965138,0.20444743210830235,20,odigity@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/provisioning/cfengine.html.md,20,0.02072538860103627,0,0,false,Documentation for the CFEngine provisioner Added documentation for the CFEngine provisioner,,897,0.738015607580825,0.5160621761658031,21382,546.6280048639042,43.96221120568703,85.30539706295015,5563,25,1537,18,travis,zzamboni,mitchellh,false,mitchellh,0,0,25,17,1979,false,true,false,false,0,1,0,0,0,0,9
3440386,mitchellh/vagrant,ruby,3405,1396900186,1397069015,1397069015,2813,2813,commits_in_master,false,false,false,96,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.361097835985331,0.09245678569868569,8,mitchell.hashimoto@gmail.com,plugins/synced_folders/smb/synced_folder.rb,8,0.008213552361396304,0,0,false,Encapsulate path for smb powershell script Windows allows parens spaces and other special chars in directory and file names Sometimes you dont have a choice (weird IT policies bureaucracy drugs etc) and end up with a bunch of this crap in your pathsIn this case currently it will fail at the point it calls the set_shareps1 script I considered extending the gsub to cover other characters but there are quite a lot that are allowed and would cause this problem so I think the easiest solution with the broadest coverage is to simply encapsulate it,,896,0.7377232142857143,0.5154004106776181,21382,546.6280048639042,43.96221120568703,85.30539706295015,5563,26,1537,17,travis,timcooper,mitchellh,false,mitchellh,1,1.0,1,0,1258,false,false,false,false,0,1,1,0,0,0,2813
3440116,mitchellh/vagrant,ruby,3404,1396898554,1396899090,1396899090,8,8,commits_in_master,false,false,false,24,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.166435512542503,0.08832978567740052,5,mitchell.hashimoto@gmail.com,plugins/synced_folders/smb/errors.rb,5,0.0051387461459403904,0,0,false,Fixed typo in smb errors on error_key call This will prevent a relevant error being returned (instead giving one about error_Key not being found),,895,0.7374301675977654,0.5149023638232272,21382,546.6280048639042,43.96221120568703,85.30539706295015,5563,26,1537,17,travis,timcooper,mitchellh,false,mitchellh,0,0,1,0,1258,false,false,false,false,0,1,0,0,0,0,8
3426844,mitchellh/vagrant,ruby,3394,1396701799,1396724430,1396724430,377,377,commits_in_master,false,false,false,106,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.582516661865779,0.09725000830779452,12,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/helper.rb,12,0.011988011988011988,0,0,false,synced_folders/rsync: enable override of default chmod flag The default --chmod flag on rsync can be overridden on Windows now If no custom --chmod flag is specified and --archive is used the --no-perms flag is added to the arguments because --archive automatically adds the --perms flag which in turn would ignore the umask on the guestQuote from man rsync: To give new files the destination-default permissions (while leaving existing files unchanged) make sure that the --perms option is off and use --chmodugorwX (which ensures that all non-masked bits get enabled)  I think this new default behavior is feasible for most Windows users Do you agree,,894,0.7371364653243848,0.4855144855144855,21289,548.3113344919913,44.06031283761567,85.44318662219925,5563,26,1535,20,travis,Arxisos,mitchellh,false,mitchellh,0,0,25,2,1168,false,false,false,false,0,0,0,0,0,1,376
3414877,mitchellh/vagrant,ruby,3384,1396564668,1396629275,1396629275,1076,1076,commits_in_master,false,false,false,11,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.631402083481159,0.09828745236168948,4,mitchell.hashimoto@gmail.com,README.md,4,0.003940886699507389,0,0,false,A simple typo Fixes a simple typo in the READMEmd file,,892,0.7365470852017937,0.4807881773399015,21289,548.3113344919913,44.06031283761567,85.44318662219925,5563,25,1533,19,travis,joanbarros,fgrehm,false,fgrehm,0,0,10,14,1329,false,true,false,false,0,1,0,0,0,0,1076
3413990,mitchellh/vagrant,ruby,3382,1396558607,1396724979,1396724979,2772,2772,commits_in_master,false,false,false,16,4,2,0,4,0,4,0,3,1,0,4,5,3,2,0,1,0,4,5,3,2,0,166,0,246,0,39.06101088875581,0.828951401266009,0,,plugins/guests/fedora/cap/configure_networks.rb|templates/guests/fedora/network_dhcp.erb|templates/guests/fedora/network_static.erb|plugins/guests/fedora/cap/change_host_name.rb|plugins/guests/fedora/cap/configure_networks.rb|plugins/guests/fedora/plugin.rb|templates/guests/fedora/network_dhcp.erb|templates/guests/fedora/network_static.erb,0,0.0,0,3,false,Fix Fedora This fixes hostname setting in Fedora and also includes the network fix from #3207,,891,0.7362514029180696,0.47984267453294,21289,548.3113344919913,44.06031283761567,85.44318662219925,5563,25,1533,19,travis,ndemonner,mitchellh,false,mitchellh,0,0,18,7,2227,false,false,false,false,0,0,0,0,0,0,889
3386968,mitchellh/vagrant,ruby,3377,1396496558,,1396496952,6,,unknown,false,false,false,168,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9812314803578186,0.0844893560988886,48,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_add.rb,48,0.047105004906771344,0,0,false,Implicit box_version should not keep you from using a direct URL The issue is that when you create a Vagrant file with an explicit URL it grabs the default box_version and assumes that youve implied constraints when you haventAn example Vagrantfile that causes this issue is in the [coreos vagrant example](https://githubcom/coreos/coreos-vagrant/blob/master/Vagrantfile)This is what you get if you attempt to run it:Bringing machine default up with virtualbox provider default: Box coreos-alpha could not be found Attempting to find and install    default: Box Provider: virtualbox    default: Box Version:  0You specified a box version constraint with a direct box filepath Box version constraints only work with boxes from VagrantCloud or a custom box host Please remove the version constraintand try againI havent really given a version so it shouldnt constraint me from grabbing the box from the URLThis fixes this The assumption is that if you want the latest version you should be able to grab the URL,,890,0.7370786516853932,0.48086359175662413,21287,547.9870343402076,44.01747545450275,85.26330624324706,5563,25,1532,18,travis,briandailey,briandailey,true,,0,0,40,24,2220,false,false,false,false,0,0,0,0,0,0,-1
3407486,mitchellh/vagrant,ruby,3374,1396459069,1396462267,1396462267,53,53,github,false,false,false,11,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.997055653777027,0.10613319733418118,21,mshirley@comprehend.com,website/docs/source/v2/provisioning/ansible.html.md,21,0.0206286836935167,0,0,false,Document solution for wrong SSH user with Ansible As per: https://githubcom/mitchellh/vagrant/pull/2710#issuecomment-32192976,,889,0.7367829021372329,0.48035363457760316,21250,547.7647058823529,43.95294117647059,84.98823529411764,5563,24,1532,18,travis,follower,follower,true,follower,0,0,13,0,1527,false,false,false,false,0,0,0,0,0,0,-1
3402781,mitchellh/vagrant,ruby,3371,1396398719,1396398755,1396398755,0,0,github,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.83104595460205,0.10269591106821134,0,,website/docs/source/v2/other/environmental-variables.html.md,0,0.0,0,0,false,documented VAGRANT_DOTFILE_PATH Resolves issue #3362 (https://githubcom/mitchellh/vagrant/issues/3362),,888,0.7364864864864865,0.46511627906976744,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,21,1531,36,travis,odigity,odigity,true,odigity,1,1.0,7,4,1594,false,false,false,false,0,12,1,0,0,0,0
3398666,mitchellh/vagrant,ruby,3368,1396367212,1396424365,1396424365,952,952,github,false,false,false,46,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.036609211728525,0.08580817995115565,98,teemu.matilainen@iki.fi,templates/locales/en.yml,98,0.09908998988877654,0,0,false,add missing translation envagrantcommandsstatusstopping VirtualBox got into a limbo mode as a result running vagrant status reported:$ vagrant status                                                                                                                              *[feature/remove-legacy-api]Current machine states:default                   stopping (virtualbox)translation missing: envagrantcommandsstatusstoppingTo satisfy my lack of creativity please suggest a better text Much obliged :),,887,0.7361894024802705,0.46511627906976744,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,21,1531,35,travis,davidkuridza,davidkuridza,true,davidkuridza,0,0,12,8,973,false,false,false,false,0,0,0,0,0,0,952
3390561,mitchellh/vagrant,ruby,3365,1396301798,1396424435,1396424435,2043,2043,github,false,false,false,85,4,4,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,15.282545903569874,0.3248685667156214,8,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_4_2.rb,7,0.007035175879396985,0,0,false,Fixes for cable not connected in VirtualBox 43 (and 42) Ive only been able to verify the changes for 151 with VirtualBox 43 and host only adapters and it fixed the issue (thats https://githubcom/oscarrenalias/vagrant-1/commit/0314453f467ee94cae39f70bbcdd01f094405c77) The 3 remaining commits (for the rest of network adapters as well as VirtualBox 42x) are only my guess so    feel free to merge/ignore as requiredUnit tests seemed to pass ok I was not sure how to run the acceptance test suite so I was not able to verify that,,886,0.7358916478555305,0.46834170854271356,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,21,1530,34,travis,oscarrenalias,oscarrenalias,true,oscarrenalias,0,0,29,13,1512,true,false,false,false,1,0,0,0,2,0,2
3392995,mitchellh/vagrant,ruby,3364,1396301609,1396424563,1396424563,2049,2049,github,false,false,false,98,1,1,0,1,0,1,0,1,0,0,3,3,2,0,1,0,0,3,3,2,0,1,12,0,12,0,12.811977738524343,0.2723504886535034,99,teemu.matilainen@iki.fi,lib/vagrant/action/builtin/box_remove.rb|lib/vagrant/errors.rb|templates/locales/en.yml,98,0.04020100502512563,0,0,false,handle exception when removing a non existing box version When trying to remove a not existing version of an existing box anexception is thrown The exception should be handled and some message(box version 012 not available) should be printedWith this patch the exception is handled correctly by using a newlyintroduced exception BoxRemoveVersionNotFoundExample output:You requested to remove the box berendt/alpine-275-amd64 with providervirtualbox in version 002 The box berendt/alpine-275-amd64exists but not in the specified version 002Please double-check and try againThe available versions for this box are: 010Fixes issue #3344,,885,0.735593220338983,0.46834170854271356,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,21,1530,33,travis,berendt,berendt,true,berendt,1,1.0,22,8,1280,false,false,false,false,2,6,1,0,0,0,2049
3386493,mitchellh/vagrant,ruby,3360,1396279814,,1396424947,2418,,unknown,false,false,false,64,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.069100361751589,0.08649886024785082,11,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/helper.rb,11,0.011022044088176353,0,0,false,Fixed unquoted ssh with rsync bug In the previous version the string was built asrsync --verbose --archive --delete -z -e ssh -p 2222 -o StrictHostKeyCheckingno -i /path/to/private_key --exclude vagrant/ --exclude {} /path/to/local/ vagrant@127001:/home/vagrant/wwwHowever to connect properly the ssh-part  needs to be quoted iersync --verbose --archive --delete -z -e ssh -p 2222 -o StrictHostKeyCheckingno -i /path/to/private_key --exclude vagrant/ --exclude {} /path/to/local/ vagrant@127001:/home/vagrant/www,,884,0.7364253393665159,0.4729458917835671,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1530,32,travis,valioDOTch,valioDOTch,true,,0,0,6,12,1046,false,false,false,false,0,0,0,0,0,0,203
3378769,mitchellh/vagrant,ruby,3358,1396208178,1396425052,1396425052,3614,3614,commits_in_master,false,false,false,8,1,1,0,1,0,1,0,1,1,0,2,3,3,0,0,1,0,2,3,3,0,0,22,0,22,0,13.446347218104655,0.28583559152181875,108,teemu.matilainen@iki.fi,CHANGELOG.md|plugins/guests/suse/cap/halt.rb|plugins/guests/suse/plugin.rb,108,0.0,0,0,false,guests/suse: fix error on shutdown Related to #2775,,883,0.7361268403171007,0.4745254745254745,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1529,31,travis,philippfranke,mitchellh,false,mitchellh,1,1.0,10,10,970,false,false,false,false,0,0,0,0,0,0,3613
3377098,mitchellh/vagrant,ruby,3356,1396169696,1396425084,1396425084,4256,4256,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.363624988690557,0.09275971455968149,9,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/client.rb,9,0.009,0,0,false,fix deprecated docker arguments -name should be --name and -cidfile should be --cidfile,,882,0.735827664399093,0.475,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1529,30,travis,pmenglund,mitchellh,false,mitchellh,0,0,53,8,1972,false,false,false,false,0,0,0,0,0,0,4256
3376792,mitchellh/vagrant,ruby,3355,1396160269,1396425160,1396425160,4414,4414,commits_in_master,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.305790973636173,0.0915303085630184,17,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb,17,0.017,0,0,false,vagrant ssh accept utf8 fix #2744 fixed #2744Signed-off-by: Hiroshi Miura miurahr@linuxcom,,881,0.735527809307605,0.475,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1529,29,travis,miurahr,mitchellh,false,mitchellh,2,0.5,42,67,1666,false,false,false,false,1,5,0,0,0,0,4414
3376499,mitchellh/vagrant,ruby,3354,1396156733,1396425225,1396425225,4474,4474,commits_in_master,false,false,false,54,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.827690750897835,0.10262458785902191,6,uwej711@googlemail.com,plugins/synced_folders/smb/scripts/set_share.ps1,6,0.006,0,0,false,Fix for HyperV provider fails when recreating shares on Vagrant reload # 3353Mitchell I am not sure what the purpose the powershell hyper-V guys had with the regexs but they were not working in properly detecting existing smb shares and recreating them I changed the expression for something simpler that seems to work,,880,0.7352272727272727,0.475,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1529,28,travis,Coffee-fan,mitchellh,false,mitchellh,0,0,2,0,1643,false,false,false,false,1,4,0,0,0,0,4474
3365564,mitchellh/vagrant,ruby,3349,1396019590,,1396425461,6764,,unknown,false,false,false,183,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.8194125778384675,0.10244861467799635,4,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/private_network.html.md,4,0.0039603960396039604,0,0,true,Fix documents when using private_network with dhcp I wrote in my Vagrantfile following [the documents](https://docsvagrantupcom/v2/networking/private_networkhtml) as follows  :ruby  configvmprovider virtualbox do |vb override|    overridevmnetwork private_network type: dhcp  end#  :smile::smile::smile: Expected  :smile::smile::smile: bash$ vagrant upBringing machine default up with virtualbox provider default: VirtualBox VM is already running$ # No problem# :hankey::hankey::hankey: Actual :hankey::hankey::hankey:bash$ vagrant upThere are errors in the configuration of this machine Please fixthe following errors and try again:vm:* An IP is required for a private network$ echo $1:scream: :broken_heart:Next I correct my Vagrantfile as follows:ruby  configvmprovider virtualbox do |vb override|    overridevmnetwork private_network type: :dchp  endThen bash$ vagrant upBringing machine default up with virtualbox provider default: VirtualBox VM is already running$ # No problem:v::v::v:# :question: :question: :question: Why should I fix it as this patch :question: :question: :question:See below:at https://githubcom/mitchellh/vagrant/blob/v151/plugins/providers/virtualbox/action/networkrb#L279 :rubyif options[:type]  :dhcpat https://githubcom/mitchellh/vagrant/blob/v151/plugins/providers/virtualbox/action/networkrb#L251 :ruby          options[:ip]  172281281 if options[:type]  :dhcp && options[:ip],,879,0.7360637087599545,0.48217821782178216,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1527,27,travis,toooooooby,mitchellh,false,,0,0,38,69,2050,false,true,false,false,0,0,0,0,0,0,6763
3357664,mitchellh/vagrant,ruby,3342,1395947277,1395950991,1395950991,61,61,commits_in_master,false,false,false,7,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.805852689521644,0.10216032905705065,19,mshirley@comprehend.com,website/docs/source/v2/provisioning/ansible.html.md,19,0.019,0,0,false,Minor grammar corrections to Ansible provisioning documentation ,,877,0.7366020524515393,0.487,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1526,26,travis,jaikdean,gildegoma,false,gildegoma,0,0,4,2,1337,false,false,false,false,0,0,0,0,0,0,-1
3354539,mitchellh/vagrant,ruby,3337,1395920366,1396425514,1396425514,8419,8419,commits_in_master,false,false,false,20,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.172593388244256,0.08869883059331489,19,mitchell.hashimoto@gmail.com,plugins/providers/hyperv/action.rb,19,0.019,0,0,false,HyperV provider resume GH-3336 Fix for vagrant resume command for HyperV provider Fixed the variablename in action builder block,,875,0.7371428571428571,0.487,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1526,26,travis,ramakrishnan,mitchellh,false,mitchellh,5,0.6,3,3,1057,true,false,true,false,1,0,9,1,0,0,8418
3344059,mitchellh/vagrant,ruby,3324,1395824054,,1396425651,10026,,unknown,false,false,false,14,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.561210157111859,0.09695984472534684,17,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb,17,0.017418032786885244,0,0,false,communicators/ssh: Set the Terminals default encoding to UTF-8 [GH-3295] See GH-3295 for further details,,874,0.7379862700228833,0.4989754098360656,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1525,25,travis,skoblenick,mitchellh,false,,0,0,5,2,786,false,false,true,false,0,9,0,0,0,0,10026
3343271,mitchellh/vagrant,ruby,3323,1395812904,1396425672,1396425672,10212,10212,commits_in_master,false,false,false,39,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.575079359060918,0.0972546690419481,0,,plugins/guests/arch/cap/configure_networks.rb,0,0.0,0,0,false,Fix for issue #3322 a followup to issue #2591 Arch linux will rename its eth0 device unless an empty file is placed in /etc/udev/rulesd/In order for the new rules to take effect we need call udevadm control --reload,,873,0.7376861397479955,0.4989754098360656,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1525,24,travis,mattoxbeckman,mitchellh,false,mitchellh,0,0,5,1,991,false,false,false,false,0,0,0,0,0,0,10212
3342106,mitchellh/vagrant,ruby,3318,1395801378,1396425750,1396425750,10406,10406,commits_in_master,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.130014444955715,0.08779370945492815,14,mitchell.hashimoto@gmail.com,lib/vagrant/util/platform.rb,14,0.014344262295081968,0,0,false,Properly escape path in cygwin bash check Quick attempt at properly fixing #3304,,872,0.7373853211009175,0.4989754098360656,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1524,23,travis,ecoleman,mitchellh,false,mitchellh,0,0,26,33,2217,false,false,false,false,1,0,0,0,0,0,10406
3339564,mitchellh/vagrant,ruby,3316,1395784033,1396425848,1396425848,10696,10696,commits_in_master,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.514119382906523,0.09595881342056768,4,mitchell.hashimoto@gmail.com,plugins/commands/box/command/list.rb,4,0.004098360655737705,0,0,false,display version by default when listing boxes example usage:$ vagrant box listberendt/ubuntu-1404-amd64 (virtualbox) [013]berendt/ubuntu-1404-amd64 (virtualbox) [014]berendt/ubuntu-1404-amd64 (virtualbox) [015]related to issue #3313,,871,0.7370838117106774,0.4989754098360656,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1524,22,travis,berendt,mitchellh,false,mitchellh,0,0,22,8,1274,false,false,true,false,1,1,0,0,0,0,10696
3332623,mitchellh/vagrant,ruby,3306,1395715090,,1396426755,11861,,unknown,false,false,false,110,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.303369593992165,0.09147880348785835,49,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/box_add.rb,49,0.050204918032786885,1,0,false,handle if box path contains space character if I use box from my local computer that placed inner folder with name contains space characters this error showing upnovalagung@dreambender:~/Documents$ vagrant box add some\ path\ \ with\ space/ubuntu1204box/opt/vagrant/embedded/lib/ruby/200/uri/commonrb:176:in split: bad URI(is not URI): file:///home/novalagung/Documents/some path  with space/ubuntu1204box (URI::InvalidURIError)from /opt/vagrant/embedded/lib/ruby/200/uri/commonrb:211:in parsefrom /opt/vagrant/embedded/lib/ruby/200/uri/commonrb:747:in parsefrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builtin/box_addrb:448:in metadata_urlfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builtin/box_addrb:76:in block in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builtin/box_addrb:74:in mapfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builtin/box_addrb:74:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/wardenrb:34:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/builderrb:116:in callfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/runnerrb:69:in block in runfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/util/busyrb:19:in busyfrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/action/runnerrb:69:in runfrom /opt/vagrant/embedded/gems/gems/vagrant-151/plugins/commands/box/command/addrb:77:in executefrom /opt/vagrant/embedded/gems/gems/vagrant-151/plugins/commands/box/command/rootrb:61:in executefrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/clirb:42:in executefrom /opt/vagrant/embedded/gems/gems/vagrant-151/lib/vagrant/environmentrb:248:in clifrom /opt/vagrant/bin//embedded/gems/gems/vagrant-151/bin/vagrant:158:in mainso I add some code to handler this error,,870,0.7379310344827587,0.4989754098360656,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1523,21,travis,novalagung,mitchellh,false,,0,0,29,20,597,false,false,false,false,0,0,0,0,0,0,-1
3329014,mitchellh/vagrant,ruby,3303,1395691771,1418686620,1418686620,383247,383247,commits_in_master,false,false,false,93,2,2,0,2,0,2,0,6,0,0,1,1,1,0,0,0,0,1,1,1,0,0,18,0,18,0,9.213251924033393,0.1958505407993358,0,,plugins/guests/debian/cap/configure_networks.rb|plugins/guests/debian/cap/configure_networks.rb,0,0.0,0,1,false,Dont reorder config in /etc/network/interfaces On Debian the network interface configuration is rewritten with the Vagrant section appended every reboot But the network interface file is order dependent when additional virtual interfaces are added by installed packages (ucarp being my motivating example) Moving the Vagrant section to the end breaks virtual interfaces (like ucarps virtual IP)This patch changes this so that it effectively rewrites the Vagrant section in /etc/network/interfaces in place rather than moving it to the end of the fileIf the section doesnt exist it still gets appended as before,,869,0.7376294591484465,0.4989754098360656,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,20,1523,57,travis,barrkel,sethvargo,false,sethvargo,0,0,0,0,1650,true,false,false,false,0,0,0,0,1,0,382366
3328387,mitchellh/vagrant,ruby,3301,1395687953,1396427145,1396427145,12319,12319,commits_in_master,false,false,true,63,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.411969420402275,0.09378736238850574,18,mitchell.hashimoto@gmail.com,lib/vagrant/plugin/manager.rb,18,0.018461538461538463,0,0,false,Fixed issue 3285 Fixed issue #3285 When using prerelease gems we need to ensure we store the gem version otherwise Bundler wont use the correct gem version since prerelease gems are not available by default By storing the gem version for prerelease gems we allow Bundler to properly resolve prerelease gems and not give potentially confusing errors to Vagrant users using prerelease plugins,,868,0.7373271889400922,0.49948717948717947,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,19,1523,20,travis,sneal,mitchellh,false,mitchellh,0,0,30,0,1509,true,false,false,false,1,7,0,0,1,0,12319
3320855,mitchellh/vagrant,ruby,3293,1395591027,1396427363,1396427363,13938,13938,commits_in_master,false,false,false,18,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.261586866428815,0.09059060789125178,7,mitchell.hashimoto@gmail.com,plugins/commands/plugin/action/list_plugins.rb,7,0.007172131147540984,0,0,false,Add machine readable output for vagrant plugin list command Add machine readable output for vagrant plugin list command,,867,0.7370242214532872,0.5,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,19,1522,19,travis,emyl,mitchellh,false,mitchellh,7,1.0,10,2,1165,false,true,true,false,0,0,0,0,0,0,13938
3320795,mitchellh/vagrant,ruby,3292,1395589862,1396427529,1396427529,13961,13961,commits_in_master,false,false,false,13,1,1,0,4,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.227782031461676,0.08987200220625191,9,teemu.matilainen@iki.fi,plugins/hosts/linux/cap/nfs.rb,9,0.009221311475409836,0,0,false,Update nfsrb Make call to exportfs just use the system path Closes #3224,,866,0.7367205542725174,0.5,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,19,1522,18,travis,skinofstars,mitchellh,false,mitchellh,0,0,18,21,1877,false,false,false,false,0,0,0,0,0,0,1966
3308150,mitchellh/vagrant,ruby,3287,1395415604,1397352254,1397352254,32277,32277,commits_in_master,false,true,false,67,8,2,5,6,0,11,0,2,2,0,0,5,2,0,0,3,0,3,6,4,0,0,0,444,8,1682,19.350673858711687,0.4113466152154534,0,,test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb|test/unit/plugins/provisioners/ansible/config_test.rb|test/unit/plugins/provisioners/ansible/provisioner_test.rb,0,0.0,3,2,true,provisioners/ansible: add first unit tests @mitchellh This is yet not complete but before I add more spec examples for the Ansible provisioner could you please review this first draft I put some questions in commit comments Many thanks in advance/cc @tmatilai @fgrehm (I think you also might be interested to have a look on it as I cherry-picked from other provisioner unit tests that you wrote),,865,0.7364161849710983,0.5020491803278688,21204,547.0665912092057,43.90681003584229,84.84248255046218,5563,18,1520,17,travis,gildegoma,mitchellh,false,mitchellh,11,0.9090909090909091,45,126,1258,true,true,true,false,10,31,13,5,2,2,1
3303850,mitchellh/vagrant,ruby,3282,1395364275,1395376586,1395376586,205,205,commits_in_master,false,false,false,9,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,20,0,20,0,9.078466922179903,0.1956436360953132,0,,plugins/guests/omnios/cap/mount_nfs_folder.rb|plugins/guests/omnios/plugin.rb,0,0.0,0,0,false,Add mount_nfs_folder capability to omnios guests Refs issue #3280,,864,0.7361111111111112,0.4984488107549121,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1519,18,travis,mivok,mitchellh,false,mitchellh,0,0,20,0,1841,false,false,false,false,1,0,0,0,0,0,204
3303830,mitchellh/vagrant,ruby,3281,1395364132,1395376886,1395376886,212,212,commits_in_master,false,false,false,90,3,3,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,27,0,27,0,13.810628855009504,0.2976231195330634,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/virtualbox/boxes.html.md|website/docs/source/v2/virtualbox/boxes.html.md|website/docs/source/v2/virtualbox/boxes.html.md,1,0.001034126163391934,0,0,false,Update virtualbox boxes docs I referenced the [current docs for creating a VirtualBox base box](http://docsvagrantupcom/v2/virtualbox/boxeshtml) in the process of creating [my own base box](https://vagrantcloudcom/sincerely/precise64) and ran into a few gotchas:1 I needed the dkms package installed in order to build the guest additions (see: http://askubuntucom/questions/98416/error-kernel-headers-not-found-but-they-are-in-place)2 It also looks like linux-headers-generic should suffice as opposed to linux-headers-$(uname -r)3 I added instructions for downloading and building the latest guest additions via the command line (as opposed to a GUI)Feel free to tweak or improve as you see fit,,863,0.7358053302433372,0.4984488107549121,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1519,17,travis,justincwatt,mitchellh,false,mitchellh,0,0,17,11,836,false,false,false,false,0,0,0,0,0,0,212
3294576,mitchellh/vagrant,ruby,3272,1395280612,1395376932,1395376932,1605,1605,commits_in_master,false,false,false,93,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,1,20,1,20,8.732377528011657,0.1881853077156972,17,teemu.matilainen@iki.fi,plugins/kernel_v2/config/vm_provisioner.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,17,0.017580144777662874,0,0,false,Allow provisioner plugins to register without config Hello while maintaining the [vagrant-hostmanager](https://githubcom/smdahlen/vagrant-hostmanager) plugin I noticed that vagrant 15 breaks when a provisioner plugin is registered without a provisioner configThe init code in vm_provisionerrb implies that its okay not to have a config for the provisioner but then it breaks in [#add_config](https://githubcom/pbitty/vagrant/blob/10d5416a9037233a8610f9b16cb28c948fa1c533/plugins/kernel_v2/config/vm_provisionerrb#L51) if the config class is nilI wrote a failing test for it and then added DummyConfig as the default config classWould this be the way to go in fixing it  Im happy to make any changes to the PR,,862,0.7354988399071926,0.4984488107549121,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1518,16,travis,pbitty,mitchellh,false,mitchellh,0,0,3,4,1371,false,false,false,false,0,0,0,0,0,0,1605
3292330,mitchellh/vagrant,ruby,3269,1395265444,,1395377178,1862,,unknown,false,false,false,9,1,1,0,2,0,2,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.8194125778384675,0.10385976053602233,4,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/private_network.html.md,4,0.004136504653567736,0,0,false,Fix incorrect docs on private_networking type This fixes #3267,,861,0.7363530778164924,0.4984488107549121,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1518,15,travis,alimony,mitchellh,false,,0,0,12,7,1345,false,true,false,false,0,0,0,0,0,0,1862
3275309,mitchellh/vagrant,ruby,3251,1395106937,1395260993,1395260993,2567,2567,commits_in_master,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.421925979444859,0.09529551348662388,2,mitchell.hashimoto@gmail.com,plugins/guests/linux/cap/mount_smb_shared_folder.rb,2,0.0020408163265306124,0,0,false,#3244 Fix SMB shared folder mount error with password containing symbols Put quotes around the password to fix smb mount errors when a password contains symbols,,860,0.736046511627907,0.5051020408163265,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1516,16,travis,andyclarke,mitchellh,false,mitchellh,0,0,0,0,614,false,false,false,false,0,2,0,0,0,0,2567
3271330,mitchellh/vagrant,ruby,3242,1395079982,1395261066,1395261066,3018,3018,commits_in_master,false,false,false,60,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,5.180843138519695,0.11165069462353783,4,mitchell.hashimoto@gmail.com,plugins/synced_folders/smb/scripts/set_share.ps1,4,0.004081632653061225,0,0,false,Make shared folder type smb work for non-english windows the grant EveryoneFull does not work on localized versions of windows in German it is Jeder in Spanish Todos Also the net share command returns localized texts so the -Match does not work for non-english Windows I could not test exactly that version copied relevant bits from my modified lokal version,,859,0.7357392316647264,0.5051020408163265,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1516,15,travis,uwej711,mitchellh,false,mitchellh,0,0,16,3,1110,false,false,false,false,0,0,0,0,0,0,3017
3262212,mitchellh/vagrant,ruby,3235,1394931896,1433022208,1433022208,634838,634838,commit_sha_in_comments,false,false,false,56,1,1,0,14,0,14,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,25,0,25,0,8.574338195088401,0.18478282198914184,11,tagrain@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb,6,0.006103763987792472,0,8,false,ENH: simpler masterless configuration This PR simplifies vagrant-salt configuration for masterless setup: instead of having people messing with the configuration files (which does not work ATM because of #2940) people can simply do the following:    configvmprovision :salt do |salt|      saltmasterless  true # false by default      saltminion_id  base # allows to override the id  end,,858,0.7354312354312355,0.5066124109867752,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1514,141,travis,cournape,sethvargo,false,sethvargo,2,1.0,113,2,2004,false,true,false,false,0,4,1,0,2,0,7423
3257198,mitchellh/vagrant,ruby,3222,1394846601,1394846750,1394846750,2,2,commits_in_master,false,false,false,15,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,9.735414105351136,0.2098049193312296,0,,website/docs/source/v2/getting-started/networking.html.md|website/docs/source/v2/getting-started/provisioning.html.md,0,0.0,0,0,true,correct docs (precise32 - hashicorp/precise32) I think this an error in the Getting Started docs,,856,0.7348130841121495,0.5140771637122002,21025,543.3055885850179,43.47205707491082,84.8038049940547,5563,18,1513,14,travis,rissem,mitchellh,false,mitchellh,0,0,31,6,1615,false,false,false,false,0,0,0,0,0,0,2
3254859,mitchellh/vagrant,ruby,3217,1394829467,1394831138,1394831138,27,27,merged_in_comments,false,false,true,78,6,5,0,1,0,1,0,3,8,0,9,17,13,0,2,10,0,9,19,15,0,2,511,45,616,116,76.65652973299541,1.6520010146961985,158,teemu.matilainen@iki.fi,plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/scripts/command_alias.ps1|lib/vagrant/errors.rb|lib/vagrant/machine.rb|templates/locales/en.yml|test/unit/vagrant/machine_test.rb|plugins/communicators/winrm/communicator.rb|plugins/communicators/winrm/config.rb|plugins/communicators/winrm/errors.rb|plugins/communicators/winrm/plugin.rb|plugins/communicators/winrm/shell.rb|templates/locales/comm_winrm.yml|vagrant.gemspec|plugins/communicators/winrm/config.rb|test/unit/plugins/communicators/winrm/config_test.rb|plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,106,0.0,2,2,true,WinRM Communicator + Configurable Communicators This pull request introduces two major new features:  * **WinRM Communicator** - This is extracted from vagrant-windows and allows communication via WinRM with the machine  * **Configurable communicator** - The communicator can be set by doing configvmcommunicator  winrm In the future we might automatically do this for guests that are windows but for now this works greatI tested again a Windows box created with packer-windows and it works/cc @sneal @pmorton ,,854,0.734192037470726,0.5133976420150054,21021,542.8381142666857,43.432757718472004,84.72479901051331,5563,18,1513,15,travis,mitchellh,mitchellh,true,mitchellh,15,1.0,3454,0,2207,true,true,false,false,320,685,171,7,882,19,27
3254059,mitchellh/vagrant,ruby,3215,1394824490,1394825486,1394825486,16,16,commits_in_master,false,false,false,91,2,2,2,1,0,3,0,2,0,0,100,100,100,0,0,0,0,100,100,100,0,0,0,2296,0,2296,461.38651514136643,9.944337874535433,205,teemu.matilainen@iki.fi,test/unit/plugins/providers/virtualbox/config_test.rb|test/unit/plugins/commands/box/command/add_test.rb|test/unit/plugins/commands/box/command/remove_test.rb|test/unit/plugins/commands/box/command/update_test.rb|test/unit/plugins/commands/list-commands/command_test.rb|test/unit/plugins/commands/plugin/action/install_gem_test.rb|test/unit/plugins/commands/plugin/action/plugin_exists_check_test.rb|test/unit/plugins/commands/plugin/action/uninstall_plugin_test.rb|test/unit/plugins/commands/plugin/action/update_gems_test.rb|test/unit/plugins/commands/ssh_config/command_test.rb|test/unit/plugins/guests/debian/cap/change_host_name_test.rb|test/unit/plugins/guests/redhat/cap/change_host_name_test.rb|test/unit/plugins/guests/support/shared/debian_like_host_name_examples.rb|test/unit/plugins/guests/support/shared/redhat_like_host_name_examples.rb|test/unit/plugins/guests/ubuntu/cap/change_host_name_test.rb|test/unit/plugins/providers/hyperv/config_test.rb|test/unit/plugins/providers/hyperv/provider_test.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_settings_test.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_valid_ids_test.rb|test/unit/plugins/providers/virtualbox/cap_test.rb|test/unit/plugins/providers/virtualbox/config_test.rb|test/unit/plugins/providers/virtualbox/support/shared/virtualbox_driver_version_4_x_examples.rb|test/unit/plugins/providers/virtualbox/synced_folder_test.rb|test/unit/plugins/provisioners/chef/provisioner/base_test.rb|test/unit/plugins/provisioners/shell/config_test.rb|test/unit/plugins/synced_folders/nfs/action_cleanup_test.rb|test/unit/plugins/synced_folders/rsync/command/rsync_auto_test.rb|test/unit/plugins/synced_folders/rsync/command/rsync_test.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb|test/unit/support/shared/virtualbox_context.rb|test/unit/vagrant/action/builder_test.rb|test/unit/vagrant/action/builtin/box_add_test.rb|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|test/unit/vagrant/action/builtin/box_remove_test.rb|test/unit/vagrant/action/builtin/call_test.rb|test/unit/vagrant/action/builtin/confirm_test.rb|test/unit/vagrant/action/builtin/env_set_test.rb|test/unit/vagrant/action/builtin/graceful_halt_test.rb|test/unit/vagrant/action/builtin/handle_box_test.rb|test/unit/vagrant/action/builtin/is_state_test.rb|test/unit/vagrant/action/builtin/lock_test.rb|test/unit/vagrant/action/builtin/message_test.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|test/unit/vagrant/action/builtin/ssh_exec_test.rb|test/unit/vagrant/action/builtin/synced_folder_cleanup_test.rb|test/unit/vagrant/action/builtin/synced_folders_test.rb|test/unit/vagrant/action/hook_test.rb|test/unit/vagrant/action/runner_test.rb|test/unit/vagrant/action/warden_test.rb|test/unit/vagrant/batch_action_test.rb|test/unit/vagrant/box_collection_test.rb|test/unit/vagrant/box_metadata_test.rb|test/unit/vagrant/box_test.rb|test/unit/vagrant/cli_test.rb|test/unit/vagrant/config/loader_test.rb|test/unit/vagrant/config/v1/dummy_config_test.rb|test/unit/vagrant/config/v1/loader_test.rb|test/unit/vagrant/config/v1/root_test.rb|test/unit/vagrant/config/v2/dummy_config_test.rb|test/unit/vagrant/config/v2/loader_test.rb|test/unit/vagrant/config/v2/root_test.rb|test/unit/vagrant/config/v2/util_test.rb|test/unit/vagrant/config_test.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/errors_test.rb|test/unit/vagrant/guest_test.rb|test/unit/vagrant/host_test.rb|test/unit/vagrant/machine_state_test.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/plugin/manager_test.rb|test/unit/vagrant/plugin/v1/command_test.rb|test/unit/vagrant/plugin/v1/communicator_test.rb|test/unit/vagrant/plugin/v1/config_test.rb|test/unit/vagrant/plugin/v1/manager_test.rb|test/unit/vagrant/plugin/v1/plugin_test.rb|test/unit/vagrant/plugin/v1/provider_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|test/unit/vagrant/plugin/v2/communicator_test.rb|test/unit/vagrant/plugin/v2/components_test.rb|test/unit/vagrant/plugin/v2/config_test.rb|test/unit/vagrant/plugin/v2/manager_test.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|test/unit/vagrant/plugin/v2/provider_test.rb|test/unit/vagrant/registry_test.rb|test/unit/vagrant/ui_test.rb|test/unit/vagrant/util/ansi_escape_code_remover_test.rb|test/unit/vagrant/util/downloader_test.rb|test/unit/vagrant/util/file_checksum_test.rb|test/unit/vagrant/util/hash_with_indifferent_access_test.rb|test/unit/vagrant/util/is_port_open_test.rb|test/unit/vagrant/util/line_endings_helper_test.rb|test/unit/vagrant/util/network_ip_test.rb|test/unit/vagrant/util/retryable_test.rb|test/unit/vagrant/util/safe_chdir_test.rb|test/unit/vagrant/util/scoped_hash_override_test.rb|test/unit/vagrant/util/ssh_test.rb|test/unit/vagrant/util/string_block_editor_test.rb|test/unit/vagrant/util/which_test.rb|test/unit/vagrant/vagrantfile_test.rb|test/unit/vagrant_test.rb,26,0.0021551724137931034,2,0,true,Transpec unit So I was kinda bored today and decided that this would be a nice thing to have in place and ended up converting all of the unit tests syntax to rspec 3 it took me a while but here it isOf course that is not true I just found out about https://githubcom/yujinakayama/transpec and was very happy about the results on one of my projects and since I remember seeing some discussion around doing this over here I thought it would be nice to share :smiley:/cc @phinze @yujinakayama,,853,0.7338804220398594,0.5129310344827587,21021,539.5081109366823,42.90947148090005,84.72479901051331,5563,18,1513,15,travis,fgrehm,mitchellh,false,mitchellh,25,0.92,365,143,1773,true,true,true,false,7,27,1,3,1,1,13
3252514,mitchellh/vagrant,ruby,3210,1394812615,1394825675,1394825675,217,217,commits_in_master,false,false,false,129,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.111991062817358,0.08862640567897193,3,mitchell.hashimoto@gmail.com,lib/vagrant/util/powershell.rb,3,0.0032258064516129032,0,0,true,Fixed broken PowerShell execution Commit 621369eb which is supposed to fix issue #3100 actually seems to break execution completely While trying to solve #3139 I encountered the same problem as in #3192 where the JSON couldnt be parsedI dumped stdout from the process into a file (Filewrite(C:/testtxt rstdout)) and the output was the path to the actual script and not the generated JSON It seems like wrapping the path in single quotation marks just passes it as a string to PowerShell who have no clue what to do and just throws the string back at youI did a quick search and proper way to execute scripts with spaced paths [seems to be this way](http://blogstechnetcom/b/heyscriptingguy/archive/2012/08/07/powertip-run-a-powershell-script-with-space-in-the-pathaspx) This commit should fix the problem encountered in #3192 and actually fix #3100,,852,0.7335680751173709,0.513978494623656,21021,539.5081109366823,42.90947148090005,84.72479901051331,5563,18,1513,14,travis,jyggen,mitchellh,false,mitchellh,0,0,6,3,1410,false,false,false,false,1,4,0,0,0,0,217
3250750,mitchellh/vagrant,ruby,3207,1394792720,1396724889,1396724889,32202,32202,commits_in_master,false,false,false,25,1,1,0,6,0,6,0,4,0,0,3,3,1,2,0,0,0,3,3,1,2,0,42,0,42,0,15.116509351260007,0.32580856080383175,0,,plugins/guests/fedora/cap/configure_networks.rb|templates/guests/fedora/network_dhcp.erb|templates/guests/fedora/network_static.erb,0,0.0,0,3,true,Fix a network configuration issue of Fedora [GH-1997] Support Predictable Network Interface NamesI tested on Fedora19 and Fedora20 both vms private/public network worked fine,,851,0.7332549941245593,0.5150214592274678,21021,539.5081109366823,42.90947148090005,84.72479901051331,5563,18,1513,20,travis,khiro,mitchellh,false,mitchellh,0,0,7,3,2160,false,false,false,false,0,2,0,0,0,0,1888
3248099,mitchellh/vagrant,ruby,3194,1394759702,,1394760035,5,,unknown,false,false,false,7,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.850662969394764,0.10454712857041348,9,teemu.matilainen@iki.fi,website/docs/source/v2/boxes/base.html.md,9,0.009544008483563097,0,0,false,Fix link to VirtualbBox Base Boxes page ,,850,0.7341176470588235,0.5206786850477201,21021,539.5081109366823,42.90947148090005,84.72479901051331,5563,18,1512,13,travis,ex-nerd,mitchellh,false,,0,0,18,8,1578,false,false,false,false,0,3,0,0,0,0,-1
3244096,mitchellh/vagrant,ruby,3189,1394733665,1394738722,1394738722,84,84,commits_in_master,false,false,true,45,1,1,0,1,0,1,0,1,0,0,10,10,10,0,0,0,0,10,10,10,0,0,30,0,30,0,47.12771888645705,1.015780055765825,19,teemu.matilainen@iki.fi,website/docs/source/v2/boxes.html.md|website/docs/source/v2/boxes/base.html.md|website/docs/source/v2/boxes/format.html.md|website/docs/source/v2/cli/box.html.md|website/docs/source/v2/cli/login.html.md|website/docs/source/v2/getting-started/boxes.html.md|website/docs/source/v2/getting-started/share.html.md|website/docs/source/v2/hyperv/usage.html.md|website/docs/source/v2/share/index.html.md|website/docs/source/v2/vagrantfile/machine_settings.html.md,7,0.003215434083601286,0,0,false,website/docs: link to real vagrant cloud url This is mostly for cookies and google If youre logged in towww you wont be logged in to apex and visa versa Also a VagrantCloud bug but wanted to make it consistent on this end[cookies](https://encrypted-tbn3gstaticcom/imagesqtbn:ANd9GcTKt-3ayAFFzjEXjwy3Q-3WjfdIrDxgTZ2chgmqZeBPi81mLSC65Q),,849,0.7338044758539458,0.5155412647374062,21000,538.4761904761905,42.80952380952381,84.57142857142857,5563,18,1512,13,travis,pearkes,mitchellh,false,mitchellh,2,1.0,251,52,1004,true,true,true,false,0,0,2,0,7,0,84
3240231,mitchellh/vagrant,ruby,3178,1394688257,1394688368,1394688368,1,1,commits_in_master,false,false,false,8,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,19,0,19,0,8.292480669363666,0.17906821013062973,1,mitchell.hashimoto@gmail.com,plugins/guests/tinycore/cap/rsync.rb|plugins/guests/tinycore/plugin.rb,1,0.0010869565217391304,0,0,false,add rsync_install capability to tinycore guest fixes #3177,,848,0.7334905660377359,0.5097826086956522,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1512,17,travis,cuberri,mitchellh,false,mitchellh,0,0,6,2,993,false,false,false,false,0,0,0,0,0,0,1
3239184,mitchellh/vagrant,ruby,3174,1394677855,1394688523,1394688523,177,177,commits_in_master,false,false,false,30,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.633015068713967,0.10004554112834718,4,mitchell.hashimoto@gmail.com,website/docs/source/v2/vagrantfile/machine_settings.html.md,4,0.004338394793926247,0,0,false,configvmbox_url can use local files Updated the documentation to show that box_url can use file:// This ability was added via in issue #1087 that was added 2 years agohttps://githubcom/mitchellh/vagrant/pull/1087,,847,0.7331759149940968,0.5108459869848156,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,16,travis,freshteapot,mitchellh,false,mitchellh,0,0,16,18,1366,false,false,false,false,0,0,0,0,0,0,177
3238792,mitchellh/vagrant,ruby,3170,1394674778,1394688841,1394688841,234,234,merged_in_comments,false,false,false,25,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.635319318239288,0.10009529919889876,0,,website/docs/source/v2/virtualbox/index.html.md,0,0.0,0,0,false,Adds warning to VirtualBox docs The warning box in the docs explains an issue with permissions for VirtualBox on WindowsThis came up through #3135,,846,0.7328605200945626,0.5108459869848156,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,15,travis,mkremer,mitchellh,false,mitchellh,0,0,20,22,1796,false,true,false,false,0,2,0,0,0,0,-1
3237739,mitchellh/vagrant,ruby,3167,1394667204,1394689019,1394689019,363,363,commits_in_master,false,false,false,138,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.899421043735249,0.10579832404304366,7,teemu.matilainen@iki.fi,plugins/hosts/linux/cap/nfs.rb,7,0.007592190889370932,0,0,false,Vagrant 15: Fix Linux NFS exports pruning due to bad sed expression The mount id is a file path which will contain forward slashes Aprevious attempt (although notably missing in the Linux host plugin) atfixing this used Stringgsub to escape the forward slashes howeverthe solution that eventually made its way into the 15 release usesRegexpescape which doesnt escape forward slashesThe Ruby Regexpescape method does not escape forward slashes becausethey are not RE meta-characters their special meaning is specific tosed expressions as delimiters To avoid the issue entirely we can usean alternative delimiter by prefixing the address expression with abackslash with the desired delimiter character followingUse control character (ASCII code point 0x01) as expression delimiterso it is very unlikely an identifier will have a conflicting characterwithin it,,845,0.7325443786982249,0.5108459869848156,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,14,travis,xraj,mitchellh,false,mitchellh,1,1.0,0,0,1129,false,true,false,false,1,4,1,0,0,0,280
3240345,mitchellh/vagrant,ruby,3163,1394655049,,1394689465,573,,unknown,false,false,false,7,3,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,17,0,4.1095296483785635,0.08874137709529199,9,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/helper.rb,9,0.009771986970684038,0,0,false,owner/group options for rsync shares Fixes #3142,,844,0.7334123222748815,0.510314875135722,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,13,travis,mway,mitchellh,false,,1,1.0,8,0,1829,false,true,false,false,1,9,1,0,0,0,573
3235275,mitchellh/vagrant,ruby,3161,1394651759,1394653553,1394653553,29,29,commits_in_master,false,false,false,5,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,0,10,0,13.80041981897034,0.2983125531207337,110,teemu.matilainen@iki.fi,plugins/providers/virtualbox/driver/version_4_3.rb|CHANGELOG.md|plugins/providers/virtualbox/driver/version_4_3.rb,108,0.11790393013100436,0,0,false,providers/virtualbox: retry list vms [GH-2831] ,,843,0.7330960854092526,0.50764192139738,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,16,travis,schlamar,mitchellh,false,mitchellh,1,1.0,13,3,1435,false,false,false,false,0,6,0,0,0,0,28
3233635,mitchellh/vagrant,ruby,3154,1394639570,1394653163,1394653163,226,226,commits_in_master,false,false,false,10,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.348209980815467,0.09399175082333822,0,,plugins/guests/darwin/cap/configure_networks.rb,0,0.0,0,1,false,use global namespace for class IO naming conflict Fixes #3143,,842,0.7327790973871734,0.50764192139738,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,16,travis,mway,mitchellh,false,mitchellh,0,0,8,0,1829,false,true,false,false,0,4,0,0,0,0,225
3232515,mitchellh/vagrant,ruby,3148,1394628390,1394654299,1394654299,431,431,merged_in_comments,false,false,false,90,2,2,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,9.15635775072923,0.19792560615816476,7,teemu.matilainen@iki.fi,plugins/hosts/linux/cap/nfs.rb|plugins/hosts/linux/cap/nfs.rb,7,0.007641921397379912,0,0,false,Vagrant 15: NFS exports broken under Ubuntu Saucy exportfs is installed under /usr/sbin under Ubuntu I dont know about other distros I can create a symlink to work around this oneThe more serious issue is that the shell out to sed to prune /etc/exports is still broken in this release The hack to filter the identifiers with Regexescape did not fix it because it doesnt escape forward slashes as they are not regex meta-characters They are special only to sed for expression delimiters for address ranges and search/replace expressions,,841,0.7324613555291319,0.50764192139738,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,14,travis,xraj,mitchellh,false,mitchellh,0,0,0,0,1129,false,true,false,false,1,4,0,0,0,0,431
3231388,mitchellh/vagrant,ruby,3145,1394611175,1394654379,1394654379,720,720,commits_in_master,false,false,false,5,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.538568298921315,0.09810657317126886,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/cli/rsync-auto.html.md,3,0.0032751091703056767,0,0,false,Fix typo in rsync-auto docs ,,840,0.7321428571428571,0.50764192139738,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1511,13,travis,Fuhrmann,mitchellh,false,mitchellh,0,0,15,21,864,false,false,false,false,0,0,0,0,0,0,719
3228822,mitchellh/vagrant,ruby,3138,1394584706,1433022057,1433022057,640622,640622,commit_sha_in_comments,false,true,false,135,1,1,3,5,0,8,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,27,0,27,0,8.707869584663914,0.18823099892024076,10,tagrain@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb,6,0.006564551422319475,0,2,false,BUG: naive attempt at fixing #2970 This adds a config_dir settings to the salt provisioner with a sensible default to /etc or C:\\etc on windows This is then used to upload the minion file at the right placeTBH I think the current configuration setup of the vagrant salt plugin is a bit clumsy What about adding this instead:# Vagrantfile configvmprovision :salt do |salt|      saltmasterless  true # default false       saltminion_id  something # default is using salt default endThis way people dont need to care about how to actually set up masterless at the minion level and translating this config into actual salt call is simple (eg salt-call  --local --id$id) Thoughts  Would be happy to prepare a PR toward this if this makes sense to vagrant devs,,839,0.7318235995232419,0.5087527352297593,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1510,140,travis,cournape,sethvargo,false,sethvargo,1,1.0,113,2,2000,false,true,false,false,0,3,0,0,1,0,5787
3227572,mitchellh/vagrant,ruby,3133,1394576141,,1394576205,1,,unknown,false,false,false,58,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.43030376743687,0.09576636683561496,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/plugins/development-basics.html.md,1,0.0010976948408342481,0,0,false,[Docs] Fix gem path in Gemfile I kept getting a syntax error by following the documentation until I changed this line Gemfile syntax error:Gemfile:11: syntax error unexpected : expecting kEND  gem my-plugin path:     From the bundler documentation it looks like the syntax was wrong Once I made this switch it started to work correctly ,,838,0.7326968973747017,0.5082327113062569,20942,538.3439977079553,42.64158151083946,84.32814439881578,5563,18,1510,12,travis,patrickheeney,patrickheeney,true,,0,0,31,14,766,false,true,false,false,0,0,0,0,0,0,-1
3226025,mitchellh/vagrant,ruby,3126,1394566474,1394568351,1394568351,31,31,commits_in_master,false,false,false,37,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.156874867013699,0.08985602487935407,4,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/config.rb,4,0.004429678848283499,0,0,false,Fix salt provisioning validation The problem was that I wanted to have a salt-master only (no salt-minion) So in this case it should be allowed to set only the master keys (and no minion keys)See: #2790,,837,0.7323775388291517,0.5038759689922481,20932,538.60118478884,42.661952990636344,84.3684311102618,5563,18,1510,13,travis,bbinet,mitchellh,false,mitchellh,1,1.0,21,28,1785,false,false,false,false,0,2,1,0,0,0,31
3223521,mitchellh/vagrant,ruby,3112,1394544503,1394569855,1394569855,422,422,commits_in_master,false,false,false,3,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9613988487182037,0.08563056740824775,14,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb,14,0.015469613259668509,0,0,false,fix timout typo ,,836,0.7320574162679426,0.5049723756906077,20932,538.60118478884,42.661952990636344,84.3684311102618,5563,18,1510,12,travis,Krazylee,mitchellh,false,mitchellh,0,0,61,89,1155,false,false,false,false,0,0,0,0,0,0,422
3221841,mitchellh/vagrant,ruby,3102,1394517835,1395377421,1395377421,14326,14326,commits_in_master,false,false,false,81,5,3,1,5,0,6,0,2,13,0,5,19,14,0,0,13,0,6,19,14,0,0,193,205,213,213,81.4805746650493,1.7613040513645581,0,,plugins/guests/smartos/cap/change_host_name.rb|plugins/guests/smartos/cap/configure_networks.rb|plugins/guests/smartos/cap/rsync.rb|plugins/guests/smartos/plugin.rb|test/unit/plugins/guests/smartos/cap/change_host_name_test.rb|test/unit/plugins/guests/smartos/cap/configure_networks_test.rb|test/unit/plugins/guests/smartos/cap/halt_test.rb|test/unit/plugins/guests/smartos/cap/mount_nfs_test.rb|test/unit/plugins/guests/smartos/cap/rsync_test.rb|test/unit/support/dummy_communicator.rb|plugins/guests/smartos/cap/change_host_name.rb|plugins/guests/smartos/cap/configure_networks.rb|plugins/guests/smartos/cap/halt.rb|plugins/guests/smartos/cap/mount_nfs.rb|plugins/guests/smartos/cap/rsync.rb|plugins/guests/smartos/config.rb|plugins/guests/smartos/guest.rb|plugins/guests/smartos/plugin.rb,0,0.0,0,0,false,SmartOS detection and command support This fixes #3101Some internals of Vagrant use sudo in a way that cannot be overridden but at least for the guest plugin pfexec can be used in its place It requires that the vagrant user be given role-based access to the necessary commands which is most easily done by applying the Primary Administrator role to the userI also had to add support to the dummy communicator for machinecommunicatetest though it was an easy fix,,835,0.7317365269461078,0.5028248587570622,20932,538.60118478884,42.661952990636344,84.3684311102618,5563,18,1510,14,travis,sax,mitchellh,false,mitchellh,0,0,34,31,1783,true,false,false,false,0,0,0,0,1,0,4
3220680,mitchellh/vagrant,ruby,3097,1394504810,1394504911,1394504911,1,1,github,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.4790014629222386,0.09681919100848536,21,mshirley@comprehend.com,website/docs/source/v2/provisioning/ansible.html.md,21,0.023755656108597284,0,0,false,Nit-picky grammer making it easier to read ,,834,0.7314148681055156,0.5067873303167421,20932,538.60118478884,42.661952990636344,84.3684311102618,5563,16,1509,11,travis,jjshoe,jjshoe,true,jjshoe,0,0,7,4,591,false,false,false,false,0,0,0,0,0,0,1
3219756,mitchellh/vagrant,ruby,3093,1394497907,,1398415985,65301,,unknown,false,false,false,95,4,1,0,9,0,9,0,4,0,0,5,8,5,0,0,0,0,8,8,8,0,0,43,69,61,82,20.848103068981345,0.4506572059166344,39,mitchell.hashimoto@gmail.com,lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/command/mixin_install_opts.rb|test/unit/plugins/commands/plugin/action/install_gem_test.rb,26,0.009070294784580499,0,8,false,Adding the ability to install plugins from git Thanks to the switch to bundler this should expose the ability to install vagrant plugins from git sources (including github) If you install a plugin with the --plugin-git option it will use that as a git source in the resulting bundler file If you want to specify a ref tag or branch you can do that with --plugin-git-ref --plugin-git-tag or --plugin-git-branch respectivelyThis should be a huge benefit to anyone running internal plugins where having a private github repo is much easier than having a private gemsource,,833,0.7322929171668667,0.5079365079365079,20929,538.6783888384539,42.668068230684696,84.38052463089493,5563,16,1509,17,travis,stormbrew,mitchellh,false,,0,0,26,23,1851,false,false,false,false,0,0,0,0,0,0,1
3216992,mitchellh/vagrant,ruby,3090,1394479540,1394479674,1394479674,2,2,github,false,false,false,39,2,2,0,1,0,1,0,1,1,0,2,3,3,0,0,1,0,2,3,3,0,0,16,0,16,0,13.211825182761029,0.28613904662040485,0,,contrib/README.md|contrib/bash/completion.sh|contrib/st/Ruby.sublime-settings,0,0.0,0,0,false,Sublime Text 3 Ruby syntax association for Vagrantfiles Dropping Rubysublime-settings into the User package in Sublime Text will associate Vagrantfiles with Ruby syntax highlightingI also added a shebang line to the autocompletion bash script and cleaned up contrib/READMEmd,,832,0.7319711538461539,0.5113122171945701,20929,538.6783888384539,42.668068230684696,84.38052463089493,5563,15,1509,10,travis,adamlazz,adamlazz,true,adamlazz,0,0,11,28,1232,false,true,false,false,0,0,0,0,0,0,2
3212414,mitchellh/vagrant,ruby,3088,1394416750,1394426710,1394426710,166,166,github,false,false,false,33,2,2,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,23,0,23,0,18.20103752993627,0.3941781206781741,29,mshirley@comprehend.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md|plugins/provisioners/ansible/provisioner.rb,19,0.0192090395480226,0,0,false,Ansible Provisioner: Improve management of ANSIBLE_SSH_ARGS * Ansible Default settings for SSH ControlPersist wont be lost when using SSH-forwarding or multiple SSH keys* People can add more custom SSH parameters via ansibleraw_ssh_args ,,831,0.7316486161251504,0.5152542372881356,20901,539.1608057030764,42.72522845796852,84.58925410267452,5562,17,1508,10,travis,gildegoma,gildegoma,true,gildegoma,10,0.9,44,126,1246,true,true,false,false,8,30,14,7,3,2,165
3205956,mitchellh/vagrant,ruby,3082,1394295563,1397270264,1397270264,49578,49578,merged_in_comments,false,false,false,31,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.290751691438181,0.09292439819013187,0,,plugins/guests/openbsd/cap/configure_networks.rb,0,0.0,0,0,false,OpenBSD support for virtio interfaces - When using KVM as provider you were not able to configure network  interfaces that use virtio because the interface name was strictly  set to em,,830,0.7313253012048193,0.5249722530521642,20901,539.1608057030764,42.72522845796852,84.58925410267452,5562,17,1507,16,travis,mafigit,mitchellh,false,mitchellh,1,0.0,11,11,920,false,false,false,false,0,0,4,0,1,0,33773
3205935,mitchellh/vagrant,ruby,3081,1394295020,,1394295526,8,,unknown,false,false,false,31,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.290751691438181,0.09292439819013187,0,,plugins/guests/openbsd/cap/configure_networks.rb,0,0.0,0,0,false,OpenBSD support for virtio interfaces - When using KVM as provider you were not able to configurer network  interfaces that use virtio because the interface name was strictly  set to em,,829,0.7322074788902292,0.5249722530521642,20901,539.1608057030764,42.72522845796852,84.58925410267452,5562,17,1507,10,travis,mafigit,mafigit,true,,0,0,11,11,920,false,false,false,false,0,0,0,0,1,0,-1
3195875,mitchellh/vagrant,ruby,3073,1394161438,1394184925,1394184925,391,391,github,false,false,false,10,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,13.414857312912787,0.29109096849526744,18,mshirley@comprehend.com,website/docs/source/v2/provisioning/ansible.html.md|plugins/provisioners/ansible/config.rb|website/docs/source/v2/provisioning/ansible.html.md,17,0.018867924528301886,0,0,false,provisioners/ansible: Disable host key checking by default Related to #3060,,827,0.7327690447400241,0.5316315205327414,20885,538.3768254728274,42.71007900406991,84.5582954273402,5562,17,1505,9,travis,gildegoma,gildegoma,true,gildegoma,9,0.8888888888888888,44,126,1243,true,true,false,false,8,28,11,7,3,2,391
3183571,mitchellh/vagrant,ruby,3064,1394057454,,1414699579,344035,,unknown,false,true,false,72,13,4,0,12,0,12,0,3,6,0,8,16,14,0,0,9,0,10,19,17,0,0,601,171,701,390,198.6192484046654,4.316356193832303,14,teemu.matilainen@iki.fi,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|test/unit/plugins/provisioners/chef/config/chef_client_test.rb|test/unit/plugins/provisioners/chef/config/chef_solo_test.rb|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_zero.html.md|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|test/unit/plugins/provisioners/chef/config/chef_client_test.rb|test/unit/plugins/provisioners/chef/config/chef_solo_test.rb|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_zero.html.md|plugins/provisioners/chef/command_builder.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/chef_zero.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_zero.rb|test/unit/plugins/provisioners/chef/config/chef_client_test.rb|test/unit/plugins/provisioners/chef/config/chef_solo_test.rb|test/unit/plugins/provisioners/chef/config/chef_zero_test.rb|website/docs/source/v2/provisioning/chef_common.html.md|website/docs/source/v2/provisioning/chef_zero.html.md,9,0.0,0,16,false,WIP: [provisioner/chef-zero] Add support for chef-zero provisioner This is a work in progress First attempt was #2570 I took a second crack at adding a Chef Zero provisioner This formally adds the chef_zero provisioner which merely adds the option for a binary attribute on the chef-client configuration For now it looks like we do not want to deprecate chef-solo and its much cleaner to know youre using a separate provisioner for now ,,821,0.7344701583434835,0.5504994450610433,20808,538.3025759323338,42.62783544790465,84.10226835832373,5561,14,1504,37,travis,johnbellone,sethvargo,false,,5,0.8,28,8,1424,true,false,false,false,3,19,4,0,3,0,75
3176189,mitchellh/vagrant,ruby,3058,1393985431,1397161939,1397161939,52941,52941,merged_in_comments,false,false,false,161,1,1,0,7,0,7,0,3,0,0,5,5,5,0,0,0,0,5,5,5,0,0,30,40,30,40,21.924405863335235,0.4775849904740986,37,teemu.matilainen@iki.fi,lib/vagrant/environment.rb|lib/vagrant/vagrantfile.rb|plugins/commands/up/command.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/vagrantfile_test.rb,29,0.008859357696566999,0,3,false,Add autostart as an option for vagrant boxes [WIP] When boxes are defined in the vagrantfile the vagrant up command without arguments always selects all boxesWith this change there is an option to add autostart: false to a box in which case it wil only start if specifically used as an argument to vagrant upThe purpose of this is to allow boxes in the configuration that are used for a specific purpose but are not needed for regular developers to start- Added specs for the environment and vagrantfile- Added a methd to retrieve autostart_machine_names- Changed the plugin up/command to use autostart_machine_names when no argument was given to the command### warningI am not a Ruby developer so Ill need some help with this:The tests pass including the new specs I added but I cant seem to run vagrant with bundle exec vagrant without getting an error I dont know if the code actually works,,820,0.7341463414634146,0.5548172757475083,20808,538.3025759323338,42.62783544790465,84.10226835832373,5561,13,1503,17,travis,ramondelafuente,mitchellh,false,mitchellh,0,0,7,1,1086,false,false,false,false,1,2,0,0,1,0,2312
3162062,mitchellh/vagrant,ruby,3051,1393867274,1393961239,1393961239,1566,1566,commits_in_master,false,false,false,15,2,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,5,0,4.214954861780117,0.09181393618688485,7,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/client.rb,7,0.0075107296137339056,0,0,false,Set param -name automatically (docker run) -name ist needed for linking containers ie see http://docsdockerio/en/latest/use/working_with_links_names/#working-with-links-names,,819,0.7338217338217338,0.5793991416309013,20774,534.947530567055,42.26436892269183,83.46972176759411,5561,13,1502,7,travis,mattes,mitchellh,false,mitchellh,0,0,58,222,820,false,true,true,false,0,0,0,0,0,0,2
3153865,mitchellh/vagrant,ruby,3045,1393738720,1393755247,1393755247,275,275,commits_in_master,false,false,false,48,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.542301707738924,0.09894454205169072,3,mitchell.hashimoto@gmail.com,lib/vagrant/util/file_checksum.rb,3,0.003218884120171674,0,0,false,Read box file in binary mode for checksum On my Windows 7 machine this fixes the boxs MD5 sum not being calculated correctlyI think this might also fix #2936In case you want to test this yourself I can provide the box file that triggers the error,,818,0.7334963325183375,0.5772532188841202,20774,534.947530567055,42.26436892269183,83.46972176759411,5561,13,1501,7,travis,bmorg,mitchellh,false,mitchellh,0,0,2,7,996,false,false,false,false,0,2,0,0,0,0,275
3146835,mitchellh/vagrant,ruby,3043,1393634211,1393634225,1393634225,0,0,commits_in_master,false,false,true,64,40,40,0,0,2,2,2,0,67,17,36,120,69,1,2,67,17,36,120,69,1,2,4690,155,4690,155,720.6961015087841,16.533648683612356,39,teemu.matilainen@iki.fi,plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/action/is_created.rb|plugins/providers/hyperv/action/is_stopped.rb|plugins/providers/hyperv/action/message_already_created.rb|plugins/providers/hyperv/action/message_not_created.rb|plugins/providers/hyperv/action/message_not_running.rb|plugins/providers/hyperv/action/read_guest_ip.rb|plugins/providers/hyperv/action/read_state.rb|plugins/providers/hyperv/action/share_folders.rb|plugins/providers/hyperv/action/start_instance.rb|plugins/providers/hyperv/action/stop_instance.rb|plugins/providers/hyperv/action/sync_folders.rb|plugins/providers/hyperv/action/wait_for_state.rb|plugins/providers/hyperv/communicator.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/driver/base.rb|plugins/providers/hyperv/error.rb|plugins/providers/hyperv/error/subprocess_error.rb|plugins/providers/hyperv/guest_config/config.rb|plugins/providers/hyperv/host_share/config.rb|plugins/providers/hyperv/plugin.rb|plugins/providers/hyperv/provider.rb|plugins/providers/hyperv/scripts/file_sync.ps1|plugins/providers/hyperv/scripts/get_network_config.ps1|plugins/providers/hyperv/scripts/get_vm_status.ps1|plugins/providers/hyperv/scripts/host_info.ps1|plugins/providers/hyperv/scripts/import_vm.ps1|plugins/providers/hyperv/scripts/mount_share.ps1|plugins/providers/hyperv/scripts/set_smb_share.ps1|plugins/providers/hyperv/scripts/start_vm.ps1|plugins/providers/hyperv/scripts/stop_vm.ps1|plugins/providers/hyperv/scripts/utils/create_session.ps1|plugins/providers/hyperv/scripts/utils/write_messages.ps1|plugins/providers/hyperv/version.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/communicator.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver/base.rb|plugins/providers/hyperv/plugin.rb|plugins/providers/hyperv/provider.rb|plugins/providers/hyperv/scripts/import_vm.ps1|plugins/providers/hyperv/version.rb|lib/vagrant/util/powershell.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/read_state.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/driver/base.rb|plugins/providers/hyperv/error.rb|plugins/providers/hyperv/error/subprocess_error.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/plugin.rb|plugins/providers/hyperv/provider.rb|templates/locales/providers_hyperv.yml|test/unit/plugins/providers/hyperv/provider_test.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/errors.rb|templates/locales/providers_hyperv.yml|plugins/providers/hyperv/driver.rb|lib/vagrant/util/platform.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/provider.rb|templates/locales/providers_hyperv.yml|test/unit/plugins/providers/hyperv/provider_test.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/errors.rb|templates/locales/providers_hyperv.yml|test/unit/plugins/providers/hyperv/provider_test.rb|plugins/providers/hyperv/action/start_instance.rb|plugins/providers/hyperv/communicator.rb|plugins/providers/hyperv/scripts/start_vm.ps1|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/read_state.rb|plugins/providers/hyperv/action/stop_instance.rb|plugins/providers/hyperv/provider.rb|plugins/providers/hyperv/scripts/get_vm_status.ps1|plugins/providers/hyperv/scripts/import_vm.ps1|plugins/providers/hyperv/scripts/stop_vm.ps1|test/unit/plugins/providers/hyperv/provider_test.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/delete_vm.rb|plugins/providers/hyperv/action/stop_instance.rb|plugins/providers/hyperv/driver.rb|plugins/providers/hyperv/scripts/delete_vm.ps1|plugins/providers/hyperv/scripts/import_vm.ps1|plugins/providers/hyperv/scripts/stop_vm.ps1|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/action/read_guest_ip.rb|plugins/providers/hyperv/action/start_instance.rb|plugins/providers/hyperv/action/wait_for_ip_address.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/guest_config/config.rb|plugins/providers/hyperv/scripts/get_network_config.ps1|templates/locales/providers_hyperv.yml|test/unit/plugins/providers/hyperv/config_test.rb|plugins/providers/hyperv/action/start_instance.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/provider.rb|plugins/providers/hyperv/action/read_state.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/action/delete_vm.rb|plugins/providers/hyperv/action/stop_instance.rb|plugins/providers/hyperv/action/wait_for_ip_address.rb|plugins/guests/linux/cap/choose_addressable_ip_addr.rb|plugins/guests/linux/cap/mount_smb_shared_folder.rb|plugins/guests/linux/plugin.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/stop_instance.rb|plugins/providers/hyperv/action/wait_for_state.rb|plugins/providers/hyperv/scripts/set_smb_share.ps1|plugins/synced_folders/smb/errors.rb|plugins/synced_folders/smb/plugin.rb|plugins/synced_folders/smb/scripts/host_info.ps1|plugins/synced_folders/smb/scripts/set_share.ps1|plugins/synced_folders/smb/synced_folder.rb|templates/locales/synced_folder_smb.yml|plugins/synced_folders/smb/plugin.rb|plugins/providers/hyperv/action/import.rb|plugins/providers/hyperv/errors.rb|plugins/providers/hyperv/scripts/get_switches.ps1|templates/locales/providers_hyperv.yml|lib/vagrant/action.rb|lib/vagrant/action/builtin/is_state.rb|lib/vagrant/action/builtin/message.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/resume_vm.rb|plugins/providers/hyperv/action/suspend_vm.rb|plugins/providers/hyperv/scripts/resume_vm.ps1|plugins/providers/hyperv/scripts/suspend_vm.ps1|templates/locales/providers_hyperv.yml|test/unit/vagrant/action/builtin/is_state_test.rb|test/unit/vagrant/action/builtin/message_test.rb|plugins/providers/hyperv/action.rb|lib/vagrant/action/builtin/message.rb|website/docs/source/layouts/layout.erb|website/docs/source/v2/synced-folders/smb.html.md|website/docs/source/layouts/layout.erb|website/docs/source/v2/hyperv/boxes.html.md|website/docs/source/v2/hyperv/configuration.html.md|website/docs/source/v2/hyperv/index.html.md|website/docs/source/v2/hyperv/limitations.html.md|website/docs/source/v2/hyperv/usage.html.md|website/docs/source/v2/hyperv/usage.html.md|plugins/providers/hyperv/action.rb|plugins/synced_folders/smb/errors.rb|plugins/synced_folders/smb/synced_folder.rb|templates/locales/synced_folder_smb.yml|plugins/synced_folders/smb/errors.rb|plugins/synced_folders/smb/synced_folder.rb|templates/locales/synced_folder_smb.yml|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/share_folders.rb|plugins/providers/hyperv/scripts/host_info.ps1|plugins/providers/hyperv/scripts/set_smb_share.ps1|plugins/synced_folders/smb/scripts/mount_share.ps1|plugins/synced_folders/smb/synced_folder.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/sync_folders.rb|lib/vagrant/action/builtin/is_state.rb|test/unit/vagrant/action/builtin/is_state_test.rb|plugins/providers/hyperv/action.rb|plugins/providers/hyperv/action/is_created.rb|plugins/providers/hyperv/action/is_stopped.rb|plugins/providers/hyperv/action/message_already_created.rb|plugins/providers/hyperv/action/message_not_created.rb|plugins/providers/hyperv/action/message_not_running.rb|templates/locales/providers_hyperv.yml|plugins/providers/hyperv/scripts/import_vm.ps1|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/host_share/config.rb|plugins/providers/hyperv/plugin.rb|plugins/providers/hyperv/config.rb|plugins/providers/hyperv/scripts/get_switches.ps1|plugins/providers/hyperv/scripts/import_vm.ps1,19,0.0,0,0,true,Hyper-V and SMB This branch introduces the Hyper-V provider as a first-class citizen in Vagrant In addition to this provider it introduces an SMB synced folder plugin which works on any guest This is just the first iteration of these two new core plugins There is much improvement to be made but at this point they can be considered ready for normal daily use,,817,0.7331701346389229,0.5853920515574651,19812,545.5279628507975,43.30708661417323,84.74661821118514,5561,13,1499,7,travis,mitchellh,mitchellh,true,mitchellh,14,1.0,3440,0,2193,true,true,false,false,258,555,206,14,866,22,-1
3136851,mitchellh/vagrant,ruby,3038,1393544215,,1393614934,1178,,unknown,false,false,false,157,1,1,0,4,0,4,0,2,0,0,3,3,2,0,1,0,0,3,3,2,0,1,23,0,23,0,12.954174894375456,0.3000569732744653,123,tprice@onehealth.com,plugins/provisioners/puppet/config/puppet_server.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|templates/locales/en.yml,121,0.002173913043478261,0,2,false,Since puppet 3x re-using SSL certs doesnt work Getting timeout The bug : https://projectspuppetlabscom/issues/21869When using puppet_server as provisioner I tried to reuse the puppet certs after a destroy  After bringing the bos up again I want to do a puppet run against my puppet server to configure the box for my environment  To avoid removing and signing the SSL certs every time I use follwing in the Vagrantfile :    vm_configvmprovision :puppet_server do |puppet_server|      puppet_serverclient_cert_path         box_certs/rspecfc20/cert_rspecfc20koewachtnetpem      puppet_serverclient_private_key_path  box_certs/rspecfc20/priv_rspecfc20koewachtnetpem      puppet_serverpuppet_node              rspecfc20koewachtnet      puppet_serverpuppet_server            puppetkoewachtnet    endBut it seems the capem (public server cert key) is also needed to make this work  So this PR adds       puppet_serverserver_ca_public_key     box_certs/capemto the config options of the puppet_server provisionerValidation :\The value given existsWhen this option is used the client_cert_path must also be givenAction :  The server_ca_public_key is copied to  /tmp_puppet/certs//capemNow I run against the puppet server reusing the same cert over and over,,816,0.7340686274509803,0.5967391304347827,19796,545.9688826025459,43.342089310971915,84.81511416447768,5561,13,1498,8,travis,johan-open-future,mitchellh,false,,0,0,2,6,709,false,false,false,false,0,0,0,0,0,0,2
3130047,mitchellh/vagrant,ruby,3034,1393481215,,1393542586,1022,,unknown,false,false,false,173,3,1,0,1,0,1,0,1,0,0,2,4,2,0,0,0,0,4,4,3,0,1,35,0,61,0,8.644789831006626,0.20024295853187682,9,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb,5,0.005482456140350877,0,0,false,Adding profiling to the puppet apply provisioner This allows you to display a list of the puppet resources taking the longest to executeBy default profiling is deactivatedTo activate you need to set a numerical value to configprofiling correspondingto the number of resources you want to see in your profiling report as in:      configvmprovision puppet do |puppet|        puppetprofiling  5              endThis would display the slowest 5 puppet resources as such:    Top 5 Puppet resources by runtime               0s - Service[squid3]           0s - Class[Squid]           0s - Class[Settings]           0s - Stage[post-yum-repo-setup]           0s - Class[Squid]           0s - Stage[yum-repo-setup]As shown in this example execution times are displayed in seconds (truncated)and in this specific case there is probably not much we can do to make it go faster )This code is based on code originally written in a custom provisioner for vagrant 10x by:    Peter Leschev pleschev@atlassiancomThis commit makes it configurable and ports is to the upstream puppet provisioner pluginI am willing to add documentation and tests if required,,815,0.7349693251533742,0.6041666666666666,19773,546.6039548879785,43.39250493096647,84.91377130430385,5561,13,1498,9,travis,endemics,mitchellh,false,,0,0,8,11,1519,false,false,false,false,0,0,0,0,0,0,1022
3119233,mitchellh/vagrant,ruby,3023,1393381412,,1393445176,1062,,unknown,false,false,false,92,1,1,0,2,1,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,3.966267369536152,0.0919725981080325,4,mitchell.hashimoto@gmail.com,plugins/hosts/bsd/host.rb,4,0.0043907793633369925,0,0,false,Prevent duplicate dirs in /etc/exports [GH-2871] Note: This is currently based against the 143 tag in Vagrant  I see now that the file youd need to patch would probably be https://githubcom/mitchellh/vagrant/blob/master/plugins/hosts/bsd/cap/nfsrbConsider the case where you export the same directory on the hostto different directories in the guest such as the following:    configvmsynced_folder  /vagrant type: nfs    configvmsynced_folder  /data type: nfsVagrant was creating /etc/exports entries like this:    /Users/username/project /Users/username/project 1721693129 -alldirs -mapall503:20By removing duplicates while processing directories being exported Vagrant will export this instead:    /Users/username/project 1721693129 -alldirs -mapall503:20,,814,0.7358722358722358,0.6311745334796927,19763,545.8179426200476,43.313262156555176,84.75433891615646,5561,12,1496,9,travis,gldnspud,mitchellh,false,,0,0,19,6,2063,false,true,false,false,1,2,0,0,0,0,1059
3116257,mitchellh/vagrant,ruby,3022,1393360465,1393360564,1393360564,1,1,commits_in_master,false,false,false,5,1,1,0,1,0,1,0,1,1,0,1,2,1,1,0,1,0,1,2,1,1,0,33,0,33,0,9.483800364039103,0.2201526082009495,14,teemu.matilainen@iki.fi,website/docs/source/layouts/layout.erb|website/docs/source/v2/provisioning/file.html.md,14,0.015217391304347827,0,0,false,added docs for file provisioner ,,813,0.7355473554735548,0.6358695652173914,19763,545.8179426200476,43.313262156555176,84.75433891615646,5561,12,1496,9,travis,odigity,mitchellh,false,mitchellh,0,0,7,4,1559,false,false,false,false,0,3,0,0,0,0,1
3114877,mitchellh/vagrant,ruby,3020,1393351117,1393356295,1393356295,86,86,commits_in_master,false,false,false,48,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.090288474798673,0.09495010666452659,14,mitchell.hashimoto@gmail.com,lib/vagrant/machine.rb,14,0.015217391304347827,0,0,false,Do not to_s the machine id if it is nil When destroying a machine the machine id is set to nil  The to_s then causes it to be set to empty string  This can cause inconsistent behavior in anything (such as a plugin) that tests the machine id,,812,0.7352216748768473,0.6380434782608696,19763,545.7673430147245,43.313262156555176,84.70373931083337,5561,12,1496,9,travis,lheinlen-os,mitchellh,false,mitchellh,0,0,0,0,397,false,false,false,false,0,0,0,0,0,0,86
3097947,mitchellh/vagrant,ruby,3014,1393147599,1393235980,1393235980,1473,1473,merged_in_comments,false,false,false,86,2,2,5,5,0,10,0,6,0,0,5,5,4,0,1,0,0,5,5,4,0,1,96,0,96,0,26.465716746799693,0.6150220795813562,152,tprice@onehealth.com,plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/provisioner/chef_client.rb|templates/locales/en.yml|vagrant.gemspec|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb,125,0.012170385395537525,2,21,false,Use ChefAPI gem for deleting the node/client instead of shelling out to knife ### :construction:  Not ready yet  :construction: As reported in #2476 shelling out to knife can be problematic as Vagrant modifies GEM_PATH and other environmentThis PR borrows ideas from the [vagrant-butcher](https://githubcom/cassianoleal/vagrant-butcher) plugin but uses the [ChefAPI gem](https://githubcom/sethvargo/chef-api) to communicate with the Chef server**Note**: At least tests and proxy and SSL configurations are still missing but otherwise this should be working I opened the PR to get feedback /cc @sethvargo @cassianolealFixes #2476,,811,0.7348951911220715,0.6774847870182555,19733,544.87406881873,43.22708153853951,84.68048446764304,5561,12,1494,11,travis,tmatilai,mitchellh,false,mitchellh,20,0.95,47,41,1761,true,true,true,false,57,236,32,15,32,15,447
3075750,mitchellh/vagrant,ruby,3005,1392887350,1393233942,1393233942,5776,5776,commits_in_master,false,false,false,106,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.117922771826565,0.09569858995171837,4,tagrain@gmail.com,plugins/provisioners/salt/provisioner.rb,4,0.004,1,0,false,Fix options are only allowed before install arguments error Looks like creating the salt bootstrap script option string has been changed a little here I believe the original plugin had it right Hence this reverts feb748f488 and 7cd7077467 bootstrap_options is meant for flag options such as -D This is demonstrated in the example Vagrantfile from the original plugin: https://githubcom/saltstack/salty-vagrant/blob/develop/example/complete/Vagrantfile Flag options must be appended to the options string before install args such as install_type and install_argsNot sure but Im guessing 7cd7077467 was created because @ticosax might not have been aware of install_type and install_args and was trying to put these *arguments* where the *options* belong,,810,0.7345679012345679,0.689,19738,544.7360421521937,43.21613132029588,84.65903333671092,5561,12,1491,14,travis,ajw0100,mitchellh,false,mitchellh,0,0,2,5,596,false,false,false,false,0,0,0,0,0,0,228
3075477,mitchellh/vagrant,ruby,3004,1392882728,,1392988968,1770,,unknown,false,false,false,106,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,21,0,21,0,8.90221892180632,0.20688338404182494,7,mshirley@comprehend.com,plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb,7,0.007,0,1,false,Allow inventory to be a directory Ansibles inventory file has two meanings  It can eitherbe a file or a directory containing inventory file(s) [1]Updated Vagrants inventory_path config option to supportthis meaningThis is useful when wanting the generated inventory filesplaced into an alternate directory  Ansible will fail ifthe files in an inventory path are not properly formatted    datarock:tribe(inventory-rework)☭% ansible -i  all --list-hosts    ERROR: Invalid ini entry: License - need more than 1 value to unpackThis helps to organize things such that ansible can be runoutside of vagrant provision to run additional playbooks(eg for integration tests)[1] https://githubcom/ansible/ansible/pull/2230,,809,0.7354758961681088,0.689,19738,544.7360421521937,43.21613132029588,84.65903333671092,5561,12,1491,13,travis,retr0h,gildegoma,false,,0,0,72,89,2112,false,false,false,false,0,0,0,0,0,0,1770
3072204,mitchellh/vagrant,ruby,3003,1392852412,1392859153,1392859153,112,112,commits_in_master,false,false,false,17,1,1,0,3,0,3,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.065294757429159,0.09447553587726994,2,mitchell.hashimoto@gmail.com,website/www/source/stylesheets/_base.less,2,0.002004008016032064,1,1,false,website/www: make the blog more readble by tightening the letter spacing Before:[](https://dldropboxusercontentcom/s/milgodmbzbamla8/2014-02-19%20at%20226%20PM%20%281%29png)After:[](https://dldropboxusercontentcom/s/cvnomhcvo5qqd4q/2014-02-19%20at%20226%20PMpng)Thanks @amadeus,,808,0.7351485148514851,0.6903807615230461,19738,544.7360421521937,43.21613132029588,84.65903333671092,5561,12,1490,12,travis,pearkes,mitchellh,false,mitchellh,1,1.0,250,52,982,false,true,true,false,0,0,1,0,0,0,0
3065379,mitchellh/vagrant,ruby,3001,1392783039,,1393235564,7542,,unknown,false,false,false,45,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.393833358014315,0.10232762497288252,8,ru@ryanuber.com,plugins/provisioners/shell/provisioner.rb,8,0.008040201005025126,0,0,false,It isnt certain that the script has the same encoding as Ruby think it  hasTry to work around this by checking that the scripts encoding is valid Ifit isnt if will first try UTF-8 and if that fails iso-8859-15See issue #3000,,807,0.7360594795539034,0.6934673366834171,19747,542.5127867524182,42.99387248696004,84.31660505393224,5561,12,1489,14,travis,kvilhaugsvik,mitchellh,false,,0,0,1,0,1,false,false,false,false,1,0,0,0,0,0,1
3055686,mitchellh/vagrant,ruby,2996,1392680283,1392761829,1392761829,1359,1359,commits_in_master,false,false,false,31,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.648522553104692,0.10825978097470218,0,,website/www/source/blog_feed.xml.builder,0,0.0,0,0,false,website/www: use absolute links in the feed Some feed readers like FeedBurner[1] dont support contentthat uses relative links This just makes them absolute so theywill work everywhere[1]: https://supportgooglecom/feedburner/answer/79018hlen,,806,0.7357320099255583,0.6955645161290323,19751,542.4029163080351,42.98516530808567,84.29952913776518,5561,12,1488,13,travis,pearkes,mitchellh,false,mitchellh,0,0,250,52,980,false,true,true,false,0,0,0,0,0,0,1359
3028756,mitchellh/vagrant,ruby,2991,1392562453,1393543812,1393543812,16355,16355,commits_in_master,false,true,false,38,14,7,2,8,1,11,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,199,0,290,0,39.97260550752513,0.9309249267474481,10,mshirley@comprehend.com,plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md,7,0.007070707070707071,2,9,false,Review PR-2926: Ansible single inventory file @maspwr @mitchellh: Here are the changes I would like to add to original #2926 pull request Do you agree with this Review back will be appreciated a lot :smile: Related to #2679,,805,0.7354037267080745,0.696969696969697,19751,542.4029163080351,42.98516530808567,84.29952913776518,5561,12,1487,13,travis,gildegoma,mitchellh,false,mitchellh,8,0.875,44,126,1225,true,true,true,false,8,22,8,5,2,2,919
3042136,mitchellh/vagrant,ruby,2985,1392451976,1392502394,1392502394,840,840,github,false,false,false,64,2,1,0,5,0,5,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,4,0,4.418589814042996,0.10290526015702024,0,,plugins/guests/coreos/guest.rb,0,0.0,0,2,false,detect latest version of coreos The latest version of coreos doesnt include the /etc/gentoo-release file which the current coreos guest is using to detect that the OS is coreosIts been renamed to /etc/os-releaseThis PR adds support for the latest coreos as well as providing backwards compatibility for previous releasesA virtualbox image with the new file change can be downloaded at: http://storagecore-osnet/coreos/amd64-generic/22800/coreos_production_vagrantbox,,804,0.7350746268656716,0.7048008171603677,19738,542.7601580707266,43.0134765427095,84.35505117033135,5561,11,1486,13,travis,eugeneware,mitchellh,false,mitchellh,0,0,177,105,1900,false,false,false,false,0,0,0,0,0,0,25
3041994,mitchellh/vagrant,ruby,2984,1392448059,,1392792898,5747,,unknown,false,false,false,8,1,1,0,5,0,5,0,2,0,0,2,2,1,1,0,0,0,2,2,1,1,0,1,0,1,0,8.72220113206637,0.2031327673332686,4,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb|templates/provisioners/chef_solo/solo.erb,4,0.0040858018386108275,0,0,false,Dont configure encrypted_data_bag_secret if we dont upload it ,,803,0.7359900373599004,0.7048008171603677,19738,542.7601580707266,43.0134765427095,84.35505117033135,5561,11,1486,14,travis,shanegibbs,tmatilai,false,,1,1.0,1,0,453,false,false,false,false,0,2,1,0,0,0,1354
3040145,mitchellh/vagrant,ruby,2982,1392422384,1392424830,1392424830,40,40,github,false,false,false,137,3,2,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,14,33,14,34,17.19565761133056,0.40046612743757276,8,paul.t.hinze@gmail.com,test/unit/plugins/provisioners/shell/config_test.rb|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|test/unit/plugins/provisioners/shell/config_test.rb,5,0.00511770726714432,0,0,true,Shell provisioner fixnum args In a recent Vagrant experiment I was trying to take some options from ARGV and pass them in as arguments in the shell provisioner I realized that if a Fixnum is passed it falls through all of the cases and just spews ruby exceptions:/Applications/Vagrant/embedded/gems/gems/vagrant-143/plugins/provisioners/shell/provisionerrb:61:in quote_and_escape: undefined method gsub for 1:Fixnum (NoMethodError)The following Vagrantfile would exhibit the failure:Vagrantconfigure(2) do |config|  configvmdefine testhost do |h|    hvmbox  precise64    hvmbox_url  http://puppet-vagrant-boxespuppetlabscom/ubuntu-server-12042-x64-vbox4210box    hvmhost_name  blah    hvmprovision :shell path: testsh args: [1]  endendThis patch allows one to pass Fixnum arguments and automatically have them converted to strings It also adds a check for all elements in an array argument This way the user cant pass anything except for strings or Fixnums as elements in an array of args,,802,0.7356608478802993,0.706243602865916,19728,541.8694241686942,42.88321167883212,84.24574209245742,5561,10,1485,12,travis,ryanuber,mitchellh,false,mitchellh,0,0,101,29,671,false,false,false,false,0,0,0,0,0,0,40
3035929,mitchellh/vagrant,ruby,2975,1392382431,1393048691,1393048691,11104,11104,commits_in_master,false,false,false,14,2,1,0,4,0,4,0,2,0,0,1,2,1,0,0,0,0,2,2,1,1,0,2,0,2,0,4.3671096740543796,0.10170471748119402,4,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb,4,0.0040941658137154556,0,0,true,Add support for multiple role paths in chef-solo  1180 As per issue: https://githubcom/mitchellh/vagrant/issues/2974,,801,0.735330836454432,0.706243602865916,19728,541.8694241686942,42.88321167883212,84.24574209245742,5561,10,1485,14,travis,shanegibbs,tmatilai,false,tmatilai,0,0,1,0,452,false,false,false,false,0,0,0,0,0,0,272
3004957,mitchellh/vagrant,ruby,2956,1392081474,,1397270118,86477,,unknown,false,false,false,17,2,1,0,4,0,4,0,2,1,0,2,3,3,0,0,1,0,2,3,3,0,0,23,0,23,0,13.507131126204893,0.31556981885914037,9,teemu.matilainen@iki.fi,plugins/guests/freebsd/cap/configure_networks.rb|plugins/guests/freebsd/config.rb|plugins/guests/freebsd/plugin.rb,5,0.004171011470281543,0,3,false,Add config for FreeBSD guest plugin  Allow device to be configurable Fixes issue #2954 Fixes issue #2954,,800,0.73625,0.7194994786235662,19638,541.1447194215297,42.825134942458504,84.22446277625014,5561,10,1481,22,travis,dstevenson,mitchellh,false,,0,0,8,5,1161,false,false,false,false,0,0,0,0,1,0,41804
3002348,mitchellh/vagrant,ruby,2953,1392069390,,1392081706,205,,unknown,false,false,false,79,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.821756483740367,0.08928846473977721,14,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb,14,0.014613778705636743,0,0,false,Update to support ssh/config in ready Openstack provider plugin (https://githubcom/cloudbau/vagrant-openstack-plugin) was failing to check that a server was ready as in my case login requires ssh/config (but the server was started and I could vagrant ssh to it so my ssh/config was working) Changing this to true so Net::SSH can see the ssh/config resolved the issueMaybe theres a good reason for the false in there but I cant think of it right now so have a PR :),,799,0.737171464330413,0.7192066805845512,19638,541.1447194215297,42.825134942458504,84.22446277625014,5561,10,1481,11,travis,earnubs,earnubs,true,,0,0,13,4,1519,false,false,false,false,0,0,0,0,0,0,-1
3001550,mitchellh/vagrant,ruby,2952,1392063437,1393621455,1393621455,25966,25966,commits_in_master,false,true,false,177,7,6,0,5,2,7,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,154,0,178,0,28.423656278135873,0.664028503945733,7,mshirley@comprehend.com,plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb,7,0.007337526205450734,2,8,false,Ansible Provisioner: Support SSH-Forwarding and Multiple SSH Private Keys  These two Vagrant options were so far not supported by the Ansible provisioner As already mentioned these settings only can be supported when running ansible-playbook in ssh communication mode but not in paramiko modeId like to discuss whether --connectionssh should be systematically forced or not (see the third commit: 51e7bd9) Paramiko is the default SSH connection implementation on Enterprise Linux 6 or earlier and is not used by default on other platformsSee:* http://docsansiblecom/intro_configurationhtml#paramiko-specific-settings* http://docsansiblecom/intro_getting_startedhtml#remote-connection-informationSo we could drop 51e7bd9 and make it clear in the Vagrant documentation that Ansible Provisioner always enables ssh mode by default (ansibleraw_arguments can be used to force paramiko mode when running Vagrant on a RHEL host for instance)Im quite OK with both variants and you @mitchellh what do you think Ill update the docs (and maybe the commits) according to your preference/cc @picsolvebryan Thanks again for reporting the SSH Forwarding bug fix I assigned you the related commit and hope its ok for you so :),,798,0.7368421052631579,0.7222222222222222,19617,541.7240148850487,42.87097925268899,84.31462507009228,5561,9,1481,12,travis,gildegoma,mitchellh,false,mitchellh,7,0.8571428571428571,44,126,1219,true,true,true,false,6,20,7,5,2,2,6
2992332,mitchellh/vagrant,ruby,2950,1392006563,1392065889,1392065889,988,988,github,false,false,false,35,1,1,0,1,0,1,0,1,0,0,2,2,1,1,0,0,0,2,2,1,1,0,3,0,3,0,8.863924538248131,0.20707746014886713,3,paul.t.hinze@gmail.com,plugins/commands/ssh_config/command.rb|templates/commands/ssh_config/config.erb,2,0.0020964360587002098,0,0,false,Fixing ssh_config proxy_command is not included Recently added proxy_command option to ssh works great however there is one small bug when using ssh_config command it is ignoring this set and therefore ssh config is incorrect,,797,0.7365119196988708,0.7222222222222222,19617,541.7240148850487,42.87097925268899,84.31462507009228,5561,9,1480,11,travis,elyast,elyast,true,elyast,0,0,6,2,1062,false,false,false,false,0,0,0,0,0,0,988
2965012,mitchellh/vagrant,ruby,2948,1391862523,1392066152,1392066152,3393,3393,commits_in_master,false,false,false,41,1,1,0,1,0,1,0,1,0,0,16,16,16,0,0,0,0,16,16,16,0,0,108,0,108,0,66.19319301367796,1.5464219854844599,43,mitchell.hashimoto@gmail.com,lib/vagrant/cli.rb|plugins/commands/box/command/add.rb|plugins/commands/box/command/list.rb|plugins/commands/box/command/outdated.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/root.rb|plugins/commands/box/command/update.rb|plugins/commands/destroy/command.rb|plugins/commands/halt/command.rb|plugins/commands/init/command.rb|plugins/commands/package/command.rb|plugins/commands/ssh/command.rb|plugins/commands/ssh_config/command.rb|plugins/commands/status/command.rb|plugins/commands/suspend/command.rb|plugins/commands/up/command.rb,12,0.004201680672268907,0,0,false,clean up usage I cleaned up the usage by making the text more consistent:* Replaced the specific options from the first line with [options]* Removed punctuation marks from the option usages* Capitalized and renamed the values of options,,796,0.7361809045226131,0.7237394957983193,19583,539.8559975488945,42.587958943982024,83.95036511259767,5561,9,1479,10,travis,gnawhleinad,mitchellh,false,mitchellh,0,0,10,8,1060,false,false,false,false,1,1,0,0,0,0,3393
2958935,mitchellh/vagrant,ruby,2947,1391808058,1391808457,1391808457,6,6,commits_in_master,false,false,true,177,12,11,0,0,2,2,0,1,2,0,11,13,11,0,0,2,0,11,13,11,0,0,703,483,703,495,138.89900914430294,3.251920042489974,58,teemu.matilainen@iki.fi,lib/vagrant/machine.rb|lib/vagrant/vagrantfile.rb|plugins/commands/package/command.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_valid_ids_test.rb|test/unit/vagrant/vagrantfile_test.rb|lib/vagrant/environment.rb|lib/vagrant/vagrantfile.rb|test/unit/vagrant/vagrantfile_test.rb|lib/vagrant/environment.rb|lib/vagrant/vagrantfile.rb|test/unit/vagrant/vagrantfile_test.rb|lib/vagrant/action/general/package.rb|lib/vagrant/environment.rb|lib/vagrant/vagrantfile.rb|test/unit/vagrant/vagrantfile_test.rb|lib/vagrant/vagrantfile.rb|test/unit/vagrant/vagrantfile_test.rb|plugins/commands/box/command/repackage.rb|plugins/commands/package/command.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_valid_ids_test.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|lib/vagrant/environment.rb|lib/vagrant/vagrantfile.rb|test/unit/vagrant/vagrantfile_test.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|lib/vagrant/vagrantfile.rb|test/unit/vagrant/vagrantfile_test.rb|lib/vagrant/environment.rb,29,0.0031779661016949155,0,0,true,Core refactor: Vagrantfile abstraction This introduces a change into the core that doesnt affect any usage/configuration currently (and is therefore backwards compatible) This change introduces the Vagrant::Vagrantfile class and removes some responsibilities from the Vagrant::Environment class and places them in the Vagrantfile class Previously the Environment was fully responsible for environmental state (directories config loading action runner etc) as well as loading the Vagrantfile and getting Vagrant::Machines out of it (#machine #machine_names etc) Now Vagrant::Vagrantfile is responsible for loading Vagrantfiles and getting machines out of them The Vagrant::Environments responsibilities now are just to store environmental data such as where Vagrant should put certain data run an action etc The API of Vagrant::Environment still has the machine methods which just load a default Vagrantfile in the current working directory This is the same behavior as beforeThis abstraction makes it possible to actually load and launch machines from outside the typical Vagrantfile This functionality is being used in some private plugins that HashiCorp is currently developing but will also be used in some future features for Vagrant proper,,795,0.7358490566037735,0.722457627118644,19520,528.5348360655737,41.75204918032787,82.01844262295081,5561,9,1478,10,travis,mitchellh,mitchellh,true,mitchellh,13,1.0,3416,0,2172,true,true,false,false,295,625,279,15,884,22,-1
2948781,mitchellh/vagrant,ruby,2946,1391738438,1391832228,1391832228,1563,1563,commits_in_master,false,false,false,6,2,1,1,1,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,4,0,4.548755126656558,0.10843386058335627,8,teemu.matilainen@iki.fi,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,8,0.008547008547008548,0,1,false,Fix #2945: Reference correct options variable ,,794,0.7355163727959698,0.7286324786324786,18780,455.11182108626195,38.232161874334395,69.4888178913738,5561,9,1477,10,travis,mhahn,mitchellh,false,mitchellh,0,0,12,1,1042,false,false,false,false,1,1,0,0,0,0,25
2946913,mitchellh/vagrant,ruby,2943,1391677570,1391760597,1391760597,1383,1383,commits_in_master,false,false,true,213,90,89,0,4,0,4,0,3,17,0,45,62,48,2,2,17,0,45,62,48,2,2,3439,4234,3439,4237,1074.4184224333499,25.612136547776785,224,tprice@onehealth.com,lib/vagrant/shared_helpers.rb|test/unit/vagrant/shared_helpers_test.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/environment_test.rb|lib/vagrant/box_collection.rb|lib/vagrant/box_collection.rb|lib/vagrant/environment.rb|test/unit/vagrant/box_collection_test.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/environment_test.rb|lib/vagrant/box_collection.rb|test/unit/support/isolated_environment.rb|test/unit/vagrant/box_collection_test.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/box_collection_test.rb|lib/vagrant/box_collection.rb|templates/locales/en.yml|test/unit/vagrant/box_collection_test.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/box_test.rb|test/unit/vagrant/box_collection_test.rb|lib/vagrant/environment.rb|test/unit/support/isolated_environment.rb|test/unit/vagrant/environment_test.rb|plugins/commands/box/command/list.rb|test/unit/vagrant/box_test.rb|lib/vagrant/box_metadata.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/box_metadata_test.rb|plugins/commands/box/command/add.rb|test/unit/plugins/commands/box/command/add_test.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/box_collection_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/box_metadata.rb|test/unit/vagrant/box_metadata_test.rb|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/downloader.rb|plugins/commands/box/command/add.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/downloader.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/downloader.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/box_collection.rb|lib/vagrant/util/downloader.rb|test/unit/vagrant/util/downloader_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/box_add.rb|plugins/commands/box/command/add.rb|templates/locales/en.yml|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|plugins/commands/box/command/remove.rb|templates/locales/en.yml|test/unit/plugins/commands/box/command/remove_test.rb|lib/vagrant/action/builtin/box_remove.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_remove_test.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/ui.rb|lib/vagrant/util/downloader.rb|plugins/commands/box/command/add.rb|templates/locales/en.yml|test/unit/vagrant/ui_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/shared_helpers.rb|test/unit/vagrant/shared_helpers_test.rb|lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|templates/locales/en.yml|lib/vagrant/action.rb|lib/vagrant/action/builtin/handle_box.rb|lib/vagrant/box_collection.rb|lib/vagrant/environment.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|test/unit/plugins/kernel_v2/config/vm_test.rb|test/unit/vagrant/action/builtin/handle_box_test.rb|test/unit/vagrant/box_collection_test.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/action/builtin/handle_box.rb|lib/vagrant/action/builtin/handle_box_url.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/handle_box_test.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/handle_box.rb|lib/vagrant/box_metadata.rb|test/unit/vagrant/box_metadata_test.rb|lib/vagrant/action/builtin/handle_box.rb|test/unit/vagrant/action/builtin/handle_box_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_add.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|test/unit/plugins/kernel_v2/config/vm_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|lib/vagrant/action/builtin/box_add.rb|plugins/providers/virtualbox/action.rb|lib/vagrant/box_collection.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/box_collection_test.rb|test/unit/vagrant/box_test.rb|lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|lib/vagrant/box_metadata.rb|plugins/commands/box/command/outdated.rb|plugins/commands/box/command/root.rb|templates/locales/en.yml|test/unit/vagrant/box_test.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/box_check_outdated.rb|lib/vagrant/errors.rb|plugins/commands/box/command/outdated.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|lib/vagrant/action/builtin/box_check_outdated.rb|plugins/commands/box/command/outdated.rb|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|lib/vagrant/action/builtin/box_check_outdated.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|lib/vagrant/action/builtin/box_check_outdated.rb|plugins/commands/box/command/outdated.rb|plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|lib/vagrant/action/builtin/box_check_outdated.rb|lib/vagrant/action/builtin/box_check_outdated.rb|plugins/providers/virtualbox/action.rb|templates/locales/en.yml|plugins/providers/virtualbox/action.rb|lib/vagrant/action/builtin/box_check_outdated.rb|lib/vagrant/action/builtin/box_update.rb|lib/vagrant/box.rb|lib/vagrant/errors.rb|plugins/commands/box/command/outdated.rb|plugins/commands/box/command/update.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|test/unit/vagrant/box_test.rb|plugins/commands/box/command/root.rb|plugins/commands/box/command/update.rb|templates/locales/en.yml|test/unit/plugins/commands/box/command/update_test.rb|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|plugins/commands/box/command/update.rb|templates/locales/en.yml|plugins/commands/box/command/update.rb|templates/locales/en.yml|lib/vagrant/box_metadata.rb|lib/vagrant/errors.rb|plugins/commands/box/command/update.rb|templates/locales/en.yml|test/unit/plugins/commands/box/command/update_test.rb|test/unit/support/isolated_environment.rb|website/docs/Vagrantfile|website/docs/source/layouts/layout.erb|website/docs/source/stylesheets/_base.less|website/docs/source/v2/boxes.html.md|website/docs/source/v2/boxes/base.html.md|website/docs/source/v2/boxes/format.html.md|website/docs/source/v2/boxes/versioning.html.md|website/docs/source/v2/cli/box.html.md|.gitignore|website/docs/source/v2/vagrantfile/machine_settings.html.md|lib/vagrant/ui.rb|lib/vagrant/ui.rb|plugins/commands/box/command/repackage.rb|test/unit/plugins/commands/box/command/repackage_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/box_add_test.rb|lib/vagrant/action/builtin/box_check_outdated.rb|test/unit/vagrant/action/builtin/box_check_outdated_test.rb|plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|website/docs/source/v2/vagrantfile/machine_settings.html.md|lib/vagrant/action/builtin/box_add.rb|test/unit/vagrant/action/builtin/box_add_test.rb|website/docs/source/v2/boxes.html.md|website/docs/source/v2/boxes/base.html.md|website/docs/source/v2/cli/box.html.md|website/docs/source/v2/vagrantfile/machine_settings.html.md,96,0.0021413276231263384,0,1,false,Boxes Revamp: Short URLs Versions Updates This is a pretty large PR This introduces a few large features to boxes:* **Box versioning** - All boxes can have versions now This version information is available in metadata requested by Vagrant New commands such as vagrant box outdated and new settings such as configvmbox_check_update will configure how/when Vagrant checks for box updates Boxes that dont support versions will always have version 0* **Shortnames for boxes** - You can now do things like vagrant box add hashicorp/precise64 The name and the URL are one and the same This requires a backend Well be hosting one [for free public access] in the coming month or two Of course you dont need to use the backend well provide to support versions or unversioned boxes You would need to for shortnames* **Multiple providers at one URL** - A single URL can now represent multiple providers In this case Vagrant will ask you what provider you want to download if it cant figure it out on its own All of this is _fully backwards compatible_ I verified this as best I could with the tests in vagrant-spec I have  to write new acceptance tests for the new features however Also this PR adds around 100 unit tests,,793,0.7351828499369483,0.7291220556745182,18780,455.11182108626195,38.232161874334395,69.4888178913738,5561,9,1477,10,travis,mitchellh,mitchellh,true,mitchellh,12,1.0,3415,0,2171,true,true,false,false,295,621,277,15,873,22,534
2930286,mitchellh/vagrant,ruby,2931,1391495750,1391522429,1391522429,444,444,github,false,false,false,20,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,22,0,22,0,4.730380222644289,0.11341214818464582,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/private_network.html.md,3,0.0032822757111597373,0,0,false,Add documentation on DHCP for private networking (This also corrects a small grammatical error while rewording the Static IP section),,792,0.7348484848484849,0.7297592997811816,18727,449.13760880012813,37.592780477385595,68.083515779356,5561,8,1475,9,travis,rmccue,mitchellh,false,mitchellh,0,0,325,21,1991,false,false,false,false,0,0,0,0,0,0,444
2928315,mitchellh/vagrant,ruby,2930,1391476296,1391477734,1391477734,23,23,github,false,false,false,4,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.230548991473276,0.10165011177738438,94,tprice@onehealth.com,templates/locales/en.yml,94,0.10375275938189846,0,0,false,Fix typo in sentence ,,791,0.7345132743362832,0.7306843267108167,18627,445.1065657379074,37.31142964513877,67.05320234068824,5561,8,1474,11,travis,danielbachhuber,mitchellh,false,mitchellh,0,0,370,104,1897,false,true,false,false,1,7,0,0,0,0,23
2928276,mitchellh/vagrant,ruby,2929,1391475948,1391477556,1391477556,26,26,github,false,false,true,62,9,6,0,1,0,1,0,2,1,0,4,9,4,0,0,1,0,8,9,8,0,0,201,101,269,151,52.75177890142618,1.2675007977908939,21,phil.h.smith@gmail.com,plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|website/docs/source/v2/provisioning/basic_usage.html.md|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|test/unit/plugins/kernel_v2/config/vm_test.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,18,0.0033112582781456954,0,0,false,Provisioner Inheritance/Overriding This allows provisioners to be overridden by sub-scopes (machine configs provider overrides) allowing common provisioning to be put into the global scope and selectively overriding certain configurations This allows for getting rid of a lot of duplication without having to know a lot of RubyCompletely documenting in the pull request (in website/docs commits) so read thereThis fixes #1113,,790,0.7341772151898734,0.7306843267108167,18627,445.1065657379074,37.31142964513877,67.05320234068824,5561,8,1474,11,travis,mitchellh,mitchellh,true,mitchellh,11,1.0,3415,0,2168,true,true,false,false,282,603,271,15,849,21,26
2924864,mitchellh/vagrant,ruby,2927,1391448926,1393052173,1393052173,26720,26720,commit_sha_in_comments,false,false,false,80,3,1,1,8,0,9,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,6,0,4.509005419759395,0.10833836935487219,4,mitchell.hashimoto@gmail.com,plugins/hosts/bsd/cap/nfs.rb,4,0.004454342984409799,0,0,false,Iterate through NFS exported folders by length With a synced folder configuration like so: synced_folder  /vagrant :nfs  true synced_folder #{ENV[HOME]}/mirror /mirror :nfs  true synced_folder ENV[HOME] /home/#{ENV[USER]} :nfs  trueon OSX vagrant writes two overlapping exports to /etc/exports which then fail the export checkIterating through the list of folders in order of host path length builds a correct single exports entryThis line reads fairly badly maybe theres a better way of expressing the same change,,789,0.7338403041825095,0.734966592427617,18625,443.97315436241615,37.20805369127517,66.95302013422818,5561,8,1474,14,travis,jtopper,tmatilai,false,tmatilai,0,0,3,0,1021,false,true,false,false,0,0,0,0,0,0,65
2917039,mitchellh/vagrant,ruby,2926,1391303941,1392563257,1392563257,20988,20988,commits_in_master,false,true,false,189,1,1,4,4,0,8,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,50,0,50,0,9.075853794333508,0.2211659001307994,10,mshirley@comprehend.com,plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md,7,0.008009153318077803,0,4,false,Update Ansible provisioner to only create a single inventory file The Ansible provisioner will now only create a single inventory file namedvagrant_ansible_inventory All defined Vagrant machines will be added tothis inventory file Provisioning will now include a --limit#{machine}option to scope Ansible provisioning tasks to just the current machine Settingthe Ansible provisioners limit config option will override the new defaultlimit Ansible provisioning scripts will now have access to all other definedmachines and what groups they reside inAn example Vagrantfile and playbook to test these changes:ruby# -*- mode: ruby -*-# vi: set ftruby :VAGRANTFILE_API_VERSION  2Vagrantconfigure(VAGRANTFILE_API_VERSION) do |config|  configvmbox  ubuntu_saucy  configvmbox_url  http://cloud-imagesubuntucom/vagrant/saucy/current/saucy-server-cloudimg-amd64-vagrant-disk1box  configvmdefine machinea do |machinea|  end  configvmdefine machineb do |machinea|  end  configvmprovision ansible do |ansible|    ansibleplaybook  vagrantyml    ansibleverbose  v    ansiblehost_key_checking  false    #ansiblelimit      ansiblegroups  {      foo_group  [machinea]      bar_group  [machineb]      all_groups:children  [foo_group bar_group]      not_included:children  [sad_group]    }  endend---- hosts: foo_group  tasks:    - name: Testing foo      command: echo foo- hosts: bar_group  tasks:    - name: Testing bar      command: echo barThese changes fix #2679,,788,0.733502538071066,0.7334096109839817,18297,445.10028966497237,37.273870033338795,67.33344264087009,5561,8,1472,20,travis,maspwr,gildegoma,false,gildegoma,1,1.0,10,14,1786,false,true,false,false,2,6,1,0,0,0,2
2916288,mitchellh/vagrant,ruby,2925,1391292533,1391439059,1391439059,2442,2442,github,false,false,false,61,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.307799288856592,0.10497506117800465,15,mitchell.hashimoto@gmail.com,plugins/kernel_v2/config/vm.rb,15,0.017162471395881007,0,0,false,Make sure synced folder types are always symbols This will make sure that third party plugins that define synced folders after this config object has been finalized wont have trouble because of forgetting to use symbols instead of strings It would have saved me a lot around 2 hours of debugging trying to understand what was going on on https://githubcom/fgrehm/vagrant-cachier/issues/76 :-P,,787,0.7331639135959339,0.7334096109839817,18297,445.10028966497237,37.273870033338795,67.33344264087009,5561,8,1472,14,travis,fgrehm,mitchellh,false,mitchellh,24,0.9166666666666666,360,143,1732,true,true,true,false,13,63,14,6,27,13,2441
2914053,mitchellh/vagrant,ruby,2922,1391243577,1391439177,1391439177,3260,3260,github,false,false,false,36,5,3,0,1,0,1,0,1,2,0,1,10,3,0,0,5,0,8,13,12,0,1,19,146,125,146,13.733620358168672,0.33467991508761785,0,,test/unit/plugins/provisioners/file/provisioner_test.rb|plugins/provisioners/file/provisioner.rb|test/unit/plugins/provisioners/file/config_test.rb,0,0.0,0,0,false,provisioners/file: expand destination path if capable Use shell_expand_guest_path guest capability to expand the destination path if the capability exists This PR adds the cap to also  {FreeNetOpen}BSD guestsAlso add unit tests for the file provisioner,,786,0.732824427480916,0.7331042382588774,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1472,13,travis,tmatilai,mitchellh,false,mitchellh,19,0.9473684210526315,47,41,1739,true,true,true,false,42,191,25,13,19,12,3259
2906531,mitchellh/vagrant,ruby,2917,1391158144,1391440388,1391440388,4704,4704,github,false,false,false,48,2,2,0,2,0,2,0,2,8,0,14,22,21,0,1,8,0,14,22,21,0,1,550,29,550,29,188.86305526970344,4.602478528969542,95,tprice@onehealth.com,lib/vagrant/errors.rb|plugins/guests/darwin/cap/rsync.rb|plugins/guests/darwin/plugin.rb|plugins/guests/debian/cap/rsync.rb|plugins/guests/debian/plugin.rb|plugins/guests/freebsd/cap/rsync.rb|plugins/guests/freebsd/plugin.rb|plugins/guests/linux/cap/rsync.rb|plugins/guests/linux/plugin.rb|plugins/guests/netbsd/cap/rsync.rb|plugins/guests/netbsd/plugin.rb|plugins/guests/openbsd/cap/rsync.rb|plugins/guests/openbsd/plugin.rb|plugins/guests/redhat/cap/rsync.rb|plugins/guests/redhat/plugin.rb|plugins/guests/solaris/cap/rsync.rb|plugins/guests/solaris/plugin.rb|plugins/guests/solaris11/cap/rsync.rb|plugins/guests/solaris11/plugin.rb|plugins/synced_folders/rsync/synced_folder.rb|templates/locales/en.yml|lib/vagrant/errors.rb|plugins/guests/darwin/cap/rsync.rb|plugins/guests/darwin/plugin.rb|plugins/guests/debian/cap/rsync.rb|plugins/guests/debian/plugin.rb|plugins/guests/freebsd/cap/rsync.rb|plugins/guests/freebsd/plugin.rb|plugins/guests/linux/cap/rsync.rb|plugins/guests/linux/plugin.rb|plugins/guests/netbsd/cap/rsync.rb|plugins/guests/netbsd/plugin.rb|plugins/guests/openbsd/cap/rsync.rb|plugins/guests/openbsd/plugin.rb|plugins/guests/redhat/cap/rsync.rb|plugins/guests/redhat/plugin.rb|plugins/guests/solaris/cap/rsync.rb|plugins/guests/solaris/plugin.rb|plugins/guests/solaris11/cap/rsync.rb|plugins/guests/solaris11/plugin.rb|plugins/synced_folders/rsync/synced_folder.rb|templates/locales/en.yml|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb,88,0.0,0,0,true,Detect and install rsync to the guest if needed Automatically install rsync to the guests if needed and not found (similar to the NFS client) Installation supported by Debian and RHEL based Linux distros and by FreeBSD NetBSD and OpenBSDAlso copy rsync_pre capability to all Unix guests,,785,0.732484076433121,0.7327981651376146,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1471,12,travis,tmatilai,mitchellh,false,mitchellh,18,0.9444444444444444,47,41,1738,true,true,true,false,41,185,26,13,19,12,3
2898805,mitchellh/vagrant,ruby,2914,1391088265,,1391439761,5858,,unknown,false,false,false,38,2,2,0,1,0,1,0,1,0,0,2,2,1,0,1,0,0,2,2,1,0,1,8,0,8,0,16.46079398912486,0.40113960243071,96,tprice@onehealth.com,plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml,88,0.10126582278481013,0,0,false,Fix https://githubcom/mitchellh/vagrant/issues/2108 Remove vm: * Static IPs cannot end in 1 since that address isalways reserved for the router Please use another ending errorIP conflicts are always a risk Nothing special about 1 Just aconvention,,784,0.7334183673469388,0.7330264672036824,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1470,13,travis,wouteroostervld,mitchellh,false,,0,0,2,7,795,false,false,false,false,1,0,0,0,0,0,5854
2898385,mitchellh/vagrant,ruby,2913,1391083321,,1391113245,498,,unknown,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.842420716404485,0.11800686663499163,8,teemu.matilainen@iki.fi,README.md,8,0.009205983889528193,0,0,false,Add code climate badge ,,783,0.7343550446998723,0.7330264672036824,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1470,11,travis,nickborromeo,mitchellh,false,,0,0,7,27,692,false,false,true,false,0,0,0,0,0,0,-1
2924052,mitchellh/vagrant,ruby,2907,1390949404,1391440056,1391440056,8177,8177,github,false,false,false,23,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.24627427981669,0.1034791382203536,11,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb,11,0.012629161882893225,0,1,false,Fix wording of upload permission error SCPPermissionDenied expects a path and this is most likely the destination(to) and not source (from)[#2804],,782,0.7340153452685422,0.7336394948335246,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1468,11,travis,JustinCampbell,mitchellh,false,mitchellh,2,0.5,155,285,1380,false,true,true,false,0,0,0,0,0,0,8
2924040,mitchellh/vagrant,ruby,2906,1390940205,1391439916,1391439916,8328,8328,github,false,false,false,81,2,2,0,1,0,1,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,8,0,8,0,15.32873411686241,0.3735519874355197,11,paul.t.hinze@gmail.com,plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb,10,0.009184845005740528,0,0,false,Cable connected There are two commits in this pull request:My first commit directly addresses my cableconnected issue I have verified this on my local machine using the versions listed in the issueCommit   cd0c7dfbd9633bc10760436be63292d50a95ad38Please see:   https://githubcom/mitchellh/vagrant/issues/2890The second commit is where I backported this same code to the earlier 4x virtualbox driversI have not tested them specifically against those virtualbox releasesI committed that code separately so you have flexibility in regards to testing/discarding/mergingThis commit is:   ccf14bb398ddaaae3a6f16808c403f146f486043,,781,0.7336747759282971,0.7336394948335246,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1468,11,travis,frosario,mitchellh,false,mitchellh,1,1.0,2,1,1148,false,false,false,false,2,1,1,0,0,0,8328
5106570,mitchellh/vagrant,ruby,2904,1390918412,,1414699821,396356,,unknown,false,false,false,85,1,1,1,11,0,12,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9466996133629584,0.09617868462868867,2,mlecarme@bearstech.com,plugins/guests/debian/cap/configure_networks.rb,2,0.002296211251435132,0,5,false,Force up all interfaces after vagrant network config Chef creates several ethernet aliases (eg eth1:12 eth1:13) for us (to run various applications off) Theyre configured in /etc/network/interfaces However vagrant brings down eth1 configures it then brings it back up without bringing back up the aliasesThis patch forces up all the interfaces to ensure that the networking reflects whats in the interfaces file(note - needs a --force since the system still thinks eth1:12 etc are still up so refuses to bring them up again),,780,0.7346153846153847,0.7336394948335246,18293,445.197616574646,37.282020444978954,67.34816596512327,5561,8,1468,36,travis,chrischillibean,sethvargo,false,,1,1.0,0,0,1225,false,true,false,false,0,0,0,0,0,0,181
2885798,mitchellh/vagrant,ruby,2896,1390789445,1390790235,1390790235,13,13,github,false,false,true,23,2,1,0,1,0,1,0,1,0,0,8,8,8,0,0,0,0,8,8,8,0,0,51,63,51,71,34.1709673251381,0.8327082094114804,24,teemu.matilainen@iki.fi,lib/vagrant/machine.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/plugin/v2/provider.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|test/unit/vagrant/plugin/v2/provider_test.rb,10,0.00805523590333717,0,0,false,Provider Capabilities This adds provider capabilities (#2652) This is like guest or host capabilities and allows arbitrarily extending providers after-the-fact to add capabilities ,,779,0.7342747111681643,0.7341772151898734,18266,443.118361984014,37.17288952151539,67.0644914047958,5561,8,1466,8,travis,mitchellh,mitchellh,true,mitchellh,10,1.0,3403,0,2160,true,true,false,false,274,577,254,15,810,20,13
2882171,mitchellh/vagrant,ruby,2892,1390721284,1391495243,1391495243,12899,12899,github,false,false,false,47,3,2,0,7,0,7,0,4,0,0,1,1,1,0,0,1,0,1,2,2,0,0,4,0,30,0,8.804043864701864,0.2145452774327173,4,teemu.matilainen@iki.fi,plugins/guests/openbsd/plugin.rb|plugins/guests/openbsd/plugin.rb,4,0.004608294930875576,1,2,false,OpenBSD is not a Linux derivative This seems like a copy/paste bug in 52f3847If the OpenBSD guest plugin relies on Linux capabilities they should be copied I have never used OpenBSD boxes so would be nice if someone (@tsahara-iij) could check that this doesnt break anything,,778,0.7339331619537275,0.7350230414746544,18266,443.118361984014,37.17288952151539,67.0644914047958,5561,8,1466,10,travis,tmatilai,tmatilai,true,tmatilai,17,0.9411764705882353,47,41,1733,true,true,false,false,40,175,27,12,19,12,1610
2877750,mitchellh/vagrant,ruby,2888,1390636902,1390858003,1390858003,3685,3685,github,false,false,false,7,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,17,0,17,0,4.2745960265607605,0.10416740358463962,8,mitchell.hashimoto@gmail.com,lib/vagrant/util/platform.rb,8,0.009334889148191364,0,0,false,Clean up temp dir used by fs_case_sensitive ,,777,0.7335907335907336,0.7374562427071178,18266,443.118361984014,37.17288952151539,67.0644914047958,5561,8,1465,7,travis,obfusk,mitchellh,false,mitchellh,0,0,20,12,774,false,false,false,false,0,0,0,0,0,0,-1
2853215,mitchellh/vagrant,ruby,2873,1390368399,,1390378434,167,,unknown,false,false,false,55,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.124714199856746,0.10051547455019988,8,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/mixin_synced_folders.rb,8,0.012213740458015267,0,0,false,Avoid nuking synced folders which specify the default impl If two synced folders are specified one of which explicitly sets its typeto be the same as the default implementation which is later selected thefolder which relies on the implicit selection of an implementation willoverwrite the one that was explicit in its desires,,776,0.7345360824742269,0.7709923664122137,18259,442.4667287365135,37.132373076291145,66.92589955638316,5561,8,1462,6,travis,mpalmer,mitchellh,false,,0,0,58,0,2165,false,false,false,false,0,0,0,0,0,0,-1
2849738,mitchellh/vagrant,ruby,2870,1390338318,,1431719762,689690,,unknown,false,false,false,20,1,1,0,5,0,5,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.221156183854536,0.12723497386193824,2,teaforthecat@gmail.com,templates/guests/redhat/network_static.erb,2,0.003076923076923077,0,2,false,Adding support for gateway in RHEL/CentOS ifcfg script CentOS/RHEL should be able to set GATEWAY in ifcfg-#device for static routes,,775,0.7354838709677419,0.7692307692307693,18290,438.43630399125203,36.74138873701476,65.66429743028978,5561,8,1461,127,travis,myoung34,sethvargo,false,,0,0,26,12,939,false,false,false,false,0,0,0,0,0,0,390242
2846434,mitchellh/vagrant,ruby,2866,1390306937,,1390340830,564,,unknown,false,false,false,24,1,1,0,0,0,0,0,1,2,0,5,7,6,0,1,2,0,5,7,6,0,1,142,0,142,0,31.529868282170625,0.768355097125381,118,tprice@onehealth.com,lib/vagrant/util/platform.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/cpus.rb|plugins/providers/virtualbox/action/customize.rb|plugins/providers/virtualbox/action/memory.rb|templates/locales/en.yml,87,0.013846153846153847,0,0,false,Add configvmcpus and configvmmemory Tested using funtoo64 and precise64 on VirtualBox with Funtoo hostUses some code from parallel gem to determine CPU count,,774,0.7364341085271318,0.7723076923076924,18290,438.43630399125203,36.74138873701476,65.66429743028978,5561,7,1461,6,travis,seginoviax,mitchellh,false,,1,1.0,0,0,336,false,false,false,false,0,0,1,0,0,0,-1
2835067,mitchellh/vagrant,ruby,2861,1390157148,1390165481,1390165481,138,138,github,false,false,false,40,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.447055093566155,0.10876101403738685,4,mitchell.hashimoto@gmail.com,lib/vagrant/ui.rb,4,0.006220839813374806,1,0,false,Fixed Issue #2860: dup string if frozen when formatting output for machine JSON parser return frozen strings for hash keys Duplicate frozen strings to avoid the errorvagrant@node01:~/vagrant$ vagrant box list --machine-readable1390142590box-nameprecise321390142590box-providervirtualbox1390142590box-infourlhttp://filesvagrantupcom/precise32box1390142590box-infodownloaded_at2014-01-19 14:04:53 UTC,,773,0.7360931435963778,0.7698289269051322,18236,430.24786137310815,35.53410835709585,63.55560429918841,5561,7,1459,6,travis,morrizon,mitchellh,false,mitchellh,0,0,4,13,236,false,false,false,false,0,0,0,0,0,0,138
2831126,mitchellh/vagrant,ruby,2858,1390072718,1390086057,1390086057,222,222,github,false,false,false,170,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,3.919105952710321,0.09585108034777283,2,mitchell.hashimoto@gmail.com,plugins/hosts/gentoo/cap/nfs.rb,2,0.003129890453834116,0,0,false,hosts/gentoo: fix nonstandard path to systemctl command Starting Vagrant on my Gentoo machine with systemd outputs a command not found message:[default] Exporting NFS shared folders[default] Preparing to edit /etc/exports Administrator privileges will be requiredPassword: sudo: /usr/sbin/systemctl: command not found[default] Mounting NFS shared folders[default] Running provisioner: shellThats because /usr/sbin/systemctl is not a standard path to the systemd command in Gentoo The patch provided fixes this by using the /usr/bin/systemctl path insteadNOTE that after making the systemctl fix there are more path issues from plugins/hosts/linux/cap/nfsrb where /usr/bin/exportfs is also a nonstandard path to exportfs in Gentoo:[default] Preparing to edit /etc/exports Administrator privileges will be requiredPassword: nfsdservice - NFS serversudo: /usr/bin/exportfs: command not found[default] Mounting NFS shared foldersGentoo uses /usr/sbin/exportfs as the standard path to exportfs Another issue with nfsrb are the references to /etc/initd/ which we cant rely on for systemd users However Vagrant still runs on my machine even with the exportfs and /etc/initd/ issues,,772,0.7357512953367875,0.7683881064162754,18225,430.5075445816187,35.55555555555556,63.59396433470507,5561,7,1458,6,travis,timgus,mitchellh,false,mitchellh,1,1.0,0,0,379,false,false,false,false,0,0,0,0,0,0,222
2829707,mitchellh/vagrant,ruby,2857,1390038839,1390278156,1390278156,3988,3988,github,false,false,true,199,10,10,0,3,0,3,0,2,1,0,13,14,12,0,2,1,0,13,14,12,0,2,165,238,165,238,94.18276673851466,2.3034641193575762,136,tprice@onehealth.com,bin/vagrant|lib/vagrant/ui.rb|lib/vagrant/plugin/v2/command.rb|lib/vagrant/ui.rb|lib/vagrant/util/platform.rb|lib/vagrant/ui.rb|lib/vagrant/ui.rb|plugins/providers/virtualbox/action/check_guest_additions.rb|plugins/providers/virtualbox/action/forward_ports.rb|plugins/providers/virtualbox/action/network.rb|templates/locales/en.yml|plugins/providers/virtualbox/action/set_name.rb|plugins/providers/virtualbox/synced_folder.rb|templates/locales/en.yml|test/unit/vagrant/plugin/v2/command_test.rb|lib/vagrant/action/builtin/wait_for_communicator.rb|lib/vagrant/plugin/v2/communicator.rb|lib/vagrant/ui.rb|lib/vagrant/ui.rb|test/unit/vagrant/ui_test.rb|lib/vagrant/plugin/v2/command.rb|lib/vagrant/ui.rb,84,0.006259780907668232,0,3,false,UI revamp This PR introduces a revamp in the UI both from a visual perspective and from an API The API internally is fully backwards compatible so plugins and much of the core continues working But going forward we have some new function callsVisually the UI now looks a lot like [Packer](http://wwwpackerio) because I felt that output format works very wellFunctionally the big win in this new format is that we have both more prominent output messages (prefixed with   and bolded) _and_ the new detail messages (prefixed with spaces not bold) This lets us differentiate important output or header output from details about a certain operation or less important information Weve never been able to do this before You might notice in the screenshot below that I already take advantage of thisAdditionally the colors should make it easier to differentiate between different machines in a multi-machine environmentThis PR also adds extensive unit test coverage for all the Vagrant::UI classes which was somehow missingGoing forward I plan on taking full advantage of the new detail method to output a lot more relevant information during Vagrant operationsScreenshot below ignore the development messages:[Screenshot](https://fcloudgithubcom/assets/1299/1946429/899686fe-8004-11e3-8a51-90a3808e3ddcjpg),,771,0.7354085603112841,0.7683881064162754,18225,430.5075445816187,35.55555555555556,63.59396433470507,5561,7,1458,5,travis,mitchellh,mitchellh,true,mitchellh,9,1.0,3388,0,2152,true,true,false,false,273,573,257,15,582,19,1
2825108,mitchellh/vagrant,ruby,2854,1389984048,,1389995616,192,,unknown,false,false,false,76,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.361711553255266,0.10679459431123714,4,paul.t.hinze@gmail.com,plugins/providers/virtualbox/action/network.rb,4,0.00641025641025641,0,0,true,Fix for networkrb options object not being converted correctly Hi thereI was trying to create a secondary adapter for the vagrant virtualbox provider and consistently failing After some help from one of our ruby guys we realised that the method called expects a hash and it actually receives and array with a hash inside This pull request fixes this Example (Vagrantfile):pre  configvmprovider virtualbox do |v|    vnetwork_adapter 2 :bridged { auto_config: true }  end/pre,,770,0.7363636363636363,0.7788461538461539,18233,429.2765864092579,35.43026380738222,63.45637031755608,5561,7,1457,6,travis,thanosa75,mitchellh,false,,0,0,2,0,743,false,false,false,false,0,0,0,0,0,0,-1
2823653,mitchellh/vagrant,ruby,2851,1389968975,1389995833,1389995833,447,447,github,false,false,false,60,1,1,0,1,2,3,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.283014475080906,0.10486773086910098,4,teemu.matilainen@iki.fi,plugins/hosts/linux/cap/nfs.rb,4,0.00641025641025641,0,0,true,nfs_apply :: exportfs sometimes leaves exports behind On my machine i had a case where /etc/exports was updated but the oldexports were still there This was leading toexportfs: duplicated export entries and eventually leading to nfsbeing not available for the boxchanging the command exportfs -r to exportfs -ar seems to address thisissueSigned-off-by: BlackEagle ikedevolder@gmailcom,,769,0.7360208062418726,0.7788461538461539,18233,429.2765864092579,35.43026380738222,63.45637031755608,5561,7,1457,5,travis,BlackIkeEagle,mitchellh,false,mitchellh,2,0.5,52,122,1326,false,true,true,false,0,7,2,0,0,1,447
2821941,mitchellh/vagrant,ruby,2845,1389941034,1392792897,1392792897,47531,47531,commits_in_master,false,false,false,59,4,3,0,5,0,5,0,2,1,0,6,10,7,0,0,1,0,9,10,7,2,0,298,84,313,91,87.51109355252898,2.1448931876113164,17,teemu.matilainen@iki.fi,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|test/unit/plugins/provisioners/chef/provisioner/base_test.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|test/unit/plugins/provisioners/chef/provisioner/base_test.rb,8,0.0032310177705977385,0,3,true,provisioners/chef: DRY and unify encrypted data bag secret handling Pull up encrypted data bag secret management into the base classes thus also unifying the functionalityEspecially this complements the issues:  * Upload the secret to provisioning path also with chef-solo [GH-1246]  * Delete the secret also with chef-client [GH-2712]  * Remove the secret before uploading also with chef-client [GH-1111],,768,0.7356770833333334,0.777059773828756,18209,429.84238563347793,35.47696194189687,63.54000768850568,5561,7,1457,13,travis,tmatilai,tmatilai,true,tmatilai,16,0.9375,47,41,1724,true,true,false,false,40,165,26,12,19,12,2
2812741,mitchellh/vagrant,ruby,2837,1389838711,1389851576,1389851576,214,214,github,false,false,false,17,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,12,0,12,0,9.553785506901445,0.2376199718340869,22,teemu.matilainen@iki.fi,lib/vagrant/environment.rb|lib/vagrant/shared_helpers.rb,21,0.03529411764705882,0,0,false,core: Respect VAGRANT_HOME everywhere Use VAGRANT_HOMEenv var also for Plugin::Manager etc not only in the Environment class,,767,0.7353324641460235,0.7680672268907563,17987,430.81114137988544,35.414466003224554,63.43470284094067,5561,7,1455,6,travis,tmatilai,mitchellh,false,mitchellh,15,0.9333333333333333,47,41,1722,true,true,true,false,39,157,25,12,18,9,214
2808337,mitchellh/vagrant,ruby,2830,1389800864,1389805551,1389805551,78,78,github,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.406527223995067,0.10960926433249758,2,mitchell.hashimoto@gmail.com,plugins/hosts/linux/cap/nfs.rb,2,0.003395585738539898,0,0,false,Fix typo Fix to issue [2829](https://githubcom/mitchellh/vagrant/issues/2829),,766,0.7349869451697127,0.765704584040747,17970,431.274346132443,35.39232053422371,63.439065108514185,5561,7,1455,6,travis,gustavobgama,tmatilai,false,tmatilai,1,1.0,11,9,679,false,true,false,false,0,0,0,0,0,0,78
2801966,mitchellh/vagrant,ruby,2824,1389725643,1389859878,1389859878,2237,2237,github,false,false,false,71,2,1,0,3,0,3,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,2,0,4,0,4.565794224094656,0.11408992944383294,0,,plugins/guests/solaris/guest.rb,0,0.0,0,1,false,More specific Solaris 11 detection Note: This will probably break on Solaris 12+ but not certain of a better approach for nowThis is specifically an issue for the Solaris detection and operation due to the following conflicting lines:Solaris 10: https://githubcom/mitchellh/vagrant/blob/master/plugins/guests/solaris/configrb#L14Solaris 11: https://githubcom/mitchellh/vagrant/blob/master/plugins/guests/solaris11/configrb#L18This has resolved the issues I had when building a Solaris base box with Packer and bringing up with Vagrant due to incorrect network device prefix,,765,0.734640522875817,0.7688442211055276,17878,426.3340418391319,35.07103702875042,63.150240519073726,5561,7,1454,7,travis,masteinhauser,mitchellh,false,mitchellh,0,0,21,10,1079,false,false,false,false,0,0,0,0,0,0,45
2799393,mitchellh/vagrant,ruby,2820,1389695395,1389728318,1389728318,548,548,github,false,false,true,26,5,5,0,0,0,0,0,2,3,0,5,8,6,0,0,3,0,5,8,6,0,0,146,99,146,99,39.068653278318365,0.976246339019528,13,mitchell.hashimoto@gmail.com,plugins/synced_folders/rsync/command/rsync_auto.rb|test/unit/plugins/synced_folders/rsync/command/rsync_auto_test.rb|plugins/synced_folders/rsync/command/rsync_auto.rb|plugins/synced_folders/rsync/plugin.rb|website/docs/source/v2/cli/non-primary.html.md|website/docs/source/v2/cli/rsync-auto.html.md|plugins/synced_folders/rsync/command/rsync_auto.rb|website/docs/source/v2/cli/rsync-auto.html.md|vagrant.gemspec,6,0.006700167504187605,0,0,false,rsync-auto command This adds the vagrant rsync-auto command This command watches the rsync synced folder directories and automatically syncs the folders when there are any changes,,764,0.7342931937172775,0.7688442211055276,17878,426.3340418391319,35.07103702875042,63.150240519073726,5561,7,1454,7,travis,mitchellh,mitchellh,true,mitchellh,8,1.0,3381,0,2148,true,true,false,false,276,586,272,15,541,16,-1
2799390,mitchellh/vagrant,ruby,2819,1389695308,1389911875,1389911875,3609,3609,github,false,false,false,4,1,1,0,1,0,1,0,1,8,0,0,8,6,2,0,8,0,0,8,6,2,0,150,0,150,0,37.414171630190744,0.9349042011051927,0,,plugins/guests/netbsd/cap/change_host_name.rb|plugins/guests/netbsd/cap/configure_networks.rb|plugins/guests/netbsd/cap/halt.rb|plugins/guests/netbsd/cap/mount_nfs_folder.rb|plugins/guests/netbsd/guest.rb|plugins/guests/netbsd/plugin.rb|templates/guests/netbsd/network_dhcp.erb|templates/guests/netbsd/network_static.erb,0,0.0,0,0,false,Add NetBSD guest support ,,763,0.7339449541284404,0.7701342281879194,17878,426.3340418391319,35.07103702875042,63.150240519073726,5561,7,1454,5,travis,stoned,mitchellh,false,mitchellh,0,0,2,0,1600,false,false,false,false,0,0,0,0,0,0,3609
2796396,mitchellh/vagrant,ruby,2816,1389656965,1389657335,1389657335,6,6,github,false,false,true,23,6,6,0,0,0,0,0,1,5,0,15,20,16,0,1,5,0,15,20,16,0,1,230,321,230,321,93.7055463093058,2.355111517815039,97,tprice@onehealth.com,website/docs/source/v2/cli/non-primary.html.md|website/docs/source/v2/cli/rsync.html.md|website/docs/source/v2/synced-folders/rsync.html.md|plugins/synced_folders/rsync/helper.rb|lib/vagrant/machine.rb|plugins/synced_folders/rsync/command/rsync.rb|plugins/synced_folders/rsync/helper.rb|plugins/synced_folders/rsync/plugin.rb|plugins/synced_folders/rsync/synced_folder.rb|templates/locales/en.yml|test/unit/plugins/synced_folders/rsync/helper_test.rb|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb|plugins/synced_folders/rsync/command/rsync.rb|test/unit/base.rb|test/unit/plugins/synced_folders/rsync/command/rsync_test.rb|plugins/synced_folders/rsync/helper.rb|test/unit/plugins/synced_folders/rsync/helper_test.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/synced_folders.rb|test/unit/vagrant/action/builtin/mixin_synced_folders_test.rb|test/unit/vagrant/action/builtin/synced_folders_test.rb,76,0.003389830508474576,0,0,false,vagrant rsync non-primary command This adds the vagrant rsync command which can be used to force a resync of the rsync synced folders,,762,0.7335958005249343,0.7745762711864407,17816,422.5976650202066,34.91243825774585,62.75258194881006,5561,7,1453,5,travis,mitchellh,mitchellh,true,mitchellh,7,1.0,3380,0,2147,true,true,false,false,275,585,269,15,534,16,-1
2785731,mitchellh/vagrant,ruby,2807,1389476518,1389478015,1389478015,24,24,github,false,false,true,84,8,8,0,0,0,0,0,0,5,0,11,16,14,1,1,5,0,11,16,14,1,1,161,197,161,197,103.33499094453565,2.611871644674718,105,tprice@onehealth.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/cli/non-primary.html.md|plugins/commands/list-commands/command.rb|plugins/commands/list-commands/plugin.rb|templates/locales/en.yml|test/unit/base.rb|test/unit/plugins/commands/list-commands/command_test.rb|test/unit/support/shared/plugin_command_context.rb|test/unit/vagrant/cli_test.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|lib/vagrant/cli.rb|lib/vagrant/plugin/v2/manager.rb|test/unit/vagrant/cli_test.rb|test/unit/plugins/commands/ssh_config/command_test.rb|website/docs/source/v2/plugins/commands.html.md|lib/vagrant/cli.rb|test/unit/vagrant/cli_test.rb|lib/vagrant/cli.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|website/docs/source/v2/plugins/commands.html.md,75,0.0034423407917383822,0,0,false,Non-primary subcommands This enables plugins to define commands that are non-primary: they wont be listed in the vagrant -h output and are therefore somewhat hidden The utility in this is that uncommon commands or commands that arent friendly to beginners can be hidden The full list of commands can be seen by executing vagrant list-commandsAs of this PR no command uses this functionality (except list-commands) In the future Im going to introduce some non-primary commands for specialized tasks such as forcing a re-rsync,,761,0.7332457293035479,0.7814113597246127,17757,419.6091682153517,34.80317621219801,62.060032663175086,5561,7,1451,5,travis,mitchellh,mitchellh,true,mitchellh,6,1.0,3379,0,2145,true,true,false,false,271,578,266,15,525,15,-1
2783460,mitchellh/vagrant,ruby,2803,1389421134,1389421360,1389421360,3,3,github,false,false,true,128,5,5,0,0,0,0,0,1,5,0,10,15,11,1,1,5,0,10,15,11,1,1,218,156,218,156,84.77973809490653,2.155320097970274,102,tprice@onehealth.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/synced-folders/rsync.html.md|plugins/synced_folders/rsync/synced_folder.rb|templates/locales/en.yml|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/errors.rb|lib/vagrant/plugin/v2/synced_folder.rb|plugins/synced_folders/nfs/synced_folder.rb|plugins/synced_folders/rsync/plugin.rb|plugins/synced_folders/rsync/synced_folder.rb|templates/locales/en.yml|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb|test/unit/support/shared/action_synced_folders_context.rb|plugins/guests/linux/cap/rsync.rb|plugins/guests/linux/plugin.rb|plugins/synced_folders/rsync/synced_folder.rb|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb|plugins/synced_folders/rsync/synced_folder.rb|test/unit/plugins/synced_folders/rsync/synced_folder_test.rb,71,0.005263157894736842,1,0,false,rsync Synced Folder Type This pull requests introduces the rsync synced folder type into Vagrant core This synced folder will do a one-time one-directional sync from the host machine to the guest machine using rsync This is useful in situations where NFS or native shared folders cant be setup such as in AWSIn the future Id like to add the ability to force a re-sync as well as to watch for file changes and sync For now this is a basic one-time syncHaving this in core allows remote providers such as OpenStack AWS RackSpace etc to stop hand-rolling the rsync synced folder mechanism and to rely on the core providing itAnd a shout out to @phinze because this thing is fully unit testedFixes #1926 ,,760,0.7328947368421053,0.7912280701754386,17644,416.0054409430968,34.45930627975516,61.21060983903877,5561,7,1451,5,travis,mitchellh,mitchellh,true,mitchellh,5,1.0,3379,0,2145,true,true,false,false,269,575,263,15,513,14,-1
2780751,mitchellh/vagrant,ruby,2800,1389390204,1389408335,1389408335,302,302,github,false,false,false,51,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,12,0,12,0,9.161870304677606,0.23378562313792237,4,teemu.matilainen@iki.fi,plugins/providers/virtualbox/config.rb|website/docs/source/v2/virtualbox/configuration.html.md,4,0.007207207207207207,0,0,true,extend Virtualbox convenince methods In the vein of #2426 I too can never remember syntax and end uphunting for either an existing Vagrantfile or starting to dig updetailsThis does bring up the question of potentially looking at cross-provider-specific methods for customization - but thats possibly a slippery slope,,759,0.7325428194993412,0.7945945945945946,17607,414.8918043959789,34.41812915317771,61.11205770432215,5561,7,1450,7,travis,miketheman,mitchellh,false,mitchellh,12,0.75,97,11,1118,false,true,true,false,0,0,1,0,0,0,302
2772492,mitchellh/vagrant,ruby,2795,1389292280,1389303855,1389303855,192,192,commit_sha_in_comments,false,false,false,64,5,4,0,2,0,2,0,1,3,0,5,8,5,0,1,3,0,5,8,5,0,1,51,24,51,24,56.45960233374131,1.445262037564862,33,teemu.matilainen@iki.fi,Rakefile|config/i18n-tasks.yml|lib/vagrant/errors.rb|lib/vagrant/util/i18n_scanner.rb|test/unit/locales_test.rb|vagrant.gemspec|Rakefile|config/i18n-tasks.yml|test/unit/locales_test.rb|vagrant.gemspec|test/unit/locales_test.rb|test/unit/locales_test.rb,28,0.0,0,0,false,I18n tasks round 2 Thanks to Vagrant Ive added an API for custom key discovery This now discovers calls such as error_key and error_namespace (1 per file) :ship: Some other missing and unused keys were discovered new stats are: 9 missing 39 unusedNB: This PR removes VMGuestError as it is not used anywhere (while being the only one declaring error_namespace without a message) ,,758,0.7321899736147758,0.7908256880733945,17600,412.84090909090907,34.090909090909086,60.79545454545455,5561,7,1449,8,travis,glebm,mitchellh,false,mitchellh,1,0.0,190,256,1406,false,false,false,false,0,5,1,0,0,0,173
2742749,mitchellh/vagrant,ruby,2794,1389256454,1389301650,1389301650,753,753,github,false,false,false,54,2,2,2,7,0,9,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,15,0,15,0,13.221695397782806,0.3384380163717279,6,mitchell.hashimoto@gmail.com,lib/vagrant/capability_host.rb|lib/vagrant/guest.rb|lib/vagrant/guest.rb,4,0.0073937153419593345,0,0,false,Reintroduce name attribute for the Guest Maintain compatibility for vagrant-vbguest plugin which uses it vagrant-vbguest doesnt use the caps system (to keep compatibility with older Vagrant versions) but includes similar functionality itselfThe second commit tweaks logging a bit:- Use downcase logger name as everywhere else- Remove duplicate logging from the Guest,,757,0.7318361955085865,0.789279112754159,17588,412.32658630884697,34.05731180350239,60.83693427336821,5561,7,1449,9,travis,tmatilai,mitchellh,false,mitchellh,14,0.9285714285714286,47,41,1716,true,true,true,false,32,134,23,12,17,4,1
2768704,mitchellh/vagrant,ruby,2792,1389235977,1389257939,1389257939,366,366,github,false,false,false,237,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,23,6,23,8.588503116373609,0.2198503777318855,4,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb|test/unit/plugins/guests/support/shared/redhat_like_host_name_examples.rb,3,0.005628517823639775,0,0,false,Change hostname back to what is specified in the Vagrantfile for redhat guests I originally submitted this PR as https://githubcom/mitchellh/vagrant/pull/2777  Github was giving me lots of problems today and at some point I dropped the original fork and reforked the project  Ill close the old PR This PR sets the active hostname back to the name specified in the Vagrantfile (fqdn) and updates the unit testsSetting it to the short name causes loads of problems while configuring the system Ive had issues with sudoers hostname matching Weblogic certificate generation and a few others Even if I changed all of the Chef recipes the fqdn is set in /etc/sysconfig/network so the active hostname will switch to the fqdn after a rebootThe CentOs and Redhat deployment guide states that HOSTNAME\value\ (in /etc/sysconfig/network) should be the FQDN but can be whatever hostname is necessary  The hostname stored there will be the one used in /proc/sys/kernel/hostname or returned from executing hostname on the command line after a reboot I dont think it makes sense to set the hostname for the system to the short name for the first boot  Setting it from the hostname specified in the Vagrantfile means that you can assign the hostname to either the shortname or the FQDN  http://wwwcentosorg/docs/5/html/52/Deployment_Guide/s2-sysconfig-networkhtmlhttps://accessredhatcom/site/documentation/en-US/Red_Hat_Enterprise_Linux/5/pdf/Deployment_Guide/Red_Hat_Enterprise_Linux-5-Deployment_Guide-en-USpdfExcerpt from page 505:HOSTNAMEvalue where value should be the Fully Qualified Domain Name (FQDN) such ashostnameexpamplecom but can be whatever hostname is necessary,,756,0.7314814814814815,0.7861163227016885,17577,412.0725948682938,33.96484041645332,60.70432952153382,5561,7,1448,9,travis,smoyer,mitchellh,false,mitchellh,2,0.0,1,3,520,true,false,false,false,0,0,1,0,1,0,365
2767263,mitchellh/vagrant,ruby,2791,1389218816,,1389220253,23,,unknown,false,false,false,26,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.861682215737497,0.12459918950546396,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/private_network.html.md,3,0.005660377358490566,0,0,false,Pass intnet as String Otherwise we get:/Applications/Vagrant/embedded/gems/gems/childprocess-039/lib/childprocess/abstract_processrb:36:in initialize: all arguments must be String: [/usr/bin/VBoxManage modifyvm 099abf87-2cc9-467a-bf7e-ef23ff620c90 --nic1 nat --nic2 intnet --intnet2 true] (ArgumentError),,755,0.7324503311258278,0.7849056603773585,17586,412.3734789036734,34.061185033549414,60.730126236779256,5561,7,1448,8,travis,charlax,mitchellh,false,,0,0,48,46,1594,false,false,false,false,0,0,0,0,0,0,-1
2766932,mitchellh/vagrant,ruby,2790,1389215738,1394226228,1394226228,83508,83508,commit_sha_in_comments,false,true,false,14,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.120870300473202,0.10561305258373606,2,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/config.rb,2,0.0037735849056603774,0,4,false,Fix salt provisioning validation of master keys There was a mismatch between minion/master keys,,754,0.7320954907161804,0.7849056603773585,17586,412.3734789036734,34.061185033549414,60.730126236779256,5561,7,1448,14,travis,bbinet,mitchellh,false,mitchellh,0,0,21,28,1723,false,false,false,false,0,0,0,0,0,0,83472
2763665,mitchellh/vagrant,ruby,2784,1389173616,1389214467,1389214467,680,680,github,false,false,true,38,16,16,0,0,0,0,0,0,14,2,41,57,52,1,1,14,2,41,57,52,1,1,1598,180,1598,180,314.5556166024834,8.167574263926717,140,tprice@onehealth.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/plugins/guests.html.md|website/docs/source/v2/plugins/host-capabilities.html.md|website/docs/source/v2/plugins/hosts.html.md|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|lib/vagrant.rb|lib/vagrant/host.rb|lib/vagrant/hosts.rb|lib/vagrant/plugin/v2/host.rb|test/unit/vagrant/host_test.rb|test/unit/vagrant/hosts_test.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/manager_test.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|lib/vagrant/plugin/v2/host.rb|plugins/kernel_v2/config/vagrant.rb|templates/locales/en.yml|test/unit/vagrant/environment_test.rb|plugins/hosts/null/host.rb|plugins/hosts/null/plugin.rb|test/unit/base.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_settings_test.rb|lib/vagrant/environment.rb|lib/vagrant/host.rb|test/unit/vagrant/host_test.rb|lib/vagrant/util.rb|plugins/hosts/bsd/cap/nfs.rb|plugins/hosts/bsd/host.rb|plugins/hosts/bsd/plugin.rb|plugins/kernel_v2/config/vm.rb|plugins/synced_folders/nfs/synced_folder.rb|lib/vagrant/plugin/v2/host.rb|plugins/hosts/arch/cap/nfs.rb|plugins/hosts/arch/host.rb|plugins/hosts/arch/plugin.rb|plugins/hosts/linux/cap/nfs.rb|plugins/hosts/linux/host.rb|plugins/hosts/linux/plugin.rb|plugins/hosts/freebsd/cap/nfs.rb|plugins/hosts/freebsd/host.rb|plugins/hosts/freebsd/plugin.rb|templates/locales/en.yml|plugins/hosts/arch/plugin.rb|plugins/hosts/gentoo/cap/nfs.rb|plugins/hosts/gentoo/host.rb|plugins/hosts/gentoo/plugin.rb|plugins/hosts/opensuse/cap/nfs.rb|plugins/hosts/opensuse/host.rb|plugins/hosts/opensuse/plugin.rb|plugins/hosts/redhat/cap/nfs.rb|plugins/hosts/redhat/host.rb|plugins/hosts/redhat/plugin.rb|plugins/hosts/slackware/cap/nfs.rb|plugins/hosts/slackware/host.rb|plugins/hosts/slackware/plugin.rb|plugins/hosts/windows/cap/nfs.rb|plugins/hosts/windows/host.rb|plugins/hosts/windows/plugin.rb|plugins/hosts/null/host.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/host.rb|plugins/hosts/freebsd/host.rb|plugins/hosts/gentoo/host.rb|plugins/hosts/linux/host.rb|plugins/hosts/opensuse/host.rb|plugins/hosts/redhat/host.rb|plugins/hosts/slackware/host.rb|plugins/hosts/windows/host.rb,61,0.0,1,0,false,Host Capabilities This extends the capabilities system from guests to hosts as well This allows host-specific functionality in plugins to be delegated to pluggable capabilities This unlocks a lot of flexibility as weve seen with guests/cc @fgrehm ,,753,0.7317397078353254,0.7840909090909091,17380,413.06098964326816,34.11967779056386,60.98964326812428,5561,7,1448,7,travis,mitchellh,mitchellh,true,mitchellh,4,1.0,3371,0,2142,true,true,false,false,257,531,248,14,474,13,-1
2762639,mitchellh/vagrant,ruby,2781,1389155587,1389155757,1389155757,2,2,github,false,false,true,84,5,5,0,0,2,2,0,0,3,0,10,13,9,0,1,3,0,10,13,9,0,1,350,400,350,400,66.52705435427612,1.7334382654478164,66,tprice@onehealth.com,lib/vagrant/errors.rb|test/unit/vagrant/errors_test.rb|lib/vagrant/capability_host.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/capability_host_test.rb|test/unit/vagrant/guest_test.rb|test/unit/support/shared/capability_helpers_context.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/guest.rb|test/unit/vagrant/guest_test.rb|lib/vagrant/capability_host.rb|test/unit/base.rb|test/unit/support/shared/capability_helpers_context.rb|test/unit/vagrant/capability_host_test.rb,60,0.0019569471624266144,1,0,false,Abstract Capability system so it can be used with hosts This PR is the first step on the way to providing host capabilities like we provide guest capabilities This abstracts the capability system in use by guests to a CapabilityHost mixin The existing Guest class now uses this mixin There was no plugin API changes or UX changes so this is just a refactorThis passes all existing tests and adds a whole set of new unit tests for the new capabilities /cc @fgrehm ,,752,0.7313829787234043,0.8082191780821918,17354,410.5105451192809,33.9979255503054,60.96577158003919,5561,7,1447,9,travis,mitchellh,mitchellh,true,mitchellh,3,1.0,3371,0,2141,true,true,false,false,255,526,243,14,457,13,-1
2760841,mitchellh/vagrant,ruby,2777,1389135365,,1389237036,1694,,unknown,false,false,false,79,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.825080814349759,0.09979054574194267,3,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb,3,0.006036217303822937,0,1,false,Update change_host_namerb This was introduced in 141 with https://githubcom/mitchellh/vagrant/commit/d26c1471d74ec26a7a1386200f21e1fa3d8f5711This PR sets the active hostname back to the name specified in the Vagrantfile (fqdn)Setting it to the short name causes loads of problems while configuring the system  Ive had issues with sudoers hostname matching Weblogic certificate generation and a few others  Even if I changed all of the Chef recipes the fqdn is set in /etc/sysconfig/network so the active hostname will switch to the fqdn after a reboot,,751,0.7323568575233023,0.8128772635814889,17350,409.56772334293953,33.94812680115274,60.57636887608069,5561,7,1447,14,travis,smoyer,smoyer,true,,1,0.0,1,3,519,true,false,false,false,0,0,0,0,1,0,21
2739197,mitchellh/vagrant,ruby,2774,1389110231,,1389162247,866,,unknown,false,false,false,33,3,1,1,8,0,9,0,3,2,0,2,5,3,0,1,2,0,3,5,3,0,1,4,14,4,23,18.60954882786916,0.4904000352591161,3,mitchell.hashimoto@gmail.com,Rakefile|config/i18n-tasks.yml|test/unit/locales_test.rb|vagrant.gemspec,3,0.0,0,5,false,Tasks for missing and unused translations Adds tasks and tests for missing and unused translations using [i18n-tasks](/glebm/i18n-tasks) These tests are failing as there is one missing and 70 unused keys at the moment,,750,0.7333333333333333,0.8207739307535642,17216,397.07249070631974,32.87639405204461,57.96933085501859,5561,6,1447,13,travis,glebm,mitchellh,false,,0,0,188,256,1404,false,false,false,false,0,0,0,0,0,0,222
2755958,mitchellh/vagrant,ruby,2772,1389064362,1389147481,1389147481,1385,1385,merged_in_comments,false,false,false,35,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,0,22,0,8.479590188236315,0.22345470950195465,0,,plugins/commands/plugin/command/install.rb|plugins/commands/plugin/command/uninstall.rb,0,0.0,0,0,false,Allow vagrant (un)install plugin1 plugin2 plugin3 The current vagrant install or uninstall only works on one plugin at a time This modification allows for any number 1 plugins to be installed/uninstalled at the same time,,749,0.732977303070761,0.8207739307535642,17216,397.07249070631974,32.87639405204461,57.96933085501859,5561,6,1446,13,travis,ryansb,mitchellh,false,mitchellh,1,1.0,93,19,1047,false,false,false,false,0,1,1,0,1,0,-1
2738759,mitchellh/vagrant,ruby,2769,1389049641,1389135222,1389135222,1426,1426,github,false,false,true,481,54,50,2,2,8,12,5,8,12,4,30,47,36,0,2,12,4,31,47,37,0,2,2570,410,2593,450,551.4974465991269,14.533096409758151,98,tprice@onehealth.com,vagrant.gemspec|bin/vagrant|lib/vagrant.rb|lib/vagrant/bundler.rb|lib/vagrant/environment.rb|lib/vagrant/init.rb|lib/vagrant/paths.rb|lib/vagrant/plugin_manager.rb|vagrant.gemspec|bin/vagrant|lib/vagrant.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin_manager.rb|lib/vagrant/shared_helpers.rb|templates/locales/en.yml|plugins/commands/plugin/action.rb|plugins/commands/plugin/action/bundler_check.rb|lib/vagrant/init.rb|test/unit/vagrant_test.rb|lib/vagrant/plugin.rb|lib/vagrant/plugin/state_file.rb|plugins/commands/plugin/command/base.rb|plugins/commands/plugin/plugin.rb|test/unit/vagrant/plugin/state_file_test.rb|plugins/commands/plugin/action/list_plugins.rb|plugins/commands/plugin/action/list_plugins.rb|lib/vagrant.rb|lib/vagrant/plugin.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin_manager.rb|plugins/commands/plugin/action/list_plugins.rb|test/unit/vagrant/plugin/manager_test.rb|lib/vagrant.rb|lib/vagrant/bundler.rb|lib/vagrant/init.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/action.rb|plugins/commands/plugin/action/prune_gems.rb|bin/vagrant|lib/vagrant.rb|lib/vagrant/bundler.rb|lib/vagrant/init.rb|lib/vagrant/pre-rubygems.rb|bin/vagrant|bin/vagrant|lib/vagrant.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action/uninstall_plugin.rb|plugins/commands/plugin/action.rb|bin/vagrant|bin/vagrant|lib/vagrant.rb|lib/vagrant/bundler.rb|lib/vagrant/pre-rubygems.rb|bin/vagrant|lib/vagrant/bundler.rb|lib/vagrant/errors.rb|templates/locales/en.yml|lib/vagrant/plugin/manager.rb|bin/vagrant|bin/vagrant|lib/vagrant/pre-rubygems.rb|test/unit/vagrant/plugin/manager_test.rb|lib/vagrant/errors.rb|lib/vagrant/plugin/manager.rb|templates/locales/en.yml|lib/vagrant/bundler.rb|plugins/commands/plugin/gem_helper.rb|lib/vagrant/bundler.rb|lib/vagrant/bundler.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/command/install.rb|plugins/commands/plugin/command/mixin_install_opts.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|plugins/commands/plugin/action/install_gem.rb|test/unit/vagrant/plugin/manager_test.rb|test/unit/vagrant/plugin/state_file_test.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action.rb|plugins/commands/plugin/action/license_plugin.rb|plugins/commands/plugin/action/list_plugins.rb|plugins/commands/plugin/action/plugin_exists_check.rb|plugins/commands/plugin/command/base.rb|plugins/commands/plugin/plugin.rb|plugins/commands/plugin/action/plugin_exists_check.rb|test/unit/plugins/commands/plugin/action/plugin_exists_check_test.rb|plugins/commands/plugin/action/install_gem.rb|test/unit/plugins/commands/plugin/action/install_gem_test.rb|test/unit/plugins/commands/plugin/action/uninstall_plugin_test.rb|plugins/commands/plugin/action/list_plugins.rb|templates/locales/en.yml|website/docs/source/v2/cli/plugin.html.md|lib/vagrant/bundler.rb|lib/vagrant/bundler.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action.rb|plugins/commands/plugin/action/update_gems.rb|plugins/commands/plugin/command/update.rb|templates/locales/en.yml|test/unit/plugins/commands/plugin/action/update_gems_test.rb|lib/vagrant/plugin/state_file.rb|test/unit/vagrant/plugin/state_file_test.rb|lib/vagrant/bundler.rb|lib/vagrant/errors.rb|lib/vagrant/plugin/manager.rb|lib/vagrant/plugin/state_file.rb|plugins/commands/plugin/action/install_gem.rb|templates/locales/en.yml|test/unit/plugins/commands/plugin/action/install_gem_test.rb|test/unit/vagrant/plugin/manager_test.rb|test/unit/vagrant/plugin/state_file_test.rb|lib/vagrant/bundler.rb|lib/vagrant/bundler.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/command/install.rb|lib/vagrant/bundler.rb|lib/vagrant/bundler.rb|lib/vagrant/plugin/manager.rb|test/unit/plugins/commands/plugin/action/install_gem_test.rb|test/unit/vagrant/plugin/manager_test.rb,53,0.0,1,6,false,Plugin dependency management revamp This is a huge revamp of how plugin dependency management is done To understand the changes here a brief history lesson is in order:Since Vagrant 11 plugins have been loaded as RubyGems Once Vagrant was loaded it would iterate through a list of installed plugins and require that plugin This mostly worked okay But the devil is in the details and the edge cases were _really_ bad In addition to the edge cases (mentioned below) building things like updaters version constraints ( 10  11) etc all had to be done manually This seemed silly since RubyGems itself (and Bundler) do these sort of things for you Why reinvent the wheelAs for edge cases: the primary edge case is that since the dependencies of Vagrant and its respective plugins werent resolved as a whole you can run into cases where plugin installation succeeded but plugin loading failed because Vagrant already loaded a common dependency with the wrong version An example explains this best:* Vagrant depends on A  10  12* vagrant-plugin depends on A  11* When you run Vagrant it loads the latest possible matching dependencies so it would load A 12* When Vagrant loads vagrant-plugin it cant load because A 12 is active so A 11 cant be loadedThe error above should never happen: the versions available for A should satisfy both Vagrant and vagrant-plugin (by loading v11 for both) With this new branch all plugin installation dependency resolution updating etc is managed by [Bundler](http://gembundlercom) This has yielded numerous benefits:* Vagrant now resolves dependencies before Vagrant is even loaded This ensures that all plugins will be able to load No more conflicts at run-time* Conflicts are detected at vagrant plugin install time This means that if there would be a crash if that plugin were to load the plugin wont even install and a human-friendly error is shown to the end user* vagrant plugin install now accepts complex version constraints such as ~ 100 or  10  11 Vagrant stores these constraints for updating which leads to the next point* vagrant plugin update without arguments now updates all installed plugins respecting the constraints specified by vagrant plugin install* vagrant plugin update NAME will only update that gem (still respecting constraints) * Internally there are a lot more unit tests /cc @phinze :)The goal of this branch was to replace the _existing_ system and functionality with Bundler-ized management It did not introduce any new features except where they naturally fell into place (version constraints) However with this new system many new possibilities are also available:* Vagrant environment local plugins (ie a Gemfile but for a specific Vagrant environment) * Plugin installation from gitIm sure those will be pursued at some point in the futureThis fixes: #2612 #2406 #2428,,748,0.732620320855615,0.8207739307535642,17216,397.07249070631974,32.87639405204461,57.96933085501859,5561,6,1446,13,travis,mitchellh,mitchellh,true,mitchellh,2,1.0,3371,0,2140,true,true,false,false,251,510,234,13,438,13,710
2753777,mitchellh/vagrant,ruby,2767,1389040241,1389147730,1389147730,1791,1791,github,false,false,false,45,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.659135567547839,0.12277784204960127,5,teemu.matilainen@iki.fi,README.md,5,0.0102880658436214,0,0,false,Update README to note running Vagrant in a bundle disables plugins by default Is there a way to make Vagrant run full-blown in a bundle If so Ill update the docs and README with those notes My searching didnt turn up much beyond plugin development,,747,0.7322623828647925,0.8292181069958847,17216,397.07249070631974,32.87639405204461,57.96933085501859,5561,6,1446,12,travis,joestump,mitchellh,false,mitchellh,0,0,379,7,1862,false,false,false,false,1,7,0,0,0,0,1791
2752657,mitchellh/vagrant,ruby,2766,1389025366,1389411805,1389411805,6440,6440,github,false,false,false,6,1,1,0,3,1,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.06538130564954,0.10713119130790691,4,vicviq@gmail.com,plugins/provisioners/salt/provisioner.rb,4,0.00823045267489712,0,0,false,Allow defining of install-type and install-type-args ,,746,0.7319034852546917,0.8292181069958847,17216,397.07249070631974,32.87639405204461,57.96933085501859,5561,6,1446,10,travis,graingert,mitchellh,false,mitchellh,0,0,18,9,1201,false,false,false,false,0,0,0,0,0,0,229
2748293,mitchellh/vagrant,ruby,2762,1388930306,1389148032,1389148032,3628,3628,merged_in_comments,false,false,false,26,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,17,0,17,0,4.994558089812627,0.13161710346377897,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/synced-folders/basic_usage.html.md,2,0.004395604395604396,0,0,false,Warn about non-updating files caused by sendfile This was in v1 of the documentation As the issue is still present I have added it againThanks,,745,0.7315436241610739,0.9010989010989011,17216,397.07249070631974,32.87639405204461,57.96933085501859,5561,6,1445,11,travis,lunohodov,mitchellh,false,mitchellh,0,0,3,0,1864,false,false,false,false,0,0,0,0,0,0,-1
2741558,mitchellh/vagrant,ruby,2754,1388792017,1388792093,1388792093,1,1,github,false,false,true,46,10,10,0,0,0,0,0,0,1,0,11,12,11,0,1,1,0,11,12,11,0,1,142,25,142,25,91.61787990504148,2.4172438052735865,64,tprice@onehealth.com,website/docs/source/v2/vagrantfile/ssh_settings.html.md|plugins/communicators/ssh/communicator.rb|lib/vagrant/machine.rb|plugins/kernel_v2/config/ssh_connect.rb|test/unit/vagrant/machine_test.rb|plugins/communicators/ssh/communicator.rb|lib/vagrant/action/builtin/ssh_exec.rb|templates/locales/en.yml|lib/vagrant/action/builtin/wait_for_communicator.rb|lib/vagrant/machine.rb|plugins/communicators/ssh/communicator.rb|plugins/guests/linux/cap/insert_public_key.rb|plugins/guests/linux/plugin.rb|plugins/kernel_v2/config/ssh_connect.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/action/builtin/ssh_exec.rb|plugins/communicators/ssh/communicator.rb|templates/locales/en.yml|lib/vagrant/action/builtin/ssh_run.rb|lib/vagrant/errors.rb|templates/locales/en.yml,49,0.0044943820224719105,0,0,true,Support password-based SSH automatically insert insecure key This implements support for using password-based SSH rather than purely keypair-based In addition to this if using password-based SSH this branch introduces the ability for Vagrant to automatically insert a keypair into the machine that it will then use ,,744,0.7311827956989247,0.9146067415730337,17148,397.59738745043154,32.89013296011196,58.02425938885001,5561,6,1443,9,travis,mitchellh,mitchellh,true,mitchellh,1,1.0,3367,0,2137,true,true,false,false,255,518,238,13,392,12,-1
2740412,mitchellh/vagrant,ruby,2752,1388781168,1388781185,1388781185,0,0,github,false,false,false,41,1,1,0,1,0,1,0,2,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.691223762825798,0.12377310072835201,10,teemu.matilainen@iki.fi,bin/vagrant,10,0.02304147465437788,0,0,true,Replace exit 1 with abort According to the documentation Kernelabort calls Kernelexit(false) The failure status 1 is an implementation detail on Unix-like systems In theory a future system could exist where 1 indicates a successful exit and 0 indicates a failure,,743,0.730820995962315,0.9354838709677419,17148,397.59738745043154,32.89013296011196,58.02425938885001,5561,6,1443,9,travis,sferik,mitchellh,false,mitchellh,0,0,1957,124,2060,false,false,false,false,0,0,0,0,0,0,0
2736632,mitchellh/vagrant,ruby,2746,1388724984,1388739844,1388739844,247,247,github,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.25224302639891,0.11247295104058787,47,tprice@onehealth.com,templates/locales/en.yml,47,0.10904872389791183,0,0,false,Fix spelling of because ,,742,0.7304582210242587,0.9350348027842227,17144,396.6985534297713,32.83947736817545,57.86280914605693,5561,6,1442,9,travis,jameydeorio,mitchellh,false,mitchellh,0,0,21,24,898,false,false,false,false,0,0,0,0,0,0,-1
2733950,mitchellh/vagrant,ruby,2742,1388697073,1388697098,1388697098,0,0,github,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.565259132188434,0.12075307387113265,0,,plugins/guests/fedora/guest.rb,0,0.0,0,0,false,Correctly detect fedora 19 and 20 Previously only Fedora 16-18 would be detected as Fedora This PR fixes that suck that F16-F20 are all correctly detected,,741,0.7300944669365722,0.933649289099526,17121,397.23147012440865,32.883593248057934,57.940540856258394,5561,6,1442,9,travis,ryansb,mitchellh,false,mitchellh,0,0,93,19,1043,false,false,false,false,0,0,0,0,0,0,0
2733355,mitchellh/vagrant,ruby,2741,1388691358,,1388694973,60,,unknown,false,false,false,27,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.675503530676037,0.09721865429806956,14,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action.rb,14,0.03317535545023697,0,0,false,resolving #2739 for Ubuntu based distros with ruby 200p353 rubyb2use include order matters for setting up the system environment Was causing an internal consistency error,,740,0.731081081081081,0.933649289099526,17121,397.23147012440865,32.883593248057934,57.940540856258394,5561,6,1442,9,travis,darthmuffins,mitchellh,false,,0,0,1,3,727,false,false,false,false,1,2,0,0,0,0,60
2727910,mitchellh/vagrant,ruby,2734,1388555045,1388652526,1388652526,1624,1624,github,false,false,false,15,3,3,0,1,0,1,0,1,6,6,0,12,4,2,0,6,6,0,12,4,2,0,282,0,282,0,56.28332666040146,1.4997542620766606,0,,plugins/guests/funtoo/cap/change_host_name.rb|plugins/guests/funtoo/cap/configure_networks.rb|plugins/guests/funtoo/guest.rb|plugins/guests/funtoo/plugin.rb|templates/guests/funtoo/network_dhcp.erb|templates/guests/funtoo/network_static.erb|plugins/guests/funtoo/cap/change_host_name.rb|plugins/guests/funtoo/cap/configure_networks.rb|plugins/guests/funtoo/guest.rb|plugins/guests/funtoo/plugin.rb|templates/guests/funtoo/network_dhcp.erb|templates/guests/funtoo/network_static.erb|plugins/guests/funtoo/cap/change_host_name.rb|plugins/guests/funtoo/cap/configure_networks.rb|plugins/guests/funtoo/guest.rb|plugins/guests/funtoo/plugin.rb|templates/guests/funtoo/network_dhcp.erb|templates/guests/funtoo/network_static.erb,0,0.0,0,0,false,Funtoo I saw your comments at https://githubcom/mitchellh/vagrant/pull/1840 and decided to do itHappy New Year,,739,0.7307171853856563,0.9347319347319347,17040,399.11971830985914,33.039906103286384,58.21596244131456,5561,6,1441,9,travis,seginoviax,mitchellh,false,mitchellh,0,0,0,0,316,false,false,false,false,0,0,0,0,0,0,1624
2713207,mitchellh/vagrant,ruby,2725,1388217152,1388217327,1388217327,2,2,github,false,false,false,75,2,2,0,1,0,1,0,1,0,0,3,3,2,0,1,0,0,3,3,2,0,1,8,0,8,0,12.694679471773739,0.3383084895811978,44,tprice@onehealth.com,plugins/provisioners/salt/errors.rb|plugins/provisioners/salt/config.rb|templates/locales/en.yml,42,0.004987531172069825,0,0,false,Salt provisioner missing error messages in localization file The salt provisioner doesnt seem to have the error messages in the localization file So you get an error about a missing translation key instead of a configuration problem in your provisionersalt:* translation missing: ensaltmissing_keyI added the missing text values to the localization and fixed up the provisioner so the translation keys and error namespace is more consistent with the other provisioners,,737,0.7299864314789688,0.9301745635910225,17004,398.9061397318278,32.99223712067749,58.16278522700541,5561,6,1437,15,travis,MarcMeszaros,mitchellh,false,mitchellh,0,0,4,16,654,false,false,false,false,0,0,0,0,0,0,2
2692029,mitchellh/vagrant,ruby,2713,1387848398,1388278140,1388278140,7162,7162,github,false,false,false,12,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.7370755091962895,0.12624130165015982,12,teemu.matilainen@iki.fi,lib/vagrant.rb,12,0.029484029484029485,0,1,false,Log loaded plugin versions One more piece of information to help support,,736,0.7296195652173914,0.9164619164619164,17004,398.9061397318278,32.99223712067749,58.16278522700541,5561,6,1432,14,travis,tmatilai,mitchellh,false,mitchellh,13,0.9230769230769231,47,41,1699,true,true,true,false,28,113,22,10,13,1,21
2690598,mitchellh/vagrant,ruby,2711,1387827721,1387829845,1387829845,35,35,github,false,false,false,15,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.378595041189859,0.11668793041733176,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/boxes/base.html.md,3,0.007389162561576354,0,0,false,Update basehtmlmd Fixing the typo Uesrs in the section Other Software in the documentation v2,,735,0.7292517006802721,0.916256157635468,17004,398.9061397318278,32.99223712067749,58.16278522700541,5561,6,1432,14,travis,marcellodesales,tmatilai,false,tmatilai,0,0,18,26,1550,false,false,false,false,0,0,0,0,0,0,35
2690441,mitchellh/vagrant,ruby,2710,1387825450,,1389061129,20594,,unknown,false,true,false,87,3,2,2,7,0,9,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,16,0,9.284467997791577,0.24742762130243562,15,thomas.omans@gmail.com,plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb,15,0.03694581280788178,0,12,false,Skip remote_user (or user) in Ansible playbook ansible-playbook does not pick up ssh user command line argument **when remote_user (or user) is defined in given playbook file** In order to ensure that Vagrant user is used ansible_ssh_user needs to be added to the inventory file (or exported as extra variable)The main question is now: Should Vagrant allow this override or not As illustrated here current behavior can be confusing On the other hand people using this remote_user may disagree that Vagrant silently skips this playbook requirement,,734,0.7302452316076294,0.916256157635468,17004,398.9061397318278,32.99223712067749,58.16278522700541,5561,6,1432,19,travis,picsolvebryan,gildegoma,false,,0,0,0,0,84,false,false,false,false,0,0,0,0,0,0,17
2686939,mitchellh/vagrant,ruby,2707,1387749073,1387750472,1387750472,23,23,github,false,false,false,24,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.53280300553453,0.12079807277921337,2,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/cap/debian/docker_install.rb,2,0.004901960784313725,0,0,false,[Docker/Debian]Set default value to avoid a prompt (lxc/directory) In debian 702 I get a prompt to enter the path With his command not anymore,,733,0.7298772169167803,0.9093137254901961,17003,398.92960065870733,32.99417749808857,58.166205963653475,5561,6,1431,13,travis,tobiasbaehr,mitchellh,false,mitchellh,0,0,13,12,1621,false,false,false,false,0,0,0,0,0,0,23
2686412,mitchellh/vagrant,ruby,2706,1387737918,1387741545,1387741545,60,60,github,false,false,false,4,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.621230073131719,0.12315463831929266,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/boxes/base.html.md,1,0.002457002457002457,0,0,false,Fixed typo in boxes/basehtmlmd ,,732,0.7295081967213115,0.9090909090909091,17003,398.92960065870733,32.99417749808857,58.166205963653475,5561,6,1431,13,travis,Ninir,mitchellh,false,mitchellh,0,0,25,93,920,false,false,true,false,0,0,0,0,0,0,60
2686014,mitchellh/vagrant,ruby,2705,1387728041,1388278253,1388278253,9170,9170,github,false,false,false,30,2,2,0,1,3,4,0,1,0,1,2,3,3,0,0,0,1,2,3,3,0,0,27,0,27,0,8.620301924474695,0.22972891392796144,9,teemu.matilainen@iki.fi,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb|plugins/guests/linux/cap/mount_nfs.rb|plugins/guests/ubuntu/cap/mount_nfs.rb,6,0.007371007371007371,0,0,false,Emit upstart event vagrant-mounted also on NFS mounts Complements #2502 and fixes error on VMs without upstart (like #2596)Also use the expanded path on events emited on VirtualBox shares,,731,0.7291381668946648,0.9090909090909091,17003,398.92960065870733,32.99417749808857,58.166205963653475,5561,6,1431,13,travis,tmatilai,mitchellh,false,mitchellh,12,0.9166666666666666,47,41,1698,true,true,true,false,27,108,19,9,12,1,9170
2681204,mitchellh/vagrant,ruby,2698,1387595104,,1388530254,15585,,unknown,false,false,false,14,1,1,2,0,0,2,0,2,0,0,3,3,2,0,1,0,0,3,3,2,0,1,14,45,14,45,12.260839503908532,0.32674832798074455,50,tprice@onehealth.com,lib/vagrant/action/builtin/synced_folders.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/synced_folders_test.rb,42,0.02631578947368421,0,0,true,Warn if a synced folder mount would shadow an earlier one Relates to #2682,,730,0.7301369863013699,0.8827751196172249,17003,398.92960065870733,32.99417749808857,58.166205963653475,5561,6,1429,13,travis,tmatilai,mitchellh,false,,11,1.0,47,41,1696,true,true,true,false,27,108,18,7,11,1,1
2680657,mitchellh/vagrant,ruby,2697,1387588828,1388278734,1388278734,11498,11498,github,false,false,false,63,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.635445778120425,0.12353441187637076,5,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/docker.html.md,5,0.01201923076923077,0,0,true,Docker Docs: CMD command correction Based on the description of the cmd option for the Docker provisioner Im guessing the link to the Dockerfile docs should point to the CMD instruction not the RUN instruction RUN simply specifies a step in the docker image build process CMD is the instruction that sets a default command to run inside the container when its started,,729,0.7297668038408779,0.8822115384615384,16991,397.9165440527338,32.78206109116591,57.97186745924313,5561,6,1429,13,travis,Ninjamoose,mitchellh,false,mitchellh,0,0,0,0,772,false,false,false,false,0,0,0,0,0,0,11498
2676956,mitchellh/vagrant,ruby,2694,1387548707,1388279579,1388279579,12181,12181,github,false,false,false,44,1,1,0,1,0,1,0,1,0,0,4,4,3,0,1,0,0,4,4,3,0,1,12,13,12,13,17.291077609058497,0.4608064046884063,49,tprice@onehealth.com,lib/vagrant/errors.rb|plugins/commands/plugin/state_file.rb|templates/locales/en.yml|test/unit/plugins/commands/plugin/state_file_test.rb,42,0.036057692307692304,1,0,true,Show more informative error if pluginjson parsing fails Ref: #2603Suggestions/corrections to the message welcome )@mitchellh btw I find it a bit strange that _state_filerb_ is located under the plugin command while its (also) used directly by the very core Environment class Dunno,,728,0.7293956043956044,0.8822115384615384,16991,397.9165440527338,32.78206109116591,57.97186745924313,5561,6,1429,12,travis,tmatilai,mitchellh,false,mitchellh,10,1.0,47,41,1696,true,true,true,false,26,106,15,5,9,1,12181
2676056,mitchellh/vagrant,ruby,2693,1387533367,1388278761,1388278761,12423,12423,github,false,false,false,66,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.272101712422433,0.11385130962186203,42,tprice@onehealth.com,templates/locales/en.yml,42,0.10096153846153846,0,0,true,Reduces use of split infinitives Some would argue that split infinitives can be considered to be correctbut the issue in these cases is that the phrasing is a bit smootherwithout themI came across one of these error messages today and had to read it a couple of times before I understood it completely  I think these grammatical changes make the intent somewhat clearer,,727,0.7290233837689133,0.8822115384615384,16991,397.9165440527338,32.78206109116591,57.97186745924313,5561,6,1429,12,travis,oalders,mitchellh,false,mitchellh,0,0,100,98,1647,false,true,false,false,0,0,0,0,0,0,12423
2670791,mitchellh/vagrant,ruby,2688,1387471430,1387473700,1387473700,37,37,github,false,false,false,17,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.3934038798843,0.11708346607094688,0,,website/docs/source/v2/cli/ssh.html.md,0,0.0,0,0,false,Fix typo in SSH doc page Just fixing a typo I noticed while browsing the docs :),,726,0.7286501377410468,0.8711217183770883,16991,396.79830498499206,32.78206109116591,57.61873933258784,5561,6,1428,9,travis,Grunny,tmatilai,false,tmatilai,0,0,6,9,1364,false,true,false,false,0,0,0,0,0,0,37
2656893,mitchellh/vagrant,ruby,2677,1387323368,1387398681,1387398681,1255,1255,github,false,false,false,66,1,1,0,2,0,2,0,10,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.221659641661651,0.11278462329612282,4,tse_ben@bah.com,plugins/provisioners/puppet/provisioner/puppet.rb,4,0.009433962264150943,0,22,false,Do not prepend default path because it can override modules It is common for Puppet to manage itself If the puppet code you aredeploying pushes files to /etc/puppet/modules/ then prepending thispath can break deployment because it will override the module path ifthe deployment code is changing There is no good reason to include thispath Puppet has built in defaults for this reason,,725,0.7282758620689656,0.8301886792452831,16986,396.9151065583422,32.791710820675846,57.635699988225596,5560,7,1426,10,travis,purpleidea,mitchellh,false,mitchellh,0,0,104,93,1534,false,false,false,false,0,5,0,0,0,0,0
2655760,mitchellh/vagrant,ruby,2675,1387313125,1389173555,1389173555,31007,31007,merged_in_comments,false,true,false,90,3,2,1,0,0,1,0,2,1,0,3,5,4,0,0,1,0,4,5,4,0,0,185,0,209,0,33.93871564863885,0.9066967933206826,4,mitchell.hashimoto@gmail.com,lib/vagrant/plugin/v2/capability.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/plugin/v2/capability.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/plugin/v2/plugin.rb,3,0.007058823529411765,0,0,false,WIP: [vagrant] Initial support for abstract capabilities in Vagrant The intended change here is to abstract out the guest capabilities intoa more generic solution that can be quickly extended Vagrant pluginsshould be able to define a capability and register it with theappropriate type (eg guest host or provider) during pluginlazy loadingThis can allow for the Vagrant to query different levels of thesubsystems that power virtualization If snapshotting is supported atthe guest host and provider level we may want to specify which to use,,724,0.7279005524861878,0.8282352941176471,16986,396.9151065583422,32.791710820675846,57.635699988225596,5560,7,1426,11,travis,johnbellone,mitchellh,false,mitchellh,4,0.75,26,8,1346,false,false,false,false,2,16,4,0,0,2,428
2715703,mitchellh/vagrant,ruby,2674,1388286389,1388530823,1388530823,4073,4073,github,false,false,false,170,1,1,0,4,0,4,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,26,25,26,25,8.97244940974435,0.2394046143923121,5,paul.t.hinze@gmail.com,plugins/providers/virtualbox/action/prepare_nfs_settings.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_settings_test.rb,5,0.012077294685990338,2,0,false,Problems with using VirtualBox guest properties for reading NFS Guest IP So after #2626 and the newest comments on #1437 about Vagrant 14 I think its time to re-think the strategy we switched to for getting the VirtualBox Guest IP for NFSIn #2560 we switched from pulling (and requiring) a static guest IP from the config to fetching the actual assigned IP from a vbox guestpropertyThis allowed DHCP interfaces to work but it introduced a dependency on vbox guest additions loading and populating the value So guests that either take too long or dont have guest additions for their platform ended up SOL even with static IPsAs I type this Im realizing the best option is probably to bring back the config-interpreting strategy for static IPs so we no longer break people who were working fine with 13x We can leave the guestproperty strategy but limit it to Vagrantfiles that only have DHCP interfacesComments are welcome Ill track any progress I make here/cc @viq @mitchellh ,,738,0.7303523035230353,0.9323671497584541,17007,399.48256600223436,33.045216675486564,58.21132474863291,5561,6,1437,10,travis,phinze,mitchellh,false,mitchellh,7,1.0,261,42,1853,true,true,false,false,14,41,8,7,5,5,1
2652528,mitchellh/vagrant,ruby,2670,1387277754,1387340963,1387340963,1053,1053,github,false,false,false,41,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,8.81490948677309,0.23549654170221296,6,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_solo.rb,5,0.011737089201877934,0,0,false,Force rm of chef config files #2669 As discussed in issue #2669 this pull request changes the chef-solo provisioners use of rm to rm -f so as to avoid a user prompt if the system has aliased rm to rm -i,,723,0.7275242047026279,0.8262910798122066,16986,396.9151065583422,32.791710820675846,57.635699988225596,5559,7,1426,10,travis,ampedandwired,mitchellh,false,mitchellh,0,0,11,0,1083,false,false,false,false,1,2,0,0,0,0,376
2649990,mitchellh/vagrant,ruby,2667,1387242774,1387242930,1387242931,2,2,github,false,false,false,137,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,9.204434781287397,0.24590346060435406,15,thomas.omans@gmail.com,plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md,13,0.030162412993039442,1,0,false,Ansible Provisioner: Fix a bug in raw_arguments option Without this change it is not possible to pass more than one raw argument which was not the expected behavior In addition to Array format a String is still accepted (but for a single argument of course)Note: Due to low/expert usage of this option I think that it is (for now) not necessary to add more robust validation on this parameter (eg Array of String type checking or argument syntax pattern matching) Even though it is maybe a good idea to address these validation questions but I would like to treat in a separate issue with a more global perspective (all options of Ansible provisioner comparing/unifying with other provisioners etc)@mitchellh please let me know if this fix is good enough Or if I should word/implement it differently,,722,0.7271468144044322,0.8120649651972158,16983,396.98522051463226,32.797503385738686,57.64588117529294,5559,7,1425,10,travis,gildegoma,mitchellh,false,mitchellh,6,0.8333333333333334,44,126,1163,true,true,true,false,3,13,4,2,2,0,2
2647764,mitchellh/vagrant,ruby,2666,1387223826,,1387224564,12,,unknown,false,false,false,8,1,1,0,0,0,0,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.699215900549462,0.1258477557956813,4,mitchell.hashimoto@gmail.com,website/docs/source/v2/synced-folders/nfs.html.md,4,0.009259259259259259,0,1,false,Fixed name flag to enable NFS synced folders ,,721,0.7281553398058253,0.8078703703703703,16925,384.165435745938,31.84638109305761,56.66174298375184,5559,7,1425,11,travis,martinezdelariva,tmatilai,false,,0,0,16,1,633,false,false,false,false,0,0,0,0,0,0,-1
2645135,mitchellh/vagrant,ruby,2663,1387195399,1387232421,1387232421,617,617,github,false,false,false,68,2,2,0,1,0,1,0,1,2,0,1,3,3,0,0,2,0,1,3,3,0,0,93,312,93,312,14.086692185797824,0.37724987225207773,3,mitchell.hashimoto@gmail.com,test/unit/plugins/guests/redhat/cap/change_host_name_test.rb|test/unit/plugins/guests/support/shared/redhat_like_host_name_examples.rb|plugins/guests/redhat/cap/change_host_name.rb,3,0.0,0,0,false,Refactoring of EL Change Host Name As I mucked with #2653 and read the history on #2592 I realized that the plugin for changing host name on Enterprise Linux didnt seem clean Looking in the codebase the Debian / Ubuntu versions seemed to be much cleaner and with unit tests So I did a refactoring of this plugin following the Debian pattern and added some tests as well,,720,0.7277777777777777,0.8078703703703703,16925,384.165435745938,31.84638109305761,56.66174298375184,5559,7,1425,10,travis,acharlieh,mitchellh,false,mitchellh,1,1.0,23,28,1180,false,false,false,false,2,1,1,0,0,0,616
2642296,mitchellh/vagrant,ruby,2661,1387138357,1387141421,1387141421,51,51,github,false,false,false,52,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.359199232896782,0.11674117405228127,3,teemu.matilainen@iki.fi,README.md,3,0.006696428571428571,0,0,false,If using from sources ruby2 is needed In OS packages ruby2 comes embedded but if you install vagrant from sources you should execute vagrant with ruby2At least with ruby 191 and using docker as a provisioner it gives the error:/var/lib/gems/191/gems/vagrant-141dev/plugins/provisioners/docker/pluginrb:13:in require_relative: /var/lib/gems/191/gems/vagrant-141dev/plugins/provisioners/docker/configrb:23: syntax error unexpected tPOW (SyntaxError)      def run(name **options),,717,0.7266387726638772,0.7745535714285714,16918,384.3243882255586,31.85955786736021,56.68518737439414,5559,7,1424,8,travis,adrianlzt,mitchellh,false,mitchellh,0,0,7,10,339,false,true,false,false,0,0,0,0,0,0,50
2638681,mitchellh/vagrant,ruby,2658,1387048895,1389146877,1389146877,34966,34966,github,false,false,false,36,1,1,4,2,0,6,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,38,0,38,0,4.7541989028431715,0.1273194300016342,8,mshirley@comprehend.com,website/docs/source/v2/provisioning/ansible.html.md,8,0.017777777777777778,3,0,false,Ansible Docs: cosmetic improvements [wip] @mitchellh @phinze @tmatilai If its okay for you Ill keep this PR open in the next days to add some minor changes to the docs comments are welcome of course :),,716,0.7262569832402235,0.7711111111111111,16918,384.3243882255586,31.85955786736021,56.68518737439414,5559,7,1423,14,travis,gildegoma,mitchellh,false,mitchellh,5,0.8,44,126,1161,true,true,true,false,3,13,3,1,2,0,99
2637570,mitchellh/vagrant,ruby,2655,1387021378,1387021463,1387021463,1,1,github,false,false,false,29,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.056761225456164,0.10863992463417467,42,teemu.matilainen@iki.fi,templates/locales/en.yml,42,0.09375,0,0,false,Changed wording to reflect Issue #2632 This is just a minor change so that Issue #2632 can be closed and the warning given by Vagrant is a bit clearer,,715,0.7258741258741259,0.7678571428571429,16896,384.8248106060606,31.901041666666664,56.75899621212122,5559,7,1423,8,travis,drpebcak,mitchellh,false,mitchellh,0,0,13,23,318,false,true,false,false,2,3,0,0,0,0,1
2643025,mitchellh/vagrant,ruby,2653,1387151925,1387234643,1387234643,1378,1378,merged_in_comments,false,true,false,139,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.853105450578882,0.12996900813255421,3,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/change_host_name.rb,3,0.006666666666666667,0,0,false,Enterprise Linux short hostname set to qualified hostname It seems that on Enterprise Linux instances with a qualified name set as the configvmhostname the short name (from hostname) is set to the same value as the full name (as you get with hostname -f) Using this [Vagrantfile](https://gistgithubcom/acharlieh/7950826) you will see that the *_fqdn vms exhibit this property (ie centos510examplecom and centos65examplecom)If you provision a RHEL or CentOS box from EC2 hostname will return the short name and hostname -f will return the fully qualified hostname (eg ip-172-31-15-147 and ip-172-31-15-147us-west-2computeinternal respectively)Looking in the code it seems that we might be able to tweak the plugins/guests/redhat/cap/change_host_namerb file to check the results of hostname -f and pass the short name (first segment only) to hostname when setting and that seems to resolve things (Vagrant 141dev at d321b9199e928bc42054c1b63beedf61e63686a0VirtualBox 434,,718,0.7270194986072424,0.7755555555555556,16925,384.165435745938,31.84638109305761,56.66174298375184,5559,7,1424,9,travis,acharlieh,acharlieh,true,acharlieh,0,0,23,28,1179,false,false,false,false,1,1,0,0,0,0,-1
2634362,mitchellh/vagrant,ruby,2649,1386971025,1386997572,1386997572,442,442,github,false,false,false,10,1,1,2,2,0,4,0,2,4,0,1,5,5,0,0,4,0,1,5,5,0,0,81,0,81,0,21.669523305521196,0.5851442617913751,2,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/cap/redhat/docker_configure_auto_start.rb|plugins/provisioners/docker/cap/redhat/docker_configure_vagrant_user.rb|plugins/provisioners/docker/cap/redhat/docker_install.rb|plugins/provisioners/docker/cap/redhat/docker_start_service.rb|plugins/provisioners/docker/plugin.rb,2,0.0,0,2,true,Add plugin docker provisioner for redhat Im tested at CentOS65,,714,0.7254901960784313,0.7603686635944701,16778,385.8028370485159,31.946596733818097,57.03897961616403,5559,7,1422,8,travis,tnaoto,fgrehm,false,fgrehm,0,0,4,0,765,false,false,false,false,0,0,0,0,0,0,38
2626150,mitchellh/vagrant,ruby,2641,1386892555,1386913031,1386913031,341,341,github,false,false,false,24,2,2,2,1,1,4,0,3,0,0,1,1,3,0,0,0,0,1,1,3,0,0,24,0,24,0,9.104969771140794,0.2458605511641424,5,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/client.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/provisioner.rb|plugins/provisioners/docker/client.rb|plugins/provisioners/docker/installer.rb|plugins/provisioners/docker/provisioner.rb,5,0.0,2,0,false,Rename docker_client and docker_installer We can rename those classes and remove the docker_ prefix as theyalready have a module namespacereview @fgrehm @mitchellh,,713,0.7251051893408135,0.7575757575757576,16778,385.8028370485159,31.946596733818097,57.03897961616403,5559,7,1421,8,travis,arthurnn,fgrehm,false,fgrehm,0,0,390,1400,920,false,true,false,false,0,0,0,0,0,0,0
2624179,mitchellh/vagrant,ruby,2638,1386879199,,1387243544,6072,,unknown,false,false,false,62,9,3,0,4,0,4,0,2,10,0,2,22,12,0,0,12,0,12,24,18,0,0,830,0,1233,0,130.8286664622923,3.532752864972861,9,tomwpryor@gmail.com,plugins/commands/snapshot/commands/delete.rb|plugins/commands/snapshot/commands/list.rb|plugins/commands/snapshot/commands/root.rb|plugins/commands/snapshot/commands/take.rb|plugins/commands/snapshot/plugin.rb|plugins/providers/virtualbox/action/delete_snapshot.rb|plugins/providers/virtualbox/action/list_snapshots.rb|plugins/providers/virtualbox/action/take_snapshot.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/commands/snapshot/commands/create.rb|plugins/commands/snapshot/commands/delete.rb|plugins/commands/snapshot/commands/list.rb|plugins/commands/snapshot/commands/root.rb|plugins/commands/snapshot/plugin.rb|plugins/providers/virtualbox/action/delete_snapshot.rb|plugins/providers/virtualbox/action/list_snapshots.rb|plugins/providers/virtualbox/action/take_snapshot.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/commands/snapshot/commands/create.rb|plugins/commands/snapshot/commands/delete.rb|plugins/commands/snapshot/commands/list.rb|plugins/commands/snapshot/commands/restore.rb|plugins/commands/snapshot/commands/root.rb|plugins/commands/snapshot/plugin.rb|plugins/providers/virtualbox/action/delete_snapshot.rb|plugins/providers/virtualbox/action/list_snapshots.rb|plugins/providers/virtualbox/action/take_snapshot.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/meta.rb,7,0.0,0,1,false,WIP: [vagrant/commands] Add Snapshot command This is a *work in progress* I have opened up a pull-request for feedbackI see that there are a lot of different gems for this I found myselfwriting yet another for OpenStack where it makes sense to implement itfor the default provider (VirtualBox) and then let the other providerplugins implement it if necessary,,712,0.726123595505618,0.7575757575757576,16778,385.8028370485159,31.946596733818097,57.03897961616403,5558,7,1421,9,travis,johnbellone,mitchellh,false,,3,1.0,26,8,1341,false,false,false,false,1,5,3,0,0,2,2
2623348,mitchellh/vagrant,ruby,2637,1386873533,1389413993,1389413993,42341,42341,github,false,false,false,51,2,1,0,4,0,4,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,7,0,7,7,4.182938409806363,0.11295145055619438,0,,lib/vagrant/registry.rb,0,0.0,0,1,false,[vagrant] Update Registry with #keys method This helper method to return the keys for the registry will give capability to eliminate some code Example:rubykeys  [] @subcommandseach { |kv| keys  k }keyssorteach { |k| oseperator #{k} }Versus:ruby@subcommandskeyssorteach { |k| oseperator #{k} },,711,0.7257383966244726,0.7575757575757576,16778,385.8028370485159,31.946596733818097,57.03897961616403,5558,7,1421,7,travis,johnbellone,mitchellh,false,mitchellh,2,1.0,26,8,1341,false,false,false,false,1,5,2,0,0,2,2293
2615398,mitchellh/vagrant,ruby,2635,1386778861,1386780386,1386780386,25,25,github,false,false,false,5,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.779036882407143,0.1290474546124148,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/synced-folders/nfs.html.md,2,0.004640371229698376,0,0,false,Fixes networking private network URL ,,710,0.7253521126760564,0.7517401392111369,16778,385.8028370485159,31.946596733818097,57.03897961616403,5558,7,1420,6,travis,bbonamin,fgrehm,false,fgrehm,0,0,26,25,980,false,false,false,false,0,0,0,0,0,0,25
2613879,mitchellh/vagrant,ruby,2631,1386757730,1386777967,1386777967,337,337,github,false,false,false,23,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.888718459904024,0.13200921402266577,4,mitchell.hashimoto@gmail.com,vagrant-spec.config.example.rb,4,0.009302325581395349,0,0,false,fix path to acceptance test contexts in example Failed on attempt to run an acceptance test components list based off the provided example,,709,0.7249647390691114,0.7511627906976744,16778,385.8028370485159,31.946596733818097,57.03897961616403,5558,7,1420,6,travis,miketheman,tmatilai,false,tmatilai,11,0.7272727272727273,96,11,1088,false,true,false,false,0,0,0,0,0,0,337
2611034,mitchellh/vagrant,ruby,2629,1386721395,1386741665,1386741665,337,337,github,false,false,false,2,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.385580030282258,0.11842188554361327,0,,lib/vagrant/util/is_port_open.rb,0,0.0,0,0,false,Update is_port_openrb ,,708,0.7245762711864406,0.7494145199063232,16779,385.77984385243457,31.944692770725315,57.03558018952261,5558,7,1419,8,travis,lndbrg,mitchellh,false,mitchellh,0,0,11,4,1655,false,false,false,false,0,0,0,0,0,0,337
2610976,mitchellh/vagrant,ruby,2628,1386720684,1386741726,1386741726,350,350,github,false,false,false,85,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.382178986994964,0.11833004867001484,3,one.jli@gmail.com,plugins/guests/redhat/cap/configure_networks.rb,3,0.00702576112412178,0,0,false,guests/redhat: Dont error if ifdown fails [GH-2614] Further fix for [GH-2614]Removed retrying of ifdown on the basis that in most cases the interface is probably missing and it adds an unnecessary 4 seconds to the setup time for the VM The case where the interface is present and being removed by a config change would appear to be quite rareIf someone can come up with a good way to distinguish both error cases I can to implement retrying in a more clever way,,707,0.7241867043847242,0.7494145199063232,16779,385.77984385243457,31.944692770725315,57.03558018952261,5558,7,1419,7,travis,makern,mitchellh,false,mitchellh,0,0,3,1,373,false,false,false,false,2,4,0,0,0,0,350
2610443,mitchellh/vagrant,ruby,2627,1386715678,1386741770,1386741770,434,434,github,false,false,false,6,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.535471267903847,0.12246933260034204,0,,website/docs/source/v2/provisioning/chef_client.html.md,0,0.0,0,1,false,[DOCS] mention chefdelete_node and chefdelete_client methods ,,706,0.7237960339943342,0.7494145199063232,16779,385.77984385243457,31.944692770725315,57.03558018952261,5558,7,1419,6,travis,scalp42,mitchellh,false,mitchellh,0,0,78,417,653,false,true,false,false,2,6,0,0,0,0,3
2604837,mitchellh/vagrant,ruby,2620,1386649737,1386708814,1386708814,984,984,github,false,false,false,15,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.558681144158381,0.1230980184934295,2,mitchell.hashimoto@gmail.com,plugins/guests/freebsd/cap/configure_networks.rb,2,0.004750593824228029,0,0,false,Update FreeBSD configure_networks with less shell specifics This fixes #2611 - tested and working now,,705,0.723404255319149,0.7434679334916865,16778,383.2399570866611,31.827393014662057,56.91977589700799,5558,7,1418,7,travis,ShonM,mitchellh,false,mitchellh,0,0,17,15,1099,false,true,false,false,0,1,0,0,0,0,984
2644207,mitchellh/vagrant,ruby,2617,1387175326,1387588911,1387588911,6893,6893,github,false,false,false,63,2,1,4,32,0,36,0,6,0,0,3,5,3,0,0,0,0,5,5,5,0,0,23,29,41,68,13.347191952863131,0.3574456226294262,12,teemu.matilainen@iki.fi,lib/vagrant.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant_test.rb,10,0.006944444444444444,0,8,false,Vagranthas_plugin should use the gem name As discussed in the comments of #2189 for consistency Vagranthas_plugin should probably use gem names instead of the name attribute of the plugins The gem name is already used for example in vagrant plugin install/list and Vagrantrequire_plugin Also it requires extra effort to search the name attribute And the plugin authors might even change it between releases,,719,0.7273991655076495,0.8078703703703703,16925,384.165435745938,31.84638109305761,56.66174298375184,5559,7,1425,13,travis,tmatilai,tmatilai,true,tmatilai,9,1.0,47,41,1692,true,true,false,false,21,82,11,5,6,1,-8835
2604385,mitchellh/vagrant,ruby,2616,1386644605,1386644677,1386644677,1,1,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,3.4719069272612253,0.09375171333204596,2,mitchell.hashimoto@gmail.com,website/www/source/stylesheets/_components.less,2,0.004761904761904762,0,0,false,Fix Downloads link spacing Fixes alignment: [](https://s3amazonawscom/snapsmichaelwarkentincom/Download_Vagrant__Vagrant_20131209_175357png)Becomes: [](https://s3amazonawscom/snapsmichaelwarkentincom/Download_Vagrant__Vagrant_20131209_180300png),,704,0.7230113636363636,0.7428571428571429,16778,383.2399570866611,31.827393014662057,56.91977589700799,5558,7,1418,7,travis,mwarkentin,mitchellh,false,mitchellh,0,0,22,29,1719,true,false,false,false,0,0,0,0,1,0,1
2560119,mitchellh/vagrant,ruby,2615,1386644395,1389730687,1389730687,51438,51438,github,false,false,false,118,2,1,2,7,0,9,0,4,0,0,4,4,3,0,1,0,0,4,4,3,0,1,32,0,34,0,17.442188260402133,0.4709904579621709,54,tpltnt.github@dropcut.net,plugins/provisioners/docker/config.rb|plugins/provisioners/docker/docker_client.rb|plugins/provisioners/docker/provisioner.rb|templates/locales/en.yml,40,0.026252983293556086,0,10,false,Add option to Docker provisioner to build local images Option would work like so:rubyVagrantconfigure(2) do |config|  configvmprovision docker    images: %w( ubuntu )    build_images: [      { path: Dockerfile args: -t me/my_app }    ]endPlease be aware this is my first time hacking on Vagrant and I was kind of rushed : )I didnt see any tests regarding this provisioner on mitchellh/vagrant#2549 Please let me know if I need to add somethingAlso is there documentation other than the README for hacking on Vagrant Im wondering what the normal work flow is for testing this feature I added Would I just create a Vagrantfile with my new feature and run bundle exec vagrant upThanks,,703,0.7226173541963016,0.7446300715990454,16778,383.2399570866611,31.827393014662057,56.91977589700799,5558,6,1418,9,travis,jpfuentes2,mitchellh,false,mitchellh,0,0,64,79,1662,false,false,false,false,0,0,0,0,0,0,31
2559890,mitchellh/vagrant,ruby,2613,1386636751,1386659465,1386659465,378,378,github,false,false,false,58,1,1,6,1,0,7,0,3,0,0,4,4,4,0,0,0,0,4,4,4,0,0,4,88,4,88,18.70500835641537,0.5050911418817529,8,teemu.matilainen@iki.fi,plugins/guests/debian/cap/change_host_name.rb|test/unit/plugins/guests/debian/cap/change_host_name_test.rb|test/unit/plugins/guests/support/shared/debian_like_host_name_examples.rb|test/unit/plugins/guests/ubuntu/cap/change_host_name_test.rb,8,0.00477326968973747,0,2,false,guests/{ubuntudebian}: fix change_host_name for trailing dots [GH-2610] When /etc/hosts contained a FQDN with a trailing dot the \b in thesed expression would not match since dot is not considered to be a wordcharacterFor a fix were simply removing the \b constraint so we are morelenient about matching the /etc/hosts line wed like to replace,,702,0.7222222222222222,0.7446300715990454,16778,383.2399570866611,31.827393014662057,56.91977589700799,5558,6,1418,7,travis,phinze,phinze,true,phinze,6,1.0,259,42,1834,true,true,false,false,10,32,6,5,3,4,20
2599085,mitchellh/vagrant,ruby,2606,1386587339,1387047802,1387047802,7674,7674,github,false,false,false,87,2,1,0,4,0,4,0,3,0,0,2,3,2,0,0,0,0,3,3,3,0,0,28,0,37,0,8.665368292899885,0.23911121561781085,15,thomas.omans@gmail.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb,14,0.03431372549019608,0,4,false,Add ability to use Ansible groups in generated inventory Fixes #2551 This PR addresses issue #2551  The following example Vagrantfile:ruby# -*- mode: ruby -*-# vi: set ftruby :VAGRANTFILE_API_VERSION  2Vagrantconfigure(VAGRANTFILE_API_VERSION) do |config|  configvmbox  ubuntu_saucy  configvmprovision ansible do |ansible|    ansibleplaybook  vagrantyml    ansiblegroups  {      group1  [default machinea]      group2  [machineb]      all_groups:children: [group1 group2]      not_included:children  [group2 group3]    }  endendwould produce the following inventory file:# Generated by Vagrantdefault ansible_ssh_host127001 ansible_ssh_port2222[group1]default[all_groups:children]group1,,701,0.7218259629101283,0.7328431372549019,16709,384.8225507211682,31.958824585552694,57.154826740080196,5557,7,1418,7,travis,maspwr,gildegoma,false,gildegoma,0,0,10,14,1732,false,true,false,false,2,3,0,0,0,0,7
2653582,mitchellh/vagrant,ruby,2605,1386573211,1386580152,1386580152,115,115,github,false,false,false,69,1,1,0,2,0,2,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.228877873507855,0.14428649665084706,0,,templates/guests/redhat/network_static.erb,0,0.0,0,3,false,add ONBOOT and NM_CONTROLLED to redhat/network_static Fixes private networking on Centos 6 It seems using Network Manager (NM_CONTROLLED) to change an interface while running (and not reboot) is a bad idea Im not sure of any specifics though This is the only way I could get it to work Note: I am using a custom packaged box but this this seems reasonable because it matches the settings of fedora/network_static ,,700,0.7214285714285714,0.7308641975308642,16709,384.8225507211682,31.958824585552694,57.154826740080196,5557,7,1418,4,travis,teaforthecat,mitchellh,false,mitchellh,0,0,7,7,1217,false,false,false,false,0,0,0,0,0,0,13
2593325,mitchellh/vagrant,ruby,2601,1386462379,1386478681,1386478681,271,271,github,false,false,false,22,2,1,0,1,2,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,2,0,4.591492946225586,0.12670288742345498,3,mitchell.hashimoto@gmail.com,plugins/guests/arch/cap/configure_networks.rb,3,0.007389162561576354,0,1,false,Run ip link set [eth1] down before running netctl start [eth1] in Ar ch guest network configurationI got the idea [here](http://wwwlinuxquestionsorg/questions/arch-29/arch-liux-netctl-failure-for-static-ip-4175461355/#post4966401),,699,0.721030042918455,0.7192118226600985,16693,384.83196549451867,31.929551308931888,57.14970346851974,5557,7,1416,5,travis,mattalexx,mitchellh,false,mitchellh,0,0,4,3,1324,false,false,false,false,0,0,0,0,0,0,271
2593310,mitchellh/vagrant,ruby,2600,1386462101,1386493099,1386493099,516,516,github,false,false,false,62,1,1,0,2,8,10,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,16,0,16,0,8.33105670300425,0.2298966701945808,47,tpltnt.github@dropcut.net,lib/vagrant/action/builtin/provision.rb|templates/locales/en.yml,36,0.08866995073891626,0,0,false,Print info message if provisioning is skipped by the sentinel file Tell the user if the VM has already been provisioned and no --[no-]provision option has been specified This should reduce the confusion of the 13+ functionalityI changed the method logic to use env[:provision_enabled] so we can delay the message to the same phase where the provisioners would be run normally,,698,0.7206303724928367,0.7192118226600985,16693,384.83196549451867,31.929551308931888,57.14970346851974,5557,7,1416,4,travis,tmatilai,mitchellh,false,mitchellh,8,1.0,47,41,1683,true,true,true,false,5,34,8,1,3,0,215
2592989,mitchellh/vagrant,ruby,2598,1386455798,,1388896768,40682,,unknown,false,false,false,62,4,1,0,16,0,16,0,4,0,0,1,4,1,0,0,0,0,4,4,3,0,1,13,0,36,8,4.802749616692921,0.1325325446720151,11,paulh@instructure.com,lib/vagrant.rb,11,0.027093596059113302,0,13,false,Enhancement: Vagrantrequire_plugin(bar 10) So I added a version parameter to require_plugin hoping to add support to load/enforcea specific version of a plugin when this is used in a VagrantfileRight now struggling to write a proper unit or acceptance test for it since I seem to beunable to install plugins on the fly or within a bundler environmentFeedback welcome,,697,0.7216642754662841,0.7192118226600985,16693,384.83196549451867,31.929551308931888,57.14970346851974,5557,7,1416,8,travis,till,mitchellh,false,,0,0,135,20,1894,false,true,false,false,0,0,0,0,0,0,43
2589396,mitchellh/vagrant,ruby,2596,1386379279,1386379323,1386379323,0,0,github,false,false,false,31,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.526152133053406,0.12494797803861124,9,mitchell.hashimoto@gmail.com,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,9,0.0225,0,0,true,Fix testing if initctl exists If _/sbin/initctl_ was not found the command (false && ) returned non-zero exit code leading to Vagrant throwing an exceptionFixes a bug introduced in #2502,,696,0.7212643678160919,0.71,16701,384.5877492365727,31.91425663133944,57.12232800431112,5557,7,1415,6,travis,tmatilai,mitchellh,false,mitchellh,7,1.0,47,41,1682,true,true,true,false,5,33,7,1,2,0,0
2582064,mitchellh/vagrant,ruby,2594,1386289543,1386290091,1386290091,9,9,github,false,false,false,19,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.058899384209898,0.11250738806195044,3,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/base.rb,3,0.007481296758104738,0,1,false,[provisioner/chef]: Update base to fix typo Just fixing an issue which was causing configuration problems during validation Simple typo,,694,0.7204610951008645,0.6733167082294265,16688,384.46788111217637,31.93911792905082,57.166826462128476,5557,7,1414,5,travis,johnbellone,mitchellh,false,mitchellh,1,1.0,26,8,1334,false,false,false,false,0,2,1,0,0,2,0
2581110,mitchellh/vagrant,ruby,2593,1386281004,1386281118,1386281118,1,1,github,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.726389825187863,0.13100940644046824,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/vagrantfile/version.html.md,2,0.004987531172069825,0,0,false,fixed broken link on configuration version page ,,693,0.7200577200577201,0.6708229426433915,16688,384.46788111217637,31.93911792905082,57.166826462128476,5557,7,1414,5,travis,bennlich,fgrehm,false,fgrehm,0,0,5,1,979,false,false,false,false,0,0,0,0,0,0,1
2553314,mitchellh/vagrant,ruby,2591,1386271783,1386385361,1386385361,1892,1892,github,false,false,false,214,2,2,1,1,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,33,0,33,0,9.003788709280558,0.2495733653267481,0,,plugins/guests/arch/cap/configure_networks.rb|plugins/guests/arch/cap/configure_networks.rb,0,0.0,0,0,false,Arch netctl fix This should address issues #1760 and #2563It is merely a hack not to rely on udev rule overrides ie  ln -sf /dev/null /etc/udev/80-net-name-slotrules by using sed Unfortunately masking the 80-* rule does not rewrite the device names properly The solution should work no matter what arch version the guest is running as long as netctl is available This was the same requirement before anyways It also adheres to the [predictable network names] [pnn] standard because it doesnt alter the device interface names Ok it names the netctl config files in /etc/netctl/* ethN but thats just to avoid writing virtual machine provider dependent code in vagrantThe outlined solution is not ideal in that:1 it relies on a helper variable snth (see diff) to offset the *nth* interface of the output of sed An experienced ruby developer might help to eliminate this Im not2 the command is long and not really prettyAn alternative to 2 would have been to write the command like so:         xip link | sed -n s/*:\s\(*\): */\1/p | sed -n 3p bash -c sudo sed -i s/eth1/$x/g /etc/netctl/eth1 Im not sure this makes it clearer thoughIve tested it with a random combination of :private_network and :public_network network interface specs in Vagrantfile [pnn]: http://wwwfreedesktoporg/wiki/Software/systemd/PredictableNetworkInterfaceNames/,,692,0.7196531791907514,0.6708229426433915,16688,384.46788111217637,31.93911792905082,57.166826462128476,5557,7,1414,4,travis,instilled,mitchellh,false,mitchellh,0,0,6,8,2020,false,false,false,false,0,1,0,0,0,0,1
2560959,mitchellh/vagrant,ruby,2587,1386234012,,1398416053,203034,,unknown,false,false,false,86,4,2,4,13,1,18,0,5,7,0,7,14,11,1,0,7,0,7,14,11,1,0,434,0,437,0,66.80414335989887,1.8517243589818428,15,richard@richardmckenna.com,lib/vagrant/plugin/v2/host.rb|plugins/guests/linux/cap/export_nfs.rb|plugins/guests/linux/cap/halt.rb|plugins/guests/linux/cap/read_user_ids.rb|plugins/guests/linux/plugin.rb|plugins/hosts/bsd/host.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/prepare_nfs_guest_settings.rb|plugins/synced_folders/nfs_guest/config.rb|plugins/synced_folders/nfs_guest/plugin.rb|plugins/synced_folders/nfs_guest/synced_folder.rb|templates/nfs/guest_exports_linux.erb|lib/vagrant/plugin/v2/host.rb|plugins/guests/linux/cap/export_nfs.rb|plugins/providers/virtualbox/action/prepare_nfs_guest_settings.rb,9,0.0,0,10,false,synced_folders/nfs_guest: Guest export NFS shares Added preliminary Guest NFS exporting The guest exports the mount thehost mounts it Its just the opposite way around to normal Vagrant NFSsynced foldersThis allows watchers and other applications running on the guest tofunction that dont work across NFS It also helps remove issues wevehad with NFS client caching causing edits to not be available on theguests Plus no sudo prompt is needed as the mount (well on OSX) canbe done without root access,,691,0.7206946454413893,0.6708229426433915,16688,384.46788111217637,31.93911792905082,57.166826462128476,5557,7,1414,14,travis,alangarf,mitchellh,false,,0,0,1,2,1088,false,false,false,false,0,0,0,0,0,0,2
2577026,mitchellh/vagrant,ruby,2586,1386228996,1386229291,1386229291,4,4,github,false,false,false,48,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9783416525429107,0.11027462875736732,7,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/synced_folder.rb,7,0.0175,0,0,false,Add missing argument to ProviderVirtualBox::SyncedFolder#driver call GH-2577 missed passing the machine to the driver methodIm also having other issues with synced folder with both VirtualBox and Fusion providers but its getting too late tonight for me to debug if its because of a plugin or Vagrant itself,,690,0.7202898550724638,0.67,16688,384.46788111217637,31.93911792905082,57.166826462128476,5557,7,1414,3,travis,tmatilai,mitchellh,false,mitchellh,6,1.0,47,41,1681,true,true,true,false,4,27,6,1,2,0,4
2580383,mitchellh/vagrant,ruby,2585,1386303350,1386384975,1386384975,1360,1360,github,false,false,true,171,3,3,0,4,0,4,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,0,22,0,13.472221818363844,0.3719146050141633,7,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/docker.html.md|website/docs/source/v2/provisioning/docker.html.md|plugins/provisioners/docker/config.rb,6,0.014778325123152709,0,0,false,Unable to run multiple docker containers based off the same image Im not sure Ill be able to dig into this tonight but looks like we might need to change the docker provisioner to allow running multiple containers based off the same imageGiven the following provisioner block:ruby  configvmprovision :docker do |docker|    dockerrun busybox cmd: /bin/sh -c while true do date sleep 1 done    dockerrun busybox cmd: /bin/sh -c while true do echo \hello world\ sleep 1 done  endThe result of a vagrant provision gives us a single container on the output:[default] Running provisioner: docker[default] Starting Docker containers[default] -- Container: busyboxAnd just to confirm:$ docker ps -aCONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMESa52f6e95a1cb        busybox:latest      /bin/sh -c while tru   3 seconds ago       Up 2 seconds                            determined_bardeenIm not sure what would be the best approach to handle that but I think this is useful as one might want to have multiple instances of the same container around,,695,0.720863309352518,0.687192118226601,16694,384.74901162094164,31.927638672576975,57.14628010063496,5557,7,1414,5,travis,fgrehm,mitchellh,false,mitchellh,23,0.9130434782608695,351,143,1674,true,true,true,false,12,62,20,0,27,10,-6
2575430,mitchellh/vagrant,ruby,2583,1386207167,1386210231,1386210231,51,51,github,false,false,false,21,2,2,0,1,0,1,0,1,0,0,6,6,6,0,0,0,0,6,6,6,0,0,16,0,16,0,25.319436380226414,0.7018206580014168,19,tftfmacedo@gmail.com,plugins/commands/plugin/action/license_plugin.rb|plugins/commands/plugin/action/list_plugins.rb|plugins/commands/plugin/action/plugin_exists_check.rb|plugins/commands/plugin/action/prune_gems.rb|plugins/commands/plugin/state_file.rb|lib/vagrant/environment.rb,13,0.007407407407407408,0,0,false,Fix plugin regressions [The recent changes](https://githubcom/mitchellh/vagrant/compare/df540e4d354cdda4a) seemed to introduce some regressions This seems to fix at least the ones I hit,,688,0.7194767441860465,0.654320987654321,16680,384.652278177458,31.954436450839328,57.194244604316545,5557,7,1413,3,travis,tmatilai,mitchellh,false,mitchellh,5,1.0,47,41,1680,true,true,true,false,4,25,5,1,1,0,50
2551019,mitchellh/vagrant,ruby,2581,1386185942,1386186383,1386186383,7,7,github,false,false,false,50,1,1,1,1,0,2,0,2,1,0,1,2,1,1,0,1,0,1,2,1,1,0,0,77,0,77,9.729393677131096,0.27009462803737705,0,,templates/commands/ssh_config/config.erb|test/unit/plugins/commands/ssh_config/command_test.rb,0,0.0,0,0,false,commands/ssh-config: fix for multiple private keys since we merged multiple private keys the :private_key_path item ofssh_info now comes back as an array the ssh-config command had not yetbeen updated to handle this properlyhere we fix that oversight and add a few unit tests around the configgeneration,,687,0.7190684133915575,0.6482412060301508,16664,377.46039366298606,31.385021603456554,56.168987037926065,5557,7,1413,4,travis,phinze,mitchellh,false,mitchellh,5,1.0,257,42,1829,true,true,false,false,7,22,5,4,2,1,1
2576318,mitchellh/vagrant,ruby,2579,1386217025,1386225997,1386225997,149,149,github,false,false,true,110,2,2,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,48,0,48,0,8.83017278077448,0.24476274432014727,7,mitchell.hashimoto@gmail.com,plugins/provisioners/docker/docker_client.rb|plugins/provisioners/docker/docker_client.rb,7,0.017456359102244388,0,1,false,provisioners/docker: Check for whether the container is running is not working properly Looks like I missed out [this Docker PR](https://githubcom/dotcloud/docker/pull/2140) that introduced a change to what gets written on the cidfile and as a result [the check](https://githubcom/mitchellh/vagrant/blob/4f17a70c4e1a412b3def65d0132d3e8a85c395f1/plugins/provisioners/docker/docker_clientrb#L55) for whether the container is running does not work (at least on 070) :( With that change the full container ID is written out to the cidfile instead of the short version that gets printed out by default with docker ps -a -q The fix is to add a -notruc argument to docker ps but Im not sure what versions exactly have that behaviorIll try to dig into this later on tonight,,689,0.7198838896952104,0.6658354114713217,16680,384.652278177458,31.954436450839328,57.194244604316545,5557,7,1413,3,travis,fgrehm,mitchellh,false,mitchellh,22,0.9090909090909091,351,143,1673,true,true,true,false,12,60,17,0,23,9,-490
2571768,mitchellh/vagrant,ruby,2578,1386170999,1386385685,1386385685,3578,3578,github,false,false,false,10,1,1,0,4,0,4,0,3,0,1,2,3,3,0,0,0,1,2,3,3,0,0,30,0,30,0,8.998314221699953,0.2497993619464825,10,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/prune_nfs_exports.rb|plugins/synced_folders/nfs/synced_folder.rb,7,0.010050251256281407,0,3,false,NFS/VBox: remove dedicated cleanup action in favour of native routine ,,686,0.7186588921282799,0.6482412060301508,16664,377.46039366298606,31.385021603456554,56.168987037926065,5557,7,1413,4,travis,emyl,mitchellh,false,mitchellh,6,1.0,10,2,1056,false,true,true,false,1,1,4,0,0,0,102
2571739,mitchellh/vagrant,ruby,2577,1386170608,1386186150,1386186150,259,259,github,false,false,false,13,1,1,0,2,0,2,0,2,0,1,2,3,3,0,0,0,1,2,3,3,0,0,25,0,25,0,8.468332549342504,0.23508670796081074,11,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/clear_shared_folders.rb|plugins/providers/virtualbox/synced_folder.rb,7,0.01256281407035176,0,0,false,VirtualBox shared folders: remove dedicated cleanup action  in favour of native routine,,685,0.7182481751824817,0.6482412060301508,16664,377.46039366298606,31.385021603456554,56.168987037926065,5557,7,1413,5,travis,emyl,mitchellh,false,mitchellh,5,1.0,10,2,1056,false,true,true,false,1,1,3,0,0,0,109
2569075,mitchellh/vagrant,ruby,2575,1386127511,1386136448,1386136448,148,148,github,false,false,false,91,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.718970667346613,0.13360044317354733,9,wolfe21@marshall.edu,lib/vagrant.rb,9,0.023376623376623377,0,0,false,Set I18nconfigenforce_available_locales to true to avoid an annoying deprecation warning I was working on a plugin and after a bundle update and a I18n bump to 069 I started getting an annoying message about a deprecation warning:$ be vagrant status[deprecated] I18nenforce_available_locales will default to true in the future If you really want to skip validation of your locale you can set I18nenforce_available_locales  false to avoid this messageLooks like this was introduced on https://githubcom/svenfuchs/i18n/pull/223 and an alternative would be to restrict the version on the gemspec,,684,0.7178362573099415,0.6311688311688312,16337,377.18063291914063,31.8908000244843,57.0484177021485,5557,7,1412,4,travis,fgrehm,mitchellh,false,mitchellh,21,0.9047619047619048,351,143,1672,true,true,true,false,9,55,16,0,21,4,148
2653583,mitchellh/vagrant,ruby,2574,1386098272,1386101155,1386101155,48,48,commit_sha_in_comments,false,false,false,10,2,2,0,0,1,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,9.156425558809307,0.2620369679405787,0,,vagrant.gemspec|vagrant.gemspec,0,0.0,0,0,false,Net-ssh version update Created issue #2573 for this pull request,,683,0.7174231332357247,0.5952380952380952,16213,368.4697464997225,31.5795966199963,56.49787207796213,5557,7,1412,7,travis,frosario,mitchellh,false,mitchellh,0,0,2,1,1092,false,false,false,false,1,0,0,0,0,0,-1
2653581,mitchellh/vagrant,ruby,2570,1386053157,1394058004,1394058004,133414,133414,merged_in_comments,false,true,false,113,2,1,0,9,0,9,0,4,0,0,3,3,2,1,0,0,0,3,3,2,1,0,12,0,22,0,13.066971678823368,0.36219939838587634,9,teemu.matilainen@iki.fi,plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/provisioners/chef_solo/solo.erb,6,0.007936507936507936,0,8,false,[provisioners/chef] Support Chef Solo local mode The original intent here was to add node_path support so that I would be able to load up using [Chef Solo configuration](http://docsopscodecom/config_rb_solohtml) a node from the appropriate JSON files Right now this seems to be limited by [how the nodes are loaded in Chef](https://githubcom/opscode/chef/blob/master/lib/chef/clientrb#L346) but I have been tweaking some custom solorb  files and passing them into chef-solo and chef-client The local mode assuming Chef zero seems to work fine I did not want to go the route of knife-solo loading from data bags So I started hacking around a bit and found that chef-client in local mode could be used to provision without a Chef Server,,682,0.717008797653959,0.5952380952380952,16688,384.46788111217637,31.93911792905082,57.166826462128476,5557,7,1412,13,travis,johnbellone,mitchellh,false,mitchellh,0,0,26,8,1332,false,false,false,false,0,0,0,0,0,0,33
2562476,mitchellh/vagrant,ruby,2569,1386045952,1386114256,1386114256,1138,1138,github,false,false,true,302,3,2,0,3,0,3,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,10,14,10,8.88435106662166,0.2542507882213287,0,,lib/vagrant/action/runner.rb|test/unit/vagrant/action/runner_test.rb,0,0.0,1,2,false,Fix hook with methods This is a follow-up of my heads up [over here](https://githubcom/mitchellh/vagrant/commit/3701b955cb9d70917945da4d6d3a8475e8df50c0#commitcomment-4729680)I tried using the new provisioner_run hook from GH-2405 using the following Vagrantfile and it turned out that the action class does not get executed:rubyclass Action  def initialize(app env)    @app  app  end  def call(env)    puts Before #{env[:provisioner_name]}    @appcall env    puts After #{env[:provisioner_name]}  endendclass Plugin  Vagrantplugin(2)  name testing-hook  action_hook hook-name :provisioner_run do |hook|    hookprepend Action  endendVagrantconfigure(2) do |config|  configvmbox  precise64  configvmprovision :shell inline: echo hello  configvmprovision :shell inline: echo hello 2endThe output of a vagrant provision:$ be vagrant provisionYou appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin development[default] Running provisioner: shell[default] Running: inline scriptstdin: is not a ttyhello[default] Running provisioner: shell[default] Running: inline scriptstdin: is not a ttyhello 2vagrant provision after this patch:$ be vagrant provisionYou appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin development[default] Running provisioner: shellBefore shell[default] Running: inline scriptstdin: is not a ttyhelloAfter shell[default] Running provisioner: shellBefore shell[default] Running: inline scriptstdin: is not a ttyhello 2After shellWhile this PR also adds a spec for the new Method support I wasnt able to figure out where I should add a spec for making sure the hook behaves as expected when a Method object gets provided,,681,0.7165932452276065,0.5952380952380952,16213,368.4697464997225,31.5795966199963,56.49787207796213,5557,7,1411,6,travis,fgrehm,mitchellh,false,mitchellh,20,0.9,351,143,1671,true,true,true,false,11,58,15,0,21,4,0
2545715,mitchellh/vagrant,ruby,2565,1385981627,1386113596,1386113597,2199,2199,github,false,false,true,28,11,7,1,2,0,3,0,2,0,0,12,12,11,0,1,0,0,12,12,11,0,1,112,2,131,4,67.63049309773677,1.93543749554184,63,wolfe21@marshall.edu,lib/vagrant.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/box_collection_test.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/errors.rb|lib/vagrant/util/file_checksum.rb|plugins/commands/box/command/add.rb|templates/locales/en.yml|lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|lib/vagrant/action/builtin/handle_box_url.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|website/docs/source/v2/cli/box.html.md|website/docs/source/v2/vagrantfile/machine_settings.html.md,25,0.018276762402088774,2,0,false,Implement box checksumming This fixes issue #1124@phinze and @fgrehm: Looking for any obvious mistakes or issues with this pull request Barring any issues Ill merge tomorrow Thanks,,679,0.7157584683357879,0.5822454308093995,16213,368.4697464997225,31.5795966199963,56.49787207796213,5557,7,1411,7,travis,mitchellh,mitchellh,true,mitchellh,0,0,3336,0,2105,true,true,false,false,258,532,229,8,356,4,1
2553324,mitchellh/vagrant,ruby,2561,1385994995,1386137322,1386137322,2372,2372,github,false,false,false,57,1,1,0,2,0,2,0,1,3,0,4,7,7,0,0,3,0,4,7,7,0,0,237,135,237,135,29.61047793381479,0.8473874228774069,20,mitchell.hashimoto@gmail.com,lib/vagrant/action.rb|lib/vagrant/action/builtin/mixin_synced_folders.rb|lib/vagrant/action/builtin/synced_folder_cleanup.rb|lib/vagrant/action/builtin/synced_folders.rb|lib/vagrant/plugin/v2/synced_folder.rb|plugins/providers/virtualbox/action.rb|test/unit/vagrant/action/builtin/synced_folder_cleanup_test.rb,11,0.010282776349614395,0,0,false,Enhance the synced folder plugin implementation with a cleanup routine I propose adding an additional method to the synced folder plugin implementation mainly for doing cleanup on the host after destroying a machineSomething like this stub:https://githubcom/emyl/vagrant/commit/6548a6863f66d7e9a834fdb4ffac010b495e4f51If youd like to point me in the right direction Ill be happy to implement and open a PR,,680,0.7161764705882353,0.5784061696658098,16213,368.4697464997225,31.5795966199963,56.49787207796213,5557,7,1411,5,travis,emyl,mitchellh,false,mitchellh,4,1.0,10,2,1054,false,true,true,false,0,1,2,0,0,0,-1103
2545155,mitchellh/vagrant,ruby,2560,1385885512,1386114594,1386114594,3818,3818,github,false,false,false,202,1,1,9,5,0,14,0,2,8,0,10,18,17,0,1,8,0,10,18,17,0,1,160,234,160,234,81.3844086543397,2.3290446194806766,46,tpltnt.github@dropcut.net,lib/vagrant/errors.rb|plugins/providers/virtualbox/action/prepare_nfs_settings.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb|templates/locales/en.yml|test/unit/base.rb|test/unit/plugins/providers/virtualbox/action/prepare_nfs_settings_test.rb|test/unit/plugins/providers/virtualbox/base.rb|test/unit/plugins/providers/virtualbox/driver/version_4_0_test.rb|test/unit/plugins/providers/virtualbox/driver/version_4_1_test.rb|test/unit/plugins/providers/virtualbox/driver/version_4_2_test.rb|test/unit/plugins/providers/virtualbox/driver/version_4_3_test.rb|test/unit/plugins/providers/virtualbox/support/shared/virtualbox_driver_version_4_x_examples.rb|test/unit/support/shared/virtualbox_context.rb,28,0.005115089514066497,0,0,false,[providers/virtualbox] support DHCP interfaces for NFS Previously we required a host-only interface with a static IP for NFSto work in VirtualBox because we needed access to the guests IP inorder to properly configure mount commandsAfter boot VirtualBox exposes the IP addresses of a guests networkadapters via the guestproperty interfaceThis adds support for reading VirtualBox guest properties to theVirtualBox driver and utilizes that support to prepare NFS settingswhich removes the necessity for a static IP for NFS to workThe read_guest_property implementation is the same for all versions ofthe virtualbox driver and it is more of a plumbing sort of method sowe add it to Base and test it thereThe read_guest_ip methods are also identical in every vbox driverversion but to follow convention found in similar externally accessedmethods we add copies to each versionIn this commit we also start building out scaffolding for unit testingvbox actions and driversTest plan: - Prepare a Vagrantfile with the following:   * private network with type: :dhcp   * synced folder with nfs: true - Boot a VM from this Vagrantfile using the virtualbox provider - Machine should boot successfully with working synced folder,,678,0.7153392330383481,0.5626598465473146,16213,368.4697464997225,31.5795966199963,56.49787207796213,5557,7,1410,4,travis,phinze,mitchellh,false,mitchellh,4,1.0,256,42,1826,true,true,false,false,6,18,4,0,2,1,691
2541294,mitchellh/vagrant,ruby,2558,1385736523,1385843769,1385843769,1787,1787,github,false,false,false,18,2,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,20,0,4.099989678533425,0.1173318559488696,8,vicviq@gmail.com,plugins/provisioners/salt/provisioner.rb,8,0.01927710843373494,0,0,true,salt-bootstrapsh: options are only allowed before install arguments salt-bootstrapsh expect to have options at the very last position,,677,0.7149187592319055,0.5228915662650603,16213,368.2230309011287,31.5795966199963,56.49787207796213,5556,7,1408,2,travis,ticosax,mitchellh,false,mitchellh,0,0,9,18,755,false,false,false,false,0,0,0,0,0,0,1787
2539807,mitchellh/vagrant,ruby,2557,1385706219,1385726344,1385726344,335,335,github,false,false,false,293,2,1,0,6,1,7,0,3,0,0,2,3,2,0,0,0,0,3,3,3,0,0,15,0,15,5,8.696213525435818,0.24918736506798028,1,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/ssh_exec.rb|lib/vagrant/action/builtin/ssh_run.rb,1,0.0024096385542168677,0,4,true,vagrant ssh and vagrant ssh -c are broken on master The problem seems to be related to recent changes that allowed multiple private keys I suspect that the commit that introduced this was 45e09eb6778fd22d7d6cabae65f476d9f8035873$ be vagrant sshYou appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin development/home/projects/oss/vagrant/lib/vagrant/action/builtin/ssh_execrb:33:in initialize: no implicit conversion of Array into String (TypeError)from /home/projects/oss/vagrant/lib/vagrant/action/builtin/ssh_execrb:33:in newfrom /home/projects/oss/vagrant/lib/vagrant/action/builtin/ssh_execrb:33:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/wardenrb:34:in callfrom /home/fabio/rvm/gems/ruby-200-p247/bundler/gems/vagrant-lxc-c7fff4d9354b/lib/vagrant-lxc/action/check_runningrb:16:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/wardenrb:34:in callfrom /home/fabio/rvm/gems/ruby-200-p247/bundler/gems/vagrant-lxc-c7fff4d9354b/lib/vagrant-lxc/action/check_createdrb:16:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/wardenrb:34:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/builderrb:116:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/runnerrb:62:in block in runfrom /home/projects/oss/vagrant/lib/vagrant/util/busyrb:19:in busyfrom /home/projects/oss/vagrant/lib/vagrant/action/runnerrb:62:in runfrom /home/projects/oss/vagrant/lib/vagrant/machinerb:147:in actionfrom /home/projects/oss/vagrant/plugins/commands/ssh/commandrb:56:in block in executefrom /home/projects/oss/vagrant/lib/vagrant/plugin/v2/commandrb:193:in block in with_target_vmsfrom /home/projects/oss/vagrant/lib/vagrant/plugin/v2/commandrb:191:in eachfrom /home/projects/oss/vagrant/lib/vagrant/plugin/v2/commandrb:191:in with_target_vmsfrom /home/projects/oss/vagrant/plugins/commands/ssh/commandrb:40:in executefrom /home/projects/oss/vagrant/lib/vagrant/clirb:38:in executefrom /home/projects/oss/vagrant/lib/vagrant/environmentrb:484:in clifrom /home/projects/oss/vagrant/bin/vagrant:127:in top (required)from /home/fabio/rvm/gems/ruby-200-p247/bin/vagrant:23:in loadfrom /home/fabio/rvm/gems/ruby-200-p247/bin/vagrant:23:in main$ be vagrant ssh -c ls -laYou appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin development/home/projects/oss/vagrant/lib/vagrant/action/builtin/ssh_runrb:27:in initialize: no implicit conversion of Array into String (TypeError)from /home/projects/oss/vagrant/lib/vagrant/action/builtin/ssh_runrb:27:in newfrom /home/projects/oss/vagrant/lib/vagrant/action/builtin/ssh_runrb:27:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/wardenrb:34:in callfrom /home/fabio/rvm/gems/ruby-200-p247/bundler/gems/vagrant-lxc-c7fff4d9354b/lib/vagrant-lxc/action/check_runningrb:16:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/wardenrb:34:in callfrom /home/fabio/rvm/gems/ruby-200-p247/bundler/gems/vagrant-lxc-c7fff4d9354b/lib/vagrant-lxc/action/check_createdrb:16:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/wardenrb:34:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/builderrb:116:in callfrom /home/projects/oss/vagrant/lib/vagrant/action/runnerrb:62:in block in runfrom /home/projects/oss/vagrant/lib/vagrant/util/busyrb:19:in busyfrom /home/projects/oss/vagrant/lib/vagrant/action/runnerrb:62:in runfrom /home/projects/oss/vagrant/lib/vagrant/machinerb:147:in actionfrom /home/projects/oss/vagrant/plugins/commands/ssh/commandrb:43:in block in executefrom /home/projects/oss/vagrant/lib/vagrant/plugin/v2/commandrb:193:in block in with_target_vmsfrom /home/projects/oss/vagrant/lib/vagrant/plugin/v2/commandrb:191:in eachfrom /home/projects/oss/vagrant/lib/vagrant/plugin/v2/commandrb:191:in with_target_vmsfrom /home/projects/oss/vagrant/plugins/commands/ssh/commandrb:40:in executefrom /home/projects/oss/vagrant/lib/vagrant/clirb:38:in executefrom /home/projects/oss/vagrant/lib/vagrant/environmentrb:484:in clifrom /home/projects/oss/vagrant/bin/vagrant:127:in top (required)from /home/fabio/rvm/gems/ruby-200-p247/bin/vagrant:23:in loadfrom /home/fabio/rvm/gems/ruby-200-p247/bin/vagrant:23:in main,,676,0.7144970414201184,0.5156626506024097,16204,365.835596149099,31.350283880523328,56.28239940755369,5556,7,1408,3,travis,fgrehm,mitchellh,false,mitchellh,19,0.8947368421052632,351,143,1668,true,true,true,false,12,57,15,0,19,4,6
2539761,mitchellh/vagrant,ruby,2556,1385704678,1385726479,1385726479,363,363,github,false,false,false,61,1,1,2,3,0,5,0,3,1,0,1,2,2,0,0,1,0,1,2,2,0,0,10,57,10,57,9.02608144637302,0.2586396304474317,7,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/config.rb|test/unit/plugins/provisioners/shell/config_test.rb,7,0.016867469879518072,0,4,true,provisioners/shell: fix validation for args [GH-1949] The logic change in 57d477514067a37665386968ef0a37abf86e3380 introduceda bug where neither strings nor arrays provided as args for shellprovisioners would pass validationThis fixes that problem along with a few extras:- split out arg validation into a private method- update comment describing valid args- add a few unit tests around config validation,,675,0.7140740740740741,0.5156626506024097,16204,365.835596149099,31.350283880523328,56.28239940755369,5556,7,1408,2,travis,phinze,mitchellh,false,mitchellh,3,1.0,256,42,1824,true,true,false,false,6,15,3,0,2,1,10
2538417,mitchellh/vagrant,ruby,2555,1385678439,1385678464,1385678464,0,0,github,false,false,false,4,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.563610998009623,0.13076891924954087,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/private_network.html.md,3,0.006896551724137931,0,0,false,fix typo fix typo,,674,0.7136498516320475,0.4896551724137931,16204,365.835596149099,31.350283880523328,56.28239940755369,5556,7,1407,2,travis,nikhilv,mitchellh,false,mitchellh,0,0,7,6,978,false,true,true,false,0,0,0,0,0,0,0
2531118,mitchellh/vagrant,ruby,2549,1385583924,1386136062,1386136062,9202,9202,github,false,false,true,399,7,6,0,5,0,5,0,3,11,1,3,16,11,0,1,11,1,4,16,11,0,1,778,0,782,0,131.06318941708656,3.7606634917789856,31,tpltnt.github@dropcut.net,templates/locales/en.yml|plugins/provisioners/docker/docker_installer.rb|plugins/provisioners/docker/errors.rb|plugins/provisioners/docker/provisioner.rb|templates/locales/en.yml|plugins/provisioners/docker/cap/debian/docker_configure_auto_start.rb|plugins/provisioners/docker/cap/debian/docker_configure_vagrant_user.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/debian/docker_start_service.rb|plugins/provisioners/docker/cap/linux/docker_installed.rb|plugins/provisioners/docker/config.rb|plugins/provisioners/docker/docker_client.rb|plugins/provisioners/docker/docker_installer.rb|plugins/provisioners/docker/errors.rb|plugins/provisioners/docker/plugin.rb|plugins/provisioners/docker/provisioner.rb|plugins/provisioners/docker/cap/debian/docker_configure_auto_start.rb|plugins/provisioners/docker/cap/debian/docker_configure_vagrant_user.rb|plugins/provisioners/docker/cap/debian/docker_install.rb|plugins/provisioners/docker/cap/debian/docker_start_service.rb|plugins/provisioners/docker/cap/linux/docker_installed.rb|plugins/provisioners/docker/config.rb|plugins/provisioners/docker/docker_client.rb|plugins/provisioners/docker/docker_installer.rb|plugins/provisioners/docker/errors.rb|plugins/provisioners/docker/plugin.rb|plugins/provisioners/docker/provisioner.rb|plugins/provisioners/docker/docker_installer.rb|plugins/provisioners/docker/errors.rb|plugins/provisioners/docker/provisioner.rb|templates/locales/en.yml|templates/locales/en.yml,31,0.0,0,2,false,[WIP] Docker provisioner So I started working on porting the code from [vocker](https://githubcom/fgrehm/vocker) and although I havent tested this yet I wanted to kick off the discussion about some aspects about it as the code from the plugin probably wont be merged on its current state### vagrant docker [command](https://githubcom/fgrehm/vocker#vagrant-docker-command)Vocker provides a convenience command for interacting with the Docker installation running within the VM but Im not sure it makes sense to have that as part of Vagrant core Besides that I personally havent been using it as much as I thought I wouldIf you guys think it makes sense I can bring it back in### vagrant-lxc specific code within the providerI personally like to have isolated Docker instances inside other VMs and I found that plain old lxc gives me enough abstraction for that and it makes up for a really awesome alternative to VBox on Linux I found my way to make it work from within vagrant-lxc containers but I had to add a conditional on the provisioner code and Im not sure if Vagrants core should have provider specific logic within it Im happy to drop that as long as we have a way of specifying from the provider that it should be skipped in case the provisioner is used### Running containers from the VagrantfileId love some feedback about the code that is already in place It makes some assumptions about where to place container id files and it also creates the directories used as Docker volumes While the automatic folder creation is a nice convenience and Im not 100% sure if that should be a responsibility of the plugin### Provisioner specsI have some tests written on the plugin but I noticed that there is no automated tests for other provisioners and I suppose that there is a reason for that Im happy to bring them back if you guys think it is worth### DocsI havent written any yet Should we have that for 14 or should we wait a bit more as things are subject to change-----------------------------Theres probably more stuff you guys will find on the code so please take your time to review :)I plan to do some testing on it later on tonight or tomorrow and Im up for doing whatever it is needed to get this into 14 :D,,673,0.7132243684992571,0.48498845265588914,16181,366.35560224955196,31.394845806810455,56.36240034608492,5556,7,1406,5,travis,fgrehm,mitchellh,false,mitchellh,18,0.8888888888888888,350,143,1666,true,true,true,false,12,54,14,0,19,3,838
2528245,mitchellh/vagrant,ruby,2543,1385552335,1385625890,1385625890,1225,1225,github,false,false,false,7,2,2,0,1,0,1,0,2,1,0,1,2,2,0,0,1,0,1,2,2,0,0,25,0,25,0,9.245719331685708,0.2652921792957124,0,,plugins/guests/pld/plugin.rb|plugins/guests/pld/cap/change_host_name.rb,0,0.0,0,0,false,fix hostname change on pld tested manually,,672,0.7127976190476191,0.48498845265588914,16181,366.35560224955196,31.394845806810455,56.36240034608492,5555,7,1406,2,travis,glensc,mitchellh,false,mitchellh,3,1.0,27,4,1389,false,false,false,false,0,5,1,0,0,0,1225
2525939,mitchellh/vagrant,ruby,2541,1385516861,,1385534782,298,,unknown,false,false,false,55,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,13,0,13,0,8.778383401992032,0.2518744327903821,4,phil.h.smith@gmail.com,website/docs/source/v2/provisioning/index.html.md|website/docs/source/v2/provisioning/basic_usage.html.md,4,0.00954653937947494,0,0,false,Change wording regarding vagrant up and provisioning run As discussed [on twitter](https://twittercom/Sgoettschkes/status/405430214315872256) the default behaviour of vagrant up and vagrant reload changed The documentation did not reflect thisI added one alert box to the provisioning index and also changed the wording in the basic usage of provisioning to make it more clear what happens,,671,0.713859910581222,0.4821002386634845,16147,367.0650894903078,31.460952498916207,56.48108007679445,5555,7,1405,2,travis,Sgoettschkes,mitchellh,false,,0,0,19,0,1010,false,false,false,false,0,0,0,0,0,0,298
2522465,mitchellh/vagrant,ruby,2539,1385484779,1385507798,1385507798,383,383,github,false,false,false,63,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.3506347811518635,0.12516496372753952,0,,plugins/guests/debian/cap/configure_networks.rb,0,0.0,0,0,false,Sometimes ifdown is not enough Changing network configuration in the Vagrantfile doesnt change network on the Debian virtualbox /sbin/ifrequest eth1 show the right configuration but /sbin/ifconfig an old oneThe hidden error is : RTNETLINK answers: File existsA simple provisioning shell can fix this bug :configvmprovision :shell inline: sudo /sbin/ifdown eth1 && sudo /sbin/ifup eth1This patch flush each network interfaces,,670,0.7134328358208956,0.4733009708737864,16146,367.0878236095627,31.46290102811842,56.48457822370866,5555,7,1405,2,travis,athoune,mitchellh,false,mitchellh,0,0,50,46,1686,false,false,false,false,0,0,0,0,0,0,383
2511019,mitchellh/vagrant,ruby,2534,1385330018,1385333312,1385333312,54,54,github,false,false,false,158,1,1,0,2,0,2,0,2,5,0,4,9,9,0,0,5,0,4,9,9,0,0,151,171,151,171,36.49444282548794,1.0593506040448535,20,teemu.matilainen@iki.fi,plugins/guests/debian/cap/change_host_name.rb|plugins/guests/ubuntu/cap/change_host_name.rb|plugins/guests/ubuntu/plugin.rb|test/unit/base.rb|test/unit/plugins/guests/debian/cap/change_host_name_test.rb|test/unit/plugins/guests/support/shared/debian_like_host_name_examples.rb|test/unit/plugins/guests/ubuntu/cap/change_host_name_test.rb|test/unit/support/dummy_communicator.rb|test/unit/support/shared/debian_examples.rb,15,0.0,0,0,false,refactoring ubuntu/debian change_host_name theres been a lot of churn around this code so i figure it was worthtrying to clean it up - the methods were doing a lot so make them into template methods with   one helper per step - spread out /etc/hosts regexp into a couple of helper variables for   clarity - remove handling for broken hostname implementations (like basing all   of the checks on namesplit()[0]) since it seems reasonable to   remove code dedicated only to handling broken boxes - DRY up the shared code between debian/ubuntu implementations which   clarifies the differences as well - add unit tests around the behavior this will help us in the future   to separate flaws in our understanding from flaws in implementation - includes a new DummyCommunicator in tests which should be useful in   supporting additional unit testing of this kind - manually tested this on squeeze wheezy precise quantal raring   and saucy successfullyhandles the issue in #2333,,669,0.7130044843049327,0.4005524861878453,15786,365.2603572786013,31.483593057139235,56.6958064107437,5555,7,1403,20,travis,phinze,mitchellh,false,mitchellh,2,1.0,255,42,1819,true,true,false,false,2,10,2,0,1,0,0
2505378,mitchellh/vagrant,ruby,2530,1385187742,1385264441,1385264441,1278,1278,github,false,false,false,7,2,2,0,2,2,4,2,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,8.962297854263678,0.2624398747371953,12,teemu.matilainen@iki.fi,plugins/guests/ubuntu/cap/change_host_name.rb|plugins/guests/ubuntu/cap/change_host_name.rb,12,0.03986710963455149,0,4,false,Issue 2333 Fixes as recommended in https://githubcom/mitchellh/vagrant/issues/2333#issuecomment-28997837,,668,0.7125748502994012,0.27906976744186046,15442,355.8476881233001,30.695505763502137,55.36847558606398,5555,7,1402,45,travis,elliotsegler,mitchellh,false,mitchellh,1,1.0,0,1,1199,false,false,false,false,1,3,1,0,0,0,820
2504832,mitchellh/vagrant,ruby,2529,1385177723,1385247869,1385247869,1169,1169,github,false,false,false,41,1,1,0,1,0,1,0,3,0,0,6,6,6,0,0,0,0,6,6,6,0,0,41,0,41,0,27.044889591132257,0.7919461673773119,8,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb|plugins/guests/freebsd/cap/change_host_name.rb|plugins/guests/freebsd/cap/configure_networks.rb|plugins/guests/freebsd/cap/halt.rb|plugins/guests/freebsd/cap/mount_nfs_folder.rb|plugins/guests/freebsd/guest.rb,6,0.0,0,4,true,Allow the FreeBSD plugin to install without bash [GH-2485] The default shell is bash -l which does not get installed by defaulton FreeBSD This change allows the plugin to override the default shelland use a known installed shell (sh),,667,0.712143928035982,0.2542955326460481,15442,355.8476881233001,30.695505763502137,55.36847558606398,5554,7,1401,45,travis,markpeek,mitchellh,false,mitchellh,2,0.5,52,4,1001,false,false,false,false,1,0,1,0,0,0,1168
2494414,mitchellh/vagrant,ruby,2525,1385062973,1385088994,1385088994,433,433,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.714300483101078,0.13804904884442995,2,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/bootstrap-salt.sh,2,0.0070921985815602835,0,0,false,Make salt bootstrap work on systems without python The old script did not work on FreeBSD because Python is not installed by default FreeBSD has fetch I added a curl branch as well,,666,0.7117117117117117,0.23049645390070922,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1400,46,travis,millerdev,mitchellh,false,mitchellh,1,0.0,3,0,1115,false,false,false,false,0,1,2,0,0,0,433
2494362,mitchellh/vagrant,ruby,2523,1385062573,,1385062767,3,,unknown,false,false,false,34,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.7081204377994705,0.1378680783316761,2,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/bootstrap-salt.sh,2,0.0070921985815602835,0,0,false,Make salt bootstrap work on systems without python The old script did not work on FreeBSD because Python is not installed by default FreeBSD has fetch I also added a curl branch as well,,665,0.7127819548872181,0.23049645390070922,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1400,46,travis,millerdev,millerdev,true,,0,0,3,0,1115,false,false,false,false,0,0,0,0,0,0,-1
2493106,mitchellh/vagrant,ruby,2521,1385051299,1385247986,1385247986,3278,3278,github,false,false,false,17,1,1,0,2,0,2,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.263963949620948,0.1541448660307977,1,mitchell.hashimoto@gmail.com,templates/guests/fedora/network_static.erb,1,0.0035460992907801418,0,0,false,fix network interface name on fedora issue #2520 fix network interface name on fedora[issue ticket #2520](https://githubcom/mitchellh/vagrant/issues/2520),,664,0.7123493975903614,0.23049645390070922,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1400,47,travis,isaoshimizu,mitchellh,false,mitchellh,0,0,2,1,658,false,true,false,false,0,0,0,0,0,0,3277
2489059,mitchellh/vagrant,ruby,2518,1384996166,1385265367,1385265367,4486,4486,github,false,false,false,167,2,2,0,0,0,0,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,22,0,22,0,21.830205041507384,0.6392547638534476,132,paulh@instructure.com,lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/downloader.rb|CHANGELOG.md|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/util/downloader.rb,130,0.0070921985815602835,0,0,false,Add resumable downloads Since VM images can be fairly large and connections rather flaky it would benice to support resumable downloads whereby if a download is interrupted forsome reason on the next attempt it picks up where it left offTo implement this the following changes were made:* The temporary download filename is now constructed from a SHA1 of the  box_url instead of a timestamp This allows separate invocations of  Vagrant to share the download-path if the URLs exactly match* Add --continue-at - option to curl which tells it to automatically resume  downloading where it left off* Modify the recover method in box_add to not remove the temporary  download path if the download was interruptedKnown Issue:* The progress on a resumed download will look a bit wonky in the sense that  it starts at 0% each time instead of where it left off Since Vagrant is  pulling this directly from curl this is more of an upstream issueFixes #57,,663,0.7119155354449472,0.23049645390070922,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1399,44,travis,rconradharris,mitchellh,false,mitchellh,0,0,36,23,1532,false,false,false,false,0,0,0,0,0,0,-1
2487585,mitchellh/vagrant,ruby,2517,1384982311,1384982473,1384982473,2,2,github,false,false,false,10,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.394188654456094,0.12867523143635864,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,2,0.0071174377224199285,0,0,false,provider/virtualbox: fix bad constant reference in dhcp error refs #2454,,662,0.7114803625377644,0.2277580071174377,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1399,44,travis,phinze,mitchellh,false,mitchellh,1,1.0,255,42,1815,false,true,false,false,1,6,1,0,0,0,2
2483097,mitchellh/vagrant,ruby,2514,1384926297,1385089102,1385089102,2713,2713,github,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.873800524082995,0.1427197281971617,0,,lib/vagrant/util/which.rb,0,0.0,0,0,false,Add invalid character replacement This fixes the bug seen here:http://pastebincom/QzWQQndKWhich would generate an Argument Error causing vagrant up and other such commands to fail,,661,0.7110438729198184,0.2277580071174377,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1399,45,travis,AJCStriker,mitchellh,false,mitchellh,0,0,7,0,787,false,false,false,false,0,0,0,0,0,0,2713
2475511,mitchellh/vagrant,ruby,2512,1384844806,1384844935,1384844935,2,2,github,false,false,false,1,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.540636869310795,0.13296370500674606,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/basic_usage.html.md,2,0.007142857142857143,0,0,false,Typo ,,660,0.7106060606060606,0.225,15442,355.8476881233001,30.695505763502137,55.36847558606398,5552,6,1398,43,travis,phs,mitchellh,false,mitchellh,0,0,14,2,1821,false,false,false,false,0,0,0,0,0,0,2
2461928,mitchellh/vagrant,ruby,2505,1384619978,1385265795,1385265795,10763,10763,github,false,false,false,54,1,1,0,1,0,1,0,1,0,0,3,3,3,0,0,0,0,3,3,3,0,0,19,0,19,0,12.411612451498748,0.3634498913165957,12,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|website/docs/source/v2/provisioning/shell.html.md,6,0.02142857142857143,0,0,false,[Provisioner][Shell] add keep_color option to allow custom color output HiThis add a new option for the shell provisioner: keep_colorThis option allow you to have shell script with colors and prevent vagrant from coloring output in green or red )This is useful for example when running ansible script directly on the vm,,659,0.7101669195751138,0.225,15442,355.8476881233001,30.695505763502137,55.36847558606398,5550,6,1395,42,travis,jaugustin,mitchellh,false,mitchellh,0,0,35,54,1037,false,true,false,false,0,2,0,0,0,0,10763
2446953,mitchellh/vagrant,ruby,2496,1384416225,,1414398515,499704,,unknown,false,true,false,50,2,2,0,10,0,10,0,8,1,0,6,7,6,1,0,1,0,6,7,6,1,0,351,0,351,0,30.446464768390978,0.8915654073383535,16,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/provisioner/chef_client.rb|templates/provisioners/chef_client/local.erb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_solo.rb,5,0.010714285714285714,1,1,false,Support --local-mode for chef-client (reworked) This is the same PR @tduffield submitted (https://githubcom/mitchellh/vagrant/pull/2463) but with the rubocop changes dropped and the commits rebased into two easier-to-review commits  Im very interested in this functionality being added so I tried to make it a bit easier to review and merge  :)  ,,658,0.7112462006079028,0.225,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1393,70,travis,ziuchkovski,ziuchkovski,true,,0,0,3,3,973,false,false,false,false,0,1,0,0,0,0,6038
2426269,mitchellh/vagrant,ruby,2487,1384183893,1385249142,1385249142,17754,17754,github,false,false,false,47,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.103524574760026,0.12016372300856172,5,tim.gusak@remote-learner.net,plugins/hosts/gentoo/host.rb,5,0.017857142857142856,0,1,false,Restart NFS on Gentoo host instead of starting In the case that NFS is already started on a Gentoo host /etc/initd/nfs start will not reload exports but fail /etc/initd/nfs reload is known to fail for some esoteric configurations of /etc/exports restart should be safe for existing connections,,657,0.710806697108067,0.225,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1390,44,travis,hatsuseno,mitchellh,false,mitchellh,0,0,5,4,1610,false,false,false,false,0,0,0,0,0,0,15088
2420300,mitchellh/vagrant,ruby,2484,1384056518,1385266987,1385266987,20174,20174,github,false,false,false,191,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,72,0,72,0,8.779085099024437,0.2570784044029896,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/version_4_3.rb|plugins/providers/virtualbox/driver/version_4_2.rb,1,0.0035714285714285713,2,2,false,Virtualbox parallel box import This PR supersedes #1627 and simply takes @smoyers excellent work on the 42 driver and brings it into the 43 driver as wellDuring VBoxManage import Virtualbox always uses the same intermediate directory for the imported ovf appliance file This means that a single box cannot be imported concurrently by another VagrantfileThis patch does a dry-run: VBoxManage import -n to get vmdk paths and appends current milliseconds + random number to their import target pathNote Ive cherry-picked @smoyers original commit into here If this is merged (plz) #1627 can be closed### Meta note on concurrent vagrant upIve also filed PR #2482 and #2483 which address similar issues when running vagrant up simultaneously Our use case is several Jenkins jobs wherein each boots a box to run a test suite Since theyre triggered from the same GitHub project they start simultaneouslyI assume that others have the same kind of use case and aside from these few issues the strategy is working great The boxes that they boot are built by the excellent [packer](https://githubcom/mitchellh/packer) (in yet another Jenkins job) Ill document this setup soon,,656,0.7103658536585366,0.225,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1388,40,travis,andyfowler,mitchellh,false,mitchellh,2,1.0,27,20,1573,false,true,false,false,0,0,2,0,0,0,20174
2420249,mitchellh/vagrant,ruby,2483,1384052011,1385266340,1385266340,20178,20178,github,false,false,false,121,1,1,2,1,0,3,0,1,0,0,7,7,7,0,0,0,0,7,7,7,0,0,34,0,34,0,27.113018138783474,0.7939519167484003,7,tomwpryor@gmail.com,plugins/providers/virtualbox/action/customize.rb|plugins/providers/virtualbox/action/sane_defaults.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/driver/version_4_3.rb,4,0.0035714285714285713,0,0,false,Use Retryable for Virtualbox customize & sane_defaults actions When starting several boxes at once VBoxManage modifyvm gets cranky and throws random lock errors This adds the existing Retryable logic to the customize and sane_defaults actions both of which fire a bunch ofmodifyvm commands all of which are fine to run multiple timesThis changes the VirtualBox drivers execute_command to accept a :retryable  true option This also means it will throw Vagrant::Errors::VBoxManageError instead of returning the last exit status I think this is the right behavior because consumers of the driver shouldnt care about exit status (mostly because VBoxManage has inconsistent exit status handling which should all be managed by the driver) Consumers should only care about failure or success,,655,0.7099236641221374,0.225,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1388,40,travis,andyfowler,mitchellh,false,mitchellh,1,1.0,27,20,1573,false,true,false,false,0,0,1,0,0,0,20237
2420193,mitchellh/vagrant,ruby,2482,1384051407,1385089291,1385089291,17238,17238,github,false,false,false,69,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.497479809426094,0.1316999345832066,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/set_name.rb,1,0.0035460992907801418,0,0,false,Safer default VM names for Virtualbox If the same Vagrantfile is upd in the same second in the same basedir there is a conflict in the name provided to VirtualboxIt may sound rare but all Jenkins jobs sit in a directory named  workspace/ and if theyre listening for the same trigger theyll run into this issueThis changes the name suffix from seconds to milliseconds and + rand(100000),,654,0.709480122324159,0.23049645390070922,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1388,44,travis,andyfowler,mitchellh,false,mitchellh,0,0,27,20,1573,false,true,false,false,0,0,0,0,0,0,17297
2406584,mitchellh/vagrant,ruby,2474,1383856557,,1385249123,23149,,unknown,false,false,false,17,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,3.938482611931395,0.11533079064887461,3,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/util/compile_forwarded_ports.rb,3,0.00980392156862745,0,0,false,Fix for issue #2472 allows for the configsshguest_port to automatically update all ssh forwardinglinked ticket https://githubcom/mitchellh/vagrant/issues/2472,,653,0.7105666156202144,0.2908496732026144,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1386,43,travis,canausa,mitchellh,false,,3,1.0,5,4,966,false,true,false,false,3,10,1,0,0,0,-1
2405029,mitchellh/vagrant,ruby,2471,1383843501,1385267868,1385267868,23679,23679,commit_sha_in_comments,false,false,false,41,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,3.843408331768557,0.11254672557052821,2,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/provisioner_cleanup.rb,2,0.006535947712418301,0,0,false,Move ProvisionerCleanup on the return path In my opinion it makes more sense to have the provisioner cleanup action on the return pathI see this action as something that should run at the very last step of the destroy stack,,652,0.7101226993865031,0.2908496732026144,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,6,1386,36,travis,emyl,mitchellh,false,mitchellh,3,1.0,10,2,1029,false,true,true,false,2,2,1,0,0,0,-1
2393173,mitchellh/vagrant,ruby,2463,1383696061,,1385267480,26130,,unknown,false,true,false,24,3,3,0,6,0,6,0,6,1,0,6,7,6,1,0,1,0,6,7,6,1,0,705,0,705,0,53.37141654186234,1.56287795943953,16,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/provisioners/chef_client/local.erb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/provisioner/chef_client.rb,5,0.009836065573770493,0,3,false,Support --local-mode for chef-client Modified the chef_client provisioner to support local-mode for chef-client Documentation will be in separate PR once the code is merged ,,651,0.7112135176651305,0.28852459016393445,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,5,1384,36,travis,tduffield,mitchellh,false,,0,0,18,0,698,false,true,false,false,0,0,0,0,0,0,8754
2391817,mitchellh/vagrant,ruby,2460,1383683838,1385249219,1385249219,26029,26029,github,false,false,false,21,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.466287510629885,0.1307865288793387,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/salt.html.md,2,0.006557377049180328,0,0,false,Add CentOS testing argument for install_type The Salt bootstrap file allows for the use of a testing repository in CentOS systems,,650,0.7107692307692308,0.28852459016393445,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,5,1384,41,travis,jeremyfelt,mitchellh,false,mitchellh,0,0,121,110,1261,false,true,true,false,0,0,0,0,0,0,26089
2391761,mitchellh/vagrant,ruby,2458,1383683299,,1385249323,26040,,unknown,false,false,false,16,1,1,0,1,2,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.516638791049188,0.13226096803602033,4,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb,4,0.013114754098360656,0,2,false,Adding extra condition to check for Windows to avoid invalid color optio ns to Command line,,649,0.711864406779661,0.28852459016393445,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,5,1384,40,travis,clintjhill,mitchellh,false,,0,0,13,1,1792,false,false,false,false,0,1,0,0,0,0,3
2378312,mitchellh/vagrant,ruby,2453,1383513541,,1385249896,28879,,unknown,false,false,false,84,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.4916493387322145,0.1315292006074,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/basic_usage.html.md,2,0.006493506493506494,0,0,false,Documented the assumption that provisioning be idempotent Here is an additional paragraph for the website docs one that explains the vital assumption of idempotentcy in provisioning Since I had never used any automated provisioning tools I didnt understand that idempotentcy was expected and so it took me a long to understand how vagrant could actually be used to share dev environments without having to completely rebuild the virtual machine whenever someone installed something newHope this helps future newbs see the light faster jack@flywheelcom,,648,0.7129629629629629,0.29545454545454547,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,5,1382,39,travis,jackdesert,mitchellh,false,,0,0,4,0,902,false,false,false,false,0,0,0,0,0,0,-1
2374997,mitchellh/vagrant,ruby,2450,1383435358,1385250002,1385250002,30184,30184,github,false,false,false,4133,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.599654591046926,0.1346919240141128,0,,plugins/guests/redhat/cap/configure_networks.rb,0,0.0,1,0,false,ifdown ethN before munging ifcfg-ethN This is a patch for issue #1577 (reported by @chorankates-sfdc)If vagrant munges ifcfg-ethN by removing the previous vagrant config for the interface before calling ifdown all boxes after the first may encounter an ip address collision as noted [here](https://githubcom/mitchellh/vagrant/pull/1577#issuecomment-26766758)  The simplest fix is to ensure that base boxes contain *NO* vagrant configured interfaces  However a more generic solution is simply to call ifdown before munging ifcfg-ethN## VagrantfileVagrantconfigure(2) do |config|  configvmdefine :web do |web_config|    web_configvmbox  rhel6_u2    web_configvmnetwork private_network ip: 172161100    web_configvmprovider :virtualbox do |vb|      vbcustomize [modifyvm :id --name web]    end  end  configvmdefine :db do |db_config|    db_configvmbox  rhel6_u2    db_configvmnetwork private_network ip: 172161101    db_configvmprovider :virtualbox do |vb|      vbcustomize [modifyvm :id --name db]    end  endendNOTE: Ive intentionally left an ifcfg-eth1 file in my base box  It looks like this:#VAGRANT-BEGIN# The contents below are automatically generated by Vagrant Do not modifyBOOTPROTOstaticIPADDR1921681161NETMASK2552552550DEVICEeth1#VAGRANT-END## Using commit [a92e03cf4ce936243d3959b7b5603262a234a58d](https://githubcom/onejli/vagrant/commit/a92e03cf4ce936243d3959b7b5603262a234a58d)As noted in my comments [here](https://githubcom/mitchellh/vagrant/pull/1577#issuecomment-26278873) and [here](https://githubcom/mitchellh/vagrant/pull/1577#issuecomment-26766758) the first box to the upped retains the ip address as specified by my stray ifcfg-eth1 (even though an updated ifcfg-eth1 has been pushed by vagrant)  The second box picks up the correct ip address as specified in the Vagrantfile$ VAGRANT_LOGdebug bundle exec bin/vagrant up web db### web[web] Configuring and enabling network interfaces INFO ssh: SSH is ready INFO guest: Detect guest for machine: #Vagrant::Machine:0x000001028f7200 INFO ssh: Execute: grep Fedora release 1[678] /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/pld-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/SuSE-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Ubuntu (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/arch-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/gentoo-release | grep CoreOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Debian (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: grep Gentoo /etc/gentoo-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/release | grep -i OmniOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: uname -s | grep OpenBSD (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO guest: Detected: redhat INFO guest: Full guest chain: [[:redhat #VagrantPlugins::GuestRedHat::Guest:0x00000100ddd230] [:linux #VagrantPlugins::GuestLinux::Guest:0x00000102934f88]] INFO guest: Execute capability: configure_networks (redhat) INFO ssh: SSH is ready INFO guest: Execute capability: network_scripts_dir (redhat) INFO ssh: Execute: touch /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: sed -e /^#VAGRANT-BEGIN//^#VAGRANT-END/ d /etc/sysconfig/network-scripts/ifcfg-eth1  /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-ifcfg-eth1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: /sbin/ifdown eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-network-entry_1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: ARPCHECKno /sbin/ifup eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-network-entry_1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 24b58063-f4c0-478c-804c-01578e5d7a8c --machinereadable] INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::Network:0x000001029ae6a8 INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::ClearNetworkInterfaces:0x000001029ae6d0 INFO interface: info: Mounting shared folders[web] Mounting shared folders$ VBoxManage guestproperty get web /VirtualBox/GuestInfo/Net/1/V4/IPValue: 1921681161$ bundle exec bin/vagrant ssh web -c ifconfig && cat /etc/sysconfig/network-scripts/ifcfg-eth1You appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin developmenteth0      Link encap:Ethernet  HWaddr 08:00:27:42:F5:32            inet addr:100215  Bcast:1002255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fe42:f532/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:494 errors:0 dropped:0 overruns:0 frame:0          TX packets:337 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:53238 (519 KiB)  TX bytes:44646 (435 KiB)eth1      Link encap:Ethernet  HWaddr 08:00:27:CB:5B:74            inet addr:1921681161  Bcast:1921681255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fecb:5b74/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:7 errors:0 dropped:0 overruns:0 frame:0          TX packets:21 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:420 (4200 b)  TX bytes:1194 (11 KiB)lo        Link encap:Local Loopback            inet addr:127001  Mask:255000          inet6 addr: ::1/128 Scope:Host          UP LOOPBACK RUNNING  MTU:16436  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:0 (00 b)  TX bytes:0 (00 b)#VAGRANT-BEGIN# The contents below are automatically generated by Vagrant Do not modifyBOOTPROTOnoneIPADDR172161100NETMASK2552552550DEVICEeth1PEERDNSno#VAGRANT-END#### /var/log/bootlogBringing up loopback interface:  ESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth0:  Determining IP information for eth0 doneESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth1:  ESC[60G[ESC[032m  OK  ESC[039m]^MStarting system logger: ESC[60G[ESC[032m  OK  ESC[039m]^M#### /var/log/messagesNov  2 20:07:17 hostfoo ntpd[1217]: ntpd 424p8@11612-o Thu May 13 14:38:25 UTC 2010 (1)Nov  2 20:07:17 hostfoo ntpd[1218]: precision  0086 usecNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #0 wildcard 0000#123 DisabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #1 wildcard ::#123 DisabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #2 lo ::1#123 EnabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #3 eth0 fe80::a00:27ff:fe42:f532#123 EnabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #4 eth1 fe80::a00:27ff:fe66:1d39#123 EnabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #5 lo 127001#123 EnabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #6 eth0 100215#123 EnabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on interface #7 eth1 1921681161#123 EnabledNov  2 20:07:17 hostfoo ntpd[1218]: Listening on routing socket on fd #24 for interface updatesNov  2 20:08:02 hostfoo ntpd[1218]: frequency initialized 0000 PPM from /var/lib/ntp/ntpdriftNov  2 20:08:02 hostfoo ntpd[1218]: Listening on interface #8 eth1 172161100#123 Enabled### db[db] Configuring and enabling network interfaces INFO ssh: SSH is ready INFO guest: Detect guest for machine: #Vagrant::Machine:0x00000102975b50 INFO ssh: Execute: grep Fedora release 1[678] /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/pld-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/SuSE-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Ubuntu (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/arch-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/gentoo-release | grep CoreOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Debian (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: grep Gentoo /etc/gentoo-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/release | grep -i OmniOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: uname -s | grep OpenBSD (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO guest: Detected: redhat INFO guest: Full guest chain: [[:redhat #VagrantPlugins::GuestRedHat::Guest:0x0000010299c3e0] [:linux #VagrantPlugins::GuestLinux::Guest:0x000001028f9708]] INFO guest: Execute capability: configure_networks (redhat) INFO ssh: SSH is ready INFO guest: Execute capability: network_scripts_dir (redhat) INFO ssh: Execute: touch /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: sed -e /^#VAGRANT-BEGIN//^#VAGRANT-END/ d /etc/sysconfig/network-scripts/ifcfg-eth1  /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-ifcfg-eth1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: /sbin/ifdown eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-network-entry_1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: ARPCHECKno /sbin/ifup eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-network-entry_1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 246ba01b-8a39-45d0-b33a-2e28ae7c6ef0 --machinereadable] INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::Network:0x0000010294b990 INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::ClearNetworkInterfaces:0x0000010294b9b8 INFO interface: info: Mounting shared folders[db] Mounting shared folders$ VBoxManage guestproperty get db /VirtualBox/GuestInfo/Net/1/V4/IPValue: 172161101$ bundle exec bin/vagrant ssh db -c ifconfig && cat /etc/sysconfig/network-scripts/ifcfg-eth1You appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin developmenteth0      Link encap:Ethernet  HWaddr 08:00:27:42:F5:32            inet addr:100215  Bcast:1002255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fe42:f532/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:493 errors:0 dropped:0 overruns:0 frame:0          TX packets:325 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:53215 (519 KiB)  TX bytes:43792 (427 KiB)eth1      Link encap:Ethernet  HWaddr 08:00:27:E1:8E:31            inet addr:172161101  Bcast:172161255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fee1:8e31/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:1 errors:0 dropped:0 overruns:0 frame:0          TX packets:14 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:60 (600 b)  TX bytes:872 (8720 b)lo        Link encap:Local Loopback            inet addr:127001  Mask:255000          inet6 addr: ::1/128 Scope:Host          UP LOOPBACK RUNNING  MTU:16436  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:0 (00 b)  TX bytes:0 (00 b)#VAGRANT-BEGIN# The contents below are automatically generated by Vagrant Do not modifyBOOTPROTOnoneIPADDR172161101NETMASK2552552550DEVICEeth1PEERDNSno#VAGRANT-END#### /var/log/bootlogBringing up loopback interface:  ESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth0:  Determining IP information for eth0 doneESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth1:  Error some other host already uses address 1921681161ESC[60G[ESC[031mFAILEDESC[039m]^MStarting system logger: ESC[60G[ESC[032m  OK  ESC[039m]^M#### /var/log/messagesNov  2 20:08:21 hostfoo ntpd[1276]: ntpd 424p8@11612-o Thu May 13 14:38:25 UTC 2010 (1)Nov  2 20:08:21 hostfoo ntpd[1277]: precision  3805 usecNov  2 20:08:21 hostfoo ntpd[1277]: Listening on interface #0 wildcard 0000#123 DisabledNov  2 20:08:21 hostfoo ntpd[1277]: Listening on interface #1 wildcard ::#123 DisabledNov  2 20:08:21 hostfoo ntpd[1277]: Listening on interface #2 lo ::1#123 EnabledNov  2 20:08:21 hostfoo ntpd[1277]: Listening on interface #3 eth0 fe80::a00:27ff:fe42:f532#123 EnabledNov  2 20:08:21 hostfoo ntpd[1277]: Listening on interface #4 lo 127001#123 EnabledNov  2 20:08:21 hostfoo ntpd[1277]: Listening on interface #5 eth0 100215#123 EnabledNov  2 20:08:21 hostfoo ntpd[1277]: Listening on routing socket on fd #22 for interface updatesNov  2 20:09:11 hostfoo ntpd[1277]: frequency initialized 0000 PPM from /var/lib/ntp/ntpdriftNov  2 20:09:11 hostfoo ntpd[1277]: Listening on interface #6 eth1 fe80::a00:27ff:fe36:89ba#123 EnabledNov  2 20:09:11 hostfoo ntpd[1277]: Listening on interface #7 eth1 172161101#123 EnabledUsing this patch [1ad756d52c05a3732ff06e642b12a3e664b41743](https://githubcom/onejli/vagrant/commit/1ad756d52c05a3732ff06e642b12a3e664b41743)---Both hosts come up with the ip addresses as specified in the Vagrantfile$ VAGRANT_LOGdebug bundle exec bin/vagrant up web db### web[web] Configuring and enabling network interfaces INFO ssh: SSH is ready INFO guest: Detect guest for machine: #Vagrant::Machine:0x000001044642b8 INFO ssh: Execute: grep Fedora release 1[678] /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/pld-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/SuSE-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Ubuntu (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/arch-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/gentoo-release | grep CoreOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Debian (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: grep Gentoo /etc/gentoo-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/release | grep -i OmniOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: uname -s | grep OpenBSD (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO guest: Detected: redhat INFO guest: Full guest chain: [[:redhat #VagrantPlugins::GuestRedHat::Guest:0x0000010416f9b8] [:linux #VagrantPlugins::GuestLinux::Guest:0x00000104334410]] INFO guest: Execute capability: configure_networks (redhat) INFO ssh: SSH is ready INFO guest: Execute capability: network_scripts_dir (redhat) INFO ssh: Execute: /sbin/ifdown eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: touch /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: sed -e /^#VAGRANT-BEGIN//^#VAGRANT-END/ d /etc/sysconfig/network-scripts/ifcfg-eth1  /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-ifcfg-eth1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: /sbin/ifdown eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-network-entry_1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: ARPCHECKno /sbin/ifup eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-network-entry_1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo 9524085f-66de-4092-a77a-fefdda1084e6 --machinereadable] INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::Network:0x000001041838c8 INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::ClearNetworkInterfaces:0x00000104183918 INFO interface: info: Mounting shared folders[web] Mounting shared folders$ VBoxManage guestproperty get web /VirtualBox/GuestInfo/Net/1/V4/IPValue: 172161100$ bundle exec bin/vagrant ssh web -c ifconfig && cat /etc/sysconfig/network-scripts/ifcfg-eth1You appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin developmenteth0      Link encap:Ethernet  HWaddr 08:00:27:42:F5:32            inet addr:100215  Bcast:1002255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fe42:f532/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:528 errors:0 dropped:0 overruns:0 frame:0          TX packets:367 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:55739 (544 KiB)  TX bytes:46915 (458 KiB)eth1      Link encap:Ethernet  HWaddr 08:00:27:7C:E6:C2            inet addr:172161100  Bcast:172161255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fe7c:e6c2/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:12 errors:0 dropped:0 overruns:0 frame:0          TX packets:25 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:720 (7200 b)  TX bytes:1550 (15 KiB)lo        Link encap:Local Loopback            inet addr:127001  Mask:255000          inet6 addr: ::1/128 Scope:Host          UP LOOPBACK RUNNING  MTU:16436  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:0 (00 b)  TX bytes:0 (00 b)#VAGRANT-BEGIN# The contents below are automatically generated by Vagrant Do not modifyBOOTPROTOnoneIPADDR172161100NETMASK2552552550DEVICEeth1PEERDNSno#VAGRANT-END#### /var/log/bootlogWARNING: Deprecated config file /etc/modprobeconf all config files belong into /etc/modprobed/Bringing up loopback interface:  ESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth0:  Determining IP information for eth0 doneESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth1:  ESC[60G[ESC[032m  OK  ESC[039m]^MStarting system logger: ESC[60G[ESC[032m  OK  ESC[039m]^M#### /var/log/messagesNov  2 19:58:27 hostfoo ntpd[1305]: ntpd 424p8@11612-o Thu May 13 14:38:25 UTC 2010 (1)Nov  2 19:58:27 hostfoo ntpd[1306]: precision  0075 usecNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #0 wildcard 0000#123 DisabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #1 wildcard ::#123 DisabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #2 lo ::1#123 EnabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #3 eth1 fe80::a00:27ff:fe7c:e6c2#123 EnabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #4 eth0 fe80::a00:27ff:fe42:f532#123 EnabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #5 lo 127001#123 EnabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #6 eth0 100215#123 EnabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on interface #7 eth1 1921681161#123 EnabledNov  2 19:58:27 hostfoo ntpd[1306]: Listening on routing socket on fd #24 for interface updatesNov  2 19:58:27 hostfoo ntpd[1306]: kernel time sync status 2040Nov  2 19:58:43 hostfoo kernel: ADDRCONF(NETDEV_UP): eth1: link is not readyNov  2 19:58:43 hostfoo kernel: e1000: eth1 NIC Link is Up 1000 Mbps Full Duplex Flow Control: RXNov  2 19:58:43 hostfoo kernel: ADDRCONF(NETDEV_CHANGE): eth1: link becomes readyNov  2 19:59:22 hostfoo ntpd[1306]: frequency initialized 0000 PPM from /var/lib/ntp/ntpdriftNov  2 19:59:22 hostfoo ntpd[1306]: Listening on interface #8 eth1 172161100#123 EnabledNov  2 19:59:22 hostfoo ntpd[1306]: Deleting interface #7 eth1 1921681161#123 interface stats: received0 sent0 dropped0 active_time55 secs### db[db] Configuring and enabling network interfaces INFO ssh: SSH is ready INFO guest: Detect guest for machine: #Vagrant::Machine:0x000001044c2ca0 INFO ssh: Execute: grep Fedora release 1[678] /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/pld-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/SuSE-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Ubuntu (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/arch-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/gentoo-release | grep CoreOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/issue | grep Debian (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: grep Gentoo /etc/gentoo-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/release | grep -i OmniOS (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: uname -s | grep OpenBSD (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /etc/redhat-release (sudofalse) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO guest: Detected: redhat INFO guest: Full guest chain: [[:redhat #VagrantPlugins::GuestRedHat::Guest:0x00000104172a50] [:linux #VagrantPlugins::GuestLinux::Guest:0x000001040a8ea8]] INFO guest: Execute capability: configure_networks (redhat) INFO ssh: SSH is ready INFO guest: Execute capability: network_scripts_dir (redhat) INFO ssh: Execute: /sbin/ifdown eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: touch /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: sed -e /^#VAGRANT-BEGIN//^#VAGRANT-END/ d /etc/sysconfig/network-scripts/ifcfg-eth1  /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-ifcfg-eth1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: /sbin/ifdown eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: cat /tmp/vagrant-network-entry_1  /etc/sysconfig/network-scripts/ifcfg-eth1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: ARPCHECKno /sbin/ifup eth1 2 /dev/null (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO ssh: Execute: rm /tmp/vagrant-network-entry_1 (sudotrue) INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO subprocess: Starting process: [/usr/bin/VBoxManage showvminfo d8b5b174-62e5-41da-a833-7fa348e586ce --machinereadable] INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::Network:0x000001044420c8 INFO warden: Calling OUT action: #VagrantPlugins::ProviderVirtualBox::Action::ClearNetworkInterfaces:0x00000104442118 INFO interface: info: Mounting shared folders[db] Mounting shared folders$ VBoxManage guestproperty get db /VirtualBox/GuestInfo/Net/1/V4/IPValue: 172161101$ bundle exec bin/vagrant ssh db -c ifconfig && cat /etc/sysconfig/network-scripts/ifcfg-eth1You appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin developmenteth0      Link encap:Ethernet  HWaddr 08:00:27:42:F5:32            inet addr:100215  Bcast:1002255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fe42:f532/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:495 errors:0 dropped:0 overruns:0 frame:0          TX packets:325 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:53568 (523 KiB)  TX bytes:44017 (429 KiB)eth1      Link encap:Ethernet  HWaddr 08:00:27:8F:C6:E0            inet addr:172161101  Bcast:172161255  Mask:2552552550          inet6 addr: fe80::a00:27ff:fe8f:c6e0/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:25 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:0 (00 b)  TX bytes:1530 (14 KiB)lo        Link encap:Local Loopback            inet addr:127001  Mask:255000          inet6 addr: ::1/128 Scope:Host          UP LOOPBACK RUNNING  MTU:16436  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:0 (00 b)  TX bytes:0 (00 b)#VAGRANT-BEGIN# The contents below are automatically generated by Vagrant Do not modifyBOOTPROTOnoneIPADDR172161101NETMASK2552552550DEVICEeth1PEERDNSno#VAGRANT-END#### /var/log/bootlogWARNING: Deprecated config file /etc/modprobeconf all config files belong into /etc/modprobed/Bringing up loopback interface:  ESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth0:  Determining IP information for eth0 doneESC[60G[ESC[032m  OK  ESC[039m]^MBringing up interface eth1:  ESC[60G[ESC[032m  OK  ESC[039m]^MStarting system logger: ESC[60G[ESC[032m  OK  ESC[039m]^M#### /var/log/messagesNov  2 19:59:41 hostfoo ntpd[1230]: ntpd 424p8@11612-o Thu May 13 14:38:25 UTC 2010 (1)Nov  2 19:59:41 hostfoo ntpd[1231]: precision  0068 usecNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #0 wildcard 0000#123 DisabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #1 wildcard ::#123 DisabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #2 lo ::1#123 EnabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #3 eth0 fe80::a00:27ff:fe42:f532#123 EnabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #4 eth1 fe80::a00:27ff:fe8f:c6e0#123 EnabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #5 lo 127001#123 EnabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #6 eth0 100215#123 EnabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on interface #7 eth1 1921681161#123 EnabledNov  2 19:59:41 hostfoo ntpd[1231]: Listening on routing socket on fd #24 for interface updatesNov  2 19:59:48 hostfoo kernel: ADDRCONF(NETDEV_UP): eth1: link is not readyNov  2 19:59:48 hostfoo kernel: e1000: eth1 NIC Link is Up 1000 Mbps Full Duplex Flow Control: RXNov  2 19:59:48 hostfoo kernel: ADDRCONF(NETDEV_CHANGE): eth1: link becomes readyNov  2 20:00:26 hostfoo ntpd[1231]: frequency initialized 0000 PPM from /var/lib/ntp/ntpdriftNov  2 20:00:26 hostfoo ntpd[1231]: Listening on interface #8 eth1 172161101#123 EnabledNov  2 20:00:26 hostfoo ntpd[1231]: Deleting interface #7 eth1 1921681161#123 interface stats: received0 sent0 dropped0 active_time45 secs,,647,0.7125193199381762,0.29545454545454547,15442,355.8476881233001,30.695505763502137,55.36847558606398,5549,5,1381,38,travis,onejli,mitchellh,false,mitchellh,0,0,8,4,878,false,false,false,false,0,2,0,0,0,0,30243
2368945,mitchellh/vagrant,ruby,2448,1383327904,1385249667,1385249667,31969,31969,github,false,false,false,44,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.7516937378261055,0.10986104235806984,7,mitchell.hashimoto@gmail.com,plugins/hosts/bsd/host.rb,7,0.022727272727272728,0,0,true,Update hostrb mapall and maproot are mutually exclusive options Currently when trying to use maproot mapall is getting automatically added which prevents us from using the NFS mount This change turns off the adding of mapall if maproot has been specified as an option,,646,0.7120743034055728,0.29545454545454547,15442,355.8476881233001,30.695505763502137,55.36847558606398,5548,5,1380,39,travis,rimckenn,mitchellh,false,mitchellh,0,0,0,0,273,false,false,false,false,0,0,0,0,0,0,24252
2366193,mitchellh/vagrant,ruby,2445,1383279683,1385250080,1385250080,32779,32779,github,false,false,false,27,1,1,0,1,0,1,0,1,0,0,2,2,1,0,1,0,0,2,2,1,0,1,8,0,8,0,9.64160780374418,0.28233570151192666,7,mitchell.hashimoto@gmail.com,bin/vagrant|website/docs/source/v2/debugging.html.md,5,0.016233766233766232,0,0,true,Add --debug option as a shortcut for VAGRANT_LOGdebug When asking or submitting debug information a command line switch is easier and faster than using an environment variable,,645,0.7116279069767442,0.29545454545454547,15442,355.8476881233001,30.695505763502137,55.36847558606398,5547,5,1380,36,travis,tmatilai,mitchellh,false,mitchellh,4,1.0,43,41,1647,false,true,true,false,0,1,4,1,0,0,32839
2366076,mitchellh/vagrant,ruby,2444,1383277450,1385250338,1385250338,32821,32821,github,false,false,false,23,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.8267803253107004,0.14134285867356577,6,teemu.matilainen@iki.fi,plugins/guests/debian/cap/change_host_name.rb,6,0.01948051948051948,0,0,false,Fix hostname setting also in Debian part N Port #2384 / #2383 for Debian guests Fixes #2443This should really be DRYed up,,644,0.7111801242236024,0.29545454545454547,15442,355.8476881233001,30.695505763502137,55.36847558606398,5547,5,1379,35,travis,tmatilai,mitchellh,false,mitchellh,3,1.0,43,41,1646,false,true,true,false,0,1,3,1,0,0,32881
2347794,mitchellh/vagrant,ruby,2437,1383071987,1385267925,1385267925,36538,36538,github,false,false,false,99,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,9,8,9,8,13.24310188453294,0.38779843952079646,6,mitchell.hashimoto@gmail.com,lib/vagrant/environment.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb,6,0.01948051948051948,0,0,false,Plugins loaded hook As I just wrote on the [mailing list](https://groupsgooglecom/d/msg/vagrant-up/-1DQRhzihZo/5ssgqmVqZFsJ) about a potential vagrant-dotenv plugin and based on [what we had to do on Bindler](https://githubcom/fgrehm/bindler/blob/master/lib/bindler/bend_vagrantrb#L7-L16) I propose that we add a new hook to Environment that gets triggered after loading plugins but prior to loading VagrantfilesThis will allow plugin developers to do all sorts of magic before configurations from Vagrantfiles are parsed The current [:environment_load](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/environmentrb#L135) hook [ends](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/environmentrb#L271) up [parsing](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/environmentrb#L513) the Vagrantfiles and we cant use thatI hope thats enough information for this to get merged but Id be fine to provide use cases if needed :D,,643,0.7107309486780715,0.29545454545454547,15442,355.8476881233001,30.695505763502137,55.36847558606398,5546,5,1377,27,travis,fgrehm,mitchellh,false,mitchellh,17,0.8823529411764706,343,142,1637,true,true,true,false,9,49,14,2,10,0,36598
2343799,mitchellh/vagrant,ruby,2434,1383013087,1383015334,1383015334,37,37,github,false,false,false,45,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9885022931146565,0.1167955370744967,9,mitchell.hashimoto@gmail.com,lib/vagrant/machine.rb,9,0.02875399361022364,0,0,false,Machine ID should always be a string In a provider implementation while creating a new machine the ID coming from provider logic could be of any type (in many cases is a Fixnum) Without a proper cast this could cause weird failures on subsequent actions,,642,0.7102803738317757,0.30670926517571884,15442,355.8476881233001,30.695505763502137,55.36847558606398,5546,5,1376,26,travis,emyl,fgrehm,false,fgrehm,2,1.0,9,2,1019,false,true,true,false,2,3,0,0,0,0,37
2337647,mitchellh/vagrant,ruby,2426,1382943264,1385250253,1385250253,38389,38389,github,false,false,false,64,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,17,0,17,0,9.14056390846563,0.26766364725324593,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/config.rb|website/docs/source/v2/virtualbox/configuration.html.md,2,0.006230529595015576,0,0,false,Add shortcut for setting the memory size for VirtualBox VM Maybe Im not the only one who is too lazy to always google for the correct syntax for setting the memory size of a VM So here is a shortcut for it:rubyconfigvmprovider :virtualbox do |vbox|  vboxmemory  1024endI would love to see the same implemented for VMware providers ),,641,0.7098283931357254,0.3177570093457944,15442,355.8476881233001,30.695505763502137,55.36847558606398,5546,5,1376,35,travis,tmatilai,mitchellh,false,mitchellh,2,1.0,43,41,1643,false,true,true,false,0,1,2,1,0,0,38449
2336031,mitchellh/vagrant,ruby,2424,1382912258,1385268415,1385268415,39209,39209,github,false,false,false,65,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.098710751948181,0.12002277757573312,3,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/provision.rb,3,0.009345794392523364,0,0,false,Store the final provision_enabled value to env Since 130 Vagrant uses a sentinel file to decide if it should run the provisioners or not (unless the user explicitly passes --[no-]provision) Store that knowledge back to the env to let other middleware actions to use itNow for example  vagrant-berkshelf does the cookbook dependency resolving and installing on every vagrant up/reload unless --no-provision is specified ([code](https://githubcom/RiotGames/vagrant-berkshelf/blob/v134/lib/berkshelf/vagrant/env_helpersrb#L60)),,640,0.709375,0.3177570093457944,15442,355.8476881233001,30.695505763502137,55.36847558606398,5546,5,1375,25,travis,tmatilai,mitchellh,false,mitchellh,1,1.0,42,41,1642,false,true,true,false,0,1,1,1,0,0,44
2325542,mitchellh/vagrant,ruby,2420,1382700734,1385268251,1385268251,42731,42731,github,false,false,false,59,1,1,0,2,0,2,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,17,0,17,0,8.407266806757342,0.24619046696272898,3,mitchell.hashimoto@gmail.com,plugins/commands/plugin/action/install_gem.rb|plugins/commands/plugin/action/prune_gems.rb,3,0.009036144578313253,0,0,true,compatibility with rubygems 2x This patch makes the vagrant plugin system compatible with Rubygems 2x Even though the Vagrant bundles Rubygems this makes integration in some platforms that dont have official packages (like Gentoo) easier It should also help for when you decide to upgrade the bundled Rubygems versionI will try to get that Rubygems bug patched upstream,,639,0.7089201877934272,0.34036144578313254,15442,355.8476881233001,30.695505763502137,55.36847558606398,5545,5,1373,25,travis,tmacedo,mitchellh,false,mitchellh,0,0,19,14,1942,false,false,false,false,0,1,0,0,0,0,42791
2317826,mitchellh/vagrant,ruby,2417,1382608150,1385250151,1385250151,43973,43973,github,false,false,false,40,1,1,0,3,2,5,0,3,1,0,0,1,1,0,0,1,0,0,1,1,0,0,5,0,5,0,3.981255199946833,0.11658332003748356,0,,.vimrc,0,0.0,0,1,false,vimrc with vagrant tabstop settings not everyone is using thie king of tabstop settings as defaultso if we have it available in the project folder it make sure we dont have to reformat everything after a small change :),,638,0.7084639498432602,0.34234234234234234,15442,355.8476881233001,30.695505763502137,55.36847558606398,5545,5,1372,35,travis,BlackIkeEagle,mitchellh,false,mitchellh,1,0.0,48,121,1241,false,true,true,false,0,2,1,0,0,0,534
2315441,mitchellh/vagrant,ruby,2414,1382569540,1382602045,1382602045,541,541,github,false,false,false,24,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.350051189732344,0.12738161915807986,0,,plugins/providers/virtualbox/driver/version_4_1.rb,0,0.0,0,0,false,Automatically enable symlinks on vboxsf for VirtualBox 41 See #713 and 387692f9c8fa4031050646e2773b3d2d9b2c994eNote VirtualBox 41 is still used for example in Ubuntu 1204 LTS,,637,0.7080062794348508,0.3261538461538461,15439,355.91683399183887,30.70147030248073,55.37923440637347,5545,5,1371,27,travis,Schpidi,mitchellh,false,mitchellh,0,0,8,27,1073,false,false,false,false,0,0,0,0,0,0,541
2312583,mitchellh/vagrant,ruby,2412,1382543750,1382602125,1382602125,972,972,github,false,false,false,73,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,4.505024278279828,0.13191966298425414,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/plugins/configuration.html.md,2,0.006006006006006006,0,0,false,document _detected_errors pattern in plugin configuration guide It took me a little while to figure out how to validate the keys for https://githubcom/mitchellh/vagrant-rackspace/pull/43  It turned out there is a commonly used pattern that solves this but it isnt mentioned in the validation guideThis PR documents the pattern in the guide and also clarifies that the returned hash may have section keys with no values (this is the behavior of many core plugins),,636,0.7075471698113207,0.34234234234234234,15439,355.91683399183887,30.70147030248073,55.37923440637347,5545,5,1371,26,travis,maxlinc,mitchellh,false,mitchellh,0,0,37,12,841,false,false,false,false,0,1,0,0,0,0,972
2305388,mitchellh/vagrant,ruby,2408,1382453659,,1382603582,2498,,unknown,false,false,false,32,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.329688207980285,0.12678533431605638,1,mitchell.hashimoto@gmail.com,lib/vagrant/ui.rb,1,0.003003003003003003,0,0,false,Vagrant::UI::Basic#ask: support a noecho option for stdin Support using ask without echoing back stdin for passwords and etcRelies on io/console and http://ruby-docorg/stdlib-200/libdoc/io/console/rdoc/IOhtml#method-i-noechoHowever io/console is not supported in 187 or 192,,635,0.7086614173228346,0.34234234234234234,15439,355.91683399183887,30.70147030248073,55.37923440637347,5545,5,1370,25,travis,SpringMT,mitchellh,false,,0,0,40,9,1003,false,false,false,false,0,0,0,0,0,0,2276
2303883,mitchellh/vagrant,ruby,2407,1382437806,,1382602326,2742,,unknown,false,false,false,100,2,2,0,0,0,0,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,127,0,127,0,13.023013625757212,0.38135012431170046,7,mitchell.hashimoto@gmail.com,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb|plugins/guests/linux/cap/mount_nfs.rb|plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,7,0.021021021021021023,0,0,false,Persistent guest mount linux     After the change where the provisioning is only run the first boot or    forced we have encoutered some issues of services not starting because    of the files/folders were missing due to the shared folders to the host    were not yet there during startup        Example:    - website folder shared with guest    - guest starts    - apache starts website folder does not exist apache fails    - no provisioning so after mounting the shares apache is still down    - result: we have a non-working system        This is only a patch for linux guests but it solves the described    problem,,634,0.7097791798107256,0.34234234234234234,15439,355.91683399183887,30.70147030248073,55.37923440637347,5545,5,1370,25,travis,BlackIkeEagle,mitchellh,false,,0,0,48,121,1239,false,true,true,false,0,1,0,0,0,0,-1
2302077,mitchellh/vagrant,ruby,2405,1382403930,1385370474,1385370474,49382,49382,github,false,false,false,173,6,6,0,1,0,1,0,1,1,0,2,3,3,0,0,1,0,2,3,3,0,0,116,0,116,0,41.4542820486164,1.2138968803062264,3,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/provision.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action/builtin/provisioner_run.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/provision.rb|lib/vagrant/action/builtin/provisioner_run.rb|lib/vagrant/action/builtin/provision.rb,3,0.006006006006006006,1,0,false,Support hooking around provisioners runs This PR implements GH-2044 and although I wasnt able to spike on changing vagrant-cachier code to remove the monkey patches we have in place I wanted to open this up for discussion / code review as I was able to spot 2 other use cases for it :)Apart from using it on vagrant-cachier I want to use this feature to finally support https://githubcom/fgrehm/vagrant-notify/issues/5 and another use case would be a plugin that keeps track of the time taken on each provisioner run and reports back to the user something like [vagrant-awss TimedProvision](https://githubcom/mitchellh/vagrant-aws/blob/master/lib/vagrant-aws/action/timed_provisionrb) but targeting  multiple providersTo try this out you can use the following Vagrantfile using this branch:rubyclass Action  def initialize(app env)    @app  app  end  def call(env)    puts before    puts name: #{env[:provider_name]}    @appcall env    puts after  endendclass Plugin  Vagrantplugin(2)  name testing  action_hook hook-name :provisioner_run do |hook|    hookbefore Vagrant::Action::Builtin::ProvisionerRun Action  endendVagrantconfigure(2) do |config|  configvmbox  some-box  configvmprovision :shell inline: echo hello  configvmprovision :shell inline: echo hello 2end,,633,0.7093206951026856,0.34234234234234234,15439,355.91683399183887,30.70147030248073,55.37923440637347,5545,5,1369,24,travis,fgrehm,mitchellh,false,mitchellh,16,0.875,343,142,1629,true,true,true,false,10,50,14,2,12,0,49442
2298778,mitchellh/vagrant,ruby,2404,1382372404,1382602384,1382602384,3833,3833,github,false,false,false,4,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,3.9103171586067944,0.11450469830797175,0,,plugins/commands/provision/command.rb,0,0.0,0,0,false,Add --no-parallel to provision ,,632,0.7088607594936709,0.34036144578313254,15438,355.93988858660447,30.70345899727944,55.38282160901671,5545,5,1369,25,travis,canausa,mitchellh,false,mitchellh,2,1.0,4,4,949,false,true,false,false,0,6,0,0,0,0,3832
2296213,mitchellh/vagrant,ruby,2401,1382332672,1382384621,1382384621,865,865,github,false,false,false,36,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,3.9958938091810237,0.1170106148765654,4,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/wait_for_communicator.rb,4,0.012048192771084338,0,0,false,Sleep to avoid 100% CPU in waiting time of vagrant up When vagrant up is waiting for the vbox to start up the ruby process constantly consumes 100% CPUAdd a sleep to save some energy,,631,0.7083993660855784,0.34036144578313254,15438,355.93988858660447,30.70345899727944,55.38282160901671,5545,5,1369,23,travis,txchen,mitchellh,false,mitchellh,0,0,26,5,929,false,false,false,false,0,0,0,0,0,0,281
2295768,mitchellh/vagrant,ruby,2400,1382320817,1382602533,1382602533,4695,4695,github,false,false,false,57,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.507207841942045,0.1319832773709788,0,,plugins/guests/freebsd/cap/mount_nfs_folder.rb,0,0.0,0,0,false,fix nfs mount fail with FreeBSD91 (synced_folder) following error occurs in mount of nfs[default] Mounting NFS shared foldersThe following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failedmount 10001:/Users/foo/bar /vagrantStdout from the command:Stderr from the command:mount: 10001:/Users/foo/bar: No such file or directory,,630,0.707936507936508,0.34036144578313254,15438,355.93988858660447,30.70345899727944,55.38282160901671,5545,5,1368,23,travis,hikch,mitchellh,false,mitchellh,0,0,0,0,152,false,false,false,false,0,0,0,0,0,0,4695
2283170,mitchellh/vagrant,ruby,2390,1382071590,1385250410,1385250410,52920,52920,github,false,false,false,79,2,2,0,4,0,4,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,74,0,74,0,18.226690261435927,0.5337269548442867,9,mitchell.hashimoto@gmail.com,plugins/guests/solaris11/cap/mount_virtualbox_shared_folder.rb|plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb|plugins/guests/solaris/cap/mount_virtualbox_shared_folder.rb|plugins/guests/solaris11/cap/mount_virtualbox_shared_folder.rb,7,0.00819672131147541,0,0,true,Allow owner & group to be supplied as an Integer and skip lookup I ran into a situation where I want my synced folder to be owned by user & group that wont exist on first boot theyll only be created after salt finishes provisioning the boxThis pull allows for a user to specify a uid & gid as an integer and then skip the backtick lookup during the mountIve tested it with the linux guest plugin,,629,0.7074721780604134,0.4016393442622951,15438,355.93988858660447,30.70345899727944,55.38282160901671,5544,5,1366,32,travis,borgstrom,mitchellh,false,mitchellh,0,0,19,6,566,false,false,false,false,0,0,0,0,0,0,8857
2280417,mitchellh/vagrant,ruby,2384,1382036354,1382041648,1382041648,88,88,github,false,false,false,16,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.887502301812492,0.1431186116539645,10,teemu.matilainen@iki.fi,plugins/guests/ubuntu/cap/change_host_name.rb,10,0.0273972602739726,0,0,false,Fixing so localhost hosts file entry is not lost when updating hostname  Addresses Issue #2383,,628,0.7070063694267515,0.4,15427,356.1936863939846,30.725351656187204,55.42231153173009,5543,5,1365,21,travis,nmische,mitchellh,false,mitchellh,0,0,33,11,1426,false,false,false,false,1,1,0,0,0,0,88
2279981,mitchellh/vagrant,ruby,2382,1382032479,1382041768,1382041768,154,154,github,false,false,false,68,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,16,0,16,0,4.231302891017957,0.12390340870536722,2,miurahr@linux.com,plugins/hosts/gentoo/host.rb,2,0.005479452054794521,0,0,false,hosts/gentoo: recognize systemd for nfsd startup and replace service command with /etc/initd/nfs Gentoo does not use the service command for init scripts rather script execution is done through /etc/initd/ That will still not work for users using systemd The patch checks for the presence of systemd from the current processes and starts the services The service units used in the patch are available through official Gentoo nfs packages,,627,0.7065390749601276,0.4,15427,356.1936863939846,30.725351656187204,55.42231153173009,5543,5,1365,20,travis,timgus,mitchellh,false,mitchellh,0,0,0,0,286,false,false,false,false,0,0,0,0,0,0,154
2267737,mitchellh/vagrant,ruby,2376,1381872468,1381872513,1381872513,0,0,github,false,false,false,30,2,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,9.59962287614509,0.28147996468636866,10,philipp.gysin@cargomedia.ch,plugins/guests/debian/cap/change_host_name.rb|plugins/guests/ubuntu/cap/change_host_name.rb,8,0.021621621621621623,0,0,false,Fix fqdn/hostname setting on Debian and other that precise64 Ubuntus Incorporate fix of #2334 also to Debian guests And use the old name in regexp instead of hard coded precise64,,626,0.7060702875399361,0.4081081081081081,15053,365.04351292101245,31.488739786089155,56.799309107819035,5541,5,1363,20,travis,tmatilai,mitchellh,false,mitchellh,0,0,41,41,1630,false,true,true,false,0,1,0,1,0,0,0
2262431,mitchellh/vagrant,ruby,2372,1381797973,1381812582,1381812582,243,243,github,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.39482258697873,0.1298586223884332,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/multi-machine/index.html.md,2,0.005633802816901409,0,0,false,(doc) comma typo comma typo - noticed while reading about vagrant multivm support,,625,0.7056,0.38309859154929576,14919,368.3222736108318,31.771566458877945,57.309471144178566,5541,5,1362,30,travis,tehmaspc,mitchellh,false,mitchellh,0,0,11,45,1127,false,false,true,false,0,0,0,0,0,0,243
2257681,mitchellh/vagrant,ruby,2370,1381738278,1381812654,1381812654,1239,1239,github,false,false,false,20,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.60941556284297,0.13619943539474882,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/plugins/packaging.html.md,2,0.005633802816901409,0,0,false,docs/plugins: Remove sentence about commands in packaging section Seems like the result of an unfortunate copy&paste from the commandssection,,624,0.7051282051282052,0.38309859154929576,14919,368.3222736108318,31.771566458877945,57.309471144178566,5541,5,1362,29,travis,catharsis,mitchellh,false,mitchellh,1,1.0,11,10,1597,false,false,false,false,0,0,1,0,0,0,1239
2249849,mitchellh/vagrant,ruby,2366,1381538600,1385371304,1385371304,63818,63818,github,false,false,false,54,1,1,1,3,0,4,0,5,0,0,4,4,3,0,1,0,0,4,4,3,0,1,59,0,59,0,17.90598716424418,0.5290877571584144,75,tpltnt.github@dropcut.net,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|templates/locales/en.yml|website/docs/source/v2/provisioning/ansible.html.md,39,0.0784313725490196,0,2,true,Ansible: Improvements for extra_vars argument extra_vars argument can now:- contains a hierarchical set of parameters (instead of flat Key-Value Pairs) **ALREADY** implemented in #2131- alternatively refers to a configuration file (instead of embedded Hash)See Ansible Documentation for version requirement details:http://wwwansibleworkscom/docs/playbooks_variableshtml#passing-variables-on-the-command-line**Related Issues*** #2180* #2131* #2174* #2128,,623,0.7046548956661316,0.3865546218487395,14919,368.3222736108318,31.771566458877945,57.309471144178566,5541,5,1359,29,travis,gildegoma,mitchellh,false,mitchellh,4,0.75,35,122,1097,false,true,true,false,0,6,1,0,0,0,67
2248087,mitchellh/vagrant,ruby,2365,1381520285,1381812889,1381812889,4876,4876,github,false,false,false,72,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,22,0,22,0,3.8773752034692883,0.11456903946417019,2,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/base.rb,2,0.00558659217877095,1,0,true,Move exception raising back into retryable block in VirtualBox driver command execution For some reason the actual raising of the exception was moved outside of the retryable block by @mitchellh in commit bc2a9fe780e44fcf3fb989178b0582a8f2514895 which broke the ability to retry VirtualBox commands if they fail and are marked as retryableI discovered this issue when looking at issue #1622 and discovered that this solution for that issue retrying the command was not functioning,,622,0.7041800643086816,0.388268156424581,14919,368.3222736108318,31.771566458877945,57.309471144178566,5541,5,1359,28,travis,Tomdarkness,mitchellh,false,mitchellh,0,0,1,0,662,false,false,false,false,0,2,0,0,0,0,3269
2247356,mitchellh/vagrant,ruby,2364,1381512577,1381512805,1381512805,3,3,github,false,false,false,29,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.7769289222121065,0.14114926021792915,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/plugins/development-basics.html.md,2,0.0056022408963585435,0,0,true,docs/plugins: Correct a broken link in the development basics section Im assuming the link is supposed to point to the packagingand distribution section With this patch it does,,621,0.7037037037037037,0.3865546218487395,14919,368.3222736108318,31.771566458877945,57.309471144178566,5540,5,1359,27,travis,catharsis,fgrehm,false,fgrehm,0,0,11,10,1594,false,false,false,false,0,0,0,0,0,0,3
2238828,mitchellh/vagrant,ruby,2359,1381410285,1381813611,1381813611,6722,6722,github,false,false,false,20,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.403748570782371,0.13012248310026134,9,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/provisioner.rb,9,0.024657534246575342,0,1,false,Fix seed_master key file name As per https://githubcom/saltstack/salty-vagrant/pull/98 and https://githubcom/saltstack/salty-vagrant/issues/97 the expected file name for minion is minion not seed-minionpub,,620,0.7032258064516129,0.4,14919,368.3222736108318,31.771566458877945,57.309471144178566,5536,5,1358,27,travis,viq,mitchellh,false,mitchellh,2,0.5,15,36,957,true,false,false,false,1,4,3,0,2,0,262
2237551,mitchellh/vagrant,ruby,2358,1381391712,1381813162,1381813162,7024,7024,github,false,false,false,210,1,1,0,2,0,2,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,2,0,2,0,8.966068518727822,0.2649304519891499,55,tpltnt.github@dropcut.net,plugins/kernel_v2/config/vm.rb|templates/locales/en.yml,38,0.10410958904109589,0,0,false,Disallow dot and hyphen as first character of hostnames - Causes hostname to be set to an invalid value on some systems which  also causes malfunction of hostname -f so it cannot be changedSo I spent many hours yesterday trying to debug what I assumed was a folder related to synced folders After having a good nights sleep (6h is what we all get right) I realized I had actually messed up the hostnameInitially I misremembered the key name for ENV so I set it to something like configvmhostname  #{ENV[username]}-starter which probably caused some command to fail with a lovely No Error in pagefuls of Vagrant log output Some sort of sedding of /etc/hosts and /etc/hostname had already taken place though This meant that even after I noticed my hostname was dodgy I couldnt change it through the config because hostname -f would fail I guess the the function that changes the hostname could be made more robust by assuming that hostname -f can fail or something but I concluded that the biggest culprit here was that you can set a hostname that starts with a dash I was also skeptical about having a hostname that starts with a dot so I added that as a bonus,,619,0.7027463651050081,0.4,14919,368.3222736108318,31.771566458877945,57.309471144178566,5536,5,1358,28,travis,sgronblo,mitchellh,false,mitchellh,0,0,24,9,1197,false,false,false,false,0,0,0,0,0,0,3
2237006,mitchellh/vagrant,ruby,2357,1381380847,1381813272,1381813272,7207,7207,github,false,false,false,15,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,21,0,21,0,4.735304216135042,0.1399193284845414,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/puppet_apply.html.md,2,0.005479452054794521,0,1,false,docs: add Puppet Hiera docs [GH-2317] Document hiera_config_path and working_directory options for PuppetFixes #2317,,618,0.7022653721682848,0.4,14919,368.3222736108318,31.771566458877945,57.309471144178566,5536,5,1358,26,travis,3flex,mitchellh,false,mitchellh,1,1.0,2,0,1390,false,true,false,false,1,0,1,0,0,0,7207
2235988,mitchellh/vagrant,ruby,2355,1381364393,,1381813323,7482,,unknown,false,false,false,35,1,1,0,0,0,0,0,1,0,0,5,5,4,0,1,0,0,5,5,4,0,1,16,0,16,0,20.41067291250636,0.6030969748690093,44,tpltnt.github@dropcut.net,lib/vagrant/errors.rb|plugins/commands/up/command.rb|plugins/commands/up/start_mixins.rb|plugins/providers/virtualbox/action/boot.rb|templates/locales/en.yml,38,0.008108108108108109,0,0,false,#2354: vagrant cannot be easily initialized for offline use This is an example implementation for https://githubcom/mitchellh/vagrant/issues/2354 I dont think this is necessarily the best way to do it but it shows what Im looking for ,,617,0.7034035656401945,0.4081081081081081,14919,368.3222736108318,31.771566458877945,57.309471144178566,5536,5,1357,25,travis,virtuald,mitchellh,false,,0,0,16,0,997,false,false,false,false,0,1,0,0,0,0,-1
2234457,mitchellh/vagrant,ruby,2353,1381347290,1381813397,1381813397,7768,7768,github,false,false,false,37,1,1,0,1,0,1,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.861161245825804,0.14363816686864922,5,mitchell.hashimoto@gmail.com,website/docs/source/layouts/layout.erb,5,0.013513513513513514,0,0,false,set HTML charset to UTF-8 Fixes rendering issues with the tree output used as an example on some pages which otherwise displayed Â characters in some places when encoding wasnt detected properly by the browserFixes #2352,,616,0.702922077922078,0.4081081081081081,14919,368.3222736108318,31.771566458877945,57.309471144178566,5536,5,1357,24,travis,3flex,mitchellh,false,mitchellh,0,0,2,0,1389,false,true,false,false,0,0,0,0,0,0,7768
2230887,mitchellh/vagrant,ruby,2347,1381301474,1381813765,1381813765,8538,8538,github,false,false,false,7,1,1,0,1,0,1,0,1,6,0,0,6,6,0,0,6,0,0,6,6,0,0,153,0,153,0,26.206431948207957,0.7743507476615563,0,,plugins/guests/esxi/cap/change_host_name.rb|plugins/guests/esxi/cap/configure_networks.rb|plugins/guests/esxi/cap/halt.rb|plugins/guests/esxi/cap/mount_nfs_folder.rb|plugins/guests/esxi/guest.rb|plugins/guests/esxi/plugin.rb,0,0.0,0,0,false,guests/esxi: Add support for VMware ESXi guests ,,615,0.7024390243902439,0.4128686327077748,14919,368.3222736108318,31.771566458877945,57.309471144178566,5535,5,1357,22,travis,dougm,mitchellh,false,mitchellh,0,0,67,4,1814,false,false,false,false,0,0,0,0,0,0,8538
2227025,mitchellh/vagrant,ruby,2343,1381251759,1381812938,1381812938,9352,9352,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,15,0,15,0,4.770656195865523,0.1409643306841527,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/networking/forwarded_ports.html.md,2,0.005376344086021506,0,0,false,describing the usage of protocols for forwarded network ports Absent from the v2 documentation is the usage of the protocol parameter when defining a forwarded port This submission attempts to resolve that discrepancy,,614,0.7019543973941368,0.4112903225806452,14919,368.3222736108318,31.771566458877945,57.309471144178566,5535,5,1356,28,travis,gwaldo,mitchellh,false,mitchellh,0,0,20,25,1314,false,false,false,false,0,2,0,0,0,0,9352
2225131,mitchellh/vagrant,ruby,2341,1381227692,1381252250,1381252250,409,409,github,false,false,false,15,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.511489004773092,0.13330640520645892,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/vmware/index.html.md,2,0.005376344086021506,0,0,false,Update indexhtmlmd As per http://wwwvagrantupcom/vmware#buy-now vmware provider supports also Fusion 6 and Workstation 10GH-2341,,613,0.7014681892332789,0.4112903225806452,14919,368.3222736108318,31.771566458877945,57.309471144178566,5535,5,1356,21,travis,tuminoid,fgrehm,false,fgrehm,0,0,7,8,845,false,true,true,false,0,0,0,0,0,0,409
2215605,mitchellh/vagrant,ruby,2334,1381052502,1381814513,1381814513,12700,12700,github,false,false,false,27,5,1,0,7,1,8,0,9,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,17,0,4.368667473567027,0.12908628522145627,6,mitchell.hashimoto@gmail.com,plugins/guests/ubuntu/cap/change_host_name.rb,6,0.016129032258064516,0,5,false,Hostname and FQDN should be done in one line I believe this should fix issue #2333Edit: Ive updated the request with  https://githubcom/elliotsegler/vagrant/commit/06aaa6e6eaf5c296feee1d334ff9bffe2c90e4d2 Its a better fix,,612,0.7009803921568627,0.4112903225806452,14919,368.3222736108318,31.771566458877945,57.309471144178566,5533,5,1354,20,travis,elliotsegler,mitchellh,false,mitchellh,0,0,0,1,1151,false,false,false,false,0,0,0,0,0,0,1440
2213861,mitchellh/vagrant,ruby,2329,1381000628,1381005822,1381005822,86,86,github,false,false,false,65,3,3,0,1,0,1,0,1,0,0,2,2,3,0,0,0,0,2,2,3,0,0,30,0,30,0,8.556472397247923,0.25282386150427205,15,wolfe21@marshall.edu,plugins/hosts/redhat/host.rb|plugins/hosts/redhat/host.rb|plugins/hosts/redhat/plugin.rb|plugins/hosts/fedora/host.rb,15,0.0,0,0,false,Redhat The test in initialize for Fedora  16 should not test for CentOS and RHEL  16 too I have changed updated thisThe test for Fedora in match accepts other versions of Red Hat based Linux I have added a test for Oracle Linux (its supported by VirtualBox so I thought it should be supported by vagrant) and renamed the module to HostRedHat,,611,0.7004909983633388,0.4048913043478261,14894,368.94051295823823,31.824895931247482,57.405666711427415,5533,5,1353,20,travis,mpioli,mitchellh,false,mitchellh,0,0,0,0,48,false,true,false,false,0,0,0,0,0,0,86
2211984,mitchellh/vagrant,ruby,2327,1380944352,1385429216,1385429216,74687,74687,github,false,false,false,93,37,31,0,6,0,6,0,2,5,0,11,20,12,0,0,5,4,11,20,12,0,0,883,0,1267,0,293.0985682268914,8.672456097171144,219,st+github@st-g.de,lib/vagrant/action/builtin/box_add.rb|CHANGELOG.md|lib/vagrant/action/builtin/remove_box_info.rb|lib/vagrant/action/builtin/write_box_info.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/write_box_info.rb|plugins/commands/box/command/add.rb|plugins/commands/box/plugin.rb|plugins/commands/box/state_file.rb|lib/vagrant/action/builtin/write_box_info.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/remove_box_info.rb|plugins/commands/box/state_file.rb|plugins/commands/box/command/add.rb|plugins/commands/box/command/base.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/list.rb|plugins/commands/box/command/base.rb|plugins/commands/box/command/list.rb|plugins/commands/box/state_file.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/write_box_info.rb|plugins/commands/box/command/add.rb|plugins/commands/box/plugin.rb|plugins/commands/box/state_file.rb|lib/vagrant/action/builtin/write_box_info.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/remove_box_info.rb|plugins/commands/box/state_file.rb|plugins/commands/box/command/add.rb|plugins/commands/box/command/base.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/list.rb|plugins/commands/box/command/base.rb|plugins/commands/box/command/list.rb|plugins/commands/box/state_file.rb|lib/vagrant/action/builtin/remove_box_info.rb|lib/vagrant/action/builtin/write_box_info.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/write_box_info.rb|plugins/commands/box/command/add.rb|plugins/commands/box/plugin.rb|plugins/commands/box/state_file.rb|lib/vagrant/action/builtin/write_box_info.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/box_remove.rb|plugins/commands/box/command/remove.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/remove_box_info.rb|plugins/commands/box/state_file.rb|plugins/commands/box/command/add.rb|plugins/commands/box/command/base.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/list.rb|plugins/commands/box/command/base.rb|plugins/commands/box/command/list.rb|plugins/commands/box/state_file.rb|lib/vagrant/action/builtin/remove_box_info.rb|lib/vagrant/action/builtin/write_box_info.rb,218,0.0,1,2,true,Track downloaded base boxes URLs into a state file and allow hooking into base boxes removal Ive been willing to do this for a while and last night I was bitten by an issue that would be easily diagnosed if I knew from where the box was downloaded Basically the URL written on the Vagrantfile was different from the one I downloaded but both boxes had the same name :(The newly added StateFile class can be improved but as usual I think this is a good start :)Reference: https://githubcom/mitchellh/vagrant/issues/2293/cc @mgedmin,,610,0.7,0.3983516483516483,14896,368.48818474758326,31.753490870032223,57.33082706766917,5533,5,1352,22,travis,fgrehm,mitchellh,false,mitchellh,15,0.8666666666666667,340,142,1612,true,true,true,false,16,83,24,3,16,0,1035
2206803,mitchellh/vagrant,ruby,2320,1380877757,1380997611,1380997611,1997,1997,github,false,false,false,151,3,1,0,6,0,6,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,13,0,20,0,8.96096301637552,0.2651447900889503,30,thomas.omans@gmail.com,plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md,26,0.07103825136612021,0,0,true,fix ansible-playbook runs when ansibleverbose is not specified The way that the ansibleverbose option was implemented it was passing an empty set of quotes to the ansible-playbook binary which caused it to be unable to find the specified playbookGiven a Vagrantfile containing:  configvmprovision ansible do |ansible|    ansiblehost_key_checking  false    ansibleplaybook  playbookyml  endThe following command was generated: INFO subprocess: Starting process: [/usr/local/bin/ansible-playbook --private-key/Users/jdoe/vagrantd/insecure_private_key --uservagrant --inventory-file/Users/jdoe/git/ansible-saf-playbooks/vagrant/safeassign/vagrant_ansible_inventory_default  playbookyml]Which resulted in the following ansible-playbook error:[default] Running provisioner: ansibleERROR: the playbook:  could not be foundAnsible failed to complete successfully Any error output should bevisible above Please fix these errors and try againThis patch fixes the ansibleverbose parameter so that it is optional and defaults to not being set  The default logging level of Ansible is good as is and the verbose parameter can be used to increase it as needed,,609,0.6995073891625616,0.4016393442622951,14896,368.48818474758326,31.753490870032223,57.33082706766917,5532,5,1352,23,travis,copperlight,mitchellh,false,mitchellh,1,1.0,14,51,691,false,false,true,false,0,0,1,0,0,0,464
2204580,mitchellh/vagrant,ruby,2316,1380842389,1380997743,1380997743,2589,2589,github,false,false,false,31,1,1,0,1,0,1,0,1,1,0,1,2,1,1,0,1,0,1,2,1,1,0,148,0,148,0,9.599434794912458,0.2840364499907415,3,mitchell.hashimoto@gmail.com,website/docs/source/layouts/layout.erb|website/docs/source/v2/provisioning/salt.html.md,3,0.00819672131147541,0,0,false,Adding salt documention to resolve #2315 This is mostly stolen from the old salty-vagrant documentation anyone is welcome to improve on it I just thought this would be a good start,,608,0.6990131578947368,0.4016393442622951,14896,368.48818474758326,31.753490870032223,57.33082706766917,5532,5,1351,22,travis,jeffasinger,mitchellh,false,mitchellh,1,1.0,1,0,491,false,false,false,false,1,0,1,0,0,0,2589
2203906,mitchellh/vagrant,ruby,2313,1380836301,1381005961,1381005961,2827,2827,github,false,false,false,16,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,21,0,21,0,8.41755225442182,0.24906587846449768,8,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/config.rb|plugins/provisioners/salt/provisioner.rb,7,0.01912568306010929,0,0,false,Adding overstate support to the salt provisioner This adds support for salts overstate and resolves #2312,,607,0.6985172981878089,0.4016393442622951,14896,368.48818474758326,31.753490870032223,57.33082706766917,5532,5,1351,21,travis,jeffasinger,mitchellh,false,mitchellh,0,0,1,0,491,false,false,false,false,0,0,0,0,0,0,2827
2202490,mitchellh/vagrant,ruby,2311,1380823260,,1380919974,1611,,unknown,false,true,false,37,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,3.943292734365139,0.11667758503208546,26,thomas.omans@gmail.com,plugins/provisioners/ansible/provisioner.rb,26,0.07103825136612021,0,0,false,Default verbosity level should be --verbose if no special value specified This forms the other half of the fix for https://githubcom/mitchellh/vagrant/pull/2308The default verbosity level should be --verbose if no special verbosity has been specified in configverbose,,606,0.6996699669966997,0.4016393442622951,14896,368.48818474758326,31.753490870032223,57.33082706766917,5532,5,1351,22,travis,jabclab,jabclab,true,,2,0.5,5,4,1295,false,true,false,false,0,5,2,0,0,0,1611
2200231,mitchellh/vagrant,ruby,2308,1380796902,,1380919991,2051,,unknown,false,true,false,60,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.469640737459691,0.13225162886411668,26,thomas.omans@gmail.com,plugins/provisioners/ansible/provisioner.rb,26,0.07103825136612021,0,0,false,Default Ansible provisioner verbosity should not be --verbose I think the default verbosity of the Ansible provisioner should no longer default to --verbose I personally feel it makes more sense to use default verbosity of Ansible and only increase if specified in the VagrantfileThis is effectively reverting https://githubcom/mitchellh/vagrant/commit/ee9fc00a046f62efa5b9a63c061383644e55aaed This change was made as part of efforts to resolve https://githubcom/mitchellh/vagrant/issues/2194,,605,0.7008264462809918,0.4016393442622951,14896,368.48818474758326,31.753490870032223,57.33082706766917,5532,5,1351,21,travis,jabclab,jabclab,true,,1,1.0,5,4,1295,false,true,false,false,0,5,1,0,0,0,2051
2190929,mitchellh/vagrant,ruby,2303,1380688226,1380733941,1380733941,761,761,github,false,false,false,40,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.304917099341742,0.12754404069913064,24,mjjohnson33@gmail.com,plugins/provisioners/ansible/provisioner.rb,24,0.0664819944598338,0,0,false,fixing default verbosity Ansibles default verbosity is to not be verbose but instead to just give an overview of plays & tasksCurrently the ansible provisioner uses --verbose which means -v or verboseThis fixes the default to match ansible,,604,0.7003311258278145,0.39335180055401664,14888,366.9398173025255,31.63621708758732,57.16012896292316,5531,5,1350,19,travis,eggsby,mitchellh,false,mitchellh,0,0,71,66,1168,false,false,false,false,0,1,0,0,0,0,170
2189430,mitchellh/vagrant,ruby,2301,1380669433,1380669464,1380669464,0,0,github,false,false,false,17,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,13,0,13,0,4.6676904465198525,0.13829310436518819,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/shell.html.md,3,0.008379888268156424,0,0,false,Document remote shell provisioner This can probably be improved but I think its a good start :),,603,0.6998341625207297,0.388268156424581,14887,366.96446564116343,31.63834217773897,57.16396856317593,5531,5,1349,20,travis,fgrehm,mitchellh,false,mitchellh,14,0.8571428571428571,340,142,1609,true,true,true,false,16,83,23,3,16,0,0
2174668,mitchellh/vagrant,ruby,2290,1380460796,1380659246,1380659246,3307,3307,github,false,false,false,154,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.385460439460004,0.13010745535958257,5,mitchell.hashimoto@gmail.com,plugins/provisioners/salt/provisioner.rb,5,0.014084507042253521,0,0,false,Fix salt provision permissions error vagrant provision fails if a temp file left by initial vagrant up is not removed for example:$ time vagrant provision[default] Rsyncing folder: /home/ianh/Projects/Artabase/website/tmp/salt/  /srv/salt[default] Rsyncing folder: /home/ianh/Projects/Artabase/website/tmp/pillar/  /srv/pillar[default] Running provisioner: saltCopying salt minion config to vmChecking if salt-minion is installedsalt-minion foundChecking if salt-call is installedsalt-call foundUsing Bootstrap Options:  -c /tmp -CSalt binaries found Configuring onlyFailed to upload a file to the guest VM via SCP due to a permissionserror This is normally because the user running Vagrant doesnt haveread permission on the file Please set proper permissions on the file:/opt/vagrant/embedded/gems/gems/vagrant-131/plugins/provisioners/salt/bootstrap-saltshreal0m36001suser0m1188ssys0m0088sThis fix removes the old /tmp/bootstrap_saltsh before the normal upload of a fresh copy occurs It is interesting that vagrant up leaves it owned by root but vagrant provision leaves it owned by vagrant,,602,0.6993355481727574,0.38309859154929576,14864,367.532292787944,31.68729817007535,57.2524219590958,5531,5,1347,21,travis,ianheggie,mitchellh,false,mitchellh,0,0,3,1,1727,false,false,false,false,0,0,0,0,0,0,3307
2165905,mitchellh/vagrant,ruby,2284,1380291226,1380309577,1380309577,305,305,github,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.737697097511818,0.14055762792062618,2,mitchell.hashimoto@gmail.com,website/docs/source/v2/vmware/boxes.html.md,2,0.005649717514124294,0,0,true,fixed a broken link Fixing a small broken link in the docs,,601,0.6988352745424293,0.384180790960452,14864,367.532292787944,31.68729817007535,57.2524219590958,5530,5,1345,21,travis,jeremyquinton,mitchellh,false,mitchellh,0,0,9,16,471,false,true,true,false,0,0,0,0,0,0,305
2160920,mitchellh/vagrant,ruby,2280,1380220777,,1380233967,219,,unknown,false,false,false,39,1,1,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,4.647891728938987,0.13789328925115657,0,,LICENSE,0,0.0,0,0,false,Update LICENSE Fix ambiguous naming of licenseThere are many licenses called The MIT License but only one called The Expat License and what you have here is the latterSee http://wwwgnuorg/licenses/license-listhtml#ExpatIncidentally please consider using a copyleft license,,600,0.7,0.384180790960452,14864,367.532292787944,31.68729817007535,57.2524219590958,5530,5,1344,21,travis,daveloyall,mitchellh,false,,0,0,5,17,564,false,false,false,false,0,0,0,0,0,0,-1
2159138,mitchellh/vagrant,ruby,2278,1380202544,,1380790107,9792,,unknown,false,false,false,21,1,1,0,1,0,1,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.181996720406691,0.15373907447467663,0,,templates/guests/fedora/network_dhcp.erb,0,0.0,0,0,false,Issue #2277: Added hardware (MAC) address to Fedora dhcp network script  to address IP conflicts on incomplete DHCP client identifier,,599,0.7011686143572621,0.384180790960452,14864,367.532292787944,31.68729817007535,57.2524219590958,5530,5,1344,20,travis,grenade,grenade,true,,0,0,8,5,1514,false,false,false,false,1,0,0,0,0,0,8267
2158409,mitchellh/vagrant,ruby,2275,1380194244,1380669985,1380669985,7929,7929,github,false,false,false,82,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.713019764208796,0.13982550272116986,22,mjjohnson33@gmail.com,plugins/provisioners/ansible/provisioner.rb,22,0.062146892655367235,0,1,false,Resolving #2194 (Ansible buffering output if run as subprocess) Adding PYTHONUNBUFFERED environment variable to Ansible provisioners execution environment This ensures that we receive output on a task-by-task basis rather than at the end of provisioning (or sometimes at seemingly random intervals during provisioning)This solution was discovered from the [Ansible Google group](https://groupsgooglecom/forum/#topic/ansible-project/aXutTmXAbR0)I think this should be the default behaviour as this allows us to easily identify bottlenecks in Ansible provisioning and allows us to know how far through provisioning Ansible is,,598,0.7006688963210702,0.384180790960452,14864,367.532292787944,31.68729817007535,57.2524219590958,5530,5,1344,20,travis,jabclab,mitchellh,false,mitchellh,0,0,5,4,1288,false,true,false,false,0,3,0,0,0,0,302
2157059,mitchellh/vagrant,ruby,2273,1380168101,1380660190,1380660190,8201,8201,github,false,false,false,21,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,22,0,22,0,9.03833003847192,0.2681484705382615,0,,plugins/provisioners/cfengine/cap/suse/cfengine_install.rb|plugins/provisioners/cfengine/plugin.rb,0,0.0,0,0,false,Update CFEngine provisioners plugin for SuSE install compatibility Update to the CFEngine provisioners plugin in order to add SuSE install compatibility,,597,0.7001675041876047,0.384180790960452,14864,367.532292787944,31.68729817007535,57.2524219590958,5530,5,1344,20,travis,czi,mitchellh,false,mitchellh,0,0,0,0,397,false,false,false,false,0,0,0,0,0,0,8201
2151471,mitchellh/vagrant,ruby,2267,1380066601,1380106075,1380106075,657,657,github,false,false,false,7,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.812131090342381,0.14274725104660355,0,,plugins/guests/redhat/cap/change_host_name.rb,0,0.0,0,1,false,Allow to change the DHCP_HOSTNAME on RedHat  ,,596,0.6996644295302014,0.38968481375358166,14848,367.9283405172414,31.721443965517246,57.31411637931035,5530,5,1342,19,travis,fcharlier,mitchellh,false,mitchellh,0,0,11,10,1384,false,false,false,false,0,0,0,0,0,0,657
2142734,mitchellh/vagrant,ruby,2261,1379964231,1385337437,1385337437,89493,89493,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.921961639247176,0.14600526888584398,4,mitchell.hashimoto@gmail.com,bin/vagrant,4,0.011428571428571429,0,0,false,check ENV for VAGRANT_NOCOLOR (equivalent of --no-color on cmdline) ,,595,0.6991596638655462,0.3914285714285714,14848,367.9283405172414,31.721443965517246,57.31411637931035,5529,5,1341,22,travis,mrkafk,mitchellh,false,mitchellh,0,0,0,1,966,false,false,false,false,0,0,0,0,0,0,89553
2136247,mitchellh/vagrant,ruby,2254,1379842701,1380137794,1380137794,4918,4918,github,false,false,false,65,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,48,0,48,0,8.901428234869316,0.2640520493526825,6,philipp.gysin@cargomedia.ch,plugins/guests/debian/cap/change_host_name.rb|plugins/guests/ubuntu/cap/change_host_name.rb,6,0.01729106628242075,0,0,false,Fixed fqdn handling on debian/ubuntu The issue was that the old method simply didnt workThis is what I expect the hosts file to have in it:    127011   newfqdncom newThis is what would get applied before this patch:    127011   newfqdncom new oldexamplecom oldOr this if the user didnt set an fqdn in the Vagrantfile:    127011   host host oldexamplecom oldThis patch fixes that,,594,0.6986531986531986,0.39481268011527376,14840,368.12668463611857,31.73854447439353,57.345013477088955,5529,5,1340,19,travis,Caustic,mitchellh,false,mitchellh,0,0,37,53,921,false,true,false,false,0,2,0,0,0,0,9
2135767,mitchellh/vagrant,ruby,2253,1379824903,1379884342,1379884342,990,990,github,false,false,false,3,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.655116786599198,0.13808942734184032,5,mitchell.hashimoto@gmail.com,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,5,0.01440922190201729,0,0,false,Fixed missing backtick ,,593,0.6981450252951096,0.39481268011527376,14840,368.12668463611857,31.73854447439353,57.345013477088955,5529,5,1340,18,travis,PeteMichaud,mitchellh,false,mitchellh,0,0,9,0,1347,false,false,false,false,0,0,0,0,0,0,-1
2124664,mitchellh/vagrant,ruby,2242,1379622430,1379743930,1379743930,2025,2025,github,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.216814376546015,0.125086403826288,12,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/provisioner/puppet.rb,12,0.03614457831325301,0,0,false,#2241 moved chmod up before verify_shared_folders check ,,592,0.6976351351351351,0.4126506024096386,14829,368.39975723244993,31.76208780093061,57.387551419515816,5529,5,1337,20,travis,bt5e,mitchellh,false,mitchellh,0,0,4,0,384,false,false,false,false,1,0,0,0,0,0,2024
2121700,mitchellh/vagrant,ruby,2235,1379598280,1379730228,1379730228,2199,2199,github,false,false,false,34,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,0,7,0,8.658249713779282,0.2568359737497584,5,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb,4,0.012121212121212121,0,0,false,Dont replace Windows newlines to Unix if shell is set as binary Implemented option (as suggested from #2045) to skip the CRLF to LF replacement in shell provisionerconfigvmprovision shell path: makeselfrun binary: true,,591,0.6971235194585449,0.41515151515151516,14828,368.4246021041273,31.764229835446454,57.39142163474507,5529,5,1337,21,travis,aleno,mitchellh,false,mitchellh,0,0,2,1,700,false,false,false,false,0,0,0,0,0,0,2198
2121191,mitchellh/vagrant,ruby,2234,1379592250,1379731862,1379731862,2326,2326,merged_in_comments,false,false,false,32,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.1137189795576585,0.12202824528912491,3,mitchell.hashimoto@gmail.com,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,3,0.00909090909090909,0,0,false,fix vagrant mount command Correct the PR #2197 See my comment Problem is that the successvariable is set to false and not set back to true when the second command run correctly,,590,0.6966101694915254,0.41515151515151516,14828,368.4246021041273,31.764229835446454,57.39142163474507,5529,5,1337,20,travis,gimler,mitchellh,false,mitchellh,0,0,71,112,1317,false,false,false,false,0,0,0,0,0,0,-1
2121127,mitchellh/vagrant,ruby,2233,1379591760,1379621361,1379621361,493,493,github,false,false,false,8,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.135520921119702,0.12267497217687122,6,mitchell.hashimoto@gmail.com,plugins/hosts/arch/host.rb,6,0.01818181818181818,0,0,false,Fix invocation of initialize Fixes #2229 for me,,589,0.6960950764006791,0.41515151515151516,14828,368.4246021041273,31.764229835446454,57.39142163474507,5529,5,1337,20,travis,viq,mitchellh,false,mitchellh,1,0.0,15,36,936,true,false,false,false,1,4,2,0,2,0,488
2120807,mitchellh/vagrant,ruby,2232,1379588168,,1379591607,57,,unknown,false,false,false,17,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.17215845220576,0.12376177797288555,6,mitchell.hashimoto@gmail.com,plugins/hosts/arch/host.rb,6,0.0182370820668693,0,0,false,Fix invocation of initialize Imitate hos its called in plugins/hosts/linux/hostrbSeems to alleviate issues mentioned in #2229,,588,0.6972789115646258,0.41641337386018235,14828,368.4246021041273,31.764229835446454,57.39142163474507,5529,5,1337,18,travis,viq,viq,true,,0,0,15,36,936,true,false,false,false,1,1,0,0,1,0,28
2113895,mitchellh/vagrant,ruby,2224,1379512217,,1379527965,262,,unknown,false,false,false,97,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,3.9455370852250407,0.11688061308748501,2,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/provisioner_cleanup.rb,2,0.006349206349206349,0,0,false,Clean up sentinel files during destroy   so that provisioners are run normally during the next upThese files are used to skip running provisioners and changing thehostname on second and subsequent vagrant ups to make halt/up andsuspend/up cycles faster  As these files are not cleaned up during adestroy the provisioners were being skipped during destroy/up cycles aswellSee #2223 and https://githubcom/mitchellh/vagrant/issues/1776#issuecomment-24642298(Im aware this is a bit hackish I can look at having Vagrant::Action::Builtin::Provision and VagrantPlugins::ProviderVirtualBox::Action::SetName push their sentinel file names into env and collect them here if thats more agreeable),,587,0.6984667802385008,0.43492063492063493,14818,368.6732352544203,31.785666081792417,57.4301525172088,5529,4,1336,19,travis,gregwork,mitchellh,false,,0,0,4,5,1249,false,true,false,false,0,0,0,0,0,0,262
2113435,mitchellh/vagrant,ruby,2221,1379488961,1379528147,1379528147,653,653,github,false,false,false,2,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.6242095171777935,0.13698526505724032,3,mitchell.hashimoto@gmail.com,website/docs/source/v2/vagrantfile/version.html.md,3,0.009523809523809525,0,0,false,Fix typo ,,586,0.6979522184300341,0.43492063492063493,14818,368.6732352544203,31.785666081792417,57.4301525172088,5529,4,1336,18,travis,mark-rushakoff,mitchellh,false,mitchellh,0,0,14,15,1208,false,false,false,false,0,0,0,0,0,0,653
2110896,mitchellh/vagrant,ruby,2212,1379367174,1379372207,1379372207,83,83,github,false,false,false,26,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,21,0,21,0,4.530339578681349,0.13514424192448352,5,mitchell.hashimoto@gmail.com,lib/vagrant/machine.rb,5,0.016611295681063124,1,0,false,Remove dead code @mitchellh seems that this method is no longer needed but Id rather go through a PR just to double check with you ),,585,0.6974358974358974,0.45514950166112955,14824,368.5240151106314,31.77280086346465,57.406907717215326,5529,4,1334,18,travis,fgrehm,mitchellh,false,mitchellh,13,0.8461538461538461,337,142,1594,true,true,true,false,18,91,22,3,15,0,83
2653579,mitchellh/vagrant,ruby,2205,1379177432,1379187592,1379187592,169,169,github,false,false,false,16,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9466421392797995,0.11773294723743792,4,ray.elsleiman@learnosity.com,plugins/provisioners/salt/provisioner.rb,4,0.014234875444839857,0,0,false,need_configure should return true when master_config is defined as well This fixes #2204 and fixes saltstack/salty-vagrant#100,,584,0.696917808219178,0.4875444839857651,14812,368.822576289495,31.798541722927357,57.45341614906832,5529,4,1332,22,travis,jcockhren,mitchellh,false,mitchellh,0,0,18,0,1174,true,false,false,false,1,0,0,0,1,0,169
2108150,mitchellh/vagrant,ruby,2203,1379135330,1379295345,1379295345,2666,2666,github,false,false,false,188,1,1,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,3,3,3,0,0,54,0,54,0,13.652928716189894,0.40728281902777513,27,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md,19,0.024822695035460994,0,0,false,add ansiblehost_key_checking configuration parameter Ansible 121 enables SSH host key checking by default which results in the following errors when it is used as a provisioner with official boxes:[default] Running provisioner: ansiblePLAY [graphitelocal] ********************************************************* GATHERING FACTS *************************************************************** fatal: [19216810010]  {msg: FAILED: (25 Inappropriate ioctl for device) failed: True}TASK: [apt update_cacheyes cache_valid_time86400] *************************** FATAL: no hosts matched or all hosts have already failed -- abortingPLAY RECAP ********************************************************************            to retry use: --limit @/var/tmp/ansible/playbookretry19216810010             : ok0    changed0    unreachable1    failed0   Ansible failed to complete successfully Any error output should bevisible above Please fix these errors and try againWhile this improves the default security stance of Ansible it disrupts the flow of Vagrant runs  The host key checking behavior of Ansible can be over-ridden by setting the following environment variable:export ANSIBLE_HOST_KEY_CHECKINGfalseThis patch adds a new configuration parameter ansiblehost_key_checking to the Ansible provisioner that controls the value of this environment variable  It defaults to true to match the default configuration and security stance of Ansible but it can be set to false to allow smooth Vagrant runs with official boxes,,583,0.6963979416809606,0.4929078014184397,14812,368.822576289495,31.798541722927357,57.45341614906832,5528,3,1332,22,travis,copperlight,mitchellh,false,mitchellh,0,0,12,51,671,false,false,true,false,0,0,0,0,0,0,-1
2105712,mitchellh/vagrant,ruby,2200,1379097404,1379295456,1379295456,3300,3300,github,false,false,false,25,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.1653194137101694,0.12425634588975042,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/destroy_unused_network_interfaces.rb,1,0.0035460992907801418,0,0,true,Call the rest of the middleware stack all the time The virtualbox provider isnt calling the rest of the middleware handlers unless destroy_unused_network_interfaces is on,,582,0.6958762886597938,0.4929078014184397,14812,368.822576289495,31.798541722927357,57.45341614906832,5528,3,1331,20,travis,mikerowehl,mitchellh,false,mitchellh,0,0,14,0,1444,false,false,false,false,0,0,0,0,0,0,-1
2098371,mitchellh/vagrant,ruby,2195,1379000531,1379295823,1379295823,4921,4921,github,false,false,false,43,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.223043520380113,0.12597832345069057,43,ray.elsleiman@learnosity.com,templates/locales/en.yml,43,0.1524822695035461,0,0,false,clarification: dont - shouldnt Hey Mitchelli changed the wording for the bad_field error for clarification The example (ssh) message * The following settings dont exist: max_tries timeout implies that max_tries and timeout are missing but they should actually be removedCheerstpltnt,,581,0.6953528399311532,0.4929078014184397,14812,368.822576289495,31.798541722927357,57.45341614906832,5528,3,1330,19,travis,tpltnt,mitchellh,false,mitchellh,0,0,13,16,678,false,false,false,false,0,0,0,0,0,0,-1
2094727,mitchellh/vagrant,ruby,2191,1378943979,1379296013,1379296013,5867,5867,github,false,false,false,212,2,2,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,9.008817666680367,0.268742036775644,8,nick@cmdln.org,plugins/hosts/bsd/host.rb|plugins/hosts/bsd/host.rb,8,0.02867383512544803,0,0,false,root user dependency for /etc/exports changes I ran into an issue where I had local administrator rights on my mac but due to a security policy I couldnt login as rootWORKSTATION:~ user$ sudo su rootPassword:WORKSTATION:~ user$  Vagrant would assume the file was changed since there was no error thrown but /etc/exports would remain the sameDebug Output [default] Exporting NFS shared foldersDEBUG bsd: Compiling map of sub-directories for NFS exports INFO bsd: Exporting the following for NFS INFO bsd: NFS DIR: [/Users/user/Desktop/Project] INFO bsd: NFS OPTS: {:createtrue :nfstrue :mount_options[nolock actimeo1] :guestpath/var/app/current :hostpath/Users/user/Desktop/Project :map_uid1268977990 :map_gid42967409 :nfs_version3 :uuid2250416753 :bsd__nfs_options[alldirs mapall1268977990:42967409] :bsd__compiled_nfs_options-alldirs -mapall1268977990:42967409} INFO interface: info: Preparing to edit /etc/exports Administrator privileges will be requiredPreparing to edit /etc/exports Administrator privileges will be required INFO interface: info: Mounting NFS shared folders[default] Mounting NFS shared foldersDEBUG ssh: Checking whether SSH is readyDEBUG ssh: Re-using SSH connection INFO ssh: SSH is ready INFO guest: Execute capability: mount_nfs_folder (ubuntu)DEBUG guest: Searching for cap: mount_nfs_folderDEBUG guest: Checking in: ubuntuDEBUG guest: Found cap: mount_nfs_folder in ubuntuDEBUG ssh: Checking whether SSH is readyDEBUG ssh: Re-using SSH connection INFO ssh: SSH is readyLet me know if this a generic solution that can work for everyoneThank you,,580,0.6948275862068966,0.4982078853046595,14812,367.877396705374,31.663516068052928,57.3183904941939,5528,3,1329,19,travis,Raman148,mitchellh,false,mitchellh,0,0,14,56,517,false,true,false,false,0,0,0,0,0,0,-1
2094078,mitchellh/vagrant,ruby,2189,1378936846,1378946395,1378946395,159,159,github,false,false,false,42,1,1,0,6,0,6,0,5,0,0,3,3,3,0,0,0,0,3,3,3,0,0,3,18,3,18,14.167898703548762,0.42264258144606437,161,wolfe21@marshall.edu,CHANGELOG.md|lib/vagrant.rb|test/unit/vagrant_test.rb,158,0.014336917562724014,0,11,false,core: fix NoMethodError in Vagranthas_plugin [GH-1736] This should fix the error raised new Vagranthas_plugin methodIts my first submission to this project tried to do my best to follow all the conventions I saw Happy to make any changes as necessary though,,579,0.694300518134715,0.4982078853046595,14812,367.877396705374,31.663516068052928,57.3183904941939,5528,3,1329,19,travis,phinze,fgrehm,false,fgrehm,0,0,239,41,1745,false,true,false,false,0,2,0,0,0,0,2
2085861,mitchellh/vagrant,ruby,2176,1378835745,1378837840,1378837840,34,34,github,false,false,false,26,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,7.540603396520589,0.2249435390655453,10,miurahr@linux.com,plugins/hosts/arch/host.rb|plugins/hosts/linux/host.rb,9,0.03225806451612903,0,0,false,Put nfs opts setup in separate function  Configured function to be called by both generic linux and arch nfs_options  Fixes undefined method join exception in arch,,578,0.6937716262975778,0.5017921146953405,14808,367.9767693138844,31.672069151809833,57.33387358184765,5527,3,1328,18,travis,deltaroe,mitchellh,false,mitchellh,0,0,1,0,0,false,false,false,false,0,0,0,0,0,0,34
2108250,mitchellh/vagrant,ruby,2167,1378725429,1378754840,1378754840,490,490,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.128087669629352,0.12314499203656956,9,nick@cmdln.org,plugins/provisioners/chef/provisioner/base.rb,9,0.030716723549488054,0,0,false,Removed duplicate entry ,,577,0.6932409012131716,0.5290102389078498,14809,367.9519211290431,31.66993044770072,57.330002025795125,5527,3,1327,18,travis,schlamar,mitchellh,false,mitchellh,0,0,10,3,1251,true,false,false,false,0,0,0,0,1,0,490
2071040,mitchellh/vagrant,ruby,2158,1378583144,1378608241,1378608241,418,418,github,false,false,false,46,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,0,7,0,9.135618370584396,0.2725335707616019,15,stephenb583@gmail.com,lib/vagrant.rb|plugins/hosts/fedora/host.rb,13,0.04529616724738676,1,0,false,[GH-1977] revert and alternate fix @mitchellh the internal encoding doesnt seem to work  ThereforeI reverted that previous change to vagrantrbHowever I found two alternate solutions  Either transcoding/etc/redhat-release to ISO-8859-1 on open or using somethinglike Filebinread to transcode the file contents to raw,,576,0.6927083333333334,0.5400696864111498,14811,367.9022348254676,31.66565390588076,57.322260482074135,5527,2,1325,21,travis,atomic-penguin,mitchellh,false,mitchellh,1,0.0,49,34,1072,false,false,false,false,0,0,1,0,0,0,418
2070929,mitchellh/vagrant,ruby,2156,1378580858,1378608265,1378608265,456,456,github,false,false,false,10,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.415342812592488,0.13171841182934937,7,miurahr@linux.com,plugins/hosts/linux/host.rb,7,0.024390243902439025,0,0,false,Fixed options to NFS: no_subtree and check became no_subtree_check https://githubcom/mitchellh/vagrant/issues/2155,,575,0.6921739130434783,0.5400696864111498,14811,367.9022348254676,31.66565390588076,57.322260482074135,5527,2,1325,20,travis,gustavobgama,mitchellh,false,mitchellh,0,0,9,7,549,false,true,false,false,0,1,0,0,0,0,22
2070421,mitchellh/vagrant,ruby,2153,1378569200,1378608388,1378608388,653,653,github,false,false,false,368,3,2,0,1,0,1,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,60,0,69,0,18.013483305758363,0.5373778465812589,19,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md|plugins/provisioners/ansible/provisioner.rb|website/docs/source/v2/provisioning/ansible.html.md,16,0.05574912891986063,3,1,false,Ansible: Update documentation Code Cleanup (and Extend Log Verbosity option) First commit (8a925e3) absolutely matters since users will very soon start playing with Vagrant 13x and Ansible 13x  I think that now all options are covered in the documentation but please double check that my english is understandableSecond commit (ce4f282) is matter of taste and I apologize to make so much noise around such little thing (feel free to request for change or even reject this part) I would thus argue following about log verbosity (sorry to be so *verbose* :ant: :ant: :ant: :ant: :ant: on this topic -) : * it absolutely makes sense to support all three levels (-v -vv and -vvv) * At the moment Im pretty sure that there is no way to mute ansible-playbook I mean that -v (or --verbose) is the minimal verbosity level even if Vagrant ansibleverbosity option is not defined * I find easy to tweak verbosity with v+ style since it corresponds to ansible-playbook arguments Parsing could be even more tolerant and also accepts ansibleverbose  -v (optional dash) as you want * I dont like very much the alias logic (extra) since there is no obvious mnemotechnic but as long as we support v+ style it does not hurt On the other hand I agree that v+ style apply more to  (old-style) CLI world and that providing words to human beings is fair :monkey_face: * If we keep human readable aliases I would vote for an alias map looking like following:   * v  normal (useless as commented above)   * vv  high (or extra or intermediate or what ever)   * vvv  maximum (maximal or max or highest or what ever) * last but not least It could be elegant to unify the log level names across the different provisioners supported by Vagrant (but it looks like a long way to go after shortly looking at how Shell Chef Puppet etc are currently implemented)/cc to people who commented #1979 feel free to shoot your opinion: @bmabey @commandtab @jarvAbout third commit (eb5b6a8): I feel that many people are and will totally enjoy learning Ansible with Vagrant especially with all the recent changes added :bangbang: ,,574,0.6916376306620209,0.5400696864111498,14811,367.9022348254676,31.66565390588076,57.322260482074135,5527,2,1325,19,travis,gildegoma,mitchellh,false,mitchellh,3,0.6666666666666666,31,119,1063,false,true,true,false,0,4,0,0,0,0,653
2070209,mitchellh/vagrant,ruby,2152,1378562476,,1378608303,763,,unknown,false,true,false,27,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.415342812592488,0.13171841182934937,7,miurahr@linux.com,plugins/hosts/linux/host.rb,7,0.024390243902439025,0,0,false,Fix NFS /etc/exports option no_subtree_check on Linux hosts The previous /etc/exports options used--no_subtree and check--do not exist on Linux hosts The correct option is no_subtree_checkFixes #2151,,573,0.6928446771378709,0.5400696864111498,14811,367.9022348254676,31.66565390588076,57.322260482074135,5527,2,1325,19,travis,cmthornton,mitchellh,false,,0,0,0,0,745,false,false,false,false,1,0,0,0,0,0,633
2065710,mitchellh/vagrant,ruby,2147,1378498663,1378499145,1378499145,8,8,github,false,false,false,154,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.913626470940617,0.14657906765061499,2,mitchell.hashimoto@gmail.com,bin/vagrant,2,0.007067137809187279,1,0,true,Remove v prefix on version number in vagrant -v Commit 896ae7b9baebf8467ddf01eeff32d565e2a4e261 changed the output of vagrant -v which broke the kitchen-vagrant driver for test-kitchen For simplicitys sake it is a one-character commit to fix this in vagrant itself (which did not prefix version numbers with a v prior to this commit)… Also reporting the version number alone makes it more faithful to the traditional Gem version number format… For use with Gem::Versionnew() etcgit reset --hard d9d9264747585ef1b390608323774edb595b8e3aHEAD is now at d9d9264 Update CHANGELOGbundle exec vagrant -vYou appear to be running Vagrant in a Bundler environment BecauseVagrant should be run within installers (outside of Bundler) Vagrantwill assume that youre developing plugins and will change its behaviorin certain ways to better assist plugin developmentVagrant version 130devgit reset --hard 896ae7b9baebf8467ddf01eeff32d565e2a4e261HEAD is now at 896ae7b core: vagrant -v no longer loads Vagrantfile(gregpoirier@oppie)(~/dev/vagrant)(version_number_fix)bundle exec vagrant -vVagrant v130dev,,572,0.6923076923076923,0.5477031802120141,14805,368.0513340087808,31.678486997635932,57.34549138804458,5527,2,1324,18,travis,grepory,mitchellh,false,mitchellh,0,0,7,1,1127,false,false,false,false,0,0,0,0,0,0,7
2063092,mitchellh/vagrant,ruby,2138,1378463550,1378489971,1378489971,440,440,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.757834556866697,0.14216660781089022,3,ray.elsleiman@learnosity.com,templates/commands/init/Vagrantfile.erb,3,0.01079136690647482,0,0,true,changed Vagrantfile template to use sitepp This seems to be the de facto standard and is used overall in the puppet documentationIt is also explicitly mentioned in the [Puppet Best Practices Wiki](http://projectspuppetlabscom/projects/1/wiki/Puppet_Best_Practice2#File-Hierarchy),,571,0.691768826619965,0.5575539568345323,14805,368.0513340087808,31.678486997635932,57.34549138804458,5527,2,1324,18,travis,BreiteSeite,mitchellh,false,mitchellh,0,0,11,34,385,false,true,true,false,0,0,0,0,0,0,440
2058792,mitchellh/vagrant,ruby,2131,1378400318,,1385371240,116122,,unknown,false,true,false,9,1,1,0,7,0,7,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,43,0,43,0,4.417385519359059,0.13199599000951334,29,thomas.omans@gmail.com,plugins/provisioners/ansible/provisioner.rb,29,0.10902255639097744,0,3,false,Added support for JSON format on the Ansible provisioner ,,570,0.6929824561403509,0.5827067669172933,14800,366.7567567567567,31.621621621621625,57.2972972972973,5525,2,1323,21,travis,ndemoor,mitchellh,false,,0,0,9,0,496,false,false,false,false,1,0,0,0,0,0,232
2057347,mitchellh/vagrant,ruby,2127,1378383159,1378424019,1378424019,681,681,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.412160116086863,0.13183984962396406,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/vmware/configuration.html.md,1,0.0037593984962406013,0,0,false,Vagrant docs: added most awaited keys for VMX customisation ,,569,0.6924428822495606,0.5827067669172933,14800,366.7567567567567,31.621621621621625,57.2972972972973,5524,2,1323,18,travis,herdani,mitchellh,false,mitchellh,0,0,10,5,897,false,false,false,false,0,0,0,0,0,0,680
2055181,mitchellh/vagrant,ruby,2122,1378342395,1378342530,1378342530,2,2,github,false,false,false,24,1,1,0,1,0,1,0,1,5,0,0,5,5,0,0,5,0,0,5,5,0,0,306,0,306,0,23.703651918276698,0.7132948717473474,0,,website/docs/source/v2/vagrantfile/index.html.md|website/docs/source/v2/vagrantfile/machine_settings.html.md|website/docs/source/v2/vagrantfile/ssh_settings.html.md|website/docs/source/v2/vagrantfile/vagrant_settings.html.md|website/docs/source/v2/vagrantfile/version.html.md,0,0.0,0,0,false,Add missing Vagrantfile docs Looks like these got missed in the merge due to Vagrantfile being in gitignore and OS Xs case-insensitive filesystem ),,568,0.6919014084507042,0.6078431372549019,14789,367.02954898911355,31.6451416593414,57.33991480154169,5523,2,1322,20,travis,psi,mitchellh,false,mitchellh,2,1.0,24,9,2030,false,true,false,false,0,0,0,0,0,0,2
2054218,mitchellh/vagrant,ruby,2120,1378330819,1378342989,1378342989,202,202,github,false,false,false,20,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.263341568840648,0.12829329792919153,3,mitchell.hashimoto@gmail.com,lib/vagrant/util/downloader.rb,3,0.011764705882352941,0,0,false,Comment typo fixes Only comment changesRemoved stray apostrophe from Util::Downloaderinitialize() doc block Corrected open  options for download description,,567,0.691358024691358,0.6078431372549019,14789,367.02954898911355,31.6451416593414,57.33991480154169,5523,2,1322,19,travis,beporter,mitchellh,false,mitchellh,0,0,9,0,922,false,false,false,false,0,0,0,0,0,0,202
2055348,mitchellh/vagrant,ruby,2118,1378319835,,1378346274,440,,unknown,false,false,false,7,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.091849736093386,0.1231327325755104,0,,lib/vagrant/config/v2/dummy_config.rb,0,0.0,0,0,false,Issue #2117 Added a converter to String,,566,0.6925795053003534,0.6078431372549019,14789,367.02954898911355,31.6451416593414,57.33991480154169,5523,2,1322,18,travis,gildas,mitchellh,false,,0,0,2,0,1656,false,false,false,false,1,0,0,0,0,0,-1
2036918,mitchellh/vagrant,ruby,2115,1378266543,1378274661,1378274661,135,135,github,false,false,false,7,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.523029496004785,0.1361076891356756,1,mitchell.hashimoto@gmail.com,website/docs/source/v2/provisioning/chef_solo.html.md,1,0.003952569169960474,0,0,false,Clarify statement on role files with chef-solo ,,565,0.6920353982300885,0.6126482213438735,14789,367.02954898911355,31.6451416593414,57.33991480154169,5523,2,1321,18,travis,erichelgeson,mitchellh,false,mitchellh,0,0,34,12,1213,false,false,false,false,0,0,0,0,0,0,0
2034915,mitchellh/vagrant,ruby,2112,1378238823,1378249750,1378249750,182,182,github,false,false,false,45,1,1,0,1,0,1,0,1,3,0,1,4,3,0,1,3,0,1,4,3,0,1,68,0,68,0,17.501921441278693,0.7883593541136993,44,ray.elsleiman@learnosity.com,plugins/provisioners/file/config.rb|plugins/provisioners/file/plugin.rb|plugins/provisioners/file/provisioner.rb|templates/locales/en.yml,44,0.0,0,0,false,Add a file provisioner Add a provisioner which will upload host files and directories to theguest via the scp channel This is useful for populating user specificfiles into the guest This is a rename from scpupload to file and updatedagainst master [GH-1357],,564,0.6914893617021277,0.6378600823045267,14617,371.3484299103783,32.017513853731955,58.01464048710406,5523,2,1321,19,travis,markpeek,mitchellh,false,mitchellh,1,0.0,48,4,921,false,false,false,false,1,2,0,0,0,0,182
2017211,mitchellh/vagrant,ruby,2107,1378075547,1378075638,1378075638,1,1,github,false,false,false,65,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,76,0,76,0,8.827719061677723,0.4016030910109326,0,,lib/vagrant/plugin/v2/guest.rb|plugins/guests/ubuntu/guest.rb,0,0.0,0,0,false,Remove dead code from Guest While thinking about host capabilities stuff and looking around the codebase I found those guys which I believe have all been converted to guest capabilities Some grepping showed me no references to them so unless there is a chance that they are possible in use by third party plugins I think it is safe to remove them by now ),,563,0.6909413854351687,0.6916299559471366,14441,375.8742469358078,32.40772799667613,58.72169517346444,5523,2,1319,26,travis,fgrehm,mitchellh,false,mitchellh,12,0.8333333333333334,326,142,1579,true,true,true,false,24,97,25,3,14,0,1
1996424,mitchellh/vagrant,ruby,2090,1377682015,1377739489,1377739489,957,957,github,false,false,false,92,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,8.867949556150652,0.4217472570379759,8,stephenb583@gmail.com,plugins/hosts/fedora/host.rb|plugins/hosts/fedora/host.rb,8,0.05,0,0,false,GH-2087: Update hostrb to detect RHEL (in addition to CentOS and Fedora) This patch adds RHEL support to plugins/hosts/fedora/hostrbNote that this patch already includes the fix to issue https://githubcom/mitchellh/vagrant/issues/2088 (Update hostrb to use proper capture group for OS version regex of RHEL family)If needed I can also rebase this pull request on vagrants master branch  However the regex used in master is broken anyways as of now because of the incorrect regex capture group so it doesnt seem to make a lot of sense not to fix issue https://githubcom/mitchellh/vagrant/issues/2088 first,,562,0.6903914590747331,0.98125,13617,398.6928104575164,34.368803701255786,62.275097304839534,5522,2,1315,51,travis,miguno,mitchellh,false,mitchellh,1,1.0,356,1,1183,false,false,false,false,2,1,1,0,0,0,957
1996400,mitchellh/vagrant,ruby,2089,1377681751,1377739493,1377739493,962,962,github,false,false,false,32,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.488941992988932,0.21348779225210832,8,stephenb583@gmail.com,plugins/hosts/fedora/host.rb,8,0.05,0,0,false,GH-2088: Use proper regex capture group to detect OS version of RHEL family This fixes issue https://githubcom/mitchellh/vagrant/issues/2088  See also https://githubcom/mitchellh/vagrant/issues/2008 (200**8** not 20**88**) which introduced the bug that this pull request fixes,,561,0.6898395721925134,0.98125,13617,398.6928104575164,34.368803701255786,62.275097304839534,5522,2,1315,50,travis,miguno,mitchellh,false,mitchellh,0,0,356,1,1183,false,false,false,false,1,1,0,0,0,0,-1
1995966,mitchellh/vagrant,ruby,2086,1377671223,1377739588,1377739588,1139,1139,github,false,false,false,26,1,1,0,1,0,1,0,1,5,0,1,6,4,2,0,5,0,1,6,4,2,0,83,0,83,0,24.78855480081972,1.1789089379664104,0,,plugins/guests/openbsd/cap/change_host_name.rb|plugins/guests/openbsd/cap/configure_networks.rb|plugins/guests/openbsd/cap/mount_nfs_folder.rb|plugins/guests/openbsd/plugin.rb|templates/guests/openbsd/network_dhcp.erb|templates/guests/openbsd/network_static.erb,0,0.0,0,0,false,more capabilities for OpenBSD guest Current version of Vagrant supports only halt capability on OpenBSD guest  This pull-request adds 3 more capabilities: change_host_name configure_networks and mount_nfs_folder,,560,0.6892857142857143,0.98125,13617,398.6928104575164,34.368803701255786,62.275097304839534,5522,2,1315,49,travis,tsahara-iij,mitchellh,false,mitchellh,0,0,2,0,523,false,true,false,false,0,0,0,0,0,0,1139
1993991,mitchellh/vagrant,ruby,2084,1377638355,1377638401,1377638401,0,0,github,false,false,false,22,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.487062078358386,0.21339814146369435,6,stephenb583@gmail.com,plugins/hosts/fedora/host.rb,6,0.03773584905660377,0,0,false,fix broken regexp from 2a9d0c9 2a9d0c9 is obviously flawed [] is for character list defining one letter of (in any order): CentOS|Fdora,,559,0.6887298747763864,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5522,2,1314,50,travis,glensc,mitchellh,false,mitchellh,2,1.0,22,3,1297,false,false,false,false,0,0,1,0,0,0,0
1980161,mitchellh/vagrant,ruby,2078,1377363983,,1377739561,6259,,unknown,false,false,false,40,1,1,0,0,0,0,0,4,2,0,0,2,2,0,0,2,0,0,2,2,0,0,93,0,93,0,8.892154654130968,0.4228979326921912,0,,plugins/hosts/solaris/host.rb|plugins/hosts/solaris/plugin.rb,0,0.0,0,3,false,Support solaris host OS Here is an experimental support code for solaris host osIts necessary that  solaris users test it and feedback for better codeIm not user so the implementation is based on documentationSigned-off-by: Hiroshi Miura miurahr@linuxcom,,558,0.6899641577060932,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5518,2,1311,49,travis,miurahr,mitchellh,false,,1,1.0,32,54,1448,false,false,false,false,0,0,1,0,0,0,-1
1979977,mitchellh/vagrant,ruby,2077,1377358273,1378165979,1378165979,13461,13461,github,false,false,false,63,4,2,0,4,0,4,0,3,2,0,4,8,6,0,0,2,0,6,8,6,0,0,72,0,78,0,26.356621495679708,1.2534825558949787,7,stephenb583@gmail.com,plugins/hosts/slackware/host.rb|plugins/hosts/slackware/plugin.rb|plugins/hosts/fedora/host.rb|plugins/hosts/gentoo/host.rb|plugins/hosts/linux/host.rb|plugins/hosts/opensuse/host.rb,6,0.0,0,1,false,Improvement of Linux supports and  NFS handling It improve nfs handling in Linux hostsIt changes linux plugin  to use /usr/sbin/exportfs -r standard command  instead of restarting nfs daemonTo realize it it checks whether nfs daemon running or not If not running starting daemon as similar way as beforeAlso it add a support for Slackware and its derivative that  close #2075,,557,0.6894075403949731,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5518,2,1311,47,travis,miurahr,mitchellh,false,mitchellh,0,0,32,54,1448,false,false,false,false,0,0,0,0,0,0,100
1940194,mitchellh/vagrant,ruby,2059,1376655550,1377739671,1377739671,18068,18068,github,false,false,false,36,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,13,0,13,0,8.045494266738716,0.38263199699411876,11,mitchell.hashimoto@gmail.com,plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/util/compile_forwarded_ports.rb,11,0.06918238993710692,0,0,true,allow port-forwarding of the same port number but with different protocols [GH-1108] The (already closed) issue 1108 has reappeard in vagrant 127 With this fix using the same host port for different protocol is possible again,,556,0.6888489208633094,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5515,2,1303,47,travis,mlex,mitchellh,false,mitchellh,0,0,12,3,982,false,false,false,false,0,1,0,0,0,0,18068
1939046,mitchellh/vagrant,ruby,2058,1376628167,1377740257,1377740257,18534,18534,github,false,false,false,90,1,1,0,1,0,1,0,1,0,0,2,2,0,2,0,0,0,2,2,0,2,0,0,0,0,0,9.093707097825503,0.4324834735518388,7,nick@cmdln.org,templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb,7,0.0440251572327044,0,0,true,Updates Chef provisioner configuration option formatter for Chef 11 Refs #1250Will correctly produce the desired result on Chef 11x and above as theoriginal directive was written against Chef 10x and released in Vagrant 127While this will continue to work for Chef 10x since this is not the mainlinerelease track and the alternative would be to write more conditional code inthe configuration file to detect the version and place the correct directive thischanges the directive to support the current releases of Chef 11 and above,,555,0.6882882882882883,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5515,2,1303,46,travis,miketheman,mitchellh,false,mitchellh,10,0.7,85,11,971,false,true,true,false,1,4,2,0,0,0,18534
1930250,mitchellh/vagrant,ruby,2052,1376497182,1377740334,1377740334,20719,20719,github,false,false,false,39,1,1,0,1,0,1,0,1,7,0,0,7,7,0,0,7,0,0,7,7,0,0,196,0,196,0,32.4701389089703,1.5442325457590467,0,,plugins/guests/solaris11/cap/change_host_name.rb|plugins/guests/solaris11/cap/configure_networks.rb|plugins/guests/solaris11/cap/halt.rb|plugins/guests/solaris11/cap/mount_virtualbox_shared_folder.rb|plugins/guests/solaris11/config.rb|plugins/guests/solaris11/guest.rb|plugins/guests/solaris11/plugin.rb,0,0.0,0,0,false,Added solaris11 guest plugin Hinew guest type solaris11 since Solaris 11 is quite different from Solaris 10Specially NIC names and configuration and also hostname changeHope it can be included in 128-- RegardsJan Thomas Moldung,,554,0.6877256317689531,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5515,2,1301,45,travis,janth,mitchellh,false,mitchellh,0,0,2,0,392,false,false,false,false,0,0,0,0,0,0,20719
1922508,mitchellh/vagrant,ruby,2045,1376324690,,1379730314,56760,,unknown,false,true,false,30,1,1,0,6,0,6,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.243877622113318,0.20183264268313306,1,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/provisioner.rb,1,0.006289308176100629,0,0,false,Remove CRLF scrubbing as the default behavior Remove the default CRLF scrubbing behavior  I propose that provisioners should only get their file contents mutated if they explicitly ask for it,,553,0.6889692585895117,0.9874213836477987,13617,398.6928104575164,34.368803701255786,62.275097304839534,5514,2,1299,47,travis,shutej,mitchellh,false,,0,0,3,2,1117,false,false,false,false,0,0,0,0,0,0,54
1916717,mitchellh/vagrant,ruby,2041,1376102797,1376102831,1376102831,0,0,github,false,false,false,17,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.495488265905809,0.21378578790522731,0,,plugins/guests/arch/cap/change_host_name.rb,0,0.0,0,0,true,Use hostnamectl in plugins/guests/arch/cap/change_host_namerb Use the systemd way to change the hostname because rcconf no longer exists,,552,0.6884057971014492,0.9872611464968153,13618,398.66353355852544,34.36627992363049,62.2705243060655,5512,2,1296,44,travis,Boohbah,mitchellh,false,mitchellh,0,0,7,19,71,false,true,true,false,0,0,0,0,0,0,0
1915492,mitchellh/vagrant,ruby,2040,1376082174,1376082309,1376082309,2,2,github,false,false,false,33,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,17,0,17,0,9.124249350244668,0.43484845796675176,6,tim@synthist.net,plugins/guests/darwin/cap/verify_vmware_hgfs.rb|plugins/guests/darwin/plugin.rb,6,0.038461538461538464,0,0,true,Support verify_vmware_hgfs in darwin guest The vmhgfs functionality is loaded as a kernel extension like in Linux and the test for whether its loaded is practically the same as using lsmod under Linux,,551,0.6878402903811253,0.9871794871794872,13602,399.13248051757097,34.40670489633877,62.34377297456256,5512,2,1296,44,travis,timsutton,mitchellh,false,mitchellh,0,0,146,29,1445,false,false,false,false,0,8,0,0,0,0,2
1910359,mitchellh/vagrant,ruby,2035,1375994034,1376078632,1376078632,1409,1409,github,false,false,false,102,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.2376124876823456,0.20687409330042605,0,,plugins/provisioners/ansible/config.rb,0,0.0,0,0,false,Ansible inventory can be a directory not just a file It is an under-documented feature that one can specify a directory as the Ansible inventory source not just a single file In that case Ansible merges the contents of flat files and any executable inventory plugins found in the directoryThis is useful for instance to put localhost in your inventory for use with local_action even if your entire infrastructure is otherwise on EC2 or some other dynamic inventory source I also use a flat file to create aliases for host groups automatically generated from the EC2 API like staging for tag_Environment_staging,,550,0.6872727272727273,0.9849624060150376,13354,406.54485547401526,35.045679197244276,63.50157256252808,5512,2,1295,53,travis,ches,mitchellh,false,mitchellh,2,1.0,50,47,1885,false,true,false,false,0,1,1,0,0,0,16
1900096,mitchellh/vagrant,ruby,2032,1375876436,,1376262514,6434,,unknown,false,false,false,14,2,1,2,4,0,6,0,2,0,0,3,3,2,1,0,0,0,3,3,2,1,0,34,0,36,0,13.31753366809285,0.6501426712784235,11,nick@cmdln.org,plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/provisioners/chef_solo/solo.erb,7,0.045112781954887216,0,2,false,Chef environment support for Chef Solo [GH-1899] Please see https://githubcom/mitchellh/vagrant/issues/1899#issuecomment-22242288 for detailsThank you,,549,0.6885245901639344,0.9849624060150376,13354,406.54485547401526,35.045679197244276,63.50157256252808,5510,2,1294,52,travis,rajivr,rajivr,true,,0,0,3,3,1224,false,false,false,false,1,1,0,0,0,0,240
1892318,mitchellh/vagrant,ruby,2026,1375726409,1376079117,1376079117,5878,5878,github,false,false,false,38,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.207215640535875,0.2053901633254941,4,mitchell.hashimoto@gmail.com,plugins/guests/debian/cap/change_host_name.rb,4,0.03007518796992481,0,0,false,Forcing eth0 to come up For https://githubcom/mitchellh/vagrant/issues/1974I dont really like hardwiring eth0 but for me it works No idea why the first interface - which is set as allow-hotplug    - is not brought up by ifup --allowhotplug,,548,0.6879562043795621,0.9849624060150376,13354,406.54485547401526,35.045679197244276,63.50157256252808,5509,2,1292,52,travis,ppp0,mitchellh,false,mitchellh,0,0,0,1,406,false,false,false,false,0,1,0,0,0,0,5878
1886867,mitchellh/vagrant,ruby,2023,1375582613,1375601342,1375601342,312,312,github,false,false,false,5,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,16,0,16,0,4.301268579274682,0.20997990285376122,3,mitchell.hashimoto@gmail.com,plugins/guests/coreos/cap/configure_networks.rb,3,0.022556390977443608,0,0,false,Cleanup of CoreOS guest plugin ,,547,0.6873857404021938,0.9849624060150376,13357,406.4535449577001,35.037807890993484,63.48731002470615,5508,2,1290,51,travis,sevos,mitchellh,false,mitchellh,1,1.0,24,6,1437,false,true,false,false,0,0,1,0,0,0,312
1884263,mitchellh/vagrant,ruby,2022,1375572810,1375575914,1375575914,51,51,github,false,false,false,48,3,3,0,2,0,2,0,3,5,0,3,8,5,1,0,5,0,3,8,5,1,0,130,0,130,0,36.034117527894004,1.778621344050351,0,,plugins/guests/coreos/cap/configure_networks.rb|templates/guests/coreos/etcd.service.erb|plugins/guests/coreos/cap/change_host_name.rb|plugins/guests/coreos/cap/configure_networks.rb|plugins/guests/coreos/guest.rb|plugins/guests/coreos/plugin.rb|templates/guests/coreos/etcd.service.erb|plugins/guests/gentoo/guest.rb,0,0.0,0,0,false,CoreOS guest support Heythis is rather work in progress and working prototype I need still to refactor it a bit I would love to get some feedback on that though - What could be done better from Vagrant plugin perspective - How we could improve OS discovery,,546,0.6868131868131868,0.9847328244274809,13259,409.45772682706087,35.296779545968775,63.95655780978958,5508,2,1290,51,travis,sevos,mitchellh,false,mitchellh,0,0,24,6,1437,false,true,false,false,0,0,0,0,0,0,51
1882265,mitchellh/vagrant,ruby,2020,1375464890,1385421246,1385421246,165879,165879,commit_sha_in_comments,false,false,false,87,3,2,0,11,0,11,0,5,0,0,7,7,6,0,1,0,0,7,7,6,0,1,147,0,147,0,53.41878566182663,2.6367176129074648,72,tpltnt.github@dropcut.net,plugins/kernel_v1/config/vm.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/config.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/kernel_v1/config/vm.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/config.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/driver/version_4_2.rb|templates/locales/en.yml,57,0.03816793893129771,0,8,true,Internal Network for VirtualBox Provider This pull request allows for a virtual box provider configuration that specifies a private_net_type of either :intnet or :host_only  By default it is :host_only thus changing nothing in the nominal case  However this allows the user to specify that :private_networks be created as virtual box internal networks rather than host only networks  It also allows v1 vagrantfiles to specify networks of :intnet type (to bring this same functionality to v1 vagrant files This pull request borrows heavily from PR  https://githubcom/mitchellh/vagrant/pull/1400 and https://githubcom/mitchellh/vagrant/pull/1382,,545,0.6862385321100918,0.9847328244274809,13259,409.45772682706087,35.296779545968775,63.95655780978958,5507,2,1289,52,travis,tejaycar,mitchellh,false,mitchellh,0,0,2,2,143,false,true,false,false,0,1,0,0,0,0,29
1877361,mitchellh/vagrant,ruby,2016,1375385295,1376079255,1376079255,11566,11566,github,false,false,false,12,2,2,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,8.438915967679286,0.4165395766704358,2,mitchell.hashimoto@gmail.com,plugins/commands/status/command.rb|plugins/commands/status/command.rb,2,0.014492753623188406,0,0,false,Cosmetic fix to align machine name and states in the status command ,,544,0.6856617647058824,0.9855072463768116,13259,409.45772682706087,35.296779545968775,63.95655780978958,5507,2,1288,51,travis,mcourtois,mitchellh,false,mitchellh,0,0,4,5,301,false,true,false,false,0,0,0,0,0,0,1334
1875898,mitchellh/vagrant,ruby,2015,1375368614,1376081580,1376081580,11882,11882,github,false,false,false,81,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.219390187083314,0.20826644193002924,4,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/provisioner/puppet.rb,4,0.028985507246376812,0,0,false,Puppet modules owned by root when mounted in synced folder Added :owner  root to mount options In my experience when using puppetmaster it can be really tricky to have puppet files owned by someone different than root (because files that should be owned by root in the agent become owned by vagrant)This is using puppet apply instead of puppetmaster but anyway looks safer to me Its just an idea feel free to discard this pull request if you disagree,,543,0.6850828729281768,0.9855072463768116,13259,409.45772682706087,35.296779545968775,63.95655780978958,5507,2,1288,50,travis,flozano,mitchellh,false,mitchellh,0,0,5,26,642,false,false,true,false,0,0,0,0,0,0,11882
1871893,mitchellh/vagrant,ruby,2013,1375301303,,1377740651,40655,,unknown,false,false,false,40,1,1,0,1,0,1,0,3,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,4.971488047413845,0.2453895185854509,0,,man/vagrant,0,0.0,0,0,false,Initial commit of vagrant man page Ive created a first cut of a man page for vagrant Ive left it in a top-level directory and havent done anything about actually deploying it -- since I havent learned about that yet,,542,0.6863468634686347,0.9858156028368794,13259,409.45772682706087,35.296779545968775,63.95655780978958,5507,2,1287,50,travis,talexb,mitchellh,false,,0,0,0,0,770,false,false,false,false,0,0,0,0,0,0,273
1865925,mitchellh/vagrant,ruby,2008,1375211071,1376079390,1376079390,14471,14471,github,false,false,false,41,1,1,0,3,1,4,0,6,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.451936063020151,0.2197461653289455,4,nick@cmdln.org,plugins/hosts/fedora/host.rb,4,0.028368794326241134,0,1,false,Update hostrb vagrant failing on CentOS 6 Vagrant has been failing to run on CentOS 6 since version 125The read of file /etc/redhat-release appeared to be only checking for the word Fedora Altered the regex to match CentOS as well,,541,0.6857670979667283,0.9858156028368794,13259,409.45772682706087,35.296779545968775,63.95655780978958,5506,2,1286,50,travis,gwenci,mitchellh,false,mitchellh,0,0,0,3,142,false,false,true,false,0,0,0,0,0,0,180
1864315,mitchellh/vagrant,ruby,2007,1375194435,1376079472,1376079472,14750,14750,github,false,false,false,29,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.380649315293479,0.21622747385854715,2,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb,2,0.014084507042253521,0,1,false,Fix Ansible provisioner exit code reporting In eb70c0d6bbc8 we were trying to compare a Subprocess::Result to a Fixnum resulting in Vagrant always reporting failure regardless of Ansibles exit code,,540,0.6851851851851852,0.9859154929577465,13259,409.45772682706087,35.296779545968775,63.95655780978958,5506,2,1286,49,travis,ches,mitchellh,false,mitchellh,1,1.0,50,44,1876,false,true,false,false,0,1,0,0,0,0,12456
1862764,mitchellh/vagrant,ruby,2005,1375166331,,1385534359,172740,,unknown,false,false,true,352,4,3,0,5,0,5,0,3,0,0,3,3,3,0,0,1,0,3,4,4,0,0,54,30,207,30,39.043075357585074,1.9271539328123397,4,mitchell.hashimoto@gmail.com,lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/plugin.rb|test/unit/vagrant/plugin/v2/plugin_test.rb,3,0.02112676056338028,0,5,false,Support for host capabilities ## WORK IN PROGRESSSo Ive been willing to use Host capabilities to implement some vagrant-lxc host networking specific setup and Im signing up for implementing support for this from within Vagrants coreHeres an initial list of goals and notes Ive put up for making this happen (subject to change and open to suggestions of course :) - [x] Allow plugins to register host capabilities - [ ] Split Host detection from capabilities - [ ] Support for checking if host is capable of something - [ ] Support for calling capabilities - [ ] Make use of host capabilities from within Vagrants core### Allow plugins to register host capabilities (DONE)Pretty much the same as Guest capabilities:rubyclass MyPlugin  Vagrantplugin(2)  name My Plugin  host_capability ubuntu my_host_capability do    require_relative cap/my_host_capability    Cap::MyHostCapability  endend### Split Host detection from capabilitiesThe idea would be to change the [current host detection mechanism](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/hostsrb) to use the same approach [used for Guests](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/guestrb#L37) having the [detection logic](https://githubcom/mitchellh/vagrant/blob/master/plugins/guests/arch/guestrb) separated from the [capabilities](https://githubcom/mitchellh/vagrant/tree/master/plugins/guests/arch/cap) themselves and keeping a chain of detected hosts around for later usage when dealing with capabilitiesWe might also need to introduce some sort of [Virtual](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/guestrb) Host object to wrap things up but Im not sure if we need all of this right now as we can probably just add the functionality to the base class (Vagrant::Plugin::V2::Host)### Support for checking if host is capable of something / calling capabilitiesBasically the same as we do for guest capabilities with the difference that the entry point would be an instance of Vagrant::Environment instead of a Vagrant::Machineruby# Checkingenvironmenthostcapability(:capability_name)# Callingenvironmenthostcapability(:capability_name :arg1 :arg2)The definition would also be similar to guest capabilities with the difference that the first argument passed in would be an instance of Vagrant::Environment instead of a Vagrant::Machinerubymodule Cap  class MyCustomCapability    def selfcapability_name(environment arg1 arg2)      # implementation    end  endend### Make use of host capabilities from within Vagrants coreLooking around current Hosts implementation the only candidates to be converted into Host Capabilities are [NFS related stuff](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/plugin/v2/hostrb#L38-L62),,539,0.686456400742115,0.9859154929577465,13259,409.45772682706087,35.296779545968775,63.95655780978958,5506,2,1286,46,travis,fgrehm,mitchellh,false,,11,0.9090909090909091,310,142,1546,true,true,true,false,24,87,25,1,13,0,0
1856147,mitchellh/vagrant,ruby,2003,1375060725,1375077020,1375077020,271,271,github,false,false,false,133,4,4,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,24,10,24,27.653296481110935,1.3649790394312598,0,,test/unit/vagrant/util/downloader_test.rb|lib/vagrant/util/downloader.rb|test/unit/vagrant/util/downloader_test.rb|lib/vagrant/util/downloader.rb|test/unit/vagrant/util/downloader_test.rb|test/unit/vagrant/util/downloader_test.rb,0,0.0,1,0,false,Curl user agent Hey @mitchellhAs I pointed out to you on twitter once cURL requests are not treated as clicks on URL shorteners like bitly This patch changes Vagrant::Util::Downloader objects to provide an --user-agent parameter so that requests are properly tracked and I hope this doesnt bring in any side effectI think this is really useful for box maintainers to find out if they can deprecate some previous box version It seems to be really common on Vagrant community to serve base boxes from Dropbox and it doesnt support tracking downloads AFAIK and a URL shortener service can be a dead easy way of tracking downloads :)PS: I didnt update the changelog since Im not sure if this will make into 12X series or if well wait until 13 ),,538,0.6858736059479554,1.0,13251,409.6294619274017,35.31808920081504,63.99517017583578,5506,2,1284,45,travis,fgrehm,mitchellh,false,mitchellh,10,0.9,309,142,1544,true,true,true,false,24,86,22,1,10,0,271
1856128,mitchellh/vagrant,ruby,2002,1375060051,1375060858,1375060858,13,13,github,false,false,false,11,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.2290430177438685,0.20874744824786245,4,nick@cmdln.org,plugins/provisioners/chef/config/chef_solo.rb,4,0.03007518796992481,0,0,false,removing dead code concept introduced in 59282ba9997aa41661507a555356821a366f9854 was removed in 28de46f3b45a3ef1c3ee710b05b82fc3dc253db5,,537,0.6852886405959032,1.0,13251,409.6294619274017,35.31808920081504,63.99517017583578,5506,2,1284,45,travis,michaelglass,fgrehm,false,fgrehm,2,1.0,29,39,1607,false,false,false,false,0,3,2,0,0,1,-1
1844129,mitchellh/vagrant,ruby,1990,1374877028,1374886748,1374886748,162,162,github,false,false,false,29,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.6285227774187256,0.17910577959199991,5,mitchell.hashimoto@gmail.com,lib/vagrant/box_collection.rb,5,0.04065040650406504,0,0,true,fix regression preventing boxes that specify support for multiple formats dont know if this is the right place for this fix  maybe formats should be an array of symbols,,536,0.6847014925373134,1.0,13250,409.66037735849056,35.32075471698113,64.0,5506,2,1282,44,travis,michaelglass,mitchellh,false,mitchellh,1,1.0,29,39,1605,false,false,false,false,0,1,1,0,0,0,7
1838525,mitchellh/vagrant,ruby,1987,1374835722,1374859167,1374859167,390,390,github,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.835732401652954,0.2386943809271925,81,nick@cmdln.org,CHANGELOG.md,81,0.675,0,0,true,Typo in CHANGELOGmd allor - allow,,535,0.6841121495327103,1.0,13250,409.66037735849056,35.32075471698113,64.0,5505,2,1282,44,travis,StephenKing,mitchellh,false,mitchellh,0,0,10,0,1168,false,false,false,false,0,1,0,0,0,0,390
1838020,mitchellh/vagrant,ruby,1986,1374828909,1376079859,1376079859,20849,20849,github,false,false,false,61,2,2,0,3,0,3,0,4,0,0,2,2,1,0,1,0,0,2,2,1,0,1,13,0,13,0,11.432732203641084,0.5643258784794793,28,nick@cmdln.org,plugins/commands/plugin/action/install_gem.rb|templates/locales/en.yml|templates/locales/en.yml,28,0.23333333333333334,0,2,true,Improvement: Display a plugins post install message if available This change checks if the Gem::Specification was given a post install message (specpost_install_message  Thanks for installing) If its found it is printed to the screen using env[:ui]info This helps plugins that need just a bit of extra set up explaint to the user See my latest pull request on Bindler [fgrehm/bindler#14](https://githubcom/fgrehm/bindler/pull/14),,534,0.6835205992509363,1.0,13250,409.66037735849056,35.32075471698113,64.0,5505,2,1282,48,travis,erran,mitchellh,false,mitchellh,0,0,29,93,452,false,false,true,false,0,0,0,0,0,0,6240
1836024,mitchellh/vagrant,ruby,1982,1374790941,1374791042,1374791042,1,1,github,false,false,false,40,1,1,0,2,0,2,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.501222107300567,0.22218307950392707,7,nick@cmdln.org,plugins/provisioners/chef/provisioner/base.rb,7,0.05982905982905983,0,2,false,fix regression chowning chef provisioning directory if the provisioning directory is mounted before this method is called and the mounted filesystem is of a type that doesnt support chown (eg vmhgfs for vmware or hfs) then this method will fail,,533,0.6829268292682927,1.0,13249,409.6912974564118,35.32342063551966,64.0048305532493,5504,2,1281,43,travis,michaelglass,mitchellh,false,mitchellh,0,0,29,39,1604,false,false,false,false,0,0,0,0,0,0,1
1828824,mitchellh/vagrant,ruby,1979,1374709842,1377740704,1377740704,50514,50514,github,false,false,false,59,2,2,0,4,0,4,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,8.820033707819304,0.4353622646954794,6,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/provisioner.rb,6,0.05128205128205128,1,1,false,adds extra verbosity option to ansible provisioner Ansible has two levels of verbosity when running ansible-playback  Vagrant supports --vagrant but not the more verbose -vvv option  This patch exposes this flag to vagrant with an configextra_verbose  true option  It may be better to allow for configverbose  :extra instead of adding the additional extra_verbose option  Thoughts  /cc @commandtab,,532,0.6823308270676691,1.0,13249,409.6912974564118,35.32342063551966,64.0048305532493,5504,2,1280,46,travis,bmabey,mitchellh,false,mitchellh,0,0,183,26,1972,false,true,false,false,0,0,0,0,0,0,2105
1827481,mitchellh/vagrant,ruby,1977,1374700451,,1374704249,63,,unknown,false,false,false,108,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.965962824365957,0.24512296587855795,4,nick@cmdln.org,plugins/hosts/fedora/host.rb,4,0.03418803418803419,1,0,false,Fedora 19 UTF-8 redhat-release There is a UTF-8 character in redhat-release causing vagrant to bail out on #L15 in version 124  The contents of redhat-release for Fedora 19 is Fedora release 19 (Schrödinger’s Cat)Error output when running from kitchen/kitchen-vagrant[wolfe21@wolfe21-ig88 mumail]$ kitchen test -d never----- Starting Kitchen (v100beta1) ------Exception------- Class: Kitchen::ShellOut::ShellCommandFailed Message: Expected process to exit with [0] but received 1---- Begin output of vagrant --version ----                                                                                                                                                                                                  STDOUT:                                                                                                                                                                                                                                      STDERR: /opt/vagrant/embedded/gems/gems/vagrant-124/plugins/hosts/fedora/hostrb:15:in block in match: invalid byte sequence in US-ASCII (ArgumentError)                                                                                ---- End output of vagrant --version ----                                                                                                                                                                                                    Ran vagrant --version returned 1                                                                                                                                                                                                              ---------------------- Please see kitchen/logs/kitchenlog for more details,,531,0.6836158192090396,1.0,13249,409.6912974564118,35.32342063551966,64.0048305532493,5504,2,1280,42,travis,atomic-penguin,mitchellh,false,,0,0,44,34,1027,false,false,false,false,0,0,0,0,0,0,-1
1823622,mitchellh/vagrant,ruby,1973,1374659727,1374679248,1374679248,325,325,github,false,false,false,3,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.7588205485110704,0.18553768895327405,3,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/config.rb,3,0.02586206896551724,0,0,false,Cosmetic typo error ,,530,0.6830188679245283,1.0,13249,409.6912974564118,35.32342063551966,64.0048305532493,5504,2,1280,42,travis,tsugliani,mitchellh,false,mitchellh,0,0,11,19,1364,false,false,false,false,0,0,0,0,0,0,325
1810621,mitchellh/vagrant,ruby,1964,1374547618,,1376080151,25542,,unknown,false,false,false,46,1,1,0,4,0,4,0,4,3,0,1,4,2,2,0,3,0,1,4,2,2,0,65,0,65,0,19.642439575014947,0.9696471009651049,0,,plugins/guests/suse/cap/configure_networks.rb|plugins/guests/suse/plugin.rb|templates/guests/suse/network_dhcp.erb|templates/guests/suse/network_static.erb,0,0.0,0,4,false,Fix private network for SLES [GH-1962] **Pull Request**Fix for SLES 11 private networking  Basically I just copied over the networking template files from templates/guests/redhat and set BOOTPROTOstatic in templates/guests/suse/network_staticerbBooted my SLES VM and saw a 192168xx interface in /sbin/ifconfig output as I would expect,,529,0.6843100189035917,1.0,13178,410.83624222188496,35.43785096372743,64.2737896494157,5502,2,1278,51,travis,tehranian,mitchellh,false,,0,0,17,21,1144,false,false,false,false,1,0,0,0,0,0,1028
1804989,mitchellh/vagrant,ruby,1958,1374484263,,1385459874,182866,,unknown,false,false,false,255,1,1,0,2,0,2,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,50,0,50,0,8.170316362422636,0.4033268650024518,73,tpltnt.github@dropcut.net,lib/vagrant/action/builtin/handle_box_url.rb|templates/locales/en.yml,70,0.6542056074766355,0,2,false,Add basic multiple box urls support [GH-1174] Example Vagrantfile:rubyVagrantconfigure(2) do |config|  configvmbox  some_unknown_vagrant_box  configvmbox_url  [ftp://1921680111/fileasdbox http://filesvagrantupcom/unknownboxbox http://filesvagrantupcom/precise64box]endVagrant output:Bringing machine test up with virtualbox provider[test] Box some_unknown_vagrant_box was not found Fetching box from specified URL forthe provider virtualbox Note that if the URL does not havea box for this provider you should interrupt Vagrant now and addthe box yourself Otherwise Vagrant will attempt to download thefull box prior to discovering this errorDownloading or copying the box[test] An error occurred while downloading the remote file from ftp://1921680111/fileasdbox Tryinganother urlDownloading or copying the box[test] An error occurred while downloading the remote file from http://filesvagrantupcom/unknownboxbox Tryinganother urlDownloading or copying the boxProgress: 0% (Rate: 12172/s Estimated time remaining: 8:09:38)^CWaiting for cleanup before exitingBox download was interrupted ExitingVagrant exited after cleanup due to external interruptOutput when no downloadable urls provided:Bringing machine test up with virtualbox provider[test] Box some_unknown_vagrant_box was not found Fetching box from specified URL forthe provider virtualbox Note that if the URL does not havea box for this provider you should interrupt Vagrant now and addthe box yourself Otherwise Vagrant will attempt to download thefull box prior to discovering this errorDownloading or copying the boxAn error occurred while downloading the remote file The errormessage if any is reproduced below Please fix this error and tryagainThe requested URL returned error: 403,,528,0.6856060606060606,1.0,13178,410.83624222188496,35.43785096372743,64.2737896494157,5502,2,1278,46,travis,zvirusz,mitchellh,false,,0,0,1,0,882,false,false,false,false,1,0,0,0,0,0,40186
1900095,mitchellh/vagrant,ruby,1949,1374205139,1385429508,1385429508,187012,187012,github,false,false,false,27,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,12,0,12,0,4.549016229950572,0.22454170508461302,9,ray@envetta.com,plugins/provisioners/shell/provisioner.rb,9,0.1,0,0,false,implemetn array arguments from #1569 implementation of proposal from https://githubcom/mitchellh/vagrant/issues/1569#issuecomment-21199479  allows:rubyconfigvmprovision :shell :path  echosh   :args  [ one two three four ],,527,0.6850094876660342,1.0,13250,409.66037735849056,35.32075471698113,64.0,5501,2,1274,57,travis,mpapis,mitchellh,false,mitchellh,0,0,219,12,1640,false,false,false,false,0,0,0,0,0,0,187072
1788709,mitchellh/vagrant,ruby,1945,1374134894,1374156108,1374156108,353,353,github,false,false,false,26,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,0,7,0,7.717781913751431,0.38272981266683304,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/forward_ports.rb|plugins/providers/virtualbox/model/forwarded_port.rb,1,0.012195121951219513,0,0,false,pass guest_ip option from config to driver [GH-1121] plugins/providers/virtualbox/driver/ now see guestip optionbut plugins/providers/virtualbox/action/forward_portsrb and plugins/providers/virtualbox/model/forwarded_portrb do not pass guest_ip option from config to driver,,526,0.6844106463878327,1.0,13097,413.377109261663,35.657020691761474,64.67129877071085,5499,2,1274,58,travis,znz,mitchellh,false,mitchellh,0,0,73,47,1876,false,false,false,false,0,0,0,0,0,0,353
1788542,mitchellh/vagrant,ruby,1944,1374129950,1374130467,1374130467,8,8,github,false,false,false,7,1,1,0,1,0,1,0,1,0,0,4,4,2,2,0,0,0,4,4,2,2,0,6,0,6,0,17.64367537056055,0.8749511477880327,7,nick@cmdln.org,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/provisioner/base.rb|templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb,6,0.0625,0,0,false,Adds formatter option to Chef Provisioner [GH-1250] ,,525,0.6838095238095238,1.0,13093,413.50339876269766,35.66791415260063,64.6910562896204,5499,2,1274,58,travis,miketheman,mitchellh,false,mitchellh,9,0.6666666666666666,81,11,942,false,true,true,false,1,3,1,0,0,0,8
1788480,mitchellh/vagrant,ruby,1943,1374127941,1374128000,1374128000,0,0,github,false,false,false,9,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.6696091360701635,0.23157296667091734,0,,.gitignore,0,0.0,0,0,false,ignore ruby managers Prevent uncommitted cruft from bothering output,,524,0.683206106870229,1.0,13083,413.819460368417,35.69517694718337,64.74050294275014,5499,2,1274,59,travis,miketheman,mitchellh,false,mitchellh,8,0.625,81,11,942,false,true,true,false,1,2,0,0,0,0,0
1772500,mitchellh/vagrant,ruby,1929,1373893073,1374024347,1374024347,2187,2187,github,false,false,false,105,1,1,0,1,0,1,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,0,2,0,7.807385626787647,0.38719474068791976,0,,plugins/guests/debian/cap/change_host_name.rb|plugins/guests/ubuntu/cap/change_host_name.rb,0,0.0,0,2,false,DHCP renewal on Debian/Ubuntu after setting hostname On Debian and Ubuntu guests when the new hostname of the guest box is set the DHCP client (isc-dhcp-client) wont renew its DHCP lease with the new hostname Executing ifdown -a ifup -a to reinitialize all auto interfaces fixes this issueFurthermore as vagrant will now actually wait until a DHCP lease is acquired it is guaranteed that the the correct domainname is set from DHCP before calling other provisioners like puppet that rely on it This fixes puppet/facter sometimes failing to find the fqdn fact on an LXC guest when the DHCP server is responding too slow,,523,0.6826003824091779,1.0,13017,415.917646155028,35.87616194207575,65.06875624183759,5493,2,1271,74,travis,fpletz,mitchellh,false,mitchellh,0,0,90,98,1434,false,false,false,false,0,0,0,0,0,0,2187
1776073,mitchellh/vagrant,ruby,1928,1373875351,1374024842,1374024842,2491,2491,github,false,false,false,60,1,1,0,2,0,2,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,5,0,5,0,8.896221897067328,0.4411938253336217,18,mitchell.hashimoto@gmail.com,lib/vagrant/util/subprocess.rb|templates/locales/en.yml,15,0.20270270270270271,0,0,false,When top-of-branch vagrant tries to execute a command which does not exist in PATH error report does not display the executable name In failure case at line lib/vagrant/util/subprocessrb:30 command[0] is set to nil But you still need to display the executable nameThe simplest solution: store the executable name in a temp variable and display it in a failure case,,522,0.6819923371647509,1.0,13017,415.917646155028,35.87616194207575,65.06875624183759,5493,2,1271,73,travis,korya,mitchellh,false,mitchellh,0,0,5,2,1350,false,false,false,false,0,0,0,0,0,0,1103
1766412,mitchellh/vagrant,ruby,1925,1373681980,1373682128,1373682128,2,2,github,false,false,false,15,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.599033434647007,0.22808180337617112,1,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,1,0.0136986301369863,0,0,true,Need a way to define our own private network IP address when using DHCP https://githubcom/mitchellh/vagrant/issues/1924,,521,0.6813819577735125,1.0,13017,415.917646155028,35.87616194207575,65.06875624183759,5493,2,1268,73,travis,Sauraus,mitchellh,false,mitchellh,1,0.0,6,0,130,false,true,false,false,0,5,1,0,0,0,2
1764508,mitchellh/vagrant,ruby,1920,1373651355,1374024983,1374024983,6227,6227,github,false,false,false,15,3,3,0,1,0,1,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,12,0,12,0,18.09533529343512,0.8974095894434259,0,,plugins/provisioners/cfengine/provisioner.rb|plugins/provisioners/cfengine/cap/debian/cfengine_install.rb|plugins/provisioners/cfengine/cap/redhat/cfengine_install.rb|plugins/provisioners/cfengine/config.rb,0,0.0,0,0,true,Feature/custom cf package name     This is intended to allow adding support for installing CFEngine    Enterprise,,520,0.6807692307692308,1.0,13017,415.917646155028,35.87616194207575,65.06875624183759,5493,2,1268,73,travis,nickanderson,mitchellh,false,mitchellh,1,1.0,36,13,1245,false,false,false,false,0,1,1,0,0,0,6227
1761886,mitchellh/vagrant,ruby,1919,1373644092,1378237232,1378237233,76552,76552,github,false,false,false,47,3,3,2,4,0,6,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,75,0,75,0,41.64278195342704,2.065208035667894,160,st+github@st-g.de,CHANGELOG.md|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|CHANGELOG.md|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb|CHANGELOG.md|plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb,159,0.0410958904109589,0,2,true,Add support for remote shell provisioner script With these changes Vagrant should be able to provision machine using remote scripts passed in as the path option:rubyVagrantconfigure(2) do |config|  configvmbox  raring64  configvmprovision :shell path: https://gistgithubcom/a-user/some-gistendPS: This PR should also close #1787 :),,519,0.6801541425818882,1.0,13017,415.917646155028,35.87616194207575,65.06875624183759,5493,2,1268,78,travis,fgrehm,mitchellh,false,mitchellh,9,0.8888888888888888,304,142,1528,true,true,true,false,20,59,18,0,6,0,252
1759040,mitchellh/vagrant,ruby,1916,1373561089,1373581057,1373581057,332,332,github,false,false,false,57,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.373089746401246,0.216876567399569,13,mitchell.hashimoto@gmail.com,templates/locales/en.yml,13,0.17567567567567569,0,0,false,Add helpful info about which command to run when another command fails This provides the suggested command to run in order to proceed with a failed commandIm new to the project and ran vagrant provision but the error message didnt tell me exactly what to do Ive altered it to specify the exact command to run,,518,0.6795366795366795,1.0,13015,415.98155973876294,35.8816749903957,65.07875528236649,5493,2,1267,74,travis,saturnflyer,mitchellh,false,mitchellh,0,0,187,3,1926,false,false,false,false,0,0,0,0,0,0,332
1757287,mitchellh/vagrant,ruby,1915,1373533887,1377740969,1377740969,70118,70118,github,false,false,false,73,1,1,2,10,0,12,0,10,0,0,4,4,2,1,1,0,0,4,4,2,1,1,31,0,31,0,17.9203605792178,0.8887742550140462,39,nick@cmdln.org,plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/locales/en.yml|templates/provisioners/chef_solo/solo.erb,30,0.10810810810810811,0,1,false,support for chef solo environments upcoming in chef 116 Add support for new chef solo provisioner configuration options environment and environments_path This allows for  chef environments to be used in chef-solo provisioned VMsThe necessary chef-solo support for environments is available in the upcoming 116 chef release   If environment is specified for a VM using an earlier version of chef provisioning will fail with a missing client pem error during the chef-client run ,,517,0.6789168278529981,1.0,12923,418.94296989863034,36.137119863808714,65.54205679795713,5493,2,1267,86,travis,marcparadise,mitchellh,false,mitchellh,0,0,6,1,635,false,false,false,false,0,0,0,0,0,0,4792
1756537,mitchellh/vagrant,ruby,1914,1373513414,1376078009,1376078009,42743,42743,github,false,true,false,107,10,1,0,11,1,12,0,3,6,0,0,14,6,0,0,8,0,8,16,9,0,0,142,0,669,0,26.7339552823438,1.3258913560700822,0,,plugins/guests/darwin/cap/change_host_name.rb|plugins/guests/darwin/cap/configure_networks.rb|plugins/guests/darwin/cap/halt.rb|plugins/guests/darwin/cap/mount_nfs_folder.rb|plugins/guests/darwin/guest.rb|plugins/guests/darwin/plugin.rb,0,0.0,0,9,false,Highly limited osx (darwin) guest plugin Not perfect but some might find it useful- Tested on mountainlion/virtualbox- virtualbox shared folders will not work (no vboxvsf support)- Must use at least 2GB of RAM or the os will refuse to boot(mountainlion requirement)To begin create a mountainlion vm in virtualbox You will need to install from scratch most likely and assign at least 2GB of ram for it to installCreate 2 network interfaces the first one a NAT interface second a hostonly interfacevagrant package the VMIn your vagrant file be sure that the synced folder is disabled:configvmsynced_folder vagrant /vagrant disabled: true,,516,0.6782945736434108,1.0,12923,418.94296989863034,36.137119863808714,65.54205679795713,5493,2,1266,95,travis,b2jrock,mitchellh,false,mitchellh,0,0,4,0,632,false,false,false,false,0,0,0,0,0,0,1143
1751250,mitchellh/vagrant,ruby,1913,1373410444,1373420646,1373420646,170,170,github,false,false,false,39,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.384168298433339,0.217437543008707,0,,plugins/hosts/fedora/host.rb,0,0.0,0,0,false,Stop ruby regex error on Fedora Core releases The version_number regex was causing an error because my /etc/redhat-release looks like this:Fedora Core release 6 (Zod)This fix allowed initialize to run just fine on my ridiculously old release,,515,0.6776699029126214,0.8356164383561644,12918,419.10512463229605,36.151106982505034,65.56742529803375,5492,2,1265,79,travis,mightybs,mitchellh,false,mitchellh,0,0,1,1,1323,false,true,false,false,0,0,0,0,0,0,170
1747816,mitchellh/vagrant,ruby,1912,1373391300,1373393206,1373393206,31,31,github,false,false,false,13,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.132143926282164,0.20493750881182102,9,mitchell.hashimoto@gmail.com,templates/locales/en.yml,9,0.1267605633802817,0,0,false,Remove duplicate entry in enyml Key **vagrantconfigvmnetwork_ip_required** appears twice Remove the unused entry,,514,0.6770428015564203,0.8169014084507042,12918,419.10512463229605,36.151106982505034,65.56742529803375,5492,2,1265,83,travis,emyl,fgrehm,false,fgrehm,1,1.0,6,1,908,false,true,false,false,0,0,1,0,0,0,31
1745532,mitchellh/vagrant,ruby,1911,1373383635,1373420735,1373420735,618,618,github,false,false,false,71,1,1,0,1,0,1,0,1,0,0,3,3,2,0,1,0,0,3,3,2,0,1,7,0,7,0,12.961712987502468,0.6428481720341688,14,neil@aldur.co.uk,lib/vagrant/errors.rb|plugins/communicators/ssh/communicator.rb|templates/locales/en.yml,9,0.056338028169014086,0,0,false,Raise a proper SSH error on EHOSTUNREACH When using providers different from Virtualbox or Vmware Fusion/Workstation it is perfectly possible to have the guest VM behind a routed network In that case in the event of a boot failure or a network misconfiguration ssh connection attempts will probably fail with Errno::EHOSTUNREACH (No route to host) exception That exception is not currently rescued in the ssh communicator while probably it should be,,513,0.6764132553606238,0.8169014084507042,12918,419.10512463229605,36.151106982505034,65.56742529803375,5492,2,1265,82,travis,emyl,mitchellh,false,mitchellh,0,0,6,1,908,false,true,true,false,0,0,0,0,0,0,618
1708619,mitchellh/vagrant,ruby,1907,1373188505,1377741295,1377741295,75879,75879,github,false,false,false,273,1,1,0,3,0,3,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,17,0,17,0,4.651135334959437,0.23067736886668477,2,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb,2,0.018867924528301886,0,1,false,Generate ansible_hosts file if one is not provided This pull request adds much-requested Ansible inventory file generation if one is not already specified in the VagrantfileIf you specify an inventory file it is used as-is — the current behaviorOn the other hand if you dont specify an inventory file one is created adjacent to your Vagrantfile with a name like vagrant_ansible_inventory_xyz where xyz is the name of the VM set in your Vagrantfile The default Vagrant VM is unsurprisingly named default so for a single-VM setup the generated inventory file would be named vagrant_ansible_inventory_default and contain the following:# Generated by Vagrantdefault ansible_ssh_host1721696167 ansible_ssh_port22The VM name is inserted into the inventory file so that you can target specific Vagrantfile-defined hosts in a playbook (See Ansibles [Inventory and Patterns](http://wwwansibleworkscom/docs/patternshtml/) docs for more on this format)This also works for a [multi-machine](http://docsvagrantupcom/v2/multi-machine/indexhtml) setup with for example web and db VMs Youd get two inventory files vagrant_ansible_inventory_web and vagrant_ansible_inventory_db each containing the name and connection info for that particular VMWhere this falls apart is trying to provision many VMs at once Vagrant provisions each VM as its brought up whereas when using Ansible to administer many hosts it expects that _all_ the hosts are available If my understanding is correct this kind of bring-every-VM-up-and-then-provision-once arrangement just isnt possible with the current Vagrant architecture However I hope this little bit of additional automation will reduce the need for folks to have to keep their Vagrantfile and corresponding Ansible inventory files in syncIf this looks good Id also be happy to update the documentation that goes along with this provisioner,,512,0.67578125,0.5471698113207547,12918,419.10512463229605,36.151106982505034,65.56742529803375,5490,2,1263,88,travis,commandtab,mitchellh,false,mitchellh,3,1.0,11,8,1941,false,false,false,false,1,2,0,0,0,0,34502
1704363,mitchellh/vagrant,ruby,1905,1373093083,1374025384,1374025384,15538,15538,github,false,false,false,4,2,2,0,3,0,3,0,3,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,7.581442078702228,0.3760086484229234,19,mitchell.hashimoto@gmail.com,templates/locales/en.yml|templates/locales/en.yml,19,0.16521739130434782,0,0,false,correct exits to exists ,,511,0.675146771037182,0.5043478260869565,12918,419.10512463229605,36.151106982505034,65.56742529803375,5489,2,1262,84,travis,bdon,mitchellh,false,mitchellh,0,0,70,62,1534,false,false,true,false,0,0,0,0,0,0,3644
1689276,mitchellh/vagrant,ruby,1897,1372961256,1374025833,1374025833,17742,17742,merged_in_comments,false,false,false,77,2,1,1,5,0,6,0,3,0,0,4,8,3,1,0,0,0,8,8,7,1,0,11,0,32,0,17.976771799016927,0.8915746631032417,74,mitchell.hashimoto@gmail.com,CHANGELOG.md|plugins/provisioners/chef/config/chef_solo.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|templates/provisioners/chef_solo/solo.erb,73,0.022900763358778626,0,1,false,Update Chef cache/backup dir defaults and allow setting for either provisioner EDIT: Updated title to reflect changed scope--------This enhancement would pave the way for vagrant-cachier to cache chef files in solo mode: fgrehm/vagrant-cachier#14Currently chef_solos solorb template hardcodes provisioning_path as file_cache_path value:https://githubcom/mitchellh/vagrant/blob/v122/templates/provisioners/chef_solo/soloerb#L4chef_clients clientrb template allows it to be configured:https://githubcom/mitchellh/vagrant/blob/v122/templates/provisioners/chef_client/clienterb#L19I would suggest that solos file_cache_path default to provisioning_path but have the option to set file_cache_path explicitly in the VagrantfilePR forthcoming :),,510,0.6745098039215687,0.4351145038167939,12918,419.10512463229605,36.151106982505034,65.56742529803375,5489,3,1260,83,travis,patcon,mitchellh,false,mitchellh,1,1.0,91,141,1116,false,true,false,false,3,7,1,0,1,0,4
1688924,mitchellh/vagrant,ruby,1893,1372871705,,1373678306,13443,,unknown,false,false,false,23,6,4,0,3,0,3,0,4,0,0,3,4,2,0,1,0,0,4,4,3,0,1,14,0,15,0,21.368925462592966,1.0598116688131671,40,mitchell.hashimoto@gmail.com,templates/locales/en.yml|plugins/providers/virtualbox/action/network.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml,33,0.03896103896103896,0,0,false,Enable proper hostonly network support This change enables hostonly networks again in Vagrant which are different from private networks when used with VirtualBox,,509,0.6758349705304518,0.36363636363636365,12918,419.10512463229605,36.151106982505034,65.56742529803375,5489,3,1259,85,travis,Sauraus,mitchellh,false,,0,0,6,0,121,false,true,false,false,0,0,0,0,0,0,1091
1678294,mitchellh/vagrant,ruby,1889,1372761041,1385441527,1385441527,211281,211281,github,false,false,false,47,7,7,0,2,0,2,0,3,0,0,6,6,6,0,0,0,0,6,6,6,0,0,23,0,23,0,24.981824748475955,1.238996758308113,78,sgronblo@gmail.com,lib/vagrant/util/downloader.rb|plugins/commands/box/command/add.rb|lib/vagrant/action/builtin/box_add.rb|config/default.rb|plugins/kernel_v2/config/vm.rb|lib/vagrant/action/builtin/handle_box_url.rb,34,0.1069182389937107,0,1,false,Client certs I had the issue with downloading boxes from servers protected with a client certificateIve added a way to pass client certs in with a --cert file param:shbundle exec bin/vagrant box add responsive https://boxesdevbbccouk/news/responsivebox --cert $DEV_CERT_PATHvagrant box add -h provides details,,508,0.6751968503937008,0.3522012578616352,12918,419.10512463229605,36.151106982505034,65.56742529803375,5489,3,1258,80,travis,sthulb,mitchellh,false,mitchellh,1,1.0,44,31,1454,false,true,false,false,0,0,1,0,0,0,31918
1673722,mitchellh/vagrant,ruby,1885,1372675137,,1374025964,22513,,unknown,false,false,false,17,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.65388652526361,0.23081381670036705,3,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,3,0.018867924528301886,0,0,false,Modified existing bridge networking example with adding wlan0 as a physi cal device which works with Ubuntu,,507,0.6765285996055227,0.3522012578616352,12918,419.10512463229605,36.151106982505034,65.56742529803375,5487,3,1257,82,travis,koolhead17,mitchellh,false,,0,0,7,8,1654,false,false,false,false,0,0,0,0,0,0,-1
1653351,mitchellh/vagrant,ruby,1872,1372280523,1377741503,1377741503,91016,91016,merged_in_comments,false,false,false,52,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.179594895899711,0.20729088364038728,7,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/config.rb,7,0.04,0,0,false,allow inventory_file of Ansible provisioner to be a directory Ansible supports directories as inventory files as well This is something which is especially useful when you require multiple inventory sources eg dynamic and static onesThis PR fixes the Ansible provisioner to not only allow regular files as inventory_file but directories too,,506,0.6758893280632411,0.32,12918,419.10512463229605,36.151106982505034,65.56742529803375,5484,3,1252,84,travis,benjixx,mitchellh,false,mitchellh,1,1.0,2,3,1626,false,true,false,false,0,0,1,0,0,0,-1
1648575,mitchellh/vagrant,ruby,1869,1372198488,,1374026079,30459,,unknown,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.771708113851931,0.23665728761529878,2,tobias@lidskog.se,README.md,2,0.011363636363636364,0,0,false,Added Travis CI Pin ,,505,0.6772277227722773,0.3181818181818182,12918,419.10512463229605,36.151106982505034,65.56742529803375,5484,3,1251,81,travis,voronoipotato,mitchellh,false,,0,0,7,38,1094,false,true,false,false,0,0,0,0,0,0,-1
1641862,mitchellh/vagrant,ruby,1862,1372104539,1378074779,1378074779,99504,99504,github,false,false,false,222,2,2,0,1,0,1,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,8,0,8,0,13.410134474089627,0.6650880513796953,170,st+github@st-g.de,CHANGELOG.md|plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb,168,0.03333333333333333,0,0,false,puppet provisioner nfs support A sample vagrant provision run on my system with this patch:    $ mount | grep puppet    192168331:/home/marc/vagrant/puppetmaster/manifests on /tmp/vagrant-puppet/manifests type nfs (rwrelatimevers3rsize1048576wsize1048576namlen255hardprototcptimeo600retrans2secsysmountaddr192168331mountvers3mountport32767mountprotoudplocal_locknoneaddr192168331)    192168331:/home/marc/vagrant/puppetmaster/modules on /tmp/vagrant-puppet/modules-0 type nfs (rwrelatimevers3rsize1048576wsize1048576namlen255hardprototcptimeo600retrans2secsysmountaddr192168331mountvers3mountport32767mountprotoudplocal_locknoneaddr192168331)    192168331:/home/marc/vagrant/puppetmaster/site-modules on /tmp/vagrant-puppet/modules-1 type nfs (rwrelatimevers3rsize1048576wsize1048576namlen255hardprototcptimeo600retrans2secsysmountaddr192168331mountvers3mountport32767mountprotoudplocal_locknoneaddr192168331)    []    notice: Finished catalog run in 4905 seconds    Changes:                Total: 1    Events:                Total: 1              Success: 1    Resources:          Out of sync: 1              Changed: 1                Total: 421              Skipped: 6    Time:               Sysctl: 000            Mailalias: 000               Sshkey: 000            Resources: 000           Filebucket: 000                Group: 000              Vcsrepo: 001                 Host: 001               Pgconf: 001            File line: 001              Sudoers: 002                 User: 005              Package: 053             Last run: 1372095748               Augeas: 250                 File: 281                 Exec: 2508              Service: 340       Config retrieval: 4595                Total: 8040    []    real    1m54600s    user    0m1364s    sys     0m0336sUsing VirtualBoxs default vboxsf filesystem:    $ mount | grep puppet    none on /tmp/vagrant-puppet/manifests type vboxsf (rwnodevrelatime)    none on /tmp/vagrant-puppet/modules-0 type vboxsf (rwnodevrelatime)    none on /tmp/vagrant-puppet/modules-1 type vboxsf (rwnodevrelatime)    []    notice: Finished catalog run in 13720 seconds    Changes:                Total: 1    Events:              Success: 1                Total: 1    Resources:          Out of sync: 1              Changed: 1                Total: 421              Skipped: 6    Time:               Sysctl: 000              Vcsrepo: 000           Filebucket: 000               Sshkey: 000            Mailalias: 000            Resources: 000                Group: 000            File line: 002                 Host: 002               Pgconf: 002              Sudoers: 003                 User: 006              Package: 065             Last run: 1372096720       Config retrieval: 16933                Total: 19824                 File: 211               Augeas: 271              Service: 289                 Exec: 2036    []    real    5m21574s    user    0m1376s    sys     0m0380s,,504,0.6765873015873016,0.3111111111111111,12918,419.10512463229605,36.151106982505034,65.56742529803375,5482,4,1250,82,travis,mfournier,mitchellh,false,mitchellh,2,0.5,25,9,1666,false,true,false,false,1,3,0,0,0,0,24274
1641601,mitchellh/vagrant,ruby,1861,1372101457,1373393799,1373393799,21539,21539,github,false,false,false,50,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.343009191266027,0.21539556711561753,2,mitchell.hashimoto@gmail.com,lib/vagrant/action/builder.rb,2,0.011111111111111112,0,0,false,Vagrant::Action::Builder RDoc correction The RDoc comments for Vagrant::Action::Builder#to_app reference aninstance of Vagrant::Action::Environment as the passed paramter Thereis no class Vagrant::Action::Environment available The param beingpassed is actually a Hash that represents the action environmentThis commit corrects the RDoc lines forVagrant::Action::Builder#to_app to correctly reference the passedHash,,503,0.6759443339960238,0.3111111111111111,12918,419.10512463229605,36.151106982505034,65.56742529803375,5482,4,1250,83,travis,trlinkin,fgrehm,false,fgrehm,1,1.0,20,11,440,false,false,false,false,0,1,1,0,0,0,21538
1641214,mitchellh/vagrant,ruby,1859,1372096642,1372096828,1372096828,3,3,github,false,false,false,24,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.575558921450293,0.22692818426589084,0,,vagrant.gemspec,0,0.0,0,0,false,Remove JSON gem dependency Since the Ruby 19 stdlib includes the JSON gem can we just rely on that instead of the JSON gem,,502,0.6752988047808764,0.30726256983240224,12918,419.10512463229605,36.151106982505034,65.56742529803375,5482,4,1250,73,travis,sethvargo,mitchellh,false,mitchellh,0,0,387,60,1008,false,false,true,false,1,5,0,0,0,0,2
1636357,mitchellh/vagrant,ruby,1853,1372019164,1372019588,1372019588,7,7,merged_in_comments,false,false,false,157,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.016054527948518,0.19917915550550894,1,mitchell.hashimoto@gmail.com,lib/vagrant/plugin/v2/config.rb,1,0.00558659217877095,0,1,false,Correct Vagrant::Plugin::V2::Config#merge order Without this commit the Vagrant::Plugin::V2::Config#merge method does notmerge as describedPer the description this method accepts a different config object as anargument and will merge the two together resulting in a new configobject The merge will take place in such a manner that values from theconfig object supplied as an argument will be overridden by values fromthe current object when there is a value conflictThe order in which the current config object and the passed configobject are applied to the resulting object does not reflect this overridingbehavior as described The order in which they will apply will causethe passed config object to overwrite the values in the current objectThis commit reverses the order in which the values from the two configobjects are applied This will cause the resulting merged config objectto properly contain the values from the two original object as described,,501,0.6746506986027944,0.30726256983240224,12918,419.10512463229605,36.151106982505034,65.56742529803375,5482,4,1249,73,travis,trlinkin,mitchellh,false,mitchellh,0,0,20,11,439,false,false,false,false,0,0,0,0,0,0,-1
1604970,mitchellh/vagrant,ruby,1840,1371460849,,1377741472,104677,,unknown,false,false,false,8,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,67,0,67,0,4.288746054965082,0.2127034908168653,5,mitchell.hashimoto@gmail.com,plugins/guests/gentoo/cap/configure_networks.rb,5,0.017985611510791366,0,0,false,Fix configuring network interface for funtoo See https://githubcom/mitchellh/vagrant/pull/1826,,500,0.676,0.3273381294964029,12918,419.10512463229605,36.151106982505034,65.56742529803375,5478,5,1243,82,travis,ngiger,mitchellh,false,,1,0.0,8,0,1139,false,false,false,false,0,4,1,0,0,0,104677
1604967,mitchellh/vagrant,ruby,1839,1371460836,1374024986,1374024986,42735,42735,github,false,false,false,14,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5506229531667595,0.22569146671888993,9,mitchell.hashimoto@gmail.com,plugins/provisioners/cfengine/provisioner.rb,9,0.03237410071942446,0,1,false,Update CFEngine bootstrap for 35 compatibility CFEngine 35 bootstrap removed the policy-server optionhttp://cfenginecom/blog/cfengine-is-very-easy-to-install-and-now-so-is-bootstrapping,,499,0.6753507014028056,0.3273381294964029,12918,419.10512463229605,36.151106982505034,65.56742529803375,5478,5,1243,83,travis,nickanderson,mitchellh,false,mitchellh,0,0,36,12,1220,false,false,false,false,0,0,0,0,0,0,33714
1598087,mitchellh/vagrant,ruby,1836,1371244267,,1374307304,51050,,unknown,false,false,false,41,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.823521263922936,0.23922605762073737,3,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,3,0.010344827586206896,0,0,true,adding explicit name of API_VERSION in Vagrantfile fixes #1835 This is just a small change but I think it has some value in communicating that Vagrant has a versioned API Users starting out with version 2 might not be as aware,,498,0.6767068273092369,0.3137931034482759,12918,419.10512463229605,36.151106982505034,65.56742529803375,5477,5,1240,79,travis,scottmuc,mitchellh,false,,1,0.0,85,30,1478,false,true,false,false,1,0,0,0,0,0,-1
1587501,mitchellh/vagrant,ruby,1826,1371075740,,1373393649,38631,,unknown,false,true,false,31,2,2,0,7,0,7,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,0,10,0,13.276410446110308,0.6584354570200274,3,mitchell.hashimoto@gmail.com,plugins/guests/gentoo/cap/change_host_name.rb|plugins/guests/gentoo/cap/configure_networks.rb|plugins/guests/gentoo/cap/configure_networks.rb,3,0.010273972602739725,0,8,false,Fixes to run funtoo with vagrant  122 Loopback interface in funtoo is netiflog whereas it is netlo under gentoo+ Some commits (see also issue 1698) to fix wrong namee,,497,0.6780684104627767,0.3047945205479452,12918,419.10512463229605,36.151106982505034,65.56742529803375,5477,5,1238,85,travis,ngiger,fgrehm,false,,0,0,8,0,1134,false,false,false,false,0,0,0,0,0,0,1854
1573198,mitchellh/vagrant,ruby,1818,1370828782,1370927699,1370927699,1648,1648,github,false,false,false,23,3,3,0,3,0,3,0,3,1,0,1,2,1,0,0,1,0,1,2,1,0,0,45,0,45,0,13.923592015735217,0.6921337077212965,0,,CONTRIBUTING.md|CONTRIBUTING.md|CONTRIBUTING.md,0,0.0,0,1,false,Kick off vagrants Contributing Guidelines Has a lot of room for improvements but its a start :) For more info please check https://githubcom/blog/1184-contributing-guidelines,,496,0.6774193548387096,0.3003412969283277,12918,419.10512463229605,36.151106982505034,65.56742529803375,5475,4,1235,72,travis,fgrehm,fgrehm,true,fgrehm,8,0.875,294,142,1495,false,true,false,false,5,23,4,0,0,0,907
1572369,mitchellh/vagrant,ruby,1815,1370809106,1370814366,1370814366,87,87,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.732117484354671,0.23518817045174029,4,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/configure_networks.rb,4,0.014234875444839857,0,0,false,Set ARPCHECKno as an environment variable with doing ifup #921 Without this vnet0 vbox interface responds to the arping command in /etc/sysconfig/ifup-eth and the ifup command errors outShould affect Centos and RHEL,,495,0.6767676767676768,0.2704626334519573,12884,419.43495808755046,36.16889164855635,65.66283762806583,5475,4,1235,79,travis,jprosevear,mitchellh,false,mitchellh,0,0,2,0,802,false,false,false,false,0,2,0,0,0,0,87
1570760,mitchellh/vagrant,ruby,1814,1370761627,,1370902508,2348,,unknown,false,false,false,50,1,1,0,0,0,0,0,2,0,0,3,3,2,1,0,0,0,3,3,2,1,0,11,0,11,0,13.912281935858367,0.691446090702783,9,mitchell.hashimoto@gmail.com,plugins/guests/redhat/cap/configure_networks.rb|plugins/providers/virtualbox/action/network.rb|templates/guests/redhat/network_dhcp.erb,6,0.014184397163120567,0,0,false,Added support for sending the hostname in a DHCP request for bridged adapters in RedHat guests Added support for sending the hostname in a DHCP request for bridged adapters in RedHat guestsUsage:Vagrantconfigure(2) do |config|  configvmbox  CentOS 63 Minimal  configvmhostname  hostexampledev  configvmnetwork :public_network :send_hostname_in_dhcp_request  trueend,,494,0.6781376518218624,0.2730496453900709,12884,419.43495808755046,36.16889164855635,65.66283762806583,5475,4,1235,79,travis,tgarvey,tgarvey,true,,0,0,1,0,256,false,false,false,false,0,0,0,0,0,0,-1
1565392,mitchellh/vagrant,ruby,1808,1370628358,1370814812,1370814812,3107,3107,github,false,false,false,30,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.487920309410449,0.22305147118455224,1,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,1,0.0035211267605633804,0,0,true,add ssh agent sample to Vagrantfile its hard to find how to enable it only info about it is in old [10 docs](http://docs-v1vagrantupcom/v1/docs/config/ssh/forward_agenthtml) nothing about it in current [12](http://docsvagrantupcom/v2/) version,,493,0.6774847870182555,0.2746478873239437,12884,419.43495808755046,36.16889164855635,65.66283762806583,5475,4,1233,78,travis,glensc,mitchellh,false,mitchellh,1,1.0,17,3,1216,true,false,false,false,0,5,1,0,1,0,3107
1564538,mitchellh/vagrant,ruby,1805,1370618183,,1385462408,247343,,unknown,false,false,false,7,3,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,51,0,65,0,8.58165013750206,0.4265115145532518,21,tse_ben@bah.com,plugins/provisioners/puppet/config/puppet.rb|plugins/provisioners/puppet/provisioner/puppet.rb,20,0.07042253521126761,0,0,true,add support for manifests located in guest ,,492,0.6788617886178862,0.2746478873239437,12884,419.43495808755046,36.16889164855635,65.66283762806583,5475,4,1233,78,travis,kburwieck,mitchellh,false,,0,0,0,0,512,false,false,false,false,0,0,0,0,0,0,-1
1572723,mitchellh/vagrant,ruby,1801,1370524368,1377741766,1377741767,120289,120289,github,false,false,false,71,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.585179212448806,0.22788527836312736,3,mitchell.hashimoto@gmail.com,plugins/guests/linux/cap/mount_virtualbox_shared_folder.rb,3,0.010380622837370242,0,0,false,Defining the group of a shared folder *Symtom*: The group ID for groups that are not backed by a user account (eg admin) cannot be obtained from the id command*Consequence*: The shared folder group can only be set to a group where by a user account of the same name exists*Solution*: Correcting the method to define the group ID by looking up the group ID via the group name,,491,0.6782077393075356,0.2837370242214533,12884,419.43495808755046,36.16889164855635,65.66283762806583,5474,4,1232,86,travis,davegudge,mitchellh,false,mitchellh,0,0,1,8,388,false,false,false,false,0,0,0,0,0,0,4868
1553182,mitchellh/vagrant,ruby,1798,1370441502,1370817036,1370817036,6258,6258,github,false,false,false,49,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.459745424918917,0.2216511679253536,0,,plugins/commands/status/command.rb,0,0.0,0,0,false,fixes the status command output formatting the result line needs space between the name of the VM and short_description - otherwise the formatting of the output breaks when the name of the VM is too long - the name of the VM gets smashed together with the short_description rendering,,490,0.6775510204081633,0.2910958904109589,12884,419.43495808755046,36.16889164855635,65.66283762806583,5474,4,1231,77,travis,hecko,mitchellh,false,mitchellh,0,0,8,22,719,false,true,false,false,0,1,0,0,0,0,6258
1572801,mitchellh/vagrant,ruby,1783,1370099544,1370818101,1370818101,11975,11975,github,false,false,false,114,3,1,0,4,0,4,0,2,0,0,1,3,1,0,0,0,0,3,3,2,0,1,5,0,24,0,4.599820794831969,0.22860112380961053,4,mitchell.hashimoto@gmail.com,lib/vagrant/util/subprocess.rb,4,0.012903225806451613,0,0,false,Fixes [GH-654] on Windows 8x64 and Ruby 193p374 I tried to use the [vagrant-digitalocean](https://githubcom/smdahlen/vagrant-digitalocean) plugin and I experienced the same problem what is described in this issueAfter a few hours of investigation I found that vagrant cant locate the rsync command because the extension is not given When I modified the command name to the extension postfixed version (eg rsyncbat or rsyncexe) then Vagrant could run the commandWindows provides a command which is similar to the which command under Linux It is called where I added a few lines of code that tempt to locate the absolute path of the command and if this operation is successful then it replaces the command,,489,0.6768916155419223,0.33225806451612905,12884,419.43495808755046,36.16889164855635,65.66283762806583,5472,4,1227,77,travis,Aigeruth,mitchellh,false,mitchellh,0,0,5,4,1310,false,false,false,false,0,0,0,0,0,0,690
1717278,mitchellh/vagrant,ruby,1781,1370000033,1370141015,1370141015,2349,2349,github,false,false,false,16,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.676122027090745,0.23239312967688508,2,mitchell.hashimoto@gmail.com,plugins/guests/suse/cap/change_host_name.rb,2,0.006430868167202572,0,0,true,Fix setting persistent hostname on SLES guests Fix for issue #1160Have tested this on SLES11,,488,0.6762295081967213,0.33440514469453375,12884,419.43495808755046,36.16889164855635,65.66283762806583,5472,4,1226,74,travis,dsesh,mitchellh,false,mitchellh,0,0,0,1,373,false,false,false,false,0,0,0,0,0,0,2349
1516847,mitchellh/vagrant,ruby,1768,1369495634,,1374307187,80192,,unknown,false,false,false,43,1,1,0,0,0,0,0,2,1,0,2,3,3,0,0,1,0,2,3,3,0,0,4,28,4,28,14.62893918435941,0.7270265705664674,147,mitchell.hashimoto@gmail.com,CHANGELOG.md|plugins/kernel_v2/config/vm.rb|test/unit/plugins/kernel_v2/config/vm_test.rb,134,0.0688622754491018,0,0,false,Ignore nfs option for vmsync_folder on windows This patch will change the sync_folder behavior to the one described in the [documentation](http://docsvagrantupcom/v2/synced-folders/nfshtml)Without that patch windows users will get an error when nfs: true is set for a shared folderThis solves #1748 ,,487,0.6776180698151951,0.3712574850299401,12884,419.43495808755046,36.16889164855635,65.66283762806583,5471,5,1220,84,travis,hwartig,mitchellh,false,,0,0,15,22,1472,false,false,false,false,0,3,0,0,0,0,-1
1573069,mitchellh/vagrant,ruby,1763,1369396174,1370825342,1370825342,23819,23819,github,false,false,false,71,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,30,0,30,0,5.137285713369711,0.2553119653545705,0,,contrib/bash/completion.sh,0,0.0,0,0,true,Improved autocompletion for bash Now it works this way:$ vagrant [TAB][TAB]box         destroy     halt        init        packageplugin      provision   reloadresume      ssh         ssh-config  status      suspend     up $ vagrant b[TAB]$ vagrant box$ vagrant box [TAB][TAB]add        list       remove     repackage$ vagrant box a[TAB]$ vagrant box add$ vagrant box add -[TAB][TAB]-f          --force     -h          --help      --insecure  --provider$ vagrant box add --pr[TAB]$ vagrant box add --provider,,486,0.676954732510288,0.373134328358209,12884,419.43495808755046,36.16889164855635,65.66283762806583,5471,5,1219,75,travis,ekalinin,mitchellh,false,mitchellh,0,0,45,132,1149,false,true,true,false,0,0,0,0,0,0,23819
1573052,mitchellh/vagrant,ruby,1762,1369372351,,1370824915,24209,,unknown,false,false,false,139,1,1,0,0,0,0,0,1,0,0,9,9,8,1,0,0,0,9,9,8,1,0,23,7,23,7,39.85144647444249,1.9805305153912816,33,neil@aldur.co.uk,config/default.rb|lib/vagrant/machine.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh_config/command.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v1/config/ssh.rb|plugins/kernel_v2/config/ssh.rb|templates/commands/ssh_config/config.erb|test/unit/vagrant/machine_test.rb,11,0.014925373134328358,0,0,true,SSH RequestTTY Support Having run into the issue with syncing folders on RHEL-based machines and EC2 instances and noticing the number of concerns related to this on the issue board I have attempted to resolve this issue  I followed forward_agent as a template and as a result may have overdone it on where to put this option  In particular I added this to kernel_v1 but wasnt sure if I should probably leave that aloneMy testing is limited to a few Linux distros at present so if issues are found on other platforms I can take some time to look into thatRequestTTY can be invoked in the Vagrantfile by using:  configsshrequest_tty  trueAlso note that that while SSH supports a few choices for this option I have limited it to two (false  No true  Force),,485,0.6783505154639176,0.373134328358209,12884,419.43495808755046,36.16889164855635,65.66283762806583,5471,5,1219,75,travis,wbates,mitchellh,false,,0,0,3,6,757,false,true,false,false,0,0,0,0,0,0,-1
1512008,mitchellh/vagrant,ruby,1760,1369351310,1370825522,1370825522,24570,24570,github,false,false,false,47,1,1,0,1,0,1,0,3,0,0,3,3,1,2,0,0,0,3,3,1,2,0,5,0,5,0,14.294789880131487,0.7104200743845889,2,mitchell.hashimoto@gmail.com,plugins/guests/arch/cap/configure_networks.rb|templates/guests/arch/network_dhcp.erb|templates/guests/arch/network_static.erb,2,0.0,0,3,false,fixed networking issues of Arch Linux with netctl changes Arch Linux has migrated from netcfg to netctl which changed the directories network profiles were in and the profile syntax This commit also fixates interface names to prevent random names caused by systemd-197 as mentioned in this [mail](https://mailmanarchlinuxorg/pipermail/arch-dev-public/2013-January/024231html),,484,0.6776859504132231,0.373134328358209,12884,419.43495808755046,36.16889164855635,65.66283762806583,5471,5,1218,73,travis,tunix,mitchellh,false,mitchellh,0,0,73,31,1585,false,true,false,false,1,12,0,0,0,0,24570
1505030,mitchellh/vagrant,ruby,1754,1369140551,1372760932,1372760932,60339,60339,commits_in_master,false,false,false,49,6,3,0,0,0,0,0,1,0,0,3,6,3,0,0,0,0,6,6,6,0,0,9,0,23,0,12.239920374261276,0.6082975136857455,15,mitchell.hashimoto@gmail.com,lib/vagrant/util/downloader.rb|plugins/commands/box/command/add.rb|lib/vagrant/action/builtin/box_add.rb,10,0.022857142857142857,0,0,false,Client certificate curl option I had the issue with downloading boxes from servers protected with a client certificateIve added a way to pass client certs in with a --cert file param: shbundle exec bin/vagrant box add responsive https://boxesdevbbccouk/news/responsivebox --cert $DEV_CERT_PATHvagrant box add -h provides details,,483,0.6770186335403726,0.39714285714285713,12884,419.43495808755046,36.16889164855635,65.66283762806583,5468,5,1216,80,travis,sthulb,sthulbourn,false,sthulbourn,0,0,44,31,1412,false,true,false,false,0,0,0,0,0,0,-1
1497661,mitchellh/vagrant,ruby,1746,1368962391,,1374626303,94398,,unknown,false,false,false,8,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.712524620895131,0.23420225968964928,5,mitchell.hashimoto@gmail.com,plugins/guests/fedora/cap/configure_networks.rb,5,0.014245014245014245,0,0,false,Allow Vagrant to continue setup if ifup fails ,,482,0.6784232365145229,0.39886039886039887,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1214,80,travis,econchick,mitchellh,false,,0,0,445,41,554,false,false,false,false,0,0,0,0,0,0,-1
1497419,mitchellh/vagrant,ruby,1745,1368953199,1378167033,1378167033,153563,153563,github,false,false,false,25,1,1,0,7,1,8,0,11,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,3.8885348726133833,0.19325175512294115,11,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,11,0.03133903133903134,0,0,false,Static ip addresses on public networks This patch allows users to specify an ip address and netmask for an ip address on a public network,,481,0.6777546777546778,0.39886039886039887,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1214,74,travis,jheise,mitchellh,false,mitchellh,0,0,1,0,724,false,false,false,false,0,0,0,0,0,0,34608
1481110,mitchellh/vagrant,ruby,1738,1368633241,1374640834,1374640834,100126,100126,github,false,false,false,29,1,1,0,6,0,6,0,4,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.316285447872084,0.26420786419368153,2,schisamo@opscode.com,templates/guests/fedora/network_static.erb,2,0.005649717514124294,0,4,false,Private Network bugfix in Fedora If you try and start fedora with a :private_network it will fail saying the p7p1 device doesnt exist Fixed with changing device to eth,,480,0.6770833333333334,0.403954802259887,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1210,79,travis,drogerschariot,mitchellh,false,mitchellh,0,0,0,1,392,false,true,false,false,0,0,0,0,0,0,49470
1477941,mitchellh/vagrant,ruby,1734,1368571776,1374031247,1374031247,90991,90991,github,false,true,false,86,2,1,0,18,0,18,0,6,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,6,0,4.41319403974442,0.21932617857829023,2,mitchell.hashimoto@gmail.com,plugins/guests/arch/cap/configure_networks.rb,2,0.005649717514124294,0,18,false,No TemplateRenderer for archs configure_networks I have a basic little playbook:rubyVagrantconfigure(2) do |config|  configvmprovision :ansible do |ansible|    ansibleplaybook  playbookyml    ansibleinventory_file  blah    ansiblesudo_user  vagrant  end  configvmbox  arch64  configvmbox_url  http://vagrantpoussin/archlinux_2012-07-02boxendWhen I run it with vagrant up Im told[default] Configuring and enabling network interfaces[default] Forcing shutdown of VM[default] Destroying VM and associated drives/opt/vagrant/embedded/gems/gems/vagrant-122/plugins/guests/arch/cap/configure_networksrb:7:in block in configure_networks: uninitialized constant VagrantPlugins::GuestArch::Cap::ConfigureNetworks::TemplateRenderer (NameError)from /opt/vagrant/embedded/gems/gems/vagrant-122/plugins/guests/arch/cap/configure_networksrb:6:in eachIt looks like its simply missing a require or two,,479,0.6764091858037579,0.403954802259887,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1209,79,travis,frankshearar,fgrehm,false,fgrehm,0,0,43,68,1107,false,true,false,false,0,0,0,0,0,0,12248
1476404,mitchellh/vagrant,ruby,1732,1368552141,,1374307021,95914,,unknown,false,false,false,43,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,3.581505834208046,0.17799307737173364,12,neil@aldur.co.uk,plugins/communicators/ssh/communicator.rb,12,0.03389830508474576,0,0,false,Retry ssh on Errno::ENETUNREACH Had issues from Mac OS X with Errno::ENETUNREACH during vagrant up --providercloudstack when connecting to Cloudstack VMs _(with [vagrant-cloudstack](https://githubcom/klarna/vagrant-cloudstack) plugin)_Similiar the same fix has been used in [puppetlabs-cloud-provisioner](https://githubcom/bodepd/puppetlabs-cloud-provisioner) with the fix [retry ssh when Errno::ENETUNREACH is encountered](https://githubcom/bodepd/puppetlabs-cloud-provisioner/commit/7a239f061d9c59d53b2acc8e2dff5840c18a74c9),,478,0.6778242677824268,0.403954802259887,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1209,79,travis,Loa,mitchellh,false,,0,0,9,3,979,false,false,false,false,0,0,0,0,0,0,-1
1472916,mitchellh/vagrant,ruby,1729,1368490098,1374306999,1374306999,96948,96948,merged_in_comments,false,false,false,20,1,1,0,1,0,1,0,3,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.452525344394749,0.2212808591723832,55,mitchell.hashimoto@gmail.com,templates/locales/en.yml,55,0.1553672316384181,0,0,false,Direct user to vagrant-omnibus plugin when chef binary not detected More helpful output pointing to the projecthttps://githubcom/schisamo/vagrant-omnibusRelated: mitchellh/vagrant-rackspace#3,,477,0.6771488469601677,0.403954802259887,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1208,79,travis,patcon,mitchellh,false,mitchellh,0,0,85,136,1064,false,true,false,false,0,0,0,0,0,0,9842
1469368,mitchellh/vagrant,ruby,1723,1368440353,1377762353,1377762353,155366,155366,merged_in_comments,false,true,false,84,1,1,0,6,0,6,0,7,1,0,1,2,1,1,0,1,0,1,2,1,1,0,31,0,31,0,8.67012822871493,0.43088658125214274,10,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb|templates/provisioners/ansible/inventory.erb,10,0.028169014084507043,0,3,false,Ability to generate coherent ansible inventory file (ansibleinventory_file parameter is now optional) Advantages to use auto-generated Ansible inventory file: * more DRY configuration files between Vagrant and Ansible settings * ensure that vagrant will only provision VMs managed by vagrant itself * works fine in multi-machine mode (each provision step can only connect to related VM)Note: So far I opened 3 separated pull requests (see #1697 and #1699) Let me know if you prefer to treat them together in a single pull request,,476,0.6764705882352942,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1208,72,travis,gildegoma,mitchellh,false,mitchellh,2,0.5,28,116,946,false,true,true,false,0,1,2,0,0,0,14681
1466948,mitchellh/vagrant,ruby,1720,1368372751,1373393988,1373393989,83687,83687,github,false,false,false,2,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.152012536764241,0.20634602396734672,0,,lib/vagrant/machine_state.rb,0,0.0,0,0,false,Fix typo ,,475,0.6757894736842105,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1207,84,travis,tawan,fgrehm,false,fgrehm,0,0,8,17,1857,false,false,false,false,0,0,0,0,0,0,83687
1464379,mitchellh/vagrant,ruby,1717,1368289279,1378075406,1378075406,163102,163102,github,false,false,false,137,1,1,0,3,0,3,0,3,2,0,1,3,3,0,0,2,0,1,3,3,0,0,43,0,43,0,14.144589947320036,0.7029554632685637,3,mitchell.hashimoto@gmail.com,plugins/guests/ubuntu/cap/mount_nfs.rb|plugins/guests/ubuntu/cap/mount_virtualbox_shared_folder.rb|plugins/guests/ubuntu/plugin.rb,3,0.0,0,1,false,Emit Ubuntu Upstart vagrant-mounted for newer versions Vagrant used to emit a vagrant-mounted event after mounting shared folders on Ubuntu but newer versions dont This commit adds the same functionality to the capabilities for the ubuntu plugin It does this for both regular and NFS but Ive commented out the NFS capability because Im not able to test that it works The only testing Ive done with the regular type is to see that it works on my machineI dont really know what Im doing here Im not familiar with the codebase or how Vagrants inner parts work I figured out theres a difference between the Ubuntu guest and plugin functionality and that the newer version I installed uses plugin so I duplicated the functionality in guest There may be a better way to do it,,474,0.6751054852320675,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5467,5,1206,69,travis,toretore,mitchellh,false,mitchellh,0,0,31,4,1914,false,false,false,false,0,0,0,0,0,0,33045
1461440,mitchellh/vagrant,ruby,1716,1368214291,,1368214563,4,,unknown,false,false,false,4,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.9929563729031736,0.19844127736323172,0,,plugins/hosts/fedora/host.rb,0,0.0,0,0,true,use systemctl for fedora ,,473,0.6765327695560254,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5465,5,1205,59,travis,pronix,pronix,true,,7,0.0,62,52,1452,false,true,false,false,2,5,8,0,0,0,-1
1461175,mitchellh/vagrant,ruby,1715,1368210688,,1368211077,6,,unknown,false,false,false,4,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.331870638824625,0.2152845818136572,0,,plugins/hosts/linux/host.rb,0,0.0,0,0,true,fix nfs for fedora ,,472,0.6779661016949152,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5465,5,1205,59,travis,pronix,pronix,true,,6,0.0,62,52,1452,false,true,false,false,1,5,6,0,0,0,-1
1460284,mitchellh/vagrant,ruby,1714,1368199317,1370825724,1370825724,43773,43773,github,false,false,false,22,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.511725159537792,0.22422296167477324,7,mitchell.hashimoto@gmail.com,plugins/guests/solaris/guest.rb,7,0.01971830985915493,0,0,true,Fix to the #1639 fix Had uname from GNU coreutils in my default PATH on Solaris boxes Previous fix was not correct,,471,0.6772823779193206,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5465,5,1205,72,travis,aszeszo,mitchellh,false,mitchellh,1,1.0,6,0,693,false,false,false,false,1,0,1,0,0,0,34731
1459911,mitchellh/vagrant,ruby,1713,1368193712,1377762260,1377762260,159475,159475,github,false,false,false,11,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.442801573330797,0.4195889391894173,217,st+github@st-g.de,CHANGELOG.md|plugins/providers/virtualbox/action/network.rb,210,0.5915492957746479,0,0,true,respect :nic_type option for private network Fixes #1704 Fixes #1704 issue,,470,0.676595744680851,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5464,5,1205,70,travis,akalyaev,mitchellh,false,mitchellh,1,1.0,29,39,504,false,true,false,false,1,0,1,0,0,0,30518
1458602,mitchellh/vagrant,ruby,1712,1368162337,,1374438583,104604,,unknown,false,false,false,58,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,0,5,0,8.253115132585258,0.4101619342124854,27,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin/handle_box_url.rb|plugins/kernel_v2/config/vm.rb,25,0.07042253521126761,0,1,true,Allow user to define if the box_url is insecure Currently its possible to download a box from an insecure server using the command:vagrant box add mybox  https://insecureservercom/myboxbox --insecureBut I think set it in a Vagrantfile is a good featurerubyVagrantconfigure(2) do |config|  configvmbox  mybox  configvmbox_url  https://insecureservercom/myboxbox  configvmbox_download_insecure  trueend,,469,0.6780383795309168,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5464,5,1205,73,travis,igorbonadio,,false,,0,0,13,9,1671,false,true,false,false,0,0,0,0,0,0,104594
1455627,mitchellh/vagrant,ruby,1710,1368119315,1377741583,1377741583,160371,160371,merged_in_comments,false,false,false,10,3,3,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,9.42927661220926,0.4686146105266816,4,mitchell.hashimoto@gmail.com,plugins/guests/suse/cap/change_host_name.rb|plugins/guests/suse/cap/change_host_name.rb,4,0.011267605633802818,0,0,false,V122 susefix Fix issue 1063 that was reintroduced in v122,,468,0.6773504273504274,0.4056338028169014,12884,419.43495808755046,36.16889164855635,65.66283762806583,5464,5,1204,70,travis,cliles,mitchellh,false,mitchellh,1,1.0,0,2,244,false,false,false,false,0,0,1,0,0,0,16941
1445647,mitchellh/vagrant,ruby,1699,1367948259,,1374306890,105977,,unknown,false,true,false,21,1,1,0,0,0,0,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,6,0,6,0,8.822236019425963,0.43844600877066836,68,phunehehe@gmail.com,plugins/provisioners/ansible/provisioner.rb|templates/locales/en.yml,63,0.168,0,1,false,Exit with non-zero code when Ansible provisioning failed Like other provisioner I expect that vagrant exit(1) when the ansible provisioning fails,,467,0.6788008565310493,0.43466666666666665,12884,419.43495808755046,36.16889164855635,65.66283762806583,5461,5,1202,77,travis,gildegoma,mitchellh,false,,1,1.0,28,115,940,false,true,true,false,0,0,1,0,0,0,-1
1444246,mitchellh/vagrant,ruby,1698,1367927081,1371186784,1371186784,54328,54328,github,false,true,false,64,1,1,0,7,0,7,0,6,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,8.89502512267861,0.4420634694385588,3,mitchell.hashimoto@gmail.com,plugins/guests/gentoo/cap/change_host_name.rb|plugins/guests/gentoo/cap/configure_networks.rb,3,0.007978723404255319,0,8,false,fix uninitialized constant error for gentoo plugin While trying to vagrant upa gentoo vm I got the following error:/Applications/Vagrant/embedded/gems/gems/vagrant-122/plugins/guests/gentoo/pluginrb:23:in block in class:Plugin: uninitialized constant VagrantPlugins::GuestGentoo::Cap::ConfigureNetworks (NameError)I then had a look at the gentoo plugin and found out that indeed GuestGentoo was not defined After applying the changes in the pull request the vm did start without errors,,466,0.6781115879828327,0.43351063829787234,12884,419.43495808755046,36.16889164855635,65.66283762806583,5460,6,1202,71,travis,Govinda-Fichtner,fgrehm,false,fgrehm,0,0,15,8,824,false,true,false,false,0,0,0,0,0,0,23368
1442266,mitchellh/vagrant,ruby,1697,1367884446,1378168289,1378168289,171397,171397,github,false,false,false,360,7,3,0,7,0,7,0,7,0,0,2,2,2,0,0,0,0,2,2,2,0,0,41,0,53,0,21.952106006259232,1.090972089316336,15,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/provisioner.rb,10,0.02544529262086514,3,4,false,Support more Ansible options This pull request aims to solve (parts of) #1674 from @kernel164 These first commits are not thought as final but more as discussion base (see open points below) Let me know what do you prefer (feature branch will be rebased at the very end -):* Im not sure which ansible-playbook options make sense in Vagrant context (all) So far I didnt take time to review this point (since I was personally first interested in tags support) Comments and votes are welcome Once I get the list I can add the wanted options* tags addition: In order to keep the code as DRY as possible I introduced as_list_argument private method It could also be inline implemented (eg --tags#{configtagskind_of(Array)  configtagsjoin() : configtags}) but it does not help to enforce code-style unity I also thought about very small addition somewhere in lib/vagrant/util/ : join_if_needed(variable separator) (that sounds overkill to me) @mitchellh please let me know what is good for you* verbose change: Im not sure if it is correct to mix boolean and string type for the same Vagrant option but two different options would be horrible no Should this attribute be more validated (raise an exception when invalid) Note that I did not restrict to /^v{13}$/ since ansible-playbooks deals with improbable things like -vvvvv* raw_arguments addition: Like Vagrant Ansible project is going very very fast and I think that it will often occur (like to me for the --tags option) that some recent features are not already supported by latest Vagrant Therefore Id like to add this unsafe joker card in the deck About the precedence Im open to any minds I intentionally put it in the middle to debate on this aspect The most elegant is maybe to give it the lowest priority (even for --user and --private-key unlike current implementation) so that any new official options will automatically overtake @mitchellh: if such kind of parameter is considered as bad practice for Vagrant configuration file just tell me and I remove 66715de from this request (I always can try to convince you later with a separated pull request if absolutely needed -) ,,465,0.6774193548387096,0.4580152671755725,12884,419.43495808755046,36.16889164855635,65.66283762806583,5460,6,1201,60,travis,gildegoma,mitchellh,false,mitchellh,0,0,28,115,939,false,true,true,false,0,0,0,0,0,0,42554
1440335,mitchellh/vagrant,ruby,1696,1367858474,,1367863977,91,,unknown,false,false,false,10,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.33790148458363,0.21558430177656968,65,phunehehe@gmail.com,templates/locales/en.yml,65,0.1649746192893401,0,0,false,more informative error message may have stylistic imperfections because https://githubcom/mitchellh/vagrant/issues/1681#issuecomment-17355336,,464,0.6788793103448276,0.4593908629441624,12884,419.43495808755046,36.16889164855635,65.66283762806583,5460,6,1201,52,travis,gilesbowkett,mitchellh,false,,0,0,390,17,1896,false,false,false,false,0,1,0,0,0,0,-1
1512007,mitchellh/vagrant,ruby,1695,1367855081,,1377741649,164776,,unknown,false,true,false,118,3,1,0,5,0,5,0,5,0,0,3,3,2,0,1,0,0,3,3,2,0,1,93,0,125,0,13.179933034723915,0.655014105518726,98,phunehehe@gmail.com,lib/vagrant/action/builtin/nfs.rb|plugins/hosts/linux/host.rb|templates/locales/en.yml,92,0.025380710659898477,0,5,false,Use exportfs cli for NFS exports Right now NFS exports are being handled with /etc/exports file However when multiple machines are being started and thus several process writes to this file collisions occur I guess #1585 is related to thisInstead of using /etc/exports Ive modified vagrant to utilize [exportfs](http://linuxdienet/man/8/exportfs) command line tool to dynamically export and unexport directoresThis probably wont work for OS X (at leaset I have no exportfs binary on my Mountain Lion machine) but this fix right now allows me to start 10 VMs in parallel with no NFS problemsImplementation is not very clean and will probably break other hosts but with some guide I think I can resolve all possible issues,,463,0.6803455723542117,0.4593908629441624,12884,419.43495808755046,36.16889164855635,65.66283762806583,5460,6,1201,67,travis,p0deje,mitchellh,false,,0,0,46,60,786,false,true,false,false,0,2,0,0,0,0,40103
1437235,mitchellh/vagrant,ruby,1692,1367781693,1374208635,1374208635,107115,107115,github,false,false,false,86,1,1,0,2,0,2,0,2,0,0,5,5,4,0,1,0,0,5,5,4,0,1,8,0,8,0,22.572367773789036,1.1217977548015556,185,phunehehe@gmail.com,CHANGELOG.md|lib/vagrant/box_collection.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/repackage.rb|templates/locales/en.yml,136,0.024630541871921183,0,0,false,more concise message for BoxNotFound error Now we have different providers but the error message didnt tellanything about it Suppose I want to remove one of my boxes:    vagrant box remove opscode-ubuntu-1204 vritualboxThere is a typo in provider name The error message is:    Box opscode-ubuntu-1204 could not be foundTherefore I need to double check the box name and only than I will seethe typoThis commit make the error message looks like this:    Box opscode-ubuntu-1204 with vritualbox provider could not be found,,462,0.6796536796536796,0.4753694581280788,12884,419.43495808755046,36.16889164855635,65.66283762806583,5460,6,1200,76,travis,akalyaev,fgrehm,false,fgrehm,0,0,29,38,499,false,true,true,false,0,0,0,0,0,0,949
1431830,mitchellh/vagrant,ruby,1690,1367616937,,1374306868,111498,,unknown,false,false,false,40,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,13,0,13,0,4.199609296159375,0.20871154055745883,6,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/driver/version_4_2.rb,6,0.013574660633484163,0,0,true,Add read_mac_addresses to the 42 driver read_mac_addresses is required by the vagrant-windows plugin to match up adapters with ip address settings This was previously merged in for the 40 and 41 drivers but is not present in the 42 driver ,,461,0.6811279826464208,0.5180995475113123,12884,419.43495808755046,36.16889164855635,65.66283762806583,5459,6,1198,75,travis,pmorton,mitchellh,false,,1,1.0,4,3,841,false,true,false,false,0,0,0,0,0,0,-1
1429251,mitchellh/vagrant,ruby,1689,1367584886,1376079686,1376079687,141580,141580,github,false,false,false,17,1,1,0,5,0,5,0,4,3,0,1,4,2,2,0,3,0,1,4,2,2,0,65,0,65,0,19.688489216044346,0.978475526113224,3,mitchell.hashimoto@gmail.com,plugins/guests/suse/cap/configure_networks.rb|plugins/guests/suse/plugin.rb|templates/guests/suse/network_dhcp.erb|templates/guests/suse/network_static.erb,3,0.0,0,2,true,Add network settings for opensuse OpenSuse was unable to set a static ip so I solved it,,460,0.6804347826086956,0.5234899328859061,12884,419.43495808755046,36.16889164855635,65.66283762806583,5458,6,1198,75,travis,philippfranke,mitchellh,false,mitchellh,0,0,7,9,639,false,false,false,false,0,0,0,0,0,0,46012
1421933,mitchellh/vagrant,ruby,1685,1367460645,1367465258,1367465258,76,76,github,false,false,false,38,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.95982011598538,0.445275274604842,5,mitchell.hashimoto@gmail.com,plugins/guests/debian/guest.rb|plugins/guests/ubuntu/guest.rb,4,0.008888888888888889,0,1,false,More reliable Ubuntu and Debian guest detection When dealing with lxc containers /proc/version will have information about the host machine kernel that can possibly have information about an Ubuntu / Debian host messing up with guest container detection,,459,0.6797385620915033,0.5266666666666666,12862,420.15238687606904,36.23075726947598,65.77515160939201,5457,6,1196,48,travis,fgrehm,mitchellh,false,mitchellh,7,0.8571428571428571,291,140,1456,true,true,true,false,2,16,6,0,1,0,12
1421018,mitchellh/vagrant,ruby,1682,1367447207,1374306838,1374306838,114327,114327,merged_in_comments,false,false,false,11,1,1,0,6,0,6,0,3,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.7886928499927635,0.23798318450328257,0,,templates/commands/ssh_config/config.erb,0,0.0,0,0,false,Removed quotes from identify file #1680 Pull request for issue #1680,,458,0.6790393013100436,0.5298013245033113,12862,420.15238687606904,36.23075726947598,65.77515160939201,5457,6,1196,75,travis,johntdyer,mitchellh,false,mitchellh,0,0,31,27,1525,false,true,false,false,2,5,0,0,0,0,174
1418956,mitchellh/vagrant,ruby,1678,1367423342,,1374306826,114724,,unknown,false,false,false,38,3,3,4,2,0,6,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,28,0,28,0,12.814727098363502,0.6368521972365935,8,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network.rb,8,0.017582417582417582,0,0,false,Fix DHCP adapter type handling for VirtualBox provider This PR fixes some issues for adapter with DHCP type for VirtualBox provider* removes hardcoded IP 172281281 * fixes DHCP server ip calculation* fixes searching for matching network,,457,0.6805251641137856,0.5318681318681319,12862,420.15238687606904,36.23075726947598,65.77515160939201,5457,6,1196,75,travis,gumayunov,mitchellh,false,,0,0,67,77,1860,false,false,false,false,0,0,0,0,0,0,202
1410499,mitchellh/vagrant,ruby,1672,1367278454,,1367366897,1474,,unknown,false,false,false,63,1,1,0,4,0,4,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.286291901543306,0.21443867720223184,2,mitchell.hashimoto@gmail.com,plugins/guests/solaris/cap/change_host_name.rb,2,0.004123711340206186,0,2,false,Setting hostname on OmniOS fails When attempting to boot an OmniOS Vagrant box [0] the up command fails with:[riak1] Setting hostnameThe following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failedsudo uname -S riak1It appears that the -S option is available for uname on SmartOS but not OmniOS[0] http://omniosomniticom/media/omnios-latestbox,,456,0.6820175438596491,0.5567010309278351,12798,422.2534771057978,36.41193936552586,66.10407876230661,5456,6,1194,46,travis,hectcastro,mitchellh,false,,0,0,82,60,1579,false,false,true,false,0,0,0,0,0,0,1
1512005,mitchellh/vagrant,ruby,1663,1366994117,,1385441145,307390,,unknown,false,false,false,129,1,1,0,2,0,2,0,2,0,0,2,2,1,1,0,0,0,2,2,1,1,0,14,0,14,0,8.326857110746209,0.41658498721740417,21,ray.elsleiman@learnosity.com,plugins/providers/virtualbox/action/network.rb|templates/guests/debian/network_dhcp.erb,21,0.04142011834319527,0,0,true,Add an option for the bridge interface to drop the default route via the NAT interface (debian) This adds an option :drop_nat_interface_default_route to the bridged virtualbox configuration hash If enabled the bridged interface will have the following options set in /etc/network/interfaces:    post-up route del default if eth0    pre-down route add default if eth0This has the effect that all traffic apart from vagrants ssh via the NAT will go over the bridge rather than the NAT once it has come upI have found the default route via the NAT problematic when operating in networks with multiple subnets If I try to point someone on another subnet at an application accessible via my bridged interface it will fail because the return traffic attempts to route via the wrong interface,,455,0.6835164835164835,0.5739644970414202,12798,422.2534771057978,36.41193936552586,66.10407876230661,5454,6,1191,50,travis,nickrw,mitchellh,false,,0,0,8,3,1605,false,false,false,false,0,0,0,0,0,0,116655
1512006,mitchellh/vagrant,ruby,1661,1366918660,1366929767,1366929767,185,185,github,false,false,false,41,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,5.029151244557241,0.2516039801947781,129,mitchell.hashimoto@gmail.com,CHANGELOG.md,129,0.251953125,0,0,false,Add missing note about Vagrant::Environment::VAGRANT_HOME deprecation to the changelog [This commit](https://githubcom/mitchellh/vagrant/commit/fbdd46a130890f03eada3bd607d61ef7a4b75671) removed the constant and since Ive seen quite a few people relying on it for things like [apt packages cache](https://gistgithubcom/millisami/3798773) I think it is worth mentioning on the changelog -),,454,0.6828193832599119,0.572265625,12798,422.2534771057978,36.41193936552586,66.10407876230661,5454,6,1190,45,travis,fgrehm,mitchellh,false,mitchellh,6,0.8333333333333334,287,140,1450,true,true,true,false,2,16,5,0,1,0,185
1399770,mitchellh/vagrant,ruby,1640,1366657829,1366694907,1366694907,617,617,github,false,false,false,34,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5553278657723135,0.22790073889145104,7,mitchell.hashimoto@gmail.com,plugins/guests/solaris/guest.rb,7,0.013435700575815739,0,0,false,Proposed #1639 fix /etc/release file may not contain string Solaris on Solaris-like OSes such as SmartOS OmniOS OpenIndiana etcuname -o on the other hand returns Solaris on Solaris 10 SmartOS OmniOS OpenIndiana etc ,,453,0.6821192052980133,0.5758157389635317,12791,422.4845594558674,36.431866155890866,66.14025486670315,5452,6,1187,45,travis,aszeszo,mitchellh,false,mitchellh,0,0,6,0,675,false,false,false,false,1,0,0,0,0,0,617
1390264,mitchellh/vagrant,ruby,1633,1366394737,1366394807,1366394807,1,1,github,false,false,false,27,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.2813579792540155,0.2141585483109847,18,mitchell.hashimoto@gmail.com,plugins/communicators/ssh/communicator.rb,18,0.03461538461538462,0,0,true,Add ssh username to ssh connection log message Adds the ssh username to the ssh connection log message to make provider connections a little easier to debug,,452,0.6814159292035398,0.573076923076923,12717,424.94298969882834,36.643862546198,66.52512384996461,5449,6,1184,45,travis,NeilW,mitchellh,false,mitchellh,0,0,6,0,1837,false,true,false,false,0,0,0,0,0,0,1
1385963,mitchellh/vagrant,ruby,1627,1366309162,,1385266011,315887,,unknown,false,true,false,149,1,1,0,6,0,6,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,35,0,35,0,4.393425315291495,0.21976428791864247,13,ray@envetta.com,plugins/providers/virtualbox/driver/version_4_2.rb,13,0.0248565965583174,0,1,false,VirtualBox Plugin - Concurrent Base Box Import I have a Jenkins server that attempts to vagrant up several environments concurrently from the same base box  This is to smoketest various chef recipes  When the the OVF import is called down in the virtualbox driver it will create a folder that uses the base boxes name in the VirtualBox VMs folder  While that base box folder exists it will not be possible to bring up any other system that uses that same base box  Doing so will start to overwrite the files in the base box folder and cause bad things to happenThis is an attempt to import the box into a unique(ish) folder name so that less bad things happen  There are still other issues with attempting to bring multiple machines up at once with VirtualBox but I hope this is a helpful step in the right direction,,451,0.6829268292682927,0.5697896749521989,12717,424.94298969882834,36.643862546198,66.52512384996461,5448,6,1183,64,travis,smoyer,mitchellh,false,,0,0,1,3,255,false,false,false,false,0,0,0,0,0,0,3121
1385024,mitchellh/vagrant,ruby,1626,1366296912,1377828376,1377828376,192191,192191,github,false,false,false,98,5,1,0,20,0,20,0,11,5,0,0,8,5,0,0,5,0,3,8,5,0,0,2878,0,4168,0,23.06391873180635,1.1536842697808711,0,,plugins/provisioners/salt/bootstrap-salt.sh|plugins/provisioners/salt/config.rb|plugins/provisioners/salt/errors.rb|plugins/provisioners/salt/plugin.rb|plugins/provisioners/salt/provisioner.rb,0,0.0,0,14,false,Add Salt Provisioner   This pull request adds a  provisioner that allows Vagrants to be provisioned with saltit is a conversion of an existing plugin: https://githubcom/saltstack/salty-vagrantI am implementing this out of the following issues: - https://githubcom/saltstack/salty-vagrant/issues/72 - https://githubcom/mitchellh/vagrant/issues/1416Let me know if I can make any changes to make this provisioner better  or If I added it wrong It would be great to see this provisioner come pre-packed with vagrant as salt is a very popular  server configuration management tool and the salty-vagrant plugin is extremely popular Actual credits go mostly to       salty-vagrant: https://githubcom/akoumjian      salt-bootstrap: https://githubcom/s0undt3ch,,450,0.6822222222222222,0.5697896749521989,12717,424.94298969882834,36.643862546198,66.52512384996461,5447,6,1183,58,travis,raadad,mitchellh,false,mitchellh,0,0,14,15,351,false,false,false,false,0,0,0,0,0,0,176
1378144,mitchellh/vagrant,ruby,1609,1366156585,1366157291,1366157291,11,11,merged_in_comments,false,false,false,35,1,1,0,0,0,0,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.175634691334525,0.20887812479490173,0,,plugins/provisioners/chef/provisioner/chef_client.rb,0,0.0,0,3,false,Fix empty encrypted_data_bag_secret_key_path If theres no encrypted_data_bag_secret_key_path set in theVagrantfile @configencrypted_data_bag_secret_key_path returns anObject and Vagrant tries to upload the key nonethelessThis commit checks that @configencrypted_data_bag_secret_key_path isa String before attempting the upload,,448,0.6830357142857143,0.5631067961165048,12698,425.0275633958104,36.619940148054816,66.46716018270592,5445,6,1181,42,travis,cassianoleal,mitchellh,false,mitchellh,2,0.0,17,13,945,false,false,false,false,1,5,0,0,0,0,-1
1377291,mitchellh/vagrant,ruby,1604,1366143088,,1366151487,139,,unknown,false,false,false,31,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.574509287050398,0.22883601195170883,3,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,3,0.0058823529411764705,0,0,false,Remove vim modeline from Vagrantfile This isnt really necessary and creates noise for users who are notusing Vim Theres even a global fix for Vim users in the repo:https://githubcom/mitchellh/vagrant/blob/master/contrib/vim/vagrantfilevim,,447,0.6845637583892618,0.5588235294117647,12690,425.2955082742317,36.64302600472813,66.50906225374311,5445,6,1181,42,travis,JustinCampbell,mitchellh,false,,1,1.0,114,263,1093,false,true,true,false,0,1,1,0,0,0,-1
1374613,mitchellh/vagrant,ruby,1601,1366087537,,1385354934,321063,,unknown,false,false,false,130,2,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,9,0,9,0,3.883346698125098,0.1942611798691477,37,ray@envetta.com,plugins/communicators/ssh/communicator.rb,37,0.07269155206286837,0,0,false,request a PTY for sudo ssh I expect to use vagrant to help bootstrap test environments The requirement to have a prepared image to get around this section in sudoers:## Disable ssh hostname sudo cmd because it will show the password in clear#         You have to run ssh -t hostname sudo cmd#Defaults    requirettydoesnt seem necessaryI expect chef to come along and get rid of that pesky lineI tried to run tests but I found a few syntax errors when patching at HEADsh/usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/configurationrb:780:in load: /home/david/src/vagrant/test/unit/vagrant/action/hook_testrb:110: syntax error unexpected : expecting ) (SyntaxError)      subjectapply(builder no_prepend_or_append: true)                                                  ^from /usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/configurationrb:780:in load_spec_filesfrom /usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/configurationrb:780:in mapfrom /usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/configurationrb:780:in load_spec_filesfrom /usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/command_linerb:22:in runfrom /usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/runnerrb:69:in runfrom /usr/lib/ruby/gems/18/gems/rspec-core-2111/lib/rspec/core/runnerrb:8:in autorunfrom /usr/bin/rspec:19rake aborted,,446,0.6860986547085202,0.5579567779960707,12690,425.2955082742317,36.64302600472813,66.50906225374311,5445,6,1181,53,travis,davidbirdsong,mitchellh,false,,0,0,9,1,940,false,false,false,false,0,1,0,0,0,0,-1
1374188,mitchellh/vagrant,ruby,1599,1366076108,1366076193,1366076194,1,1,github,false,false,false,5,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.283979900799826,0.21430041417415396,3,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/config/base.rb,3,0.005917159763313609,0,0,false,Fix typo in chef provisioning ,,445,0.6853932584269663,0.5562130177514792,12689,425.32902513988495,36.64591378359209,66.51430372763811,5445,6,1180,42,travis,geetarista,mitchellh,false,mitchellh,0,0,61,180,1729,false,false,true,false,0,0,0,0,0,0,-1
1370017,mitchellh/vagrant,ruby,1597,1365988897,1374306728,1374306728,138630,138630,merged_in_comments,false,false,false,45,3,3,0,3,0,3,0,4,0,0,4,4,2,2,0,0,0,4,4,2,2,0,2,0,2,0,17.207025945586278,0.8607121506474118,4,shawn@dahlen.me,templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb|plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/provisioner/base.rb,2,0.003952569169960474,0,0,false,Chef verbose logging toggle When refactoring a Chef cookbook or running Chef Solo on  a long lived VM I often only want to see whats changed since my last Chef run Given Vagrant the option to set Chefs verbose log toggle lets me do that,,444,0.6846846846846847,0.5553359683794467,12652,426.5728738539362,36.75308251659817,66.70882073980398,5445,6,1179,74,travis,onefrankguy,mitchellh,false,mitchellh,0,0,4,0,1061,false,false,false,false,0,0,0,0,0,0,11277
1368717,mitchellh/vagrant,ruby,1596,1365952783,1365965213,1365965213,207,207,github,false,false,false,14,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.6834068903006605,0.2342684545366063,0,,README.md,0,0.0,0,0,false,Link to v2 docs in README Link to v2 docs for getting started guide,,443,0.6839729119638827,0.5544554455445545,12652,426.5728738539362,36.75308251659817,66.70882073980398,5445,6,1179,40,travis,tobli,mitchellh,false,mitchellh,0,0,10,3,837,false,true,false,false,0,0,0,0,0,0,207
1364023,mitchellh/vagrant,ruby,1592,1365798017,1378145792,1378145792,205796,205796,merged_in_comments,false,false,false,100,1,1,0,4,0,4,0,5,1,0,2,3,3,0,0,1,0,2,3,3,0,0,77,0,77,0,13.014626540910122,0.6510039630390477,20,nick@cmdln.org,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/config/chef_client.rb|plugins/provisioners/chef/config/chef_config.rb,16,0.023668639053254437,0,1,true,Load required chef_client options from Knife config Adds a chef_config/knife method to both chef solo and chef client provisioners which returns a hash with symbolized keys For instance I have a file at ~/chef/kniferb which I think looks like most users Knife config:rbcurrent_dir  Filedirname(__FILE__)validation_key  #{current_dir}/justincampbell-validatorpemchef_server_url https://apiopscodecom/organizations/justincampbellThis causes knife to return a hash of:rb{  :validation_key  ~/chef/justincampbell-validatorpem  :chef_server_url  https://apiopscodecom/organizations/justincampbell}You can now omit these options in a :chef_client provisioner block:rbconfigvmprovision :chef_client do |chef|  chefrun_list  [recipe[my_cookbook::default]]endYou could potentially also use knife[:key] in your Vagrantfile,,442,0.6832579185520362,0.5522682445759369,12652,426.5728738539362,36.75308251659817,66.70882073980398,5442,6,1177,53,travis,JustinCampbell,mitchellh,false,mitchellh,0,0,114,262,1089,false,true,true,false,0,0,0,0,0,0,3
1359463,mitchellh/vagrant,ruby,1577,1365709337,,1385249991,325617,,unknown,false,true,false,204,2,2,0,14,0,14,0,8,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.617253545397533,0.23095940148273256,7,ray.elsleiman@learnosity.com,plugins/guests/redhat/cap/configure_networks.rb,7,0.013461538461538462,3,8,false,RHEL interfaces sometimes come up with the wrong IP  in our Vagrantfile weve specified that this host should have the IP address of 192168146 and while vagrant is doing the right thing in /etc/sysconfig/network-scripts/ifcfg-eth1 were still coming up to the wrong (1921681180) address i can provide the Vagrantfile if youd like but effectively were calling:        agentvmnetwork     :hostonly 192168146by creating the proper content in ifcfg-eth1 before calling ifdown i can no longer reproduce this issue i dont fully understand this interaction (or why it seems to only happen under some circumstances) but a strace shows ifdown definitely reading that file i can reliably reproduce this issue (with 105 and 110) without the change im proposing and cant reproduce it with the change -- and on the machines that didnt see this problem originally my change doesnt introduce any issues weve only seen this with RHEL boxes (55 and 62) so making change as closely scoped as possible ---choran-kates@chorankates-wsl3:~/git/piab[isd/piab|unique-ips|e697b1f|U] 6:2212 $ vagrant ssh app[vagrant@piab1-app1-1-piab ~]$ cat /etc/sysconfig/network-scripts/ifcfg-eth1 #VAGRANT-BEGIN# The contents below are automatically generated by Vagrant Do not modifyBOOTPROTOstaticIPADDR192168146NETMASK2552552550DEVICEeth1#VAGRANT-END[vagrant@piab1-app1-1-piab ~]$ /sbin/ifconfig | grep -i inet          inet addr:100215  Bcast:1002255  Mask:2552552550          inet addr:1921681180  Bcast:1921681255  Mask:2552552550          inet addr:127001  Mask:255000,,441,0.6848072562358276,0.5384615384615384,12652,426.5728738539362,36.75308251659817,66.70882073980398,5442,6,1176,69,travis,chorankates-sfdc,mitchellh,false,,1,1.0,11,3,307,false,false,false,false,0,0,1,0,0,0,5819
1358331,mitchellh/vagrant,ruby,1576,1365689251,1365700284,1365700284,183,183,github,false,false,false,89,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,0,7,0,8.640065444633233,0.4321887959328469,5,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/shell/provisioner.rb,4,0.007722007722007722,0,0,false,Fix use of configsshusername and reset provisioning path permissions This commit contains two fixes:- The Chef provisioner was incorrectly referencing configsshusername  instead of machinessh_info[:username] With the new change to default  ssh configuration if a user had not set configsshusername  provisioning would fail- The shell provisioner was not appropriately changing permissions to  the upload path If a different ssh user attempted to use a shell  provisioner provisioning would fail The same case applied to  the Chef provisioner -- while permissions were being reset they  were not done recursively,,440,0.6840909090909091,0.5366795366795367,12649,426.67404537908135,36.76179935172741,66.72464226421062,5442,6,1176,38,travis,smdahlen,mitchellh,false,mitchellh,1,0.0,26,2,1236,false,true,false,false,0,3,1,0,0,0,183
1355899,mitchellh/vagrant,ruby,1573,1365631899,1365632227,1365632227,5,5,github,false,false,false,63,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.560581388482304,0.22814948336691301,17,mitchell.hashimoto@gmail.com,lib/vagrant/machine.rb,17,0.03300970873786408,0,0,false,fix root cause for error message when running in multi-vm environment The following error message occurred due to missing settings:bashSSH Defaults:* The following settings dont exist: forward_agent forward_x11The default settings for forward_agent and forward_x11 have been removed in commit 41d6553 and thus are not accessible anymoreThis pull request removed the remaining references that are not needed anymore,,439,0.683371298405467,0.5398058252427185,12644,426.842771274913,36.77633660234103,66.75102815564695,5442,6,1175,38,travis,benjixx,mitchellh,false,mitchellh,0,0,2,3,1549,false,true,false,false,0,0,0,0,0,0,5
1352311,mitchellh/vagrant,ruby,1566,1365557091,,1365618787,1028,,unknown,false,false,false,39,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,9.828715337199714,0.5181749666725896,0,,lib/vagrant/guest/redhat.rb|lib/vagrant/guest/redhat.rb,0,0.0,0,0,false,1 0 stable Hey I ran into an issue where Im trying to build a base box and then a box based on that box and couldnt change the hostname because vagrant thought the hostname had already been changed,,438,0.684931506849315,0.5483234714003945,7947,951.3023782559457,92.11023027557569,235.4347552535548,5442,6,1174,38,unknown,benprew,mitchellh,false,,0,0,28,38,1589,false,true,false,false,0,0,0,0,0,0,1027
1344014,mitchellh/vagrant,ruby,1554,1365372575,1365372675,1365372675,1,1,github,false,false,false,113,2,2,0,1,0,1,0,1,0,0,2,2,0,2,0,0,0,2,2,0,2,0,0,0,0,0,15.426283023881997,0.7875054726002202,0,,templates/guests/fedora/network_static.erb|templates/guests/redhat/network_static.erb|templates/guests/redhat/network_static.erb,0,0.0,0,0,false,Red Hat / Fedora networking template fixes A few small fixes for Red Hat/CentOS/Fedora networking:* Red Hat/CentOS - ensure static network changes dont update DNS PEERDNSno ensures the DNS settings (from /etc/resolvconf) are not overwritten when we do an [ifdown/ifup cycle to apply Vagrants changes](https://githubcom/mitchellh/vagrant/blob/5e09577a766487e2671ed935050b4273575e249e/plugins/guests/redhat/cap/configure_networksrb#L46-L49) This doesnt appear to be an issue with the Fedora templates as DNS servers are [hardcoded to Google DNS](https://githubcom/mitchellh/vagrant/blob/master/templates/guests/fedora/network_staticerb#L11-L12):* Red Hat/CentOS/Fedora - static is not a valid BOOTPROTO value Valid BOOTPROTO choices include: none bootp and dhcp In the case of static network addresses none should be used More info about te network settings these patches fix are in the [Red Hat](https://accessredhatcom/site/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Deployment_Guide/s1-networkscripts-interfaceshtml) and [CentOS](http://wwwcentosorg/docs/5/html/Deployment_Guide-en-US/s1-networkscripts-interfaceshtml) docs,,437,0.6842105263157895,0.5902335456475584,12222,438.38978890525283,37.80068728522337,68.8103420062183,5440,6,1172,51,travis,schisamo,mitchellh,false,mitchellh,4,0.75,78,33,1823,false,true,false,false,1,0,0,0,0,0,1
1337801,mitchellh/vagrant,ruby,1551,1365187326,1365187400,1365187400,1,1,github,false,false,false,15,1,1,0,1,0,1,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,7,0,7,0,8.41655891938957,0.4296986400394699,86,phunehehe@gmail.com,plugins/provisioners/ansible/config.rb|templates/locales/en.yml,85,0.18518518518518517,0,0,true,Validate that Ansible extra_vars is a hash Does what it says on the tin :),,436,0.6834862385321101,0.6056644880174292,12188,434.52576304561865,37.57794552018379,68.5100098457499,5439,6,1170,52,travis,commandtab,mitchellh,false,mitchellh,2,1.0,10,8,1848,false,false,false,false,2,10,2,0,0,0,1
1337599,mitchellh/vagrant,ruby,1550,1365184536,1365186437,1365186437,31,31,github,false,false,false,60,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.752212588738516,0.2426227877541197,6,mitchell.hashimoto@gmail.com,plugins/provisioners/ansible/provisioner.rb,6,0.013100436681222707,0,0,true,Make Ansible provisioner extra_vars a hash This is a small tweak to the behavior of extra_vars for the Ansible provisioner: What was previously a string in the form of key1value key2value is now a hash which enables users to plug in Vagrantfile config options as Ansible --extra-vars if desiredI updated the documentation pull request to go along with this,,435,0.6827586206896552,0.6069868995633187,12188,434.52576304561865,37.57794552018379,68.5100098457499,5439,6,1170,52,travis,commandtab,mitchellh,false,mitchellh,1,1.0,10,8,1848,false,false,false,false,1,9,1,0,0,0,31
1362920,mitchellh/vagrant,ruby,1546,1366265820,,1374170565,131745,,unknown,false,false,false,186,1,1,0,4,0,4,0,6,0,0,7,7,7,0,0,0,0,7,7,7,0,0,32,66,32,66,30.504838371362467,1.525887798620964,61,mitchell.hashimoto@gmail.com,config/default.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/command.rb|plugins/commands/status/command.rb|plugins/kernel_v2/config/vagrant.rb|test/unit/vagrant/cli_test.rb|test/unit/vagrant/plugin/v2/command_test.rb,41,0.0019120458891013384,0,6,false,Allow user to specify default machines for commands in multi-machine environments When running a vagrant command from the shell in a multi-machine environment Vagrant operates on all VMs by default if you dont specify one This is dangerous if youre using a multi-machine setup to provision a development and production environment (say with VMware Fusion in development and AWS in production) because you could accidentally run it on production simply by forgetting to specify your development VM It would be great if you could declare in the Vagrantfile that a given VM should not have vagrant commands applied to it unless specified explicitlyAnother idea though probably not backwards-compatible would be to change the default behavior so that leaving out a VM name makes the command a no-op Maybe instead there could be a flag like --all to indicate that you want to run the command on all VMs without having to list all their namesId be happy to submit this as a pull request if you like the ideaEdit: Ive started work on a pull request for a configuration option for default machines,,449,0.6837416481069042,0.5697896749521989,12717,424.94298969882834,36.643862546198,66.52512384996461,5447,6,1183,75,travis,jimmycuadra,mitchellh,false,,0,0,85,111,1324,false,true,true,false,0,1,0,0,0,0,1
1334821,mitchellh/vagrant,ruby,1545,1365120360,,1365404918,4742,,unknown,false,false,false,29,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.284530410974697,0.21872333362685806,0,,plugins/commands/ssh/command.rb,0,0.0,0,0,false,Fix ssh command for plain mode using multi-vm env This commit fixes an issue where the plain mode options were beingpassed as machine names in a multi-machine environment,,434,0.684331797235023,0.5978494623655914,12235,437.92398855741726,37.76052308949735,68.73722926031877,5439,6,1169,51,travis,smdahlen,mitchellh,false,,0,0,25,2,1229,false,true,false,false,0,0,0,0,0,0,-1
1512003,mitchellh/vagrant,ruby,1543,1365115872,1365115940,1365115940,1,1,github,false,false,false,123,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,6,0,6,4.251200518430128,0.21704311610719831,12,mitchell.hashimoto@gmail.com,test/unit/vagrant/environment_test.rb,12,0.025806451612903226,0,0,false,Setting the VAGRANT_DEFAULT_PROVIDER environment variable breaks the unit tests To reproduce:    export VAGRANT_DEFAULT_PROVIDERvmware_fusion    rakeResults in the following broken test:    Failures:          1) Vagrant::Environment default provider should return virtualbox         Failure/Error: instancedefault_providershould  :virtualbox           expected: :virtualbox                got: :vmware_fusion (using )           Diff:           @@ -12 +12 @@           -:virtualbox           +:vmware_fusion         # /test/unit/vagrant/environment_testrb:229:in block (3 levels) in top (required)        Finished in 516 seconds    432 examples 1 failure 1 pendingI think we can just delete the test because there is another test that already tests the same thing:    describe default provider do      it is virtualbox without any environmental variable do        with_temp_env(VAGRANT_DEFAULT_PROVIDER  nil) do          subjectdefault_providershould  :virtualbox        end      end          it is whatever the environmental variable is if set do        with_temp_env(VAGRANT_DEFAULT_PROVIDER  foo) do          subjectdefault_providershould  :foo        end      end    end,,433,0.6836027713625866,0.5978494623655914,12181,435.185945324686,37.68163533371644,68.63147524833757,5439,6,1169,51,travis,jefflab,mitchellh,false,mitchellh,0,0,5,17,1405,true,true,true,false,0,1,0,0,1,0,1
1331104,mitchellh/vagrant,ruby,1537,1365029965,1378347539,1378347539,221959,221959,github,false,false,false,58,1,1,0,4,0,4,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,6,0,6,0,13.50173631621152,0.6892575133247288,58,nick@cmdln.org,lib/vagrant/machine.rb|plugins/communicators/ssh/communicator.rb|plugins/kernel_v2/config/ssh.rb,30,0.04576659038901602,0,0,false,Additional proxy_command option This commit adds the bare minimum to get an ec2 instance running where corporate network has port 22 blocked and an ssh proxy is in place  We use ~/ssh/config ProxyCommand which takes care of any ssh/rsync system calls but when net-ssh is in play we need to add this :proxy connection option to route correctly,,432,0.6828703703703703,0.6384439359267735,12235,437.92398855741726,37.76052308949735,68.73722926031877,5436,5,1168,62,travis,wormzer,mitchellh,false,mitchellh,0,0,0,0,369,false,false,false,false,0,0,0,0,0,0,5792
1323824,mitchellh/vagrant,ruby,1528,1364884446,1374170466,1374170466,154767,154767,merged_in_comments,false,false,false,70,3,1,0,1,1,2,0,1,3,0,1,5,4,0,0,3,0,2,5,5,0,0,225,0,234,0,17.90958208849798,0.9142760401994681,16,mitchell.hashimoto@gmail.com,plugins/guests/cygwin/config.rb|plugins/guests/cygwin/guest.rb|plugins/guests/cygwin/plugin.rb|plugins/guests/linux/guest.rb,16,0.0,0,0,false,fix for issue 1527 support for cygwin guest for windows Hey  I posted about this on the forums and would like to contribute this change for consideration on a future release of vagrant so out of the box cygwin works on windows for windows guestPlease see this post for cygwin setup:https://groupsgooglecom/forum/fromgroups#topic/vagrant-up/TSpQFb2ixB0Please view this post on reference for issues that were encountered when using cygwin guesthttps://groupsgooglecom/forum/fromgroups#topic/vagrant-up/JxpfFD4KI8EThanks,,431,0.6821345707656613,0.6549295774647887,12235,437.92398855741726,37.76052308949735,68.73722926031877,5435,5,1167,89,travis,wenlock,mitchellh,false,mitchellh,0,0,15,16,277,false,true,false,false,0,1,0,0,0,0,154766
1317565,mitchellh/vagrant,ruby,1522,1364743089,,1364757977,248,,unknown,false,false,false,52,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,34,0,34,0,8.702809692935013,0.4755864319486806,5,mitchell.hashimoto@gmail.com,plugins/commands/box/command/list.rb|plugins/commands/status/command.rb,5,0.011737089201877934,0,0,false,Vagrant box list + status machine readable with -t parameter I hacked together a solution for Issue #1098 for status and box list because I wasnt sure how other commands benefit from machine readable output Would appreciate a code review and be willing to modify my changes to make them more general,,430,0.6837209302325581,0.6572769953051644,11437,446.5331817784384,39.60828888694588,70.21071959429919,5433,5,1165,50,travis,neil477,mitchellh,false,,0,0,14,45,776,false,false,false,false,0,0,0,0,0,0,248
1303159,mitchellh/vagrant,ruby,1511,1364438212,1378068251,1378068251,227167,227167,github,false,false,false,46,1,1,0,4,0,4,0,2,0,0,6,6,3,3,0,0,0,6,6,3,3,0,22,0,22,0,27.173967714899327,1.387218723257767,5,nick@cmdln.org,plugins/hosts/arch/host.rb|plugins/hosts/bsd/host.rb|plugins/hosts/linux/host.rb|templates/nfs/exports.erb|templates/nfs/exports_freebsd.erb|templates/nfs/exports_linux.erb,5,0.0072992700729927005,0,0,false,WIP: Use current username for NFS exports I hacked this up as a fix for #1509 would appreciate some feedback If it looks like Im on the right track Ill update the other host classes though I dont have any means to test all of them,,429,0.682983682983683,0.681265206812652,12235,437.92398855741726,37.76052308949735,68.73722926031877,5424,5,1161,69,travis,davedevelopment,mitchellh,false,mitchellh,0,0,75,24,1480,false,false,false,false,0,0,0,0,0,0,1384
1512009,mitchellh/vagrant,ruby,1498,1364269169,,1364288605,323,,unknown,false,false,false,88,5,4,0,0,0,0,0,1,0,0,4,4,3,0,1,0,0,4,4,3,0,1,18,18,18,22,31.398275997054327,1.7156511540722226,69,phunehehe@gmail.com,lib/vagrant/downloaders/http.rb|lib/vagrant/downloaders/http.rb|test/unit/vagrant/downloaders/http_test.rb|lib/vagrant/downloaders/http.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/downloaders/http_test.rb,67,0.072992700729927,0,0,false,Redirect limit Added a redirect limit I was trying to download a Dropbox URL and it kept hanging so I thought it was stuck in a re-direct loop but it looks like thats fixed in https://githubcom/mitchellh/vagrant/pull/1497Anyways heres an implementation of the redirect limit I tried adding tests with webmock for the redirect itself but I couldnt find the hooks to get the download method to actually call properly and it looks like the ingegration tests for it are still pending (https://githubcom/mitchellh/vagrant/commit/87bc6ec63f6aedf267b19de219d101c6d254f630#L2R51) so I didnt in the end,,428,0.6845794392523364,0.681265206812652,11379,446.7879427014676,39.63441427190439,70.30494771069513,5398,5,1159,51,travis,petems,mitchellh,false,,0,0,45,124,552,false,false,false,false,0,1,0,0,0,0,-1
1512001,mitchellh/vagrant,ruby,1497,1364265770,,1364288636,381,,unknown,false,false,false,37,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.487496486640519,0.2452038617318397,1,mitchell.hashimoto@gmail.com,lib/vagrant/downloaders/http.rb,1,0.0024330900243309003,0,0,false,Faking user agent curl to make dropbox http downloads work Dropbox assumes Vagrant is a browser thus serving vagrant a download page instead of the linked file itself Setting vagrant users agent to eg curl/7290 solves this,,427,0.6861826697892272,0.681265206812652,11379,446.7879427014676,39.63441427190439,70.30494771069513,5398,5,1159,50,travis,jedvardsson,mitchellh,false,,0,0,0,0,740,false,false,false,false,0,0,0,0,0,0,42
1512004,mitchellh/vagrant,ruby,1490,1364157761,1364244162,1364244162,1440,1440,github,false,false,false,28,1,1,0,2,0,2,0,2,2,0,1,3,3,0,0,2,0,1,3,3,0,0,29,0,29,0,13.291209451221032,0.729811514492414,8,mitchell.hashimoto@gmail.com,plugins/guests/linux/guest.rb|plugins/guests/pld/guest.rb|plugins/guests/pld/plugin.rb,8,0.0,0,0,false,add basic pld linux support PLD Linux Distribution: https://wwwpld-linuxorg/also when i added this distro detection i noticed you call sudo hostname which is not really neccessaryhttps://githubcom/mitchellh/vagrant/commit/f757184c06a4f985d3fd175bcf1b569662f48c97#L6R29,,426,0.6854460093896714,0.687960687960688,11354,447.77171041042806,39.721683988021844,70.45974986788798,5397,5,1158,51,travis,glensc,mitchellh,false,mitchellh,0,0,17,3,1141,true,false,false,false,0,2,0,0,1,0,27
1284429,mitchellh/vagrant,ruby,1474,1363872983,1363918734,1363918734,762,762,commit_sha_in_comments,false,false,false,107,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.0625968112675555,0.22308080735190158,6,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/chef_solo.rb,6,0.01643835616438356,0,0,false,Set default value for type to :host when its nil I got an error as below:/Users/kentaro/rbenv/versions/200-p0/lib/ruby/gems/200/gems/vagrant-110dev/plugins/provisioners/chef/provisioner/chef_solorb:81:in expand_path: no implicit conversion of nil into String (TypeError)It occurs when users set roles_path like chefroles_path  path/to/roles[This change](https://githubcom/mitchellh/vagrant/commit/1af32555595a8c762b794e053d53441216e8085d#L1R65) assumes type is always set but it can be not It results path value is nil and expand_path raises the error aboveUses who are using the version of Vagrant which includes the commit above cant set roles_path and data_bags_path as usual Theres a workaround to this problem Just set it like:configvmprovision :chef_solo do |chef|  chefroles_path          [[:host chef/roles]]  chefdata_bags_path  [[:host chef/data_bags]]end,,423,0.6832151300236406,0.7178082191780822,11344,448.1664315937941,39.75669957686883,70.52186177715092,5396,4,1155,53,travis,kentaro,mitchellh,false,mitchellh,1,0.0,336,82,1827,false,false,false,false,0,0,1,0,0,0,347
1281951,mitchellh/vagrant,ruby,1466,1363818322,1363853244,1363853244,582,582,github,false,false,false,84,1,1,0,1,0,1,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,46,0,46,0,4.36456123236402,0.23906033232171395,10,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,10,0.028011204481792718,0,4,false,added dhcp configuration option for private networks We are using private (hostonly) networks to provide interconnectivity between multiple vms As we do not want to care about managing ip-addesses we were using this config option in vagrant  11:rubyconfigvmnetwork :hostonly :dhcpUnfortunately this feature was deleted although all required functionality still exists in the provider codeThis is an attempt to bring this functionality back to vagrantConfiguration for version 2 configs now as follows:rubyconfigvmnetwork :private_network type: :dhcp,,422,0.6824644549763034,0.7338935574229691,11367,447.2596111550981,39.67625582827483,70.37916776634117,5396,4,1154,54,travis,janschumann,mitchellh,false,mitchellh,0,0,14,10,1041,false,false,false,false,0,1,0,0,0,0,582
1281090,mitchellh/vagrant,ruby,1465,1363806689,1365115786,1365115786,21818,21818,github,false,true,false,142,7,2,0,23,0,23,0,20,3,0,1,7,3,0,1,3,0,4,7,3,0,1,194,0,234,0,35.09301322302496,1.9173133119833028,81,phunehehe@gmail.com,plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/plugin.rb|plugins/provisioners/ansible/provisioner.rb|templates/locales/en.yml|plugins/provisioners/ansible/config.rb|plugins/provisioners/ansible/plugin.rb|plugins/provisioners/ansible/provisioner.rb|templates/locales/en.yml,81,0.0,1,13,false,Add Ansible provisioner This pull request adds a v2 provisioner that allows Vagrant to run [Ansible](http://ansiblecc) playbooks on the guest  Though it supports a number of options the simplest example of how to use it is:    Vagrantconfigure(2) do |config|      configvmprovision :ansible do |ansible|        ansibleplaybook  playbookyml      end    endWith that you can configure the guest using Ansibles powerful but simple playbook syntax I find Ansible to be a great fit for Vagrant because it can do much more organized configuration management than the shell provisioner without all the moving parts of Chef or Puppet  Its a middle ground that I think Vagrant does not yet have coveredAlso I wrote up some documentation for this plugin in https://githubcom/hashicorp/docsvagrantupcom/pull/10Let me know if I can make any changes to make this provisioner better :) Looping in @mpdehaan in case he has any suggestions,,420,0.680952380952381,0.7380281690140845,11450,444.0174672489083,39.38864628820961,69.86899563318777,5396,4,1154,57,travis,commandtab,mitchellh,false,mitchellh,0,0,8,8,1832,false,false,false,false,0,0,0,0,0,0,1789
1280644,mitchellh/vagrant,ruby,1464,1363801682,1363811827,1363811827,169,169,github,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.441055392935976,0.242637888345953,0,,plugins/communicators/ssh/plugin.rb,0,0.0,0,0,false,Fix typo on ComunicatorSSH plugin name  ,,419,0.6801909307875895,0.7380281690140845,11450,444.0174672489083,39.38864628820961,69.86899563318777,5396,4,1154,54,travis,fgrehm,mitchellh,false,mitchellh,4,0.75,279,136,1414,true,true,true,false,1,8,4,0,1,0,169
1281653,mitchellh/vagrant,ruby,1463,1363813797,1363813925,1363813925,2,2,github,false,false,false,110,1,1,0,3,0,3,0,2,0,1,1,2,2,0,0,0,1,1,2,2,0,0,155,0,155,0,4.2072483242820775,0.22986363865248266,12,mitchell.hashimoto@gmail.com,lib/vagrant.rb|lib/vagrant/test_helpers.rb,12,0.033707865168539325,0,2,false,Deprecate / remove / update Vagrant::TestHelpers HiWhile trying to upgrade some old middleware / action specs for a plugin I found out that [Vagrant::TestHelpers](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/test_helpersrb) does not work with vagrant  11 It looks like it is calling [some](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/test_helpersrb#L50) [old](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/test_helpersrb#L83) Vagrant::Environment methods which does not exist anymoreI thought of sending a patch to fix that but after [looking at one of the builtin actions test](https://githubcom/mitchellh/vagrant/blob/master/test/unit/vagrant/action/builtin/confirm_testrb) it seems that things are easier than I thought I also grepped for usages on Vagrant itself and couldnt find anyIs it worth upgrading its code I have a half baked fix for that around here in case you think it is :-),,421,0.6817102137767221,0.7359550561797753,11450,444.0174672489083,39.38864628820961,69.86899563318777,5396,4,1154,54,travis,fgrehm,mitchellh,false,mitchellh,5,0.8,279,136,1414,true,true,true,false,1,8,5,0,1,0,-32
1278942,mitchellh/vagrant,ruby,1461,1363766943,1363854510,1363854510,1459,1459,github,false,false,false,76,1,0,0,4,0,4,0,4,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,30,0,0,0.0,0,,,0,0.0,0,0,false,Ability to install a vagrant plugin with a specific version and source Hi there I was very excited to try the release candidate of berkshelf for vagrant-11Here are my patches to be able to install berkshelf-130rc1 with either one of those command-lines:    vagrant plugin install --gem-source http://rubygemsorg/ --gem-version 130rc1 berkshelf    vagrant plugin install --gem-source http://rubygemsorg/ --gem-pre berkshelfNote that for some reason if I leave http://gemshashicorpcom in the list of repositories rubygems cannot locate berkshelf-130rc1,,418,0.6794258373205742,0.7380281690140845,11450,444.0174672489083,39.38864628820961,69.86899563318777,5395,4,1154,53,travis,hmalphettes,mitchellh,false,mitchellh,0,0,31,3,1492,false,false,false,false,0,0,0,0,0,0,2
1272669,mitchellh/vagrant,ruby,1451,1363647366,1363648625,1363648625,20,20,merged_in_comments,false,false,false,24,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,10,0,10,0,9.47375967703709,0.49946152029991053,11,mitchell.hashimoto@gmail.com,CHANGELOG.md|vagrant.gemspec,9,0.025714285714285714,0,0,false,Up the version of net-ssh and net-scp in 10 branch This fixes the version conflict between chef 10240 and vagrant 107 Related to #1436,,417,0.6786570743405276,0.7485714285714286,7947,951.3023782559457,92.11023027557569,235.4347552535548,5395,5,1152,52,unknown,rubbish,mitchellh,false,mitchellh,0,0,50,19,1845,false,false,false,false,0,0,0,0,0,0,-1
1262076,mitchellh/vagrant,ruby,1449,1363634928,1365318554,1365318554,28060,28060,commit_sha_in_comments,false,false,false,29,3,1,2,4,0,6,0,3,0,0,2,3,2,0,0,0,0,3,3,3,0,0,15,0,21,0,8.102957714871893,0.44269341775835575,10,mitchell.hashimoto@gmail.com,lib/vagrant/util/platform.rb|plugins/providers/virtualbox/driver/base.rb,7,0.020172910662824207,0,0,false,using unix style path for executable with cygwin it will required unix style path for call VBoxManageexebut also required windows style path for argument such as box file,,416,0.6778846153846154,0.7550432276657061,11430,444.7944006999125,39.4575678040245,69.9912510936133,5395,5,1152,55,travis,yujiorama,mitchellh,false,mitchellh,0,0,4,3,1314,false,false,false,false,0,0,0,0,0,0,3339
1271073,mitchellh/vagrant,ruby,1448,1363624321,1363627917,1363627917,59,59,github,false,false,false,8,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.475759484557852,0.24452930501186937,3,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/prepare_nfs_settings.rb,3,0.008695652173913044,0,0,false,Fix wrong reference to Errors::NFSNoHostonlyNetwork Introduced in 022c1da,,415,0.6771084337349398,0.7594202898550725,11429,444.8333187505469,39.46102021174206,69.9973750984338,5395,5,1152,52,travis,uggedal,mitchellh,false,mitchellh,1,1.0,172,12,1877,true,false,false,false,1,0,1,0,1,0,59
1270734,mitchellh/vagrant,ruby,1447,1363618012,1363627978,1363627978,166,166,github,false,false,false,27,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.13209161940657,0.22575330408726707,5,mitchell.hashimoto@gmail.com,plugins/provisioners/shell/config.rb,5,0.014492753623188406,0,0,false,Fix shell provisioners validation of args The shell provider will complain that args is not a string if the value was not set in a Vagrantfile invocation,,414,0.6763285024154589,0.7594202898550725,11429,444.8333187505469,39.46102021174206,69.9973750984338,5395,5,1152,51,travis,uggedal,mitchellh,false,mitchellh,0,0,172,12,1877,true,false,false,false,0,0,0,0,1,0,166
1269277,mitchellh/vagrant,ruby,1443,1363572354,,1363572478,2,,unknown,false,false,false,4,1,1,0,0,0,0,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,6,4,6,4,18.277435589439392,0.9986352435697973,17,mitchell.hashimoto@gmail.com,lib/vagrant/action/general/package.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|test/unit/support/isolated_environment.rb,11,0.008823529411764706,0,0,false,replace bsdtar to tar ,,413,0.6779661016949152,0.7705882352941177,11417,445.3008671279671,39.502496277480944,70.07094683366908,5394,4,1151,51,travis,pronix,mitchellh,false,,5,0.0,60,52,1398,false,true,false,false,1,0,5,0,0,0,-1
1269273,mitchellh/vagrant,ruby,1442,1363572303,,1365378568,30104,,unknown,false,false,false,13,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.6566340209806905,0.2544273143243554,13,mitchell.hashimoto@gmail.com,lib/vagrant/box_collection.rb,13,0.03823529411764706,0,0,false,vagrant has separated tmp dir better use it Esp when tmp is RAM ,,412,0.6796116504854369,0.7705882352941177,11417,445.3008671279671,39.502496277480944,70.07094683366908,5394,4,1151,54,travis,pronix,mitchellh,false,,4,0.0,60,52,1398,false,true,false,false,1,0,4,0,0,0,-1
1269257,mitchellh/vagrant,ruby,1441,1363571979,,1363572284,5,,unknown,false,false,false,18,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Use vagrant tmp also vagrant have separated tmp dir - better use itEspecially when /tmp if RAM ,,411,0.681265206812652,0.7705882352941177,11417,445.3008671279671,39.502496277480944,70.07094683366908,5394,4,1151,51,travis,pronix,pronix,true,,3,0.0,60,52,1398,false,true,false,false,0,0,2,0,0,0,3
1269252,mitchellh/vagrant,ruby,1440,1363571820,,1363572167,5,,unknown,false,false,false,14,1,1,0,0,0,0,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,6,4,6,4,18.277435589439392,0.9986352435697973,17,mitchell.hashimoto@gmail.com,lib/vagrant/action/general/package.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|test/unit/support/isolated_environment.rb,11,0.008823529411764706,0,0,false,bsdtar to tar helloeverywhere bsdtar gpltar or mittar(if they exists) called simple tar,,410,0.6829268292682927,0.7705882352941177,11417,445.3008671279671,39.502496277480944,70.07094683366908,5394,4,1151,51,travis,pronix,mitchellh,false,,2,0.0,60,52,1398,false,true,false,false,0,0,1,0,0,0,-1
1269219,mitchellh/vagrant,ruby,1439,1363570814,,1363571117,5,,unknown,false,false,false,20,1,1,0,0,0,0,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,6,4,6,4,18.277435589439392,0.9986352435697973,17,mitchell.hashimoto@gmail.com,lib/vagrant/action/general/package.rb|lib/vagrant/box.rb|lib/vagrant/box_collection.rb|test/unit/support/isolated_environment.rb,11,0.008902077151335312,0,0,false,replace bsdtar command to tar hellobsdtar - incorrecti think on all systems this command called same - tar,,409,0.684596577017115,0.771513353115727,11417,445.3008671279671,39.502496277480944,70.07094683366908,5394,4,1151,50,travis,pronix,mitchellh,false,,1,0.0,60,52,1398,false,true,false,false,0,0,0,0,0,0,-1
1267262,mitchellh/vagrant,ruby,1436,1363509786,1363515251,1363515251,91,91,commit_sha_in_comments,false,false,false,95,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.5924851527587895,0.250922344824159,3,mitchell.hashimoto@gmail.com,vagrant.gemspec,3,0.00967741935483871,0,0,false,Updated net-scp and net-ssh deps in vagrantgemspec Veewee and a few other gems install newer versions of net-ssh and net-scp than what Vagrant had specifiedI changed the specs and from some basic functionality tests things seem to work fineBefore running vagrant or any subcommand of it resulted in a (Gem::LoadError) that complained about conflicts:pre/Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygems/specificationrb:1637:in raise_if_conflicts: Unable to activate net-scp-110 because net-ssh-222 conflicts with net-ssh ( 265) (Gem::LoadError)from /Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygems/specificationrb:746:in activatefrom /Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygems/specificationrb:780:in block in activate_dependenciesfrom /Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygems/specificationrb:766:in eachfrom /Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygems/specificationrb:766:in activate_dependenciesfrom /Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygems/specificationrb:750:in activatefrom /Users/nick/rbenv/versions/193-p392/lib/ruby/191/rubygemsrb:1232:in gemfrom /Users/nick/rbenv/versions/193-p392/bin/vagrant:22:in main/pre ,,408,0.6838235294117647,0.7903225806451613,11417,445.3008671279671,39.502496277480944,70.07094683366908,5393,4,1151,50,travis,nickchappell,mitchellh,false,mitchellh,0,0,12,27,374,false,true,false,false,0,0,0,0,0,0,88
1265332,mitchellh/vagrant,ruby,1432,1363446500,1363464744,1363464744,304,304,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.561398598667765,0.24922252601250602,8,mitchell.hashimoto@gmail.com,lib/vagrant/box_collection.rb,8,0.02572347266881029,0,0,false,Adding a box fails on Windows [GH-1424] The Dirmkdir statement fails on Windows if src and destreside on different partitions Files are therefore copiedone-by-one The #6715 workaround is not needed anymore,,407,0.683046683046683,0.7942122186495176,11413,445.45693507403837,39.51634101463244,70.09550512573381,5392,4,1150,50,travis,martoe,mitchellh,false,mitchellh,0,0,3,9,867,false,true,false,false,1,1,0,0,0,0,303
1245127,mitchellh/vagrant,ruby,1411,1363056624,1363058719,1363058719,34,34,github,false,false,false,168,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.182739835041034,0.2285570971971673,6,mitchell.hashimoto@gmail.com,plugins/guests/linux/guest.rb,6,0.02027027027027027,0,0,false,add Solaris detection to linux provider in trying to stand up a Solaris vagrant vm we ran into some issues: 1:2329 $ VAGRANT_LOGinfo vagrant up sun-10u9[sun-10u9] VM booted and ready for use INFO subprocess: Starting process: [VBoxManage showvminfo 6cd48772-31b3-4995-a906-3f448030792a --machinereadable]ERROR warden: Error occurred: Networking features require support that is dependent on the operatingsystem running within the guest virtual machine Vagrant has built-in supportfor many operating systems: Debian Ubuntu Gentoo and RedHat The distroof your VM couldnt be detected or doesnt support networking featuresMost of the time this is simply due to the fact that no one has contributedback the logic necessary to set this up Please report a bug as well as thebox youre using----i noticed that solarisrb existed in vagrant-105/lib/vagrant/guest/ but in  vagrant-105/lib/vagrant/guest/linuxrb there was no corresponding return valuethis patch adds the return value (though it does so in a slightly different way since the folder hierarchy in this area has changed in master),,406,0.6822660098522167,0.8344594594594594,11370,445.1187335092348,39.40193491644679,70.09674582233949,5388,4,1145,51,travis,chorankates-sfdc,mitchellh,false,mitchellh,0,0,10,3,276,false,false,false,false,0,0,0,0,0,0,34
1237594,mitchellh/vagrant,ruby,1408,1362874124,1362877770,1362877770,60,60,github,false,false,false,32,2,2,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,8.814269885948782,0.4816283578397566,40,mitchell.hashimoto@gmail.com,plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm.rb,40,0.13651877133105803,0,0,false,Auto remove trailing slashes from synced folders id VirtualBox provider was having a hard time mounting the folders down hereThis also ensures that guestpath and hostpath are Pathnames all the time,,405,0.6814814814814815,0.8361774744027304,11365,445.3145622525297,39.41926968763748,70.12758468983722,5385,4,1143,52,travis,fgrehm,mitchellh,false,mitchellh,3,0.6666666666666666,278,136,1403,true,true,true,false,0,3,3,0,1,0,8
1237145,mitchellh/vagrant,ruby,1407,1362864842,1362877671,1362877671,213,213,github,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,3.9231560233265235,0.21436865645287806,3,mitchell.hashimoto@gmail.com,lib/vagrant/util/subprocess.rb,3,0.010238907849829351,0,0,false,raise ChildProcess::LaunchError with the original message to ease debugging when running subprocesses  ,,404,0.6806930693069307,0.8361774744027304,11365,445.3145622525297,39.41926968763748,70.12758468983722,5385,4,1143,52,travis,fgrehm,mitchellh,false,mitchellh,2,0.5,278,136,1403,true,true,true,false,0,3,2,0,1,0,213
1233023,mitchellh/vagrant,ruby,1406,1362767854,,1364526014,29302,,unknown,false,false,false,17,1,1,0,1,0,1,0,2,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.4495079623495855,0.24312501079548876,3,mitchell.hashimoto@gmail.com,.travis.yml,3,0.010309278350515464,0,0,true,Test Ruby 200 on Travis Adds Ruby 200 to the list of rubies to test on Travis,,403,0.6823821339950372,0.8350515463917526,11338,446.37502204974425,39.51314164755689,70.29458458281884,5384,4,1142,54,travis,lucaspiller,mitchellh,false,,0,0,22,1,1687,false,false,false,false,0,0,0,0,0,0,29302
1229057,mitchellh/vagrant,ruby,1403,1362626357,1362695718,1362695718,1156,1156,merged_in_comments,false,false,false,16,65,65,0,0,0,0,0,1,1,0,29,30,27,1,1,1,0,29,30,27,1,1,1022,8,1022,8,390.3832524219657,21.329792083046716,128,samet2@gmail.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|CHANGELOG.md|lib/vagrant/command/ssh_config.rb|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|CHANGELOG.md|templates/locales/en.yml|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|lib/vagrant/version.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/hosts/fedora.rb|CHANGELOG.md|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/provisioners/puppet.rb|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/guest/ubuntu.rb|lib/vagrant/provisioners/puppet.rb|vagrant.gemspec|CHANGELOG.md|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/version.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/action/vm/sane_defaults.rb|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|test/unit/vagrant/environment_test.rb|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/action/builtin.rb|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|CHANGELOG.md|templates/commands/ssh_config/config.erb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/provisioners/shell.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|vagrant.gemspec|vagrant.gemspec|lib/vagrant/guest/suse.rb,63,0.0,0,0,false,Suse fixes for issue 1063: configvmhost_name A fix for issue 1063 works on opensuse and sles11,,402,0.681592039800995,0.8373702422145328,11338,446.37502204974425,39.51314164755689,70.29458458281884,5380,4,1140,50,travis,cliles,mitchellh,false,mitchellh,0,0,0,2,180,false,false,false,false,0,0,0,0,0,0,-1
1512002,mitchellh/vagrant,ruby,1402,1362620892,1362620941,1362620941,0,0,github,false,false,false,5,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.187601212736103,0.22880249705051753,47,mitchell.hashimoto@gmail.com,lib/vagrant/environment.rb,47,0.16376306620209058,0,0,false,Fix typo on logging output  ,,401,0.6807980049875312,0.8397212543554007,11338,446.37502204974425,39.51314164755689,70.29458458281884,5380,4,1140,50,travis,fgrehm,mitchellh,false,mitchellh,1,0.0,278,136,1400,true,true,true,false,0,2,1,0,1,0,0
1220583,mitchellh/vagrant,ruby,1400,1362427057,1385372198,1385372198,382359,382359,commit_sha_in_comments,false,true,false,37,2,1,0,3,0,3,0,2,0,0,4,5,3,0,1,0,0,5,5,4,0,1,46,0,50,0,16.4124300009551,0.8967461485641368,256,tpltnt.github@dropcut.net,plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/driver/version_4_2.rb|templates/locales/en.yml,168,0.28214285714285714,0,0,false,Support for internal network adapter in master Inspired by and copied from https://githubcom/mitchellh/vagrant/pull/982 this adds support for the internal network adapter in the master branch I use this to build and simulate full multi-layered networks of VMs,,400,0.68,0.8357142857142857,11322,447.00582935877054,39.568980745451334,70.3939233350998,5378,4,1138,58,travis,curzonj,mitchellh,false,mitchellh,0,0,9,14,1741,false,false,false,false,0,0,0,0,0,0,3233
1213926,mitchellh/vagrant,ruby,1396,1362244064,,1385372326,385411,,unknown,false,false,false,32,4,1,0,6,0,6,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,112,0,4.78477151911207,0.26143126171276504,3,mitchell.hashimoto@gmail.com,plugins/guests/arch/guest.rb,3,0.010752688172043012,0,2,false,Use systemd method of specifying hostname in Arch Linux ArchLinux has been using systemd for a few months now and the existing method of specifying the hostname no longer works with systemd,,399,0.681704260651629,0.8315412186379928,11324,446.92688096079127,39.56199222889439,70.38149063935005,5375,4,1136,57,travis,masm,mitchellh,false,,1,1.0,3,2,1664,false,true,false,false,0,0,0,0,0,0,4952
1194926,mitchellh/vagrant,ruby,1392,1361869531,,1361998170,2143,,unknown,false,false,false,14,1,1,0,6,0,6,0,7,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.544560556757162,0.23966717439436344,1,mitchell.hashimoto@gmail.com,vagrant.gemspec,1,0.004166666666666667,0,0,false,Bump json dependency Freshening the JSON dependency to try out Vagrant on Ruby 20,,398,0.6834170854271356,0.8083333333333333,7940,952.1410579345088,92.19143576826197,235.64231738035267,5368,3,1132,50,unknown,whiteley,mitchellh,false,,0,0,19,16,1820,false,true,false,false,0,0,0,0,0,0,533
1194460,mitchellh/vagrant,ruby,1391,1361857177,1363988460,1363988460,35521,35521,commit_sha_in_comments,false,false,false,156,2,2,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,40,0,40,0,4.234714704080432,0.22332678700565772,0,,lib/vagrant/command/up.rb,0,0.0,0,0,false,Forks off the entire vmup command for each vm Current Issues:    * The maximum number of concurrent forks allowed is currently hard coded to 2 It should probably be moved to a config variable    * The vagrant file is currently not be populated correctly This is probably due to the forks clobbering the file because it is not longer a sequential operation Will need to update the datastore to fix    * The is currently a sleep I am definitely running into issue with virtual box not liking when 2 different forks are trying to perform commands at the same time I currently am using a sleep to help stagger the forks a little But it may be best to add in locks so that only 1 fork is allowed to send a command to virtual box at a time so I can remove the sleepWith your feedback I can resolve some of the issues above,,397,0.6826196473551638,0.8083333333333333,7940,952.1410579345088,92.19143576826197,235.64231738035267,5368,3,1132,56,unknown,canausa,mitchellh,false,mitchellh,1,1.0,4,4,712,false,true,false,false,0,1,1,0,0,0,-1
1191675,mitchellh/vagrant,ruby,1390,1361814175,,1361998202,3067,,unknown,false,true,false,51,1,1,0,4,0,4,0,5,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5459260859930195,0.25142438785914395,5,mitchell.hashimoto@gmail.com,vagrant.gemspec,5,0.020833333333333332,0,0,false,Upgrade a dependency on json library to ~ 177 Theres a security issue in json library whose version vagrant requires (~ 166)https://githubcom/ruby/ruby/commit/062d2ee6f798205c3046730d0d348cfd0d0bc09dThis dependency on old version of json library prevents users from installing vagrant with Ruby 200-p0 This pull request should be merged as soon as possible I think,,396,0.6843434343434344,0.8083333333333333,11222,446.3553733737302,39.20869720192479,69.95188023525219,5365,3,1131,49,travis,kentaro,mitchellh,false,,0,0,335,80,1803,false,false,false,false,0,0,0,0,0,0,206
1181802,mitchellh/vagrant,ruby,1383,1361522995,1363988478,1363988478,41091,41091,commit_sha_in_comments,false,false,false,174,1,1,0,2,0,2,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,32,0,32,0,11.971025690370839,0.6313180194338225,0,,lib/vagrant/action/vm/provision.rb|lib/vagrant/action/warden.rb|lib/vagrant/command/up.rb,0,0.0,0,0,true,Forks out the provisioning This pull requests creates a ruby fork for every provision called The fork allows the main vagrant process to continue to run while the vm is being provisioned in the background Once all the vms have been created the main vagrant process waits for each provision fork to complete before returning to the userWith this modification I was able to reduce the up command of a simple mult vm setup of 1 mysql server and 1 apache/php server from 4 minutes to 3 minutes As the provisioning process becomes more complex then this example the time saved by this patch grows exponentiallyI attempt to run the unit test before making the pull but even with a clean 1-0-stable checkout I was unable to get all the unit tests to pass I am unsure if this patch will pass the unit test as a resultThis is my first time really working with ruby so any modifications or suggestions you have I am willing to correct for this patch,,395,0.6835443037974683,0.8,7940,952.1410579345088,92.19143576826197,235.64231738035267,5359,3,1128,55,unknown,canausa,mitchellh,false,mitchellh,0,0,4,4,708,false,true,false,false,0,0,0,0,0,0,1211
1180717,mitchellh/vagrant,ruby,1382,1361494957,,1374169057,211235,,unknown,false,true,false,54,1,1,0,1,0,1,0,1,0,0,3,3,2,0,1,0,0,3,3,2,0,1,44,0,44,0,12.839678836923014,0.7101572956589528,130,phunehehe@gmail.com,plugins/kernel_v1/config/vm.rb|plugins/providers/virtualbox/action/network.rb|templates/locales/en.yml,94,0.12444444444444444,0,0,false,Apply Internal Networking to the new Master Branch My organization really needs internal networking for multi-vm communication and host-only networking doesnt work due to security I have applied the changes from [Pull Request 982](https://githubcom/mitchellh/vagrant/pull/982) to the latest trunk as it looked like the baseline has been significantly modified since that pull request was submitted,,394,0.6852791878172588,0.8,11201,437.0145522721186,38.56798500133917,68.65458441210606,5357,3,1127,90,travis,aaa572,mitchellh,false,,0,0,2,2,3,false,true,false,false,0,1,0,0,0,0,211234
1152029,mitchellh/vagrant,ruby,1376,1360823799,,1361595849,12867,,unknown,false,false,false,61,1,1,0,6,0,6,0,6,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.5466457973117675,0.2514697126319745,5,mitchell.hashimoto@gmail.com,vagrant.gemspec,5,0.02252252252252252,0,2,false,Relax pinning of net-ssh to ~ 265 for compatibility with Chef 10220 Chef 10220 and test-kitchen require net-ssh ~ 26 so they wont work with Vagrant:$ kitchen test/Users/jdunn/rvm/rubies/ruby-193-p327/lib/ruby/191/rubygems/specificationrb:1637:in raise_if_conflicts: Unable to activate chef-10220 because net-ssh-222 conflicts with net-ssh (~ 26) (Gem::LoadError)I tested vagrant with net-ssh 265 and it works great so I think its safe to bump it,,393,0.6870229007633588,0.7882882882882883,11187,437.5614552605703,38.61625100563153,68.74050236882096,5345,4,1120,48,travis,juliandunn,mitchellh,false,,0,0,59,30,615,false,false,false,false,0,0,0,0,0,0,5074
1150033,mitchellh/vagrant,ruby,1374,1360781271,1360784178,1360784178,48,48,github,false,false,false,5,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.377478888751613,0.24211336922946744,54,phunehehe@gmail.com,templates/locales/en.yml,54,0.24434389140271492,0,0,false,Be more helpful with vboxmanage_error ,,392,0.6862244897959183,0.7873303167420814,11187,437.5614552605703,38.61625100563153,68.74050236882096,5345,4,1119,46,travis,jblaine,mitchellh,false,mitchellh,0,0,7,3,854,false,false,false,false,0,0,0,0,0,0,48
1145181,mitchellh/vagrant,ruby,1371,1360629718,,1361998224,22808,,unknown,false,true,false,3,1,1,0,8,0,8,0,8,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.562314710233524,0.2523364278964721,5,mitchell.hashimoto@gmail.com,vagrant.gemspec,5,0.02262443438914027,0,1,false,Loosen json dependecy ,,391,0.6879795396419437,0.7873303167420814,11187,437.5614552605703,38.61625100563153,68.74050236882096,5344,4,1117,49,travis,grosser,mitchellh,false,,0,0,283,6,1724,false,false,false,false,0,1,0,0,0,0,2825
1144809,mitchellh/vagrant,ruby,1370,1360619948,1377761433,1377761433,285691,285691,github,false,false,false,96,1,1,0,9,0,9,0,9,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,0,5,0,8.385293155869864,0.46378100946671275,14,shawn@dahlen.me,plugins/provisioners/shell/config.rb|plugins/provisioners/shell/provisioner.rb,8,0.03619909502262444,0,1,false,Allow non privileged user vagrant to run a shell provision Sometimes after provisioning the server I need to make some initial configurations in the project without superuser privileges For example bundle the project gems import assets and/or db data from the integration server etc Some of these tasks are better performed by the user vagrant and some of them dont even work when performed by root (because of ssh agent forwarding lost after sudoing and suing)This pull request allows a shell provision by the unprivileged vagrant user:    configvmprovision :shell :path  path/to/my/script :privileged  false,,390,0.6871794871794872,0.7873303167420814,11187,437.5614552605703,38.61625100563153,68.74050236882096,5344,4,1117,70,travis,frsantos,mitchellh,false,mitchellh,0,0,4,0,1104,false,true,false,false,1,1,0,0,0,0,26354
1142364,mitchellh/vagrant,ruby,1366,1360478624,1363246894,1363246894,46137,46137,github,false,false,false,13,6,2,0,4,0,4,0,5,1,0,2,5,2,0,1,1,1,3,5,3,0,1,11,0,26,0,17.788360018369,0.9838539229008826,5,mitchell.hashimoto@gmail.com,lib/vagrant/util/platform.rb|plugins/providers/virtualbox/action/import.rb|plugins/providers/virtualbox/action/import.rb|plugins/providers/virtualbox/action/import.rb~,5,0.0,0,0,false,Solve Virtualbox pathing issue running under Cygwin As per the discussion here: https://groupsgooglecom/d/msg/vagrant-up/vah9aGxCKbc/4DOr7_aq0tMJ,,389,0.6863753213367609,0.7873303167420814,11187,437.5614552605703,38.61625100563153,68.74050236882096,5344,4,1116,51,travis,johnbarney,mitchellh,false,mitchellh,0,0,3,6,526,false,true,false,false,0,0,0,0,0,0,359
974711,mitchellh/vagrant,ruby,1361,1360274698,,1360276583,31,,unknown,false,false,false,123,2,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,8,0,4.578725222905669,0.24146831929123683,1,mitchell.hashimoto@gmail.com,vagrant.gemspec,1,0.004807692307692308,0,0,false,update net-ssh and net-scp dependencies to use recent dependencies you may be aware that net-sshs author has pushed changes which break many pessimistic gem requirementshttp://solutiouscom/blog/2013/02/06/net-ssh-gem-code-signed/several tools like fog chef etc depend on these gems and updated gems have been pushed to reflect the dependencyHeres a post which explains the upgrade from opscodes point of view:http://jtimbermanhousepuborg/blog/2013/02/06/chef-and-net-ssh-dependency-broken/Unfortunately I cant use vagrant with my other tooling in bundles etc because of thisI ran both the units and acceptance tests before and after the spec change -- there was no difference in the test output although several acceptance tests failed before and after itIm inclined to think theres no reason to avoid changing this and the sooner the better :),,388,0.6881443298969072,0.75,7939,952.2609900491245,92.20304824285175,235.67199899231642,5340,4,1113,46,unknown,erikh,mitchellh,false,,1,1.0,138,124,1653,false,false,false,false,0,0,0,0,0,0,-1
974712,mitchellh/vagrant,ruby,1358,1360249750,1360264969,1360264969,253,253,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.333973517924205,0.24216973765119376,48,mitchell.hashimoto@gmail.com,templates/locales/en.yml,48,0.2318840579710145,0,0,false,Reword the port collision resume message to address general programs Port collision can also be caused by programs that listen to ports so I reworded the message Hope I didnt make it confusing,,387,0.6873385012919897,0.748792270531401,11030,440.07252946509516,38.71260199456029,69.26563916591115,5340,4,1113,46,travis,phunehehe,mitchellh,false,mitchellh,0,0,11,18,718,true,true,true,false,0,0,0,0,1,0,253
974708,mitchellh/vagrant,ruby,1357,1360207497,,1378240420,300548,,unknown,false,true,false,31,1,1,0,2,0,2,0,2,3,0,1,4,3,0,1,3,0,1,4,3,0,1,68,0,68,0,17.609833755465687,0.9790169113318579,136,phunehehe@gmail.com,plugins/provisioners/scpupload/config.rb|plugins/provisioners/scpupload/plugin.rb|plugins/provisioners/scpupload/provisioner.rb|templates/locales/en.yml,136,0.0,0,1,false,Add scpupload provisioner Add a provisioner which will upload host files and directories to theguest via the scp channel This is useful for populating user specificfiles into the guest,,386,0.689119170984456,0.704225352112676,11025,440.72562358276645,38.82086167800453,69.47845804988661,5339,3,1112,60,travis,markpeek,mitchellh,false,,0,0,37,4,712,false,false,false,false,0,0,0,0,1,0,257351
959512,mitchellh/vagrant,ruby,1353,1360080919,1374128441,1374128441,234125,234125,commit_sha_in_comments,false,false,false,55,1,1,0,1,0,1,0,2,0,0,4,4,2,2,0,0,0,4,4,2,2,0,3,0,3,0,17.4195606207048,0.958916734598495,4,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/config/base.rb|plugins/provisioners/chef/provisioner/base.rb|templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb,4,0.010638297872340425,0,0,false,add verbose_logging config option to chef based provisioners This pull requests add the [verbose_logging](http://wikiopscodecom/display/chef/Chef+Configuration+Settings#ChefConfigurationSettings-logoutput) option to the solorb/clientrbI really like this option to identify chef resources that are executed unnecessary in every run Especially when optimizing bigger run_lists it really helps (together with log_level: info) to fade out all resources then are not executed,,385,0.6883116883116883,0.6648936170212766,11129,433.1925599784347,38.2783718213676,68.29005301464642,5337,3,1111,90,travis,databus23,mitchellh,false,mitchellh,0,0,3,0,845,false,false,false,false,0,0,0,0,1,0,132580
955719,mitchellh/vagrant,ruby,1352,1359987401,1360011725,1360011725,405,405,github,false,false,false,31,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,0,14,0,4.662931063631146,0.25791300758699787,0,,lib/vagrant/util/ssh.rb,0,0.0,0,1,false,Fix args parser w/r/t ssh -t option It was failing b/c with this option any associated shell commands need to be the last part of the system command (see code comments),,384,0.6875,0.6257309941520468,11014,436.44452514980935,38.49645905211549,68.82149990920647,5335,3,1110,44,travis,erictip,mitchellh,false,mitchellh,0,0,3,0,517,false,false,false,false,0,0,0,0,0,0,2
950094,mitchellh/vagrant,ruby,1350,1359785936,1359837100,1359837100,852,852,merged_in_comments,false,false,false,71,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.3858354334806995,0.24964672538934432,6,mitchell.hashimoto@gmail.com,lib/vagrant/box_collection.rb,6,0.040268456375838924,0,0,false,Temp directory in a different partition than the destination will make rename fail Rename is a simple hard-link + unlink at the old location This does not work across different partitions/devicesExample in my box:ln ~/filetxt /tmpln: failed to create hard link ‘/tmp/testtxt’  ‘/home/ereslibre/testtxt’: Invalid cross-device linkThis is the exception that was being raised by vagrant when trying to move the downloaded image to my home directory,,383,0.6866840731070496,0.4966442953020134,10647,451.48868225791307,39.823424438809056,71.19376350145582,5333,3,1108,44,travis,ereslibre,mitchellh,false,mitchellh,0,0,11,21,1741,false,true,false,false,0,0,0,0,0,0,852
933362,mitchellh/vagrant,ruby,1338,1359414558,,1359416111,25,,unknown,false,false,false,4,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.422209683825014,0.2332171629051241,0,,lib/vagrant/ui.rb,0,0.0,0,0,false,add deprecated to stable ,,382,0.6884816753926701,0.17045454545454544,7938,952.3809523809523,92.21466364323508,235.70168808264046,5321,4,1103,55,unknown,hh,mitchellh,false,,2,0.5,48,17,1554,false,true,false,false,1,3,1,0,0,0,-1
933231,mitchellh/vagrant,ruby,1337,1359413921,,1359414273,5,,unknown,false,false,false,6,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.422209683825014,0.25572437672897363,0,,lib/vagrant/ui.rb,0,0.0,0,0,false,add deprecated method to ui https://githubcom/RiotGames/berkshelf/commit/39c08ab71c11c50b5b0f85916af0f9565422b9a4#commitcomment-2513856,,381,0.6902887139107612,0.17045454545454544,10494,447.493805984372,39.451114922813034,70.61177815894797,5320,4,1103,55,unknown,hh,mitchellh,false,,1,1.0,48,17,1554,false,true,false,false,1,3,0,0,0,0,-1
930359,mitchellh/vagrant,ruby,1336,1359327531,1359496735,1359496735,2820,2820,github,false,false,false,62,1,1,0,1,0,1,0,1,1,0,1,2,2,0,0,1,0,1,2,2,0,0,2,31,2,31,8.829330134933643,0.5105761841074188,2,mitchell.hashimoto@gmail.com,lib/vagrant/cli.rb|test/unit/vagrant/plugin/v1/cli_test.rb,2,0.022727272727272728,0,0,false,Return exit status of 1 on invalid command Makes vagrant destroyjj and similar invalid commands return an exit code of 1 so that vagrant destroyjj && vagrant up works as expected  (ie the vagrant up is not executed)I dont really know Ruby so the test could be complete rubbish  Are there really no existing tests for Vagrant::CLI  I couldnt find any,,380,0.6894736842105263,0.17045454545454544,10494,447.493805984372,39.451114922813034,70.61177815894797,5319,4,1102,54,unknown,ithinkihaveacat,mitchellh,false,mitchellh,0,0,59,30,1455,false,false,false,false,0,1,0,0,0,0,2820
974137,mitchellh/vagrant,ruby,1333,1359078958,,1364248877,86165,,unknown,false,false,false,126,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,20,0,4.339234783416515,0.22884307370419377,0,,lib/vagrant/communication/ssh.rb,0,0.0,0,0,false,Add download support using SCP HeyWhile working on [vagrant-notify](/fgrehm/vagrant-notify) I needed to [download a file](https://githubcom/fgrehm/vagrant-notify/compare/267344485e7adaf05571#L5L-1) from the guest machine and found out that it wasnt supported by vagrantAlthough I found out that the support is present on the master branch I was wondering if by any chance you guys have plans to backport it to the 10 seriesPlease let me know if you guys want me to implement the unit tests as well Ill just need some help to get it working since I wasnt able to run the unit_legacy tests because of a bunch of:ArgumentError: wrong number of arguments (2 for 3)    /home/projects/oss/vagrant/lib/vagrant/boxrb:21:in initialize    /home/projects/oss/vagrant/test/unit_legacy/vagrant/action/box/verify_testrb:7:in new    /home/projects/oss/vagrant/test/unit_legacy/vagrant/action/box/verify_testrb:7:in block in class:VerifyBoxActionTest    /home/fabio/rbenv/versions/193-p327-patched/lib/ruby/gems/191/gems/contest-013/lib/contestrb:22:in instance_eval    /home/fabio/rbenv/versions/193-p327-patched/lib/ruby/gems/191/gems/contest-013/lib/contestrb:22:in block in setup    /home/fabio/rbenv/versions/193-p327-patched/lib/ruby/gems/191/gems/mocha-0131/lib/mocha/integration/mini_test/version_230_to_2101rb:34:in runCheers,,379,0.6912928759894459,0.1511627906976744,7933,952.9812176982226,92.27278457078027,235.8502458086474,5319,5,1099,63,unknown,fgrehm,fgrehm,true,,0,0,272,135,1359,false,true,false,false,0,0,0,0,0,0,-1
828607,mitchellh/vagrant,ruby,1327,1358786541,1359496896,1359496896,11839,11839,github,false,false,false,14,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.7886928499927635,0.27986998751996334,0,,templates/commands/ssh_config/config.erb,0,0.0,0,0,false,Patch to solve Issue 1322 I made private key file path enclosed with quotes,,378,0.6904761904761905,0.07792207792207792,10452,440.68120933792574,38.84424033677765,69.74741676234214,5310,5,1096,53,unknown,samet,mitchellh,false,mitchellh,0,0,12,5,1455,false,false,false,false,0,0,0,0,0,0,11839
826931,mitchellh/vagrant,ruby,1326,1358720983,1359497345,1359497345,12939,12939,github,false,false,false,33,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,21,0,21,4.832623240428339,0.283165681686124,2,mitchell.hashimoto@gmail.com,test/unit/vagrant/box_collection_test.rb,2,0.02631578947368421,0,0,false,Add test for invalid box file Filled in pending test It creates a valid tar file over-writes thechecksum field in the tars header and then checks that theBoxUnpackageFailure exception is thrown,,377,0.6896551724137931,0.07894736842105263,10416,439.99615975422427,38.88248847926267,69.22043010752688,5309,5,1095,52,unknown,lolindrath,mitchellh,false,mitchellh,0,0,4,12,1613,false,false,false,false,0,0,0,0,0,0,12939
916101,mitchellh/vagrant,ruby,1319,1358198688,,1365381820,119718,,unknown,false,false,false,98,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.330854637245115,0.2557863055983795,9,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/provisioner/puppet.rb,9,0.1232876712328767,1,0,false,Fix for #1207 : puppet module_path overwrites default module path Ive changed the way run_puppet_apply computes the --modulepath value Now it should prepend the config modulepath to the system modulepath instead of clobbering it@mitchellhThis is my first commit to Vagrant I couldnt find any tests for the Puppet class and am not sure if this is a good fix or not Could you give me some suggestions on how I can verify whether this fixes the issue or not And can I add an automated test somewhereWaiting to hear back Happy to make further changes,,376,0.6914893617021277,0.0821917808219178,10354,430.4616573305003,38.052926405254006,68.37937029167472,5302,5,1089,60,unknown,pastafari,mitchellh,false,,0,0,23,18,1079,false,false,false,false,0,0,0,0,0,0,-1
912852,mitchellh/vagrant,ruby,1317,1358051611,,1359497790,24102,,unknown,false,false,false,16,1,1,0,0,0,0,0,2,1,0,1,2,1,0,1,1,0,1,2,1,0,1,2,0,2,0,8.944342675761334,0.47170779465710766,0,,.travis.yml|README.md,0,0.0,0,0,false,Fix #1314: run vagrant test suite on Travis CI Example of a successful build there: https://travis-ciorg/rogeriopradoj/vagrant/builds/4115266,,375,0.6933333333333334,0.075,7933,952.9812176982226,92.27278457078027,235.8502458086474,5300,5,1088,51,unknown,rogeriopradoj,mitchellh,false,,5,0.6,142,227,818,false,true,true,false,8,6,5,0,0,0,-1
912640,mitchellh/vagrant,ruby,1316,1358041271,1358041610,1358041610,5,5,commits_in_master,false,false,false,16,250,250,0,0,26,26,19,1,106,114,179,399,309,20,25,106,114,179,399,309,20,25,17229,2986,17229,2986,2791.652583914428,147.2265018843324,5,mitchell.hashimoto@gmail.com,plugins/provisioners/puppet/plugin.rb|bin/vagrant|bin/vagrant|plugins/commands/ssh_config/command.rb|README.md|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/destroy_confirm.rb|plugins/providers/virtualbox/action/message_will_not_destroy.rb|lib/vagrant/machine.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/discard_state.rb|plugins/providers/virtualbox/action/halt.rb|plugins/providers/virtualbox/provider.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/v1/provider.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/plugin/v1/provider_test.rb|lib/vagrant.rb|lib/vagrant/ssh.rb|lib/vagrant/util/ssh.rb|test/unit/vagrant/ssh_test.rb|test/unit/vagrant/util/ssh_test.rb|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/ssh_exec.rb|lib/vagrant/machine.rb|lib/vagrant/util/safe_exec.rb|lib/vagrant/util/ssh.rb|plugins/commands/ssh/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/check_created.rb|plugins/providers/virtualbox/action/check_running.rb|plugins/providers/virtualbox/provider.rb|test/unit/vagrant/action/builtin/ssh_exec_test.rb|plugins/commands/ssh/command.rb|lib/vagrant/action/builtin/ssh_exec.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/action/builtin/ssh_exec_test.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|lib/vagrant.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/v1.rb|lib/vagrant/plugin/v1/communicator.rb|test/unit/vagrant/plugin/v1/communicator_test.rb|test/unit/vagrant_test.rb|lib/vagrant.rb|lib/vagrant/communication.rb|lib/vagrant/communication/base.rb|plugins/communicators/ssh/communicator.rb|plugins/communicators/ssh/plugin.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/v1/plugin.rb|test/unit/vagrant/plugin/v1/plugin_test.rb|lib/vagrant/machine.rb|plugins/communicators/ssh/communicator.rb|test/unit/vagrant/machine_test.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/ssh_run.rb|plugins/commands/ssh/command.rb|plugins/providers/virtualbox/action.rb|plugins/commands/ssh/command.rb|lib/vagrant/errors.rb|lib/vagrant/machine.rb|templates/locales/en.yml|test/unit/vagrant/machine_test.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/v1/guest.rb|plugins/providers/virtualbox/action/halt.rb|test/unit/support/shared/base_context.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/plugin/v1/communicator.rb|plugins/communicators/ssh/communicator.rb|plugins/guests/linux/guest.rb|plugins/providers/virtualbox/action/halt.rb|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|plugins/guests/linux/guest.rb|plugins/commands/suspend/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/suspend.rb|plugins/commands/ssh_config/command.rb|templates/locales/en.yml|plugins/commands/resume/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/boot.rb|plugins/providers/virtualbox/action/check_port_collisions.rb|plugins/providers/virtualbox/action/resume.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/env_set.rb|plugins/commands/destroy/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/halt.rb|test/unit/vagrant/action/builtin/env_set_test.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/clean_machine_folder.rb|plugins/providers/virtualbox/action/destroy.rb|plugins/providers/virtualbox/action/destroy_unused_network_interfaces.rb|plugins/providers/virtualbox/action/provisioner_cleanup.rb|plugins/providers/virtualbox/action/prune_nfs_exports.rb|plugins/providers/virtualbox/provider.rb|plugins/providers/virtualbox/provider.rb|test/unit/vagrant/machine_test.rb|plugins/commands/reload/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/clear_forwarded_ports.rb|plugins/providers/virtualbox/action/clear_network_interfaces.rb|plugins/providers/virtualbox/action/clear_shared_folders.rb|plugins/providers/virtualbox/action/customize.rb|plugins/providers/virtualbox/action/forward_ports.rb|plugins/providers/virtualbox/action/host_name.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/nfs.rb|plugins/providers/virtualbox/action/provision.rb|plugins/providers/virtualbox/action/sane_defaults.rb|plugins/providers/virtualbox/action/share_folders.rb|plugins/commands/provision/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/is_running.rb|plugins/providers/virtualbox/action/message_not_running.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/v1/provider.rb|plugins/commands/up/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/check_box.rb|plugins/providers/virtualbox/action/check_guest_additions.rb|plugins/providers/virtualbox/action/default_name.rb|plugins/providers/virtualbox/action/import.rb|plugins/providers/virtualbox/action/is_saved.rb|plugins/providers/virtualbox/action/match_mac_address.rb|plugins/providers/virtualbox/provider.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/action/vm/boot.rb|lib/vagrant/action/vm/check_box.rb|lib/vagrant/action/vm/check_guest_additions.rb|lib/vagrant/action/vm/check_port_collisions.rb|lib/vagrant/action/vm/clean_machine_folder.rb|lib/vagrant/action/vm/clear_forwarded_ports.rb|lib/vagrant/action/vm/clear_network_interfaces.rb|lib/vagrant/action/vm/clear_shared_folders.rb|lib/vagrant/action/vm/customize.rb|lib/vagrant/action/vm/default_name.rb|lib/vagrant/action/vm/destroy.rb|lib/vagrant/action/vm/destroy_unused_network_interfaces.rb|lib/vagrant/action/vm/discard_state.rb|lib/vagrant/action/vm/forward_ports.rb|lib/vagrant/action/vm/halt.rb|lib/vagrant/action/vm/host_name.rb|lib/vagrant/action/vm/import.rb|lib/vagrant/action/vm/match_mac_address.rb|lib/vagrant/action/vm/network.rb|lib/vagrant/action/vm/nfs.rb|lib/vagrant/action/vm/provision.rb|lib/vagrant/action/vm/provisioner_cleanup.rb|lib/vagrant/action/vm/prune_nfs_exports.rb|lib/vagrant/action/vm/sane_defaults.rb|lib/vagrant/action/vm/setup_package_files.rb|lib/vagrant/action/vm/share_folders.rb|plugins/commands/package/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/export.rb|plugins/providers/virtualbox/action/package.rb|plugins/providers/virtualbox/action/package_vagrantfile.rb|plugins/providers/virtualbox/action/setup_package_files.rb|lib/vagrant/action/env/set.rb|lib/vagrant/action/vm/export.rb|lib/vagrant/action/vm/package.rb|lib/vagrant/action/vm/package_vagrantfile.rb|lib/vagrant/action.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/machine.rb|plugins/commands/package/command.rb|lib/vagrant/machine.rb|lib/vagrant.rb|lib/vagrant/vm.rb|lib/vagrant/action.rb|lib/vagrant/action.rb|lib/vagrant/action/box/add.rb|lib/vagrant/action/box/download.rb|lib/vagrant/action/box/verify.rb|lib/vagrant/action/builtin.rb|lib/vagrant/action/builtin/box_add.rb|lib/vagrant/downloaders/base.rb|lib/vagrant/downloaders/file.rb|plugins/commands/box/command/add.rb|test/unit/vagrant/downloaders/base_test.rb|test/unit/vagrant/downloaders/file_test.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|CHANGELOG.md|bin/vagrant|lib/vagrant/action/builtin/ssh_exec.rb|test/unit/vagrant/action/builtin/ssh_exec_test.rb|plugins/commands/halt/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/message_not_created.rb|lib/vagrant/action/builtin/call.rb|plugins/providers/virtualbox/action.rb|test/unit/vagrant/action/builtin/call_test.rb|lib/vagrant/action/builder.rb|lib/vagrant/action/builtin/call.rb|lib/vagrant/action/runner.rb|plugins/commands/destroy/command.rb|plugins/providers/virtualbox/action.rb|test/unit/vagrant/action/builder_test.rb|test/unit/vagrant/action/builtin/call_test.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/confirm.rb|test/unit/vagrant/action/builtin/confirm_test.rb|lib/vagrant/action/builder.rb|test/unit/vagrant/action/builder_test.rb|lib/vagrant/action.rb|lib/vagrant/action/builtin/call.rb|lib/vagrant/action/runner.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/created.rb|test/unit/vagrant/action/builtin/call_test.rb|test/unit/vagrant/action/runner_test.rb|lib/vagrant/action/general/check_virtualbox.rb|lib/vagrant/action/general/validate.rb|plugins/commands/destroy/command.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/check_accessible.rb|plugins/providers/virtualbox/action/check_virtualbox.rb|plugins/providers/virtualbox/plugin.rb|plugins/providers/virtualbox/provider.rb|test/unit/vagrant/action/runner_test.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/action/builder.rb|lib/vagrant.rb|lib/vagrant/action/runner.rb|lib/vagrant/environment.rb|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|lib/vagrant/driver/virtualbox_base.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|plugins/providers/virtualbox/driver/base.rb|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_4_0.rb|plugins/providers/virtualbox/driver/version_4_1.rb|plugins/providers/virtualbox/plugin.rb|plugins/providers/virtualbox/provider.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/plugin/v1/provider.rb|test/unit/vagrant/plugin/v1/provider_test.rb|lib/vagrant/machine.rb|lib/vagrant/errors.rb|lib/vagrant/machine.rb|templates/locales/en.yml|test/unit/vagrant/machine_test.rb|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|lib/vagrant.rb|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|plugins/guests/linux/guest.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/guests/ubuntu/guest.rb|plugins/guests/debian/guest.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/chef/provisioner/chef_solo.rb|plugins/provisioners/shell/provisioner.rb|templates/locales/en.yml|lib/vagrant/downloaders/file.rb|lib/vagrant/downloaders/http.rb|test/unit/vagrant/downloaders/file_test.rb|test/unit/vagrant/downloaders/http_test.rb|CHANGELOG.md|plugins/communicators/ssh/communicator.rb|plugins/guests/arch/guest.rb|CHANGELOG.md|templates/locales/en.yml|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/errors.rb|templates/locales/en.yml|CHANGELOG.md|lib/vagrant/downloaders/file.rb|plugins/guests/ubuntu/guest.rb|CHANGELOG.md|plugins/providers/virtualbox/driver/meta.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/providers/virtualbox/plugin.rb|plugins/hosts/fedora/host.rb|plugins/hosts/arch/host.rb|plugins/provisioners/chef/provisioner/base.rb|lib/vagrant/box_collection.rb|test/unit/vagrant/box_collection_test.rb|CHANGELOG.md|lib/vagrant/box_collection.rb|lib/vagrant/box_collection.rb|templates/locales/en.yml|templates/locales/en.yml|templates/locales/en.yml|CHANGELOG.md|CHANGELOG.md|plugins/guests/ubuntu/guest.rb|plugins/providers/virtualbox/action/sane_defaults.rb|plugins/providers/virtualbox/action/sane_defaults.rb|plugins/communicators/ssh/communicator.rb|plugins/provisioners/shell/provisioner.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|plugins/communicators/ssh/communicator.rb|plugins/provisioners/shell/provisioner.rb|plugins/provisioners/chef/provisioner/chef_client.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|plugins/hosts/arch/host.rb|plugins/hosts/arch/host.rb|plugins/guests/ubuntu/guest.rb|test/buildbot/README.md|test/buildbot/buildbot_config/__init__.py|test/buildbot/buildbot_config/config/__init__.py|test/buildbot/buildbot_config/config/loader.py|test/buildbot/buildbot_config/config/master.py|test/buildbot/buildbot_config/config/slave.py|test/buildbot/buildbot_config/master/__init__.py|test/buildbot/buildbot_config/master/builders.py|test/buildbot/buildbot_config/master/buildsteps.py|test/buildbot/buildbot_config/master/change_sources.py|test/buildbot/buildbot_config/master/schedulers.py|test/buildbot/buildbot_config/master/slaves.py|test/buildbot/buildbot_config/master/status.py|test/buildbot/master/Makefile.sample|test/buildbot/master/buildbot.tac|test/buildbot/master/master.cfg|test/buildbot/master/public_html/bg_gradient.jpg|test/buildbot/master/public_html/default.css|test/buildbot/master/public_html/favicon.ico|test/buildbot/master/public_html/robots.txt|test/buildbot/master/public_html/static/css/bootstrap-1.4.0.min.css|test/buildbot/master/public_html/static/css/prettify.css|test/buildbot/master/public_html/static/css/syntax.css|test/buildbot/master/public_html/static/css/vagrant.base.css|test/buildbot/master/public_html/static/images/base_box_mac.jpg|test/buildbot/master/public_html/static/images/getting-started/success.jpg|test/buildbot/master/public_html/static/images/icons/error.png|test/buildbot/master/public_html/static/images/vagrant_chilling.png|test/buildbot/master/public_html/static/images/vagrant_holding.png|test/buildbot/master/public_html/static/images/vagrant_looking.png|test/buildbot/master/public_html/static/images/windows/alter_path.jpg|test/buildbot/master/public_html/static/images/windows/edit_path.jpg|test/buildbot/master/public_html/static/images/windows/environment_variables_button.jpg|test/buildbot/master/public_html/static/images/windows/port_and_ppk_path.jpg|test/buildbot/master/public_html/static/images/windows/ppk_selection.jpg|test/buildbot/master/public_html/static/images/windows/putty_first_screen.jpg|test/buildbot/master/public_html/static/images/windows/save_result.jpg|test/buildbot/master/public_html/static/images/windows/vbox_manage_default_location.jpg|test/buildbot/master/public_html/static/js/bootstrap-tabs.js|test/buildbot/master/public_html/static/js/jquery-1.7.min.js|test/buildbot/master/templates/authfail.html|test/buildbot/master/templates/build.html|test/buildbot/master/templates/builder.html|test/buildbot/master/templates/builders.html|test/buildbot/master/templates/buildslave.html|test/buildbot/master/templates/buildslaves.html|test/buildbot/master/templates/change.html|test/buildbot/master/templates/layouts/base.html|test/buildbot/master/templates/macros/box.html|test/buildbot/master/templates/macros/build_line.html|test/buildbot/master/templates/macros/change.html|test/buildbot/master/templates/macros/forms.html|test/buildbot/master/templates/root.html|test/buildbot/master/templates/waterfall.html|test/buildbot/requirements.txt|test/buildbot/scripts/deploy.sh|test/buildbot/scripts/setup.sh|test/buildbot/slave/buildbot.tac|test/buildbot/slave/info/admin|test/buildbot/slave/info/host|test/buildbot/tests/__init__.py|test/buildbot/tests/master/__init__.py|test/buildbot/tests/master/test_slaves.py|test/buildbot/vendor/choices-0.4.0.tar.gz|lib/vagrant/config/v1/loader.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v1/plugin.rb|plugins/guests/fedora/plugin.rb|plugins/kernel_v1/plugin.rb|test/unit/vagrant/plugin/v1/plugin_test.rb|lib/vagrant/registry.rb|test/unit/vagrant/registry_test.rb|lib/vagrant/config/v1/loader.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|lib/vagrant/plugin/v1.rb|lib/vagrant/plugin/v1/manager.rb|lib/vagrant/plugin/v1/plugin.rb|test/unit/support/shared/base_context.rb|test/unit/vagrant/config/v1/loader_test.rb|test/unit/vagrant/plugin/v1/manager_test.rb|test/unit/vagrant/plugin/v1/plugin_test.rb|test/unit/vagrant/plugin/v1/manager_test.rb|lib/vagrant/plugin/v1/manager.rb|lib/vagrant/plugin/v1/plugin.rb|test/unit/vagrant/plugin/v1/manager_test.rb|plugins/kernel_v1/plugin.rb|lib/vagrant/config.rb|lib/vagrant/config/v1/loader.rb|test/unit/vagrant/config/v1/loader_test.rb|vagrant.gemspec|templates/commands/init/Vagrantfile.erb|test/unit/support/shared/base_context.rb|test/unit/vagrant/config/v1/loader_test.rb|lib/vagrant/config/v2/loader.rb|lib/vagrant/plugin/v2/manager.rb|plugins/kernel_v2/config/nfs.rb|plugins/kernel_v2/config/package.rb|plugins/kernel_v2/config/ssh.rb|plugins/kernel_v2/config/vagrant.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provisioner.rb|plugins/kernel_v2/config/vm_subvm.rb|plugins/kernel_v2/plugin.rb|plugins/provisioners/chef/plugin.rb|plugins/provisioners/chef/provisioner/base.rb|plugins/provisioners/puppet/plugin.rb|plugins/provisioners/puppet/provisioner/puppet.rb|plugins/provisioners/puppet/provisioner/puppet_server.rb|plugins/provisioners/shell/plugin.rb|plugins/provisioners/shell/provisioner.rb|lib/vagrant/environment.rb|plugins/providers/virtualbox/plugin.rb|plugins/providers/virtualbox/provider.rb|lib/vagrant/environment.rb|plugins/hosts/arch/plugin.rb|plugins/hosts/bsd/host.rb|plugins/hosts/bsd/plugin.rb|plugins/hosts/fedora/plugin.rb|plugins/hosts/freebsd/plugin.rb|plugins/hosts/gentoo/plugin.rb|plugins/hosts/linux/host.rb|plugins/hosts/linux/plugin.rb|plugins/hosts/opensuse/plugin.rb|plugins/hosts/windows/host.rb|plugins/hosts/windows/plugin.rb|test/unit/support/shared/base_context.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/machine.rb|plugins/guests/arch/plugin.rb|plugins/guests/debian/plugin.rb|plugins/guests/fedora/plugin.rb|plugins/guests/freebsd/config.rb|plugins/guests/freebsd/guest.rb|plugins/guests/freebsd/plugin.rb|plugins/guests/gentoo/plugin.rb|plugins/guests/linux/config.rb|plugins/guests/linux/guest.rb|plugins/guests/linux/plugin.rb|plugins/guests/openbsd/plugin.rb|plugins/guests/redhat/plugin.rb|plugins/guests/solaris/config.rb|plugins/guests/solaris/guest.rb|plugins/guests/solaris/plugin.rb|plugins/guests/suse/plugin.rb|plugins/guests/ubuntu/plugin.rb|lib/vagrant/machine.rb|plugins/communicators/ssh/communicator.rb|plugins/communicators/ssh/plugin.rb|lib/vagrant/cli.rb|lib/vagrant.rb|lib/vagrant/cli.rb|lib/vagrant/plugin/v2/manager.rb|plugins/commands/box/command/add.rb|plugins/commands/box/command/list.rb|plugins/commands/box/command/remove.rb|plugins/commands/box/command/repackage.rb|plugins/commands/box/command/root.rb|plugins/commands/box/plugin.rb|plugins/commands/destroy/command.rb|plugins/commands/destroy/plugin.rb|plugins/commands/gem/command.rb|plugins/commands/gem/plugin.rb|plugins/commands/halt/command.rb|plugins/commands/halt/plugin.rb|plugins/commands/init/command.rb|plugins/commands/init/plugin.rb|plugins/commands/package/command.rb|plugins/commands/package/plugin.rb|plugins/commands/provision/command.rb|plugins/commands/provision/plugin.rb|plugins/commands/reload/command.rb|plugins/commands/reload/plugin.rb|plugins/commands/resume/command.rb|plugins/commands/resume/plugin.rb|plugins/commands/ssh/command.rb|plugins/commands/ssh/plugin.rb|plugins/commands/ssh_config/command.rb|plugins/commands/ssh_config/plugin.rb|plugins/commands/status/command.rb|plugins/commands/status/plugin.rb|plugins/commands/suspend/command.rb|plugins/commands/suspend/plugin.rb|plugins/commands/up/command.rb|plugins/commands/up/plugin.rb|lib/vagrant/config.rb|lib/vagrant/config/v2.rb|lib/vagrant/config/v2/loader.rb|lib/vagrant/config/v2/root.rb|lib/vagrant/plugin.rb|lib/vagrant/plugin/v2.rb|lib/vagrant/plugin/v2/command.rb|lib/vagrant/plugin/v2/communicator.rb|lib/vagrant/plugin/v2/config.rb|lib/vagrant/plugin/v2/errors.rb|lib/vagrant/plugin/v2/guest.rb|lib/vagrant/plugin/v2/host.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/plugin/v2/provider.rb|lib/vagrant/plugin/v2/provisioner.rb|test/unit/vagrant/config/v1/loader_test.rb|test/unit/vagrant/config/v1/loader_test.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|plugins/commands/up/command.rb|plugins/kernel_v2/config/vm.rb|templates/locales/en.yml|test/unit/vagrant/environment_test.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provider.rb|config/default.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/config/v2/loader.rb|lib/vagrant/plugin/v1/config.rb|lib/vagrant/plugin/v2/config.rb|test/unit/vagrant/config/v2/loader_test.rb|test/unit/vagrant/config/v2/root_test.rb|plugins/commands/destroy/plugin.rb|plugins/commands/halt/plugin.rb|plugins/commands/ssh/plugin.rb|plugins/commands/status/plugin.rb|plugins/commands/suspend/plugin.rb|plugins/providers/virtualbox/driver/base.rb|.gitignore|vagrant.gemspec|.gitignore|vagrant.gemspec|lib/vagrant/plugin/v1/plugin.rb|vagrant.gemspec|plugins/providers/virtualbox/action/forward_ports.rb|lib/vagrant/plugin/v2/plugin.rb|lib/vagrant/plugin/v2/plugin.rb|plugins/providers/virtualbox/driver/base.rb|test/unit/vagrant/box_collection_test.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/environment_test.rb|plugins/kernel_v2/config/vm_provider.rb|config/default.rb|plugins/kernel_v1/config/vagrant.rb|plugins/kernel_v2/config/vagrant.rb|test/unit/vagrant/environment_test.rb|lib/vagrant.rb|lib/vagrant/data_store.rb|lib/vagrant/environment.rb|test/unit/vagrant/data_store_test.rb|lib/vagrant/machine.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|plugins/providers/virtualbox/config.rb|config/default.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action/boot.rb|plugins/providers/virtualbox/config.rb|templates/locales/en.yml|plugins/commands/status/command.rb|templates/locales/en.yml|lib/vagrant/plugin/v2/command.rb|plugins/commands/up/command.rb|test/unit/vagrant/plugin/v2/command_test.rb|CHANGELOG.md|CHANGELOG.md|plugins/kernel_v1/config/vm.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v1/config/vm_provisioner.rb|plugins/kernel_v1/config/vm_subvm.rb|plugins/kernel_v1/config/vm.rb|lib/vagrant/plugin/v1/config.rb|plugins/kernel_v1/config/nfs.rb|plugins/kernel_v1/config/package.rb|plugins/kernel_v1/config/ssh.rb|plugins/kernel_v1/config/vagrant.rb|test/unit/vagrant/plugin/v1/config_test.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v1/config/vm.rb|lib/vagrant/plugin/v2/command.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v1/config/vm.rb|lib/vagrant/environment.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provider.rb|lib/vagrant/environment.rb|lib/vagrant/machine.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action/customize.rb|plugins/providers/virtualbox/config.rb|plugins/providers/virtualbox/plugin.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/machine_test.rb|plugins/providers/virtualbox/action/destroy_confirm.rb|plugins/providers/virtualbox/action/import.rb|lib/vagrant/action/builtin/confirm.rb|test/unit/vagrant/action/builtin/confirm_test.rb|lib/vagrant/action/builder.rb|lib/vagrant/action/builtin/call.rb|lib/vagrant/action/warden.rb|test/unit/vagrant/action/builtin/call_test.rb|lib/vagrant/machine.rb|test/unit/base.rb|test/unit/support/dummy_provider.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|lib/vagrant/plugin/v2.rb|lib/vagrant/plugin/v2/components.rb|lib/vagrant/plugin/v2/manager.rb|lib/vagrant/plugin/v2/plugin.rb|plugins/kernel_v2/config/vm.rb|plugins/kernel_v2/config/vm_provider.rb|plugins/kernel_v2/plugin.rb|test/unit/vagrant/plugin/v2/components_test.rb|test/unit/vagrant/plugin/v2/manager_test.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|plugins/kernel_v1/config/vm.rb|lib/vagrant/plugin/v2/config.rb|test/unit/vagrant/plugin/v2/command_test.rb|test/unit/vagrant/plugin/v2/communicator_test.rb|test/unit/vagrant/plugin/v2/config_test.rb|test/unit/vagrant/plugin/v2/host_test.rb|test/unit/vagrant/plugin/v2/manager_test.rb|test/unit/vagrant/plugin/v2/plugin_test.rb|test/unit/vagrant/plugin/v2/provider_test.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/vm.rb|lib/vagrant/config/loader.rb|lib/vagrant/environment.rb|lib/vagrant/action/warden.rb|lib/vagrant/box_collection.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|bin/vagrant|lib/vagrant/box_collection.rb|test/unit/vagrant/box_collection_test.rb|test/unit/vagrant/machine_test.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/config/loader.rb|test/unit/vagrant/config/loader_test.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|lib/vagrant/plugin/v2/command.rb|lib/vagrant/plugin/v2/command.rb|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb|lib/vagrant/environment.rb|lib/vagrant/plugin/v2/command.rb|test/unit/vagrant/environment_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|test/unit/vagrant/plugin/v2/command_test.rb|lib/vagrant/errors.rb|lib/vagrant/plugin/v2/command.rb|templates/locales/en.yml|test/unit/vagrant/plugin/v2/command_test.rb|lib/vagrant/plugin/v2/command.rb|plugins/guests/redhat/guest.rb|plugins/guests/suse/guest.rb|plugins/guests/linux/guest.rb|keys/README.md|config/default.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action/forward_ports.rb|plugins/providers/virtualbox/model/forwarded_port.rb|plugins/providers/virtualbox/plugin.rb|plugins/providers/virtualbox/action.rb|config/default.rb|plugins/providers/virtualbox/driver/version_4_2.rb|plugins/kernel_v1/config/vm.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network_old.rb|plugins/providers/virtualbox/config.rb|config/default.rb|plugins/kernel_v1/config/vm.rb|plugins/kernel_v2/config/vm.rb|plugins/providers/virtualbox/action/check_port_collisions.rb|plugins/providers/virtualbox/model/forwarded_port.rb|plugins/providers/virtualbox/plugin.rb|plugins/providers/virtualbox/util/compile_forwarded_ports.rb|config/default.rb|plugins/providers/virtualbox/action.rb|plugins/providers/virtualbox/action/forward_ports.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/action/network_old.rb|lib/vagrant/util/scoped_hash_override.rb|test/unit/vagrant/util/scoped_hash_override_test.rb|lib/vagrant/util/scoped_hash_override.rb|plugins/providers/virtualbox/action/network.rb|plugins/providers/virtualbox/util/compile_forwarded_ports.rb|lib/vagrant/errors.rb|plugins/providers/virtualbox/action/network.rb|templates/locales/en.yml|lib/vagrant/action/builtin/box_add.rb|plugins/commands/box/command/add.rb|config/default.rb|lib/vagrant/errors.rb|plugins/communicators/ssh/communicator.rb|templates/locales/en.yml|.travis.yml|README.md,2,0.0,0,0,false,Fix #1314: run vagrant test suite on Travis CI Example of a successful build there: https://travis-ciorg/rogeriopradoj/vagrant/builds/4115266,,374,0.6925133689839572,0.075,7933,952.9812176982226,92.27278457078027,235.8502458086474,5300,5,1087,49,unknown,rogeriopradoj,rogeriopradoj,true,rogeriopradoj,4,0.5,142,227,817,false,true,false,false,7,5,3,0,0,0,-1
912635,mitchellh/vagrant,ruby,1315,1358041132,,1359497735,24276,,unknown,false,false,false,16,1,1,0,1,0,1,0,2,1,0,1,2,1,0,1,1,0,1,2,1,0,1,2,0,2,0,8.944342675761334,0.5353396357850447,0,,.travis.yml|README.md,0,0.0,0,0,false,Fix #1314: run vagrant test suite on Travis CI Example of a successful build there: https://travis-ciorg/rogeriopradoj/vagrant/builds/4115266,,373,0.6943699731903485,0.075,10349,426.9011498695526,37.68480046381293,67.73601314136631,5300,5,1087,51,unknown,rogeriopradoj,mitchellh,false,,3,0.6666666666666666,142,227,817,false,true,true,false,7,5,2,0,0,0,24276
792212,mitchellh/vagrant,ruby,1309,1357843510,,1359619843,29605,,unknown,false,false,false,15,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,20,0,4.050506511987639,0.24494895683423468,0,,lib/vagrant/util/ssh.rb,0,0.0,0,0,false,Update lib/vagrant/util/sshrb Windows vagrant users usually have working msysgit Git client which includes ssh command,,371,0.6981132075471698,0.09090909090909091,10294,425.49057703516615,37.594715368175635,67.61220128230038,5290,7,1085,57,unknown,dmajkic,mitchellh,false,,0,0,47,3,1338,false,false,false,false,0,0,0,0,0,0,-1
791383,mitchellh/vagrant,ruby,1307,1357830035,1374626251,1374626251,279936,279936,commit_sha_in_comments,false,false,false,95,3,2,0,5,0,5,0,6,0,0,2,2,2,0,0,0,0,2,2,2,0,0,13,0,22,0,8.92456395761751,0.539701053472961,27,mitchell.hashimoto@gmail.com,plugins/kernel_v2/config/vm_provisioner.rb|plugins/communicators/ssh/communicator.rb,21,0.3181818181818182,0,0,false,Feature/export ssh auth sock When using puppet/chef providers a sudo is issued from inside the vm The thing is that if **SSH_AUTH_SOCK** is not set once in sudo ssh-agent-forwarding will not work This is due to the fact that sudo erases the environment unless set otherwise in sudoers fileGiven that there is a configuration variable to set agent forwarding and that we can not make any asumptions of how **/etc/sudoers** is configured it makes sense to correctly export that variable when we are using sudo and agent forwarding is set in the Vagrant file,,370,0.6972972972972973,0.09090909090909091,10294,425.49057703516615,37.594715368175635,67.61220128230038,5290,7,1085,89,unknown,magec,mitchellh,false,mitchellh,0,0,9,8,1340,false,false,false,false,0,0,0,0,0,0,29831
781014,mitchellh/vagrant,ruby,1300,1357621321,1359622060,1359622060,33345,33345,github,false,false,false,88,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.463071245920993,0.26989825660809885,2,mitchell.hashimoto@gmail.com,lib/vagrant/box_collection.rb,2,0.029411764705882353,0,0,false,Avoid cross device activity for box creation This will cause issues on modern linux which uses a tmpfs-backed tmpdirThis moves the temporary box creation to the same directory tree as the providers directory  This is an alternate solution to pull request #1199 and will not incur the speed penalty involved in a cross-filesystem mv assuming a box providers directory is one filesystem  A better solution I suppose would be to test if /tmp is cross device first but that adds more complexity for questionable benefit I think,,369,0.6964769647696477,0.08823529411764706,10294,425.49057703516615,37.594715368175635,67.61220128230038,5290,8,1083,56,unknown,kainz,mitchellh,false,mitchellh,0,0,2,1,1043,false,false,false,false,0,0,0,0,0,0,1301
780170,mitchellh/vagrant,ruby,1297,1357507451,1357533443,1357533443,433,433,github,false,false,false,5,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.233652782042762,0.2560667826364611,1,mitchell.hashimoto@gmail.com,plugins/guests/linux/guest.rb,1,0.014705882352941176,0,0,false,fedora 17 & 18 support ,,368,0.6956521739130435,0.08823529411764706,10283,425.94573568024896,37.634931440241175,67.68452786151902,5288,8,1081,54,unknown,llonchj,mitchellh,false,mitchellh,0,0,6,9,885,false,true,false,false,0,0,0,0,0,0,433
974135,mitchellh/vagrant,ruby,1293,1357241696,1357272245,1357272245,509,509,github,false,false,false,7,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.652861895949384,0.2814271505506008,0,,keys/README.md,0,0.0,0,0,false,DOC: keys/READMEmd -- fix urls to docs ,,367,0.6948228882833788,0.08620689655172414,10282,425.9871620307333,37.63859171367438,67.69111067885625,5280,8,1078,58,unknown,yarikoptic,mitchellh,false,mitchellh,0,0,50,7,1484,false,false,false,false,0,0,0,0,0,0,509
775676,mitchellh/vagrant,ruby,1292,1357175924,,1357176207,4,,unknown,false,false,false,26,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.460303797989418,0.235228025615781,0,,lib/vagrant/vm.rb,0,0.0,0,0,false,workaround for mitchellh/vagrant#1291 this is the patch I stuck in #1291 as a pull request in case you are happy for it to go straight in,,366,0.6967213114754098,0.08620689655172414,7933,952.9812176982226,92.27278457078027,235.8502458086474,5279,8,1077,58,unknown,nicobrevin,nicobrevin,true,,0,0,8,10,961,false,false,false,false,1,0,0,0,0,0,-1
775390,mitchellh/vagrant,ruby,1283,1356954225,1357533489,1357533489,9654,9654,github,false,false,false,67,1,1,0,3,0,3,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,41,0,41,0,9.698161788704724,0.5865908120225838,0,,plugins/guests/redhat/guest.rb|plugins/guests/suse/guest.rb,0,0.0,0,1,false,Fixing guest code for RH & SUSE HiI guess there was no time yet to migrate & test the RH code so heres at least the guest part (havent tested other parts but the VM goes up ok)Additionaly for SUSE (both openSUSE & SLES) the change_host_name method was always broken it seems because the location of the permanent host name differs from RedHatRegardsElad,,364,0.695054945054945,0.07017543859649122,10282,425.9871620307333,37.63859171367438,67.69111067885625,5275,8,1075,56,unknown,eladroz,mitchellh,false,mitchellh,0,0,1,0,63,false,false,false,false,0,0,0,0,0,0,387
770426,mitchellh/vagrant,ruby,1281,1356766794,,1374127550,289345,,unknown,false,false,false,161,1,1,0,1,0,1,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.497706375694982,0.2372005671522087,0,,lib/vagrant/action/vm/default_name.rb,0,0.0,0,1,false,for the providers vm name use the vms host_name if available HiWhen in a multi vm environment all vms have the same name in virtualbox This makes it tricky to know which machine is whichThis patch uses the vms host_name if it is availableA) This is based upon the 10 branch since that is what I use Please point me to the 11 (master) vs 10 (stable) branching strategy FAQ and I can rebaseB) If you have an example of an action tested / and how much you want to mock out please let me know (I only saw some legacy tests that used the environment)C) Also I noticed that Environment#root_path is documented to return a String but the existing code assumes a Pathname is coming outThis threw a wrench into my testing so please advise and I can fix this as wellThanks for the great toolKeenan(sorry about the bad previous pull request),,363,0.696969696969697,0.07017543859649122,7933,952.9812176982226,92.27278457078027,235.8502458086474,5266,8,1073,103,unknown,kbrock,mitchellh,false,,1,0.0,25,25,1763,false,false,false,false,1,1,2,0,0,0,5118
770417,mitchellh/vagrant,ruby,1280,1356766532,,1356766729,3,,unknown,false,false,false,145,54,54,0,0,0,0,0,1,1,0,26,27,25,0,1,1,0,26,27,25,0,1,977,8,977,8,313.5400918723191,18.96423053242807,35,mitchell.hashimoto@gmail.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|CHANGELOG.md|lib/vagrant/command/ssh_config.rb|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|CHANGELOG.md|templates/locales/en.yml|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|lib/vagrant/version.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/hosts/fedora.rb|CHANGELOG.md|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/provisioners/puppet.rb|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/guest/ubuntu.rb|vagrant.gemspec|CHANGELOG.md|lib/vagrant/driver/virtualbox_base.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/version.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/action/vm/sane_defaults.rb|lib/vagrant/driver/virtualbox_base.rb|lib/vagrant/action/vm/default_name.rb|CHANGELOG.md|test/unit/vagrant/environment_test.rb|lib/vagrant/version.rb,24,0.0,0,0,false,Multivm hostname HiWhen in a multi vm environment all vms have the same name in virtualbox This makes it tricky to know which machine is whichThis patch uses the vms host_name if it is availableA) This is based upon the 10 branch since that is what I use Please point me to the 11 (master) vs 10 (stable) branching strategy FAQ and I can rebaseB) If you have an example of an action tested / and how much you want to mock out please let me know (I saw some good legacy tests that used the environment)C) Also I noticed that Environment#root_path is documented to return a String but the existing code assumes a Pathname is coming outThis threw a wrench into my testing so please advise and I can fix this as wellThanks for the great toolKeenan,,362,0.6988950276243094,0.07017543859649122,10253,419.4869794206574,37.06232322247147,67.19984394811274,5266,8,1073,55,unknown,kbrock,kbrock,true,,0,0,25,25,1763,false,false,false,false,0,0,0,0,0,0,-1
775388,mitchellh/vagrant,ruby,1272,1355952486,1374168699,1374168699,303603,303603,merged_in_comments,false,true,false,115,10,6,0,11,0,11,0,7,0,2,1,5,1,2,0,0,2,3,5,2,2,1,98,0,204,0,26.038314965488258,1.3732004537665201,0,,lib/vagrant/guest/arch.rb|lib/vagrant/guest/arch.rb|lib/vagrant/guest/arch.rb|templates/guests/arch/network_dhcp.erb|templates/guests/arch/network_static.erb|lib/vagrant/guest/arch.rb|lib/vagrant/guest/arch.rb|lib/vagrant/guest/arch.rb,0,0.0,0,6,false,systemd support for Arch Linux guests Arch has recently changed to using systemd for the initialization process and thus making /etc/rcconf obsolete for their boot processThe networking config support in vagrant depended on rcconf being present and also on using netcfg I changed it to support their new style in accordance with the updated installation guidesI also changed the hostname setup and shutdown to their recommendationsThe base box I was trying to create now works without any issues with this modificationsNote these changes are based on 1-0-stable as I wanted a quick fix for the issues I was having with 105 but I think they could be brought to master too,,359,0.6991643454038997,0.0958904109589041,7933,952.3509391150889,92.27278457078027,235.8502458086474,5201,10,1063,101,unknown,rizzatti,mitchellh,false,mitchellh,0,0,15,30,582,false,true,false,false,0,0,0,0,0,0,17
758585,mitchellh/vagrant,ruby,1269,1355792569,,1378169961,372956,,unknown,false,true,false,56,1,1,0,15,0,15,0,16,0,0,1,1,1,0,0,0,0,1,1,1,0,0,26,0,26,0,3.9475484134080343,0.24363767008382559,20,mitchell.hashimoto@gmail.com,plugins/providers/virtualbox/action/network.rb,20,0.26666666666666666,0,0,false,Static IP support on bridge Assign static ip to bridged interfaceUsage for static ip:configvmnetwork :bridged 192168110configvmnetwork :bridged 192168110 :bridge  en0: Wi-Fi (AirPort):netmask  2552552550Usage for dhcp:configvmnetwork :bridgedconfigvmnetwork :bridged :dhcp :bridge  en0: Wi-Fi (AirPort)I needed it for my development network it seems there is others too (Issue #743),,358,0.7011173184357542,0.12,10262,359.38413564607293,31.572792827908792,57.688559734944455,5188,9,1061,69,unknown,ozanturksever,mitchellh,false,,1,1.0,8,22,796,false,false,false,false,1,0,1,0,0,0,55751
758583,mitchellh/vagrant,ruby,1268,1355792523,1373394279,1373394279,293362,293362,merged_in_comments,false,true,false,56,1,1,0,2,0,2,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,32,0,32,0,3.7305346237202057,0.19673976003724256,0,,lib/vagrant/action/vm/network.rb,0,0.0,0,1,false,Static IP support on bridge Assign static ip to bridged interfaceUsage for static ip:configvmnetwork :bridged 192168110configvmnetwork :bridged 192168110 :bridge  en0: Wi-Fi (AirPort):netmask  2552552550Usage for dhcp:configvmnetwork :bridgedconfigvmnetwork :bridged :dhcp :bridge  en0: Wi-Fi (AirPort)I needed it for my development network it seems there is others too (Issue #743),,357,0.7002801120448179,0.12,7933,952.3509391150889,92.27278457078027,235.8502458086474,5188,9,1061,108,unknown,ozanturksever,fgrehm,false,fgrehm,0,0,8,22,796,false,false,false,false,0,0,0,0,0,0,43545
757651,mitchellh/vagrant,ruby,1267,1355773924,1377807239,1377807239,367221,367221,github,false,false,false,23,3,1,0,4,0,4,0,3,0,0,2,2,1,0,1,0,0,2,2,1,0,1,16,0,20,0,8.659311244114278,0.5344416825594497,102,phunehehe@gmail.com,plugins/provisioners/chef/provisioner/chef_client.rb|templates/locales/en.yml,97,1.2933333333333332,1,2,false,Delete Chef client and node on cleanup This fixes #1253 by shelling out to knife on cleanup as per@mitchellhs suggestion in #1255,,356,0.699438202247191,0.12,10262,359.38413564607293,31.572792827908792,57.688559734944455,5188,9,1061,76,unknown,nwjsmith,mitchellh,false,mitchellh,2,1.0,26,66,1755,false,true,false,false,3,2,1,0,0,0,113
710122,mitchellh/vagrant,ruby,1265,1355532161,,1373562272,300501,,unknown,false,false,false,35,1,1,0,3,0,3,0,2,0,0,6,6,6,0,0,0,0,6,6,6,0,0,9,0,9,0,24.904340352883448,1.3134095931573568,12,mitchell.hashimoto@gmail.com,CHANGELOG.md|lib/vagrant/action/vm/share_folders.rb|lib/vagrant/config/vm.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|lib/vagrant/driver/virtualbox_4_2.rb,11,0.0,0,2,true,Add support for automounting of shared folders Tested by-hand on VirtualBox 42  I didnt find any automated testsupport for shared folder arguments please let me know if I missed thatpart of the suite,,354,0.7005649717514124,0.09722222222222222,7931,952.5910982221661,92.296053461102,235.90972134661456,5177,9,1058,114,unknown,jwhitley,fgrehm,false,,0,0,14,0,1440,false,true,false,false,0,0,0,0,0,0,6
710124,mitchellh/vagrant,ruby,1262,1355437862,,1365381766,165731,,unknown,false,false,false,89,6,6,0,0,0,0,0,1,0,0,4,4,4,0,0,0,0,4,4,4,0,0,2,19,2,19,40.4892378011349,2.4989728937095523,2,mitchell.hashimoto@gmail.com,plugins/commands/box/command/repackage.rb|test/acceptance/box_test.rb|test/acceptance/box_test.rb|test/acceptance/support/isolated_environment.rb|test/acceptance/box_test.rb|test/acceptance/support/output.rb|test/acceptance/box_test.rb|test/acceptance/support/output.rb|test/acceptance/box_test.rb,2,0.0,0,0,false,update acceptance/box_test Some minor change to reflect new outputs of some vagrant box commands (add repackage)Ive marked the test to verify a box to pending because I dont know if the Virtualbox plugin is ready to verify a boxAlso be aware that Ive done my tests with a defaultbox which contains a Vagrantconfigure(2) line in Vagrantfile and a metadatajson file If you dont add this file the test about repackaging your box may fail because of a size differenceAll acceptance tests of box_testrb should pass now,,352,0.7017045454545454,0.10810810810810811,10259,359.48922896968514,31.582025538551516,57.705429379081785,5175,9,1057,71,unknown,hdorio,mitchellh,false,,1,1.0,2,0,1231,false,false,false,false,3,1,1,0,0,0,-1
710125,mitchellh/vagrant,ruby,1260,1355284172,1357272787,1357272787,33143,33143,github,false,false,false,35,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.21483614301169,0.2601373067219927,0,,plugins/providers/virtualbox/action/forward_ports.rb,0,0.0,0,0,false,Attempt to fix #1108 #1109 tcp and udp port on the same port number when forwarded ports are squashed if a tcp and udp port share the same port number one of them is forgotten,,351,0.7008547008547008,0.10666666666666667,10259,359.48922896968514,31.582025538551516,57.705429379081785,5171,10,1055,60,unknown,hdorio,mitchellh,false,mitchellh,0,0,2,0,1229,false,false,false,false,3,1,0,0,0,0,33143
710126,mitchellh/vagrant,ruby,1259,1355269784,1355693985,1355693985,7070,7070,github,false,false,false,15,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.068111819368701,0.2510815643187258,1,mitchell.hashimoto@gmail.com,lib/vagrant/plugin/v2/plugin.rb,1,0.013333333333333334,0,0,false,Update lib/vagrant/plugin/v2/pluginrb Require set in the V2 plugin file since it uses itFixes #1257,,350,0.7,0.10666666666666667,10259,359.48922896968514,31.582025538551516,57.705429379081785,5171,10,1055,54,unknown,nwjsmith,mitchellh,false,mitchellh,1,1.0,26,66,1749,false,true,false,false,1,1,0,0,0,0,7069
710127,mitchellh/vagrant,ruby,1255,1355088218,,1355694104,10098,,unknown,false,false,false,18,2,1,0,0,0,0,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,22,0,4.479681502703622,0.2764834127698656,2,mitchell.hashimoto@gmail.com,plugins/provisioners/chef/provisioner/chef_client.rb,2,0.024390243902439025,0,1,false,Remove client and node from Chef server on destroy (master) This should resolve https://githubcom/mitchellh/vagrant/issues/1253 for the master branch,,349,0.7020057306590258,0.0975609756097561,10259,359.48922896968514,31.582025538551516,57.705429379081785,5155,10,1053,53,unknown,cassianoleal,mitchellh,false,,1,0.0,15,12,817,false,false,false,false,1,0,1,0,0,0,-1
710128,mitchellh/vagrant,ruby,1254,1355088176,,1374109967,317029,,unknown,false,true,false,18,2,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,20,0,22,0,4.580863136520081,0.24158638627622886,0,,lib/vagrant/provisioners/chef_client.rb,0,0.0,0,1,false,Remove client and node from Chef server on destroy (1-0-stable) This should resolve https://githubcom/mitchellh/vagrant/issues/1253 on the 1-0-stable branch,,348,0.7040229885057471,0.0975609756097561,7931,952.5910982221661,92.296053461102,235.90972134661456,5155,10,1053,101,unknown,cassianoleal,mitchellh,false,,0,0,15,12,817,false,false,false,false,0,0,0,0,0,0,11326
710120,mitchellh/vagrant,ruby,1250,1354869843,,1374127379,320958,,unknown,false,false,false,59,1,1,0,3,0,3,0,5,0,0,4,4,2,2,0,0,0,4,4,2,2,0,2,11,2,11,17.955976582881473,0.9469655314815377,0,,lib/vagrant/provisioners/chef.rb|templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb|test/unit_legacy/vagrant/provisioners/chef_test.rb,0,0.0,0,12,true,Adds formatter option to Chef Provisioner Adds the ability to specify in the Vagrantfile a formatter directive to control the verbosity/format of the Chef logFormats such as summary minimal and doc are valid and the directive is not requiredI tried taking a stab at the tests but the test suite didnt seem very friendly to me today,,346,0.7052023121387283,0.0975609756097561,7931,952.5910982221661,92.296053461102,235.90972134661456,5144,10,1051,99,unknown,miketheman,mitchellh,false,,7,0.7142857142857143,54,7,719,false,true,true,false,2,1,3,0,0,0,229737
710121,mitchellh/vagrant,ruby,1249,1354869703,,1354869713,0,,unknown,false,false,false,57,50,50,0,0,0,0,0,1,1,0,28,29,25,2,1,1,0,28,29,25,2,1,971,11,971,11,308.42719723290764,19.03595245120278,22,mitchell.hashimoto@gmail.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|CHANGELOG.md|lib/vagrant/command/ssh_config.rb|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|CHANGELOG.md|templates/locales/en.yml|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/fedora.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/driver/virtualbox_4_2.rb|lib/vagrant/version.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/hosts/fedora.rb|CHANGELOG.md|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/arch.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/provisioners/puppet.rb|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/provisioners/puppet_server.rb|CHANGELOG.md|lib/vagrant/guest/ubuntu.rb|vagrant.gemspec|CHANGELOG.md|lib/vagrant/driver/virtualbox_base.rb|lib/vagrant/provisioners/chef.rb|templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb|test/unit_legacy/vagrant/provisioners/chef_test.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb|lib/vagrant/version.rb|CHANGELOG.md|CHANGELOG.md|lib/vagrant/action/vm/sane_defaults.rb,7,0.0,0,0,true,Chef config formatter Adds the ability to specify in the Vagrantfile a formatter directive to control the verbosity/[format of the Chef log][0]Formats such as minimal and doc are valid and the directive is not requiredI tried taking a stab at the tests but the test suite didnt seem very friendly to me today[0]: http://wwwopscodecom/blog/2012/09/07/chef-10-14-0-released/,,345,0.7072463768115942,0.0975609756097561,10259,359.48922896968514,31.582025538551516,57.705429379081785,5144,10,1051,47,unknown,miketheman,miketheman,true,,6,0.8333333333333334,54,7,719,false,true,false,false,1,0,1,0,0,0,-1
691966,mitchellh/vagrant,ruby,1246,1354807653,1385438117,1385438117,510447,510447,commit_sha_in_comments,false,false,false,33,1,1,0,2,0,2,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.774431154975404,0.29467519486947463,17,ray@envetta.com,plugins/provisioners/chef/provisioner/chef_client.rb,17,0.2073170731707317,0,5,false,chef-client provisioner update regarding encrypted data bag secret location Updated chef-client provisioner to use sudo to move the encrypted data bag file to the selected location since this operation may require superuser privileges,,344,0.7063953488372093,0.0975609756097561,10259,359.48922896968514,31.582025538551516,57.705429379081785,5141,10,1050,52,unknown,priestjim,mitchellh,false,mitchellh,0,0,8,10,201,false,true,false,false,0,0,0,0,0,0,494191
574696,mitchellh/vagrant,ruby,1238,1354147636,,1374109924,332704,,unknown,false,false,false,24,1,1,0,0,0,0,0,1,1,1,1,3,2,0,1,1,1,1,3,2,0,1,5,0,5,0,9.2835394294132,0.5730474535184097,0,,contrib/README.md|contrib/bash/completion.sh|contrib/bash/vagrant,0,0.0,0,0,false,Improve bash completion The previous version only completed the first level subcommandNow all options are completed as well as vagrant boxes and vm-names,,341,0.7067448680351907,0.09876543209876543,10258,359.5242737375707,31.58510430883213,57.71105478650809,5095,11,1042,98,unknown,mfournier,mitchellh,false,,1,1.0,23,9,1458,false,true,false,false,0,0,0,0,0,0,-1
507089,mitchellh/vagrant,ruby,1233,1353438218,1359624046,1359624046,103097,103097,github,false,false,false,42,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.578098695941143,0.2414407988859706,2,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/puppet.rb,2,0.023255813953488372,0,0,false,Fix issue #964 for 1-0-stable branch Fix problem that Puppet module-paths were re-ordered by VagrantThe issue is already fixed in master but I would be happy to have it fixed in 10 too Ruby 18 is still default on OS-Xhttps://githubcom/mitchellh/vagrant/pull/964,,339,0.7079646017699115,0.09302325581395349,7928,952.9515640766903,92.33097880928355,235.99899091826438,5082,12,1034,56,unknown,jbraeuer,mitchellh,false,mitchellh,1,1.0,16,14,656,false,true,false,false,1,1,0,0,0,0,14304
502466,mitchellh/vagrant,ruby,1232,1353397728,1356131702,1356131702,45566,45566,github,false,false,false,53,1,1,0,1,0,1,0,1,0,0,5,5,5,0,0,0,0,5,5,5,0,0,17,0,17,0,21.956973053465795,1.3553692297005129,1,mitchell.hashimoto@gmail.com,plugins/commands/destroy/plugin.rb|plugins/commands/halt/plugin.rb|plugins/commands/ssh/plugin.rb|plugins/commands/status/plugin.rb|plugins/commands/suspend/plugin.rb,1,0.011764705882352941,0,0,false,Altered messages so they were _not_ self referencing Altered messages so they were _not_ self referencing and included suggestions to reverse them as I understood them to workA bit like you do not want the definition of a word to include the word itselfThe halt command haltsThe destroy command destroys,,337,0.7091988130563798,0.09411764705882353,10255,359.6294490492443,31.594344222330566,57.727937591418815,5082,11,1034,54,unknown,paulmars,mitchellh,false,mitchellh,0,0,35,42,1672,false,false,false,false,0,0,0,0,0,0,45566
495579,mitchellh/vagrant,ruby,1231,1353256290,,1353804158,9131,,unknown,false,false,false,29,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,5.103471430792117,0.31502922215680634,0,,templates/guests/redhat/network_dhcp.erb,0,0.0,0,0,false,Issue #997 - Failed configuring network interfaces after packaging Issue #997 -  Set ONBOOT to NO since network interface will be setup by vagrant no need to autostart it,,336,0.7113095238095238,0.08695652173913043,10255,359.6294490492443,31.594344222330566,57.727937591418815,5079,11,1032,43,unknown,chilicat,chilicat,true,,0,0,4,7,738,false,true,false,false,1,0,0,0,0,0,-1
493163,mitchellh/vagrant,ruby,1229,1353121586,,1359623982,108373,,unknown,false,false,false,36,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.495539933893128,0.27750257207365187,1,mitchell.hashimoto@gmail.com,plugins/guests/freebsd/guest.rb,1,0.010869565217391304,0,0,true,Spaces in projects path breaks NFS mount in BSD This was detected and fixed for Linux as part of Issue 293 https://githubcom/mitchellh/vagrant/issues/293But I found that it still happens on FreeBSD when mounting the v-root over NFS,,335,0.7134328358208956,0.08695652173913043,10255,359.6294490492443,31.594344222330566,57.727937591418815,5078,11,1030,55,unknown,mattandersen,mitchellh,false,,0,0,3,0,952,false,false,false,false,0,0,0,0,0,0,108373
487731,mitchellh/vagrant,ruby,1227,1353028448,,1365381520,205884,,unknown,false,false,false,8,1,1,0,1,0,1,0,2,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.276119217723261,0.2639580781977738,101,phunehehe@gmail.com,templates/locales/en.yml,101,1.063157894736842,0,0,false,More detail in the port collision error message ,,334,0.7155688622754491,0.08421052631578947,10255,359.6294490492443,31.594344222330566,57.727937591418815,5078,11,1029,61,unknown,jasim,mitchellh,false,,0,0,27,3,1210,false,false,false,false,1,1,0,0,0,0,443
470398,mitchellh/vagrant,ruby,1222,1352751821,,1374109878,355967,,unknown,false,false,false,38,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,8,2,8,8.611955740480179,0.45417925913122054,0,,lib/vagrant/command/base.rb|test/unit/vagrant/command/base_test.rb,0,0.0,0,0,false,Ignore extra args in base command parser Specifying a specific VM and extra args at the same timewas triggering a multi_vm_target_required because the extraargs were being returned by parse_options This makesparse_options drop the extra args,,333,0.7177177177177178,0.07207207207207207,7928,952.9515640766903,92.33097880928355,235.99899091826438,5074,12,1026,95,unknown,ryfow,mitchellh,false,,0,0,1,4,584,false,false,false,false,0,0,0,0,0,0,517
463985,mitchellh/vagrant,ruby,1221,1352506102,,1365381630,214592,,unknown,false,false,false,34,1,1,0,3,0,3,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,7.733843215125599,0.40786916323456524,4,richard@moduscreate.com,lib/vagrant/action/vm/halt.rb|lib/vagrant/communication/ssh.rb,4,0.034782608695652174,0,1,true,close ssh connection on halt Using Jruby when reloading a VM or even halt/up process lead to ssh connection issues Just closing the channel after halt it solve the problemTested with Jruby 167,,332,0.7198795180722891,0.06956521739130435,7928,952.9515640766903,92.33097880928355,235.99899091826438,5073,12,1023,62,unknown,morpheu,mitchellh,false,,0,0,13,1,1360,false,false,false,false,0,0,0,0,0,0,118636
454720,mitchellh/vagrant,ruby,1218,1351869154,,1352900961,17196,,unknown,false,false,false,142,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.508720276736654,0.24588564837330698,2,peisentraut@meetme.com,plugins/provisioners/puppet/provisioner/puppet_server.rb,2,0.0196078431372549,0,0,true,Add support for pre and post commands in puppet provisioner The current implementation of the puppet provisioner assumes a working DNS system (puppet agents can resolve the master correctly) For a vagrant-puppet environment to be truly independent of externals (eg host machine network) it should be more flexible This flexibility can be achieved by supporting pre- and post-commands relative to calling the puppet agent commandThis pull request introduces two new attributes of type array:- pre_commands: array of shell commands to be executed **before** puppet agent run- post_commands: array of shell commands to be executed **after** puppet agent run Note: by default puppet is forked into the background If you require sequential execution use one of the following options:- no-daemonize:- testExample usage: rubypre_commands  [echo nameserver 17216010  /etc/resolvconf]post_commands  [echo eureka]Cheers,,331,0.7220543806646526,0.08823529411764706,9315,364.573268921095,32.31347289318304,58.722490606548575,5065,12,1016,45,unknown,xiwenc,xiwenc,true,,0,0,3,1,392,false,false,false,false,0,0,0,0,0,0,16358
454719,mitchellh/vagrant,ruby,1217,1351798340,1351928946,1351928946,2176,2176,merged_in_comments,false,false,false,137,9,9,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,313,0,313,0,38.40583828656229,2.094484436556524,2,mitchell.hashimoto@gmail.com,lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb|lib/vagrant/environment.rb,2,0.0196078431372549,0,1,false,Environment refactor Greetings here are some patches to make Vagrant::Environment objects easier to manipulate without reading a Vagrantfile It also contains a small patch to enable manipulating the UI object after an environment has been created which should be handy if you have an environment where the output device might change but the configuration wontI cant say I like all this code in the patch but I think the end result is mostly simplified methods and an approach that allows people who want to manipulate the configuration as its being evaluated the ability to do so its even entirely possible to run with zero user-supplied Vagrantfiles given the right code to do soIve attempted to document all methods and rake passes I did not write any new tests I did not run the acceptance tests,,330,0.7212121212121212,0.08823529411764706,9315,364.573268921095,32.31347289318304,58.722490606548575,5063,12,1015,43,unknown,erikh,mitchellh,false,mitchellh,0,0,132,122,1555,false,false,false,false,0,0,0,0,0,0,2176
454323,mitchellh/vagrant,ruby,1213,1351607331,1351927731,1351927731,5340,5340,github,false,false,false,123,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,6,0,0,0.0,0,,,0,0.0,0,0,false,Omit empty lines in Puppet provisioner output The sudo() block and/or the Puppet provisioner often returns newlinecharacters as separate strings This makes the chomp() ineffective andresults in extraneous spacing between the output linesSeparate out the call to chomp() so that we only do it once Then onlyoutput info if that line is not an empty string--Heres an example of the previous behaviour using pp instead of env[:ui]info: sh$ vagrant provision ja01[ja01] Running provisioner: Vagrant::Provisioners::Puppet[ja01] Running Puppet with /tmp/vagrant-puppet/manifests/sitepp\e[036mnotice: /Firewall[100 ssh]/ensure: created\e[0m\n\e[036mnotice: /Firewall[999 default_policy]/ensure: created\e[0m\n\e[036mnotice: /Firewall[002 allow_icmp]/ensure: created\e[0m\n\e[036mnotice: /Firewall[500 tomcat]/ensure: created\e[0m\n\e[036mnotice: /Firewall[001 allow_loopback]/ensure: created\e[0m\n\e[036mnotice: Finished catalog run in 501 seconds\e[0m\n,,328,0.7225609756097561,0.08737864077669903,9315,364.573268921095,32.31347289318304,58.722490606548575,5060,11,1013,43,unknown,dcarley,mitchellh,false,mitchellh,1,1.0,24,0,914,false,false,false,false,2,1,0,0,0,0,5339
454371,mitchellh/vagrant,ruby,1209,1351282944,1351927784,1351927784,10747,10747,github,false,false,false,26,2,2,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,13,0,13,0,8.738459122357657,0.47655819195581905,1,mitchell.hashimoto@gmail.com,plugins/hosts/arch/host.rb|plugins/hosts/arch/host.rb,1,0.008928571428571428,0,0,true,Additional Arch host class fixes Had to make some more changes to get my VM booting on ArchSome of these were mentioned in #1142 Thanks,,327,0.7217125382262997,0.08035714285714286,9315,364.573268921095,32.31347289318304,58.722490606548575,5055,11,1009,42,unknown,pbrisbin,mitchellh,false,mitchellh,2,0.5,217,40,1363,true,false,false,false,3,9,4,0,2,0,10747
454372,mitchellh/vagrant,ruby,1206,1351116203,,1351927862,13527,,unknown,false,false,false,118,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,0,8,0,8.513494125810526,0.4642895630698007,2,mitchell.hashimoto@gmail.com,plugins/kernel_v1/config/vm.rb|plugins/providers/virtualbox/action/default_name.rb,2,0.018018018018018018,0,0,false,Call the VM something nice in virtualbox interface I use vagrant to instantiate multiVM environments (eg 16 VMs locally from top-level project folder)At the moment it is very difficult to see which VM in the Virtualbox interface relates to which box so I wanted the option to override the virtualbox box-name in Vagrantfile sensibly (as opposed to the vagrant box-name which is already done) so I can investigate things easily using the virtualbox guiI added support for a configvmvirtualbox_name param to achieve thisI am unfamiliar with this dev branch (it doesnt work for me at the moment) so have attempted the changes on master but its a minimal change so shouldnt be hard to understand,,326,0.7239263803680982,0.08108108108108109,9315,364.573268921095,32.31347289318304,58.722490606548575,5051,10,1007,41,unknown,gmsharky,mitchellh,false,,0,0,3,0,812,false,false,false,false,0,0,0,0,0,0,13527
455930,mitchellh/vagrant,ruby,1199,1350691500,1359622487,1359622487,148849,148849,merged_in_comments,false,false,false,39,1,1,0,5,0,5,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.598088219356591,0.2507600685186615,4,skim.la@gmail.com,lib/vagrant/box_collection.rb,4,0.036036036036036036,0,0,true,using FileUtilsmv instead of Filerename During a box download the Filerename fails due to my system having different devices for /home and /tmphttp://pastieorg/5086241Changed to use FileUtilsmv and it is able to complete the operation with no exceptions,,325,0.7230769230769231,0.08108108108108109,9315,364.573268921095,32.31347289318304,58.722490606548575,5046,10,1002,57,unknown,jeremyd,mitchellh,false,mitchellh,0,0,28,1,1666,false,false,false,false,0,0,0,0,0,0,29
454374,mitchellh/vagrant,ruby,1191,1350344600,1351927979,1351927979,26389,26389,github,false,false,false,20,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,7,0,7,0,4.428154249986074,0.24149259652375443,4,mitchell.hashimoto@gmail.com,plugins/guests/ubuntu/guest.rb,4,0.03418803418803419,0,0,false,Fix change_host_name on Ubuntu Hardy On ubuntu hardy the service command is not available you must use initd script instead,,323,0.7213622291021672,0.07692307692307693,9315,364.573268921095,32.31347289318304,58.722490606548575,5036,10,998,40,unknown,lorello,mitchellh,false,mitchellh,0,0,6,27,568,true,false,false,false,0,1,0,0,1,0,26389
455931,mitchellh/vagrant,ruby,1183,1350009712,1350103774,1350103774,1567,1567,github,false,false,false,41,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,7,0,0,0.0,0,,,0,0.0,0,0,false,Fix Windows shell provisioning Resolves [GH-1036] [GH-1164] [GH-1181]Ported fixes from patches to 1-0-stableI havent tested this patch vs the master code yet but I did test the patches vs 105 This is a simple fixed-up merge of those changes,,322,0.7204968944099379,0.09009009009009009,9314,364.6124114236633,32.31694223749195,58.728795361820914,5031,10,994,42,unknown,obscurerichard,mitchellh,false,mitchellh,1,1.0,12,30,812,false,true,false,false,4,0,1,0,0,0,1567
455932,mitchellh/vagrant,ruby,1182,1350009587,1350103943,1350103943,1572,1572,github,false,false,false,48,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,0,7,0,8.555128190923298,0.4512008119877391,1,mitchell.hashimoto@gmail.com,lib/vagrant/communication/ssh.rb|lib/vagrant/provisioners/shell.rb,1,0.009009009009009009,0,0,false,Fix Windows shell provisioning Resolves [GH-1036] [GH-1164] [GH-1181]I tested this vs an installed version of Vagrant 105 on a 64 bit Windows 7 Ultimate by copying the two patched files into place It allows the shell provisioner to complete correctly See https://githubcom/obscurerichard/vagrant-windows-shell-test for a concise test case,,321,0.719626168224299,0.09009009009009009,7927,953.071779992431,92.34262646650687,236.028762457424,5031,10,994,41,unknown,obscurerichard,mitchellh,false,mitchellh,0,0,12,30,812,false,true,false,false,4,0,0,0,0,0,792
455933,mitchellh/vagrant,ruby,1180,1349954139,1350104185,1350104185,2500,2500,github,false,false,false,49,1,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,9.137385742159879,0.48190930332077014,0,,lib/vagrant/provisioners/puppet.rb|lib/vagrant/provisioners/puppet_server.rb,0,0.0,0,0,false,Check exit codes of puppet provisioners Backport of https://githubcom/mitchellh/vagrant/pull/1175 to 1-0-stablePreviously failures in applying the puppet manifests would beignored because puppet apply/agent dont have any useful exit codesby default  (Errors are printed but vagrant continues)Use the option --detailed-exitcodes of puppet apply/agent to check forsuccess,,320,0.71875,0.09009009009009009,7927,953.071779992431,92.34262646650687,236.028762457424,5027,10,994,40,unknown,carlossg,mitchellh,false,mitchellh,0,0,38,0,1494,false,false,false,false,0,1,0,0,0,0,-1
454104,mitchellh/vagrant,ruby,1176,1349756214,1350104497,1350104497,5804,5804,github,false,false,false,28,1,0,0,3,0,3,0,4,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,9,0,0,0.0,0,,,0,0.0,0,0,false,Fix for DNS resolution bug on Ubuntu 1210 Ubuntu 1210 uses 127011 instead of 127001 for DNS resolution so I added 127011 to the fix for Ubuntu 1204,,318,0.7169811320754716,0.15966386554621848,9314,364.6124114236633,32.31694223749195,58.728795361820914,5016,9,992,38,unknown,paulv,mitchellh,false,mitchellh,0,0,14,11,1634,false,false,false,false,0,0,0,0,0,0,2
454103,mitchellh/vagrant,ruby,1175,1349731835,1350104179,1350104179,6205,6205,github,false,true,false,44,1,0,0,4,0,4,0,3,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Check exit codes of puppet provisioners Previously failures in applying the puppet manifests would beignored because puppet apply/agent dont have any useful exit codesby default  (Errors are printed but vagrant continues)Use the option --detailed-exitcodes of puppet apply/agent to check forsuccess,,317,0.7160883280757098,0.15966386554621848,9314,364.6124114236633,32.31694223749195,58.728795361820914,5016,9,991,40,unknown,petere,mitchellh,false,mitchellh,0,0,57,9,1180,false,false,false,false,0,1,0,0,0,0,5
454047,mitchellh/vagrant,ruby,1171,1349463434,,1374024277,409347,,unknown,false,false,false,20,2,1,1,1,0,2,0,3,0,0,4,4,3,1,0,0,0,4,4,3,1,0,17,0,19,0,18.508944116774114,0.9761689630068385,0,,lib/vagrant/guest/linux.rb|lib/vagrant/hosts/bsd.rb|lib/vagrant/util/template_renderer.rb|templates/nfs/exports.erb,0,0.0,0,0,true,escape quotes so that nfs export works [closes #1166] fixes #1166 - this is the backport of  #1170 to 1-0-stable,,316,0.7183544303797469,0.17355371900826447,7927,953.071779992431,92.34262646650687,236.028762457424,4998,9,988,103,unknown,sbfaulkner,mitchellh,false,,3,0.3333333333333333,35,36,1645,false,true,false,false,1,6,2,0,0,0,2409
454048,mitchellh/vagrant,ruby,1170,1349463337,,1374024249,409348,,unknown,false,false,false,17,2,0,1,1,0,2,0,3,0,0,0,4,0,0,0,0,0,4,4,3,1,0,0,0,19,0,0,0.0,0,,,0,0.0,0,0,true,support quotes in file names when sharing via NFS fixes #1166 - submitting backport to stable separately,,315,0.7206349206349206,0.17355371900826447,9314,364.6124114236633,32.31694223749195,58.728795361820914,4998,9,988,103,unknown,sbfaulkner,mitchellh,false,,2,0.5,35,36,1645,false,true,false,false,1,6,1,0,0,0,2416
445010,mitchellh/vagrant,ruby,1163,1348860594,1350104887,1350104887,20738,20738,merged_in_comments,false,false,false,19,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,true,Change hostname check It should be allowable to set the hostname to be a substring of the box name,,314,0.7197452229299363,0.20930232558139536,9314,364.6124114236633,32.31694223749195,58.728795361820914,4967,9,981,36,unknown,michaelthies,mitchellh,false,mitchellh,0,0,4,0,1579,false,true,false,false,0,0,0,0,0,0,-1
438343,mitchellh/vagrant,ruby,1156,1348658155,,1373545621,414791,,unknown,false,false,false,55,2,1,0,3,0,3,0,4,0,0,1,1,1,0,0,0,0,1,1,1,0,0,19,0,19,0,4.671277283909276,0.2463649937771742,0,,lib/vagrant/ssh.rb,0,0.0,1,2,false,Re: Use existing ssh command if available on Windows platform instead of just failing This is the same patch as in #1083 but merges cleanly with 1-0-stable rather than masterThe goal is to enable vagrant ssh on windows if a Cygwin ssh is avaible@mitchellh : any chance this would make it into 106,,313,0.7220447284345048,0.21367521367521367,7927,953.071779992431,92.34262646650687,236.028762457424,4952,9,979,107,unknown,tknerr,mitchellh,false,,2,0.5,11,4,772,false,true,false,false,2,1,3,0,0,0,31008
437818,mitchellh/vagrant,ruby,1155,1348633203,1348778998,1348778998,2429,2429,github,false,false,false,207,1,0,0,1,0,1,0,2,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,2,5,0,0.0,0,,,0,0.0,13,0,false,Fixes an exception issue when a non-directory appears in the boxes dir I was perusing in my boxes_dir today and my awesome Macbook decides to leave a DS_Store file in the directory (as it does everywhere else)  When running vagrant box list an exception occurred in the following form:[skim@master][~/lolcat/me/vm] vagrant box listYoure using a development version of Vagrant This versionmakes structural changes to the ~/vagrantd folder such thatyou will be _unable_ to downgrade back to a 10x release Thisaffects all Vagrant environments on your computer Other usersof Vagrantfiles you create and use can continue to use 10x withoutissue so long as it is on a computer that has never run thisdevelopment versionThis message will be removed when this version is officially releasedIf youre sure youd like to continue type Y and then enter: y/Users/skim/rvm/rubies/ruby-193-p194/lib/ruby/191/pathnamerb:397:in open: Not a directory - /Users/skim/vagrantd/boxes/DS_Store (Errno::ENOTDIR)        from /Users/skim/rvm/rubies/ruby-193-p194/lib/ruby/191/pathnamerb:397:in foreach        from /Users/skim/rvm/rubies/ruby-193-p194/lib/ruby/191/pathnamerb:397:in children        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/lib/vagrant/box_collectionrb:149:in block in all        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/lib/vagrant/box_collectionrb:136:in each        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/lib/vagrant/box_collectionrb:136:in all        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/plugins/commands/box/command/listrb:18:in execute        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/plugins/commands/box/command/rootrb:47:in execute        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/lib/vagrant/clirb:51:in execute        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/lib/vagrant/environmentrb:182:in cli        from /Users/skim/rvm/gems/ruby-193-p194@vm/bundler/gems/vagrant-184f6dccb2d5/bin/vagrant:71:in top (required)        from /Users/skim/rvm/gems/ruby-193-p194@vm/bin/vagrant:19:in load        from /Users/skim/rvm/gems/ruby-193-p194@vm/bin/vagrant:19:in main        from /Users/skim/rvm/gems/ruby-193-p194@vm/bin/ruby_noexec_wrapper:14:in eval        from /Users/skim/rvm/gems/ruby-193-p194@vm/bin/ruby_noexec_wrapper:14:in mainI have fixed the issue in this PR,,312,0.7211538461538461,0.21551724137931033,9303,364.61356551650005,32.24766204450177,58.69074492099323,4952,8,979,42,unknown,sl4m,mitchellh,false,mitchellh,0,0,65,89,1348,false,true,false,false,0,0,0,0,0,0,2429
436955,mitchellh/vagrant,ruby,1153,1348607738,1378075986,1378075986,491137,491137,merged_in_comments,false,false,false,10,2,0,0,7,0,7,0,5,0,0,0,3,0,0,0,0,0,3,3,3,0,0,0,0,51,0,0,0.0,0,,,0,0.0,0,2,false,Using sed to edit /etc/exports file Patch fixing issue https://githubcom/mitchellh/vagrant/issues/1149,,310,0.7193548387096774,0.21551724137931033,9303,364.61356551650005,32.24766204450177,58.69074492099323,4951,8,978,61,unknown,YannRobert,mitchellh,false,mitchellh,0,0,3,20,161,false,true,true,false,0,1,0,0,0,0,2256
503316,mitchellh/vagrant,ruby,1147,1353404617,,1365381437,199613,,unknown,false,false,false,170,3,3,0,2,0,2,0,3,0,0,5,5,4,0,1,0,0,5,5,4,0,1,43,0,43,0,26.26391292555905,1.6212298181609994,116,phunehehe@gmail.com,lib/vagrant/action/builtin/box_add.rb|templates/locales/en.yml|lib/vagrant/ui.rb|lib/vagrant/downloaders/http.rb|lib/vagrant/errors.rb|templates/locales/en.yml,100,0.09302325581395349,0,0,false,Keyboard interactive authentication for HTTP downloads of boxes Say I have a Vagrantfile with:    configvmbox_url  https://secureexamplecom/privateboxand https://secureexamplecom/ requires basic HTTP authentication Currenlty when you run vagrant up you will see:    $ vagrant up    [default] Box base was not found Fetching box from specified URL    [vagrant] Downloading with Vagrant::Downloaders::HTTP    [vagrant] Downloading box: https://secureexamplecom/privatebox    Bad status code: 401        Please verify that the box exists and is accessible Also verify that    this computer is properly connected to the internetYou can currently embed a username and password into the URL (as of https://githubcom/mitchellh/vagrant/pull/521) eg    configvmbox_url  https://john:mypassword@secureexamplecom/privateboxHowever I wouldnt want to commit a login into source control especially if the logins were employee specific You can have people work around this by editing the Vagrantfile to temporarily insert their login for running vagrant up or you could have them separately download and vagrant add the box but both of these methods are inconvenient Ideally I would like to be prompted for my login information if Vagrant::Downloaders::HTTP encounters a 401 response,,338,0.7100591715976331,0.09302325581395349,10255,359.6294490492443,31.594344222330566,57.727937591418815,5082,12,1034,64,unknown,gabetax,mitchellh,false,,0,0,26,46,1110,true,false,false,false,1,1,0,0,1,0,-85664
426364,mitchellh/vagrant,ruby,1146,1348160609,1348786907,1348786907,10438,10438,github,false,false,false,8,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,make chef provisioners to write human readable dnajson ,,307,0.7166123778501629,0.2222222222222222,9303,364.61356551650005,32.24766204450177,58.69074492099323,4925,7,973,38,unknown,piavlo,mitchellh,false,mitchellh,0,0,0,0,1145,false,false,false,false,0,0,0,0,0,0,10438
454102,mitchellh/vagrant,ruby,1142,1348019119,1348039394,1348039395,337,337,github,false,false,false,49,2,0,0,1,0,1,0,4,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,47,0,0,0.0,0,,,0,0.0,0,7,false,Fix arch host class 1 Detect os by /etc/os-release2 Bring nfs_cleanup from parent class3 Use systemd if availableI also had to re-implement #nfs but Im not really sure whyThis PR obviates #1081 Ive not seen any of the issues I mention there with this approach,,306,0.7156862745098039,0.21238938053097345,7805,967.9692504804613,93.78603459320948,239.71812940422808,4916,7,971,40,unknown,pbrisbin,mitchellh,false,mitchellh,1,0.0,209,40,1325,false,false,false,false,2,2,2,0,0,0,337
406802,mitchellh/vagrant,ruby,1140,1348006920,1348038823,1348038823,531,531,github,false,false,false,127,2,0,1,4,0,5,0,3,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,16,0,0,0.0,0,,,0,0.0,2,3,false,Change Fedora 16+ NFS support Heres a quick-and-dirty pull request to add NFS support to Fedora 17 and up as reported in #1125This simply parses the redhat-release file and if the version of Fedora is 17 or greater it changes @nfs_server_binary to /usr/sbin/service nfs-server instead of /etc/initd/nfs which does not exist any more in Fedora 17+ due to the switch to systemdThis works because the service command in Fedora 17 will rewrite service nfs-server restart to systemctl restart nfs-serverservice behind the scenes This is the simplest way to solve this issue for now without changing too much code since lib/vagrant/hosts/linuxrb callsrubysystem(sudo #{@nfs_server_binary} restart) at the end of nfs_export whereas calling systemctl would require copying that method and just changing the last line,,305,0.7147540983606557,0.21238938053097345,7805,967.9692504804613,93.78603459320948,239.71812940422808,4916,7,971,41,unknown,smerrill,mitchellh,false,mitchellh,3,0.6666666666666666,49,14,1031,false,true,false,false,1,1,1,0,0,0,2
454101,mitchellh/vagrant,ruby,1139,1348006902,,1348006939,0,,unknown,false,false,false,127,23,22,0,0,0,0,0,1,1,0,15,17,15,0,1,1,0,16,17,16,0,1,608,0,622,0,136.6684105210127,7.4535418330362075,42,nathaniel.smith@thescore.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/action/vm/check_port_collisions.rb|CHANGELOG.md|lib/vagrant/command/ssh_config.rb|CHANGELOG.md|lib/vagrant/downloaders/http.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|CHANGELOG.md|lib/vagrant/communication/ssh.rb|CHANGELOG.md|templates/locales/en.yml|lib/vagrant/driver.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_2.rb|CHANGELOG.md|lib/vagrant/version.rb|CHANGELOG.md|lib/vagrant/environment.rb,18,0.017699115044247787,2,0,false,Add Fedora 17+ NFS support Heres a quick-and-dirty pull request to add NFS support to Fedora 17 and up as reported in #1125This simply parses the redhat-release file and if the version of Fedora is 17 or greater it changes @nfs_server_binary to /usr/sbin/service nfs-server instead of /etc/initd/nfs which does not exist any more in Fedora 17+ due to the switch to systemdThis works because the service command in Fedora 17 will rewrite service nfs-server restart to systemctl restart nfs-serverservice behind the scenes This is the simplest way to solve this issue for now without changing too much code since lib/vagrant/hosts/linuxrb callsrubysystem(sudo #{@nfs_server_binary} restart) at the end of nfs_export whereas calling systemctl would require copying that method and just changing the last line,,304,0.7171052631578947,0.21238938053097345,9283,365.3991166648713,32.31713885597329,58.81719271787138,4916,7,971,39,unknown,smerrill,smerrill,true,,2,1.0,49,14,1031,false,true,false,false,0,1,0,0,0,0,-1
416501,mitchellh/vagrant,ruby,1128,1347732186,1347736991,1347736991,80,80,github,false,false,false,51,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.946104411195957,0.2608870785663829,0,,lib/vagrant/environment.rb,0,0.0,0,0,false,backport Windows fix onto 1-0-stable  I wish this had made it into 104 but heres a pull request to hopefully make sure it gets into any future 10x  plugins are really broken on Windows without it    Update load_plugins to be more Windows friendly Uses File::PATH_SEPARATOR instead of hard-coded colon (:),,302,0.7152317880794702,0.21238938053097345,7805,967.9692504804613,93.78603459320948,239.71812940422808,4901,7,968,37,unknown,sbfaulkner,mitchellh,false,mitchellh,1,0.0,34,35,1625,false,true,false,false,0,5,0,0,0,0,80
400783,mitchellh/vagrant,ruby,1121,1347554461,,1373545606,433185,,unknown,false,true,false,64,8,0,0,11,0,11,0,8,0,0,0,4,0,0,0,0,0,4,4,4,0,0,0,0,17,0,0,0.0,0,,,0,0.0,0,2,false,Added an option to specify Host and guest ip for port forward Added an option to specify Host and guest ip for port forwardAlso changed the default SSH to use the loopback interface rather then bind to all interfaces  This should mitigate the openness of vagrant boxes with known username/password full ssh access to anyone that can talk to port 2222 (and family),,300,0.72,0.2072072072072072,8935,379.63066592053724,33.57582540570789,61.10800223838836,4888,7,966,112,unknown,rrehbeindoi,mitchellh,false,,0,0,3,2,1064,false,false,false,false,0,0,0,0,0,0,25302
400376,mitchellh/vagrant,ruby,1120,1347551417,1347595628,1347595628,736,736,github,false,false,false,24,1,0,0,2,0,2,0,1,0,0,0,2,0,0,0,1,0,2,3,3,0,0,0,0,463,0,0,0.0,0,,,0,0.0,0,0,false,Added driver for VirtualBox 42 to 10x stable this is so far not very deep tested but vagrant up and base commands to work,,299,0.7190635451505016,0.2072072072072072,7459,1012.8703579568307,98.1364794208339,250.83791392948118,4887,7,966,37,unknown,julianhille,mitchellh,false,mitchellh,0,0,7,0,512,false,false,false,false,0,0,0,0,0,0,731
397179,mitchellh/vagrant,ruby,1118,1347528345,1348775074,1348775074,20778,20778,github,false,false,false,32,1,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,11,0,0,0.0,0,,,0,0.0,0,0,false,Emitting vagrant-mount events when mounting nfs volumes Emitting a vagrant-mount event for each NFS mount point so that it can be used as a drop-in replacement for shared folders when using upstart,,298,0.7181208053691275,0.20909090909090908,8935,379.63066592053724,33.57582540570789,61.10800223838836,4887,6,966,42,unknown,hugowetterberg,mitchellh,false,mitchellh,1,1.0,112,45,1422,false,false,false,false,0,0,1,0,0,0,20728
397177,mitchellh/vagrant,ruby,1117,1347528269,1348786183,1348786183,20965,20965,merged_in_comments,false,false,false,32,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,13,0,0,0.0,0,,,0,0.0,0,0,false,Emitting vagrant-mount events when mounting nfs volumes Emitting a vagrant-mount event for each NFS mount point so that it can be used as a drop-in replacement for shared folders when using upstart,,297,0.7171717171717171,0.20909090909090908,7459,1012.8703579568307,98.1364794208339,250.83791392948118,4887,6,966,38,unknown,hugowetterberg,mitchellh,false,mitchellh,0,0,112,45,1422,false,false,false,false,0,0,0,0,0,0,-1
358702,mitchellh/vagrant,ruby,1106,1346973687,,1347252849,4652,,unknown,false,false,false,8,4,3,0,0,0,0,0,2,0,0,3,5,3,0,0,0,0,5,5,5,0,0,47,0,61,17,23.293070559622425,1.2733193993219007,7,mitchell.hashimoto@gmail.com,CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb,5,0.017391304347826087,0,0,false,If windows has cygwin installed use that ssh ,,295,0.7220338983050848,0.22608695652173913,8927,379.29875658115833,33.38187521003697,61.1627646465778,4867,9,959,38,unknown,gaffo,mitchellh,false,,0,0,24,3,1559,false,false,false,false,0,0,0,0,0,0,-1
357100,mitchellh/vagrant,ruby,1105,1346928263,,1347252981,5411,,unknown,false,false,false,39,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,9,0,0,0.0,0,,,0,0.0,0,0,false,windows platform : add ability to run putty with vagrant ssh command this is a draft version but works well for me (win7 / putty / pageant)please see the comments which contain prerequisites for this hack (paths etc),,294,0.7244897959183674,0.22608695652173913,8927,379.29875658115833,33.38187521003697,61.1627646465778,4862,9,959,37,unknown,Samuel29,mitchellh,false,,0,0,1,2,70,false,false,false,false,0,0,0,0,0,0,5411
349254,mitchellh/vagrant,ruby,1096,1346612574,1347253696,1347253696,10685,10685,github,false,false,false,32,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,14,0,0,0.0,0,,,0,0.0,0,0,false,Use the communicate interface for Arch Linux guests Update the arch guest configuration to use communicate in place of (deprecated unavailable) channelThis is a change similar to the ubuntu change https://githubcom/danmidwood/vagrant/commit/1efee6edcb110b0c11272bc86c0df245f6fd7a79#plugins/guests/ubuntu/guestrb,,293,0.7235494880546075,0.23275862068965517,8927,379.29875658115833,33.38187521003697,61.1627646465778,4847,8,955,36,unknown,danmidwood,mitchellh,false,mitchellh,0,0,13,12,586,false,false,false,false,0,0,0,0,0,0,10685
265884,mitchellh/vagrant,ruby,1087,1345823813,1347254899,1347254899,23851,23851,github,false,false,false,8,1,0,0,1,0,1,0,1,0,0,0,4,0,0,0,0,0,4,4,4,0,0,0,0,6,8,0,0.0,0,,,0,0.0,0,0,true,Allow file:// URIs from configboxurl Fixes issue #1086,,291,0.7216494845360825,0.3197278911564626,8922,379.5113203317642,33.40058282896212,61.19704102219233,4820,8,946,34,unknown,nwjsmith,mitchellh,false,mitchellh,0,0,24,64,1640,false,true,false,false,0,0,0,0,0,0,23851
259106,mitchellh/vagrant,ruby,1083,1345644313,1359665475,1359665475,233686,233686,merged_in_comments,false,false,false,55,4,2,0,2,0,2,0,3,0,0,2,2,2,0,0,0,0,2,2,2,0,0,21,0,23,0,9.292098518290073,0.5079503176937714,3,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb|lib/vagrant/version.rb,3,0.02040816326530612,1,0,false,Re: Use existing ssh command if available on Windows platform instead of just failing Re-submitted the pull request #1079 so that it cleanly merges with master@mitchellh: does this solution look acceptableIf so should I submit another pull request based on 1-0-stable for inclusion in 104 (btw: do you have plans for that already),,290,0.7206896551724138,0.3197278911564626,8922,379.5113203317642,33.40058282896212,61.19704102219233,4808,8,944,56,unknown,tknerr,mitchellh,false,mitchellh,1,0.0,10,4,737,false,true,false,false,2,1,2,0,0,0,493
255972,mitchellh/vagrant,ruby,1081,1345505453,,1348019236,41896,,unknown,false,true,false,344,2,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,22,0,24,0,4.362401390733203,0.23063235763881368,0,,lib/vagrant/hosts/arch.rb,0,0.0,0,0,false,Update arch host class for systemd transition This pull request comes with some caveats (and I apologize for that) Here goesIve changed the match function to use /etc/os-release Any Arch users who have moved to systemd (and all users will be forced too soon) are likely able to run their systems without /etc/rcconf entirely Also /etc/pacmanconf may be present on systems that arent Arch since hes been ported around a bitIve also updated the restart commands to use systemctl when its available The rcd versions would still work if the user has the old init package still installed (and hasnt yet removed their rcconf) but its my assumption that if theyve got systemd installed their intention is to use the newer service filesMy two concerns/caveats are the following:* I get a kernel panic if I issue the restart command while the nfs services are in some failed stateIve reproduced this outside of Vagrant so Im fairly sure its unrelated to this patch However Ive also noticed that Vagrant is duplicating the entries in /etc/exports rather than reusing or replacing whats already there on subsequent reloads I can see in the systemd logs that the nfs service is complaining about this but Im not sure if its the root cause of the failed state and eventual kernal panic* It doesnt always work :(If I issue vagrant up while no nfs services are running Vagrant bombs trying to mount the NFS shares -- However the service command did do something because if I immediately issue vagrant reload it works fine that time It also works if I ensure the services are already running when I do that first vagrant up Im a bit baffled by this behaviorAnyway this pull request is more a solicitation for feedback preferably from other Arch users Im pretty confident this is the right patch for the systemd changes but with my kernel panics and strange restart behavior I cant recommend merging it Hopefully its still useful :)Thanks for your great workPat,,289,0.7231833910034602,0.3263888888888889,7454,1013.5497719345319,98.20230748591361,251.0061711832573,4785,8,942,43,unknown,pbrisbin,pbrisbin,true,,0,0,204,40,1296,false,false,false,false,0,0,0,0,0,0,2553
253886,mitchellh/vagrant,ruby,1080,1345418179,,1365381281,332718,,unknown,false,false,false,83,2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,70,0,0,0.0,0,,,0,0.0,0,0,false,Minor pluginrb refactor HelloI saw some duplicated code in pluginrb and tried to refactor it Im not sure if this is correct (although the tests seem to pass) or useful (Ill leave that to the maintainer/community to decide) But I think it might help a little bitThis basically took two pieces of code that looked quite duplicated and tried to break them into a single function Im iocor on freenode if youd like to chat about the patchesThanksSam Phippen,,288,0.7256944444444444,0.3381294964028777,8667,335.7563170647283,27.922002999884622,54.6902042229145,4743,8,941,64,unknown,samphippen,mitchellh,false,,0,0,69,2,1158,false,false,false,false,0,0,0,0,0,0,-1
252387,mitchellh/vagrant,ruby,1079,1345308692,,1345643728,5583,,unknown,false,false,false,27,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,19,0,19,0,4.671277283909276,0.26866451455976964,1,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb,1,0.0072992700729927005,0,2,false,GH-247: Use existing ssh command if available on Windows platform instead of just failing it should work with any Cygwin-compiled sshexe that is available on the PATH,,287,0.7282229965156795,0.35766423357664234,8667,335.7563170647283,27.922002999884622,54.6902042229145,4742,8,940,33,unknown,tknerr,tknerr,true,,0,0,10,4,733,false,true,false,false,0,0,0,0,0,0,4520
246212,mitchellh/vagrant,ruby,1071,1345061409,1347255290,1347255290,36564,36564,github,false,false,false,35,1,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,Convey default destroy confirmation choice as N The convention is to capitalize the default choice when presentingthe user with a confirmation dialog This alters the choices forvagrant destroy confirmation from [Y/N] to [y/N],,286,0.7272727272727273,0.373134328358209,8667,335.7563170647283,27.922002999884622,54.6902042229145,4731,7,937,33,unknown,bcwaldon,mitchellh,false,mitchellh,0,0,66,25,588,false,true,false,false,0,0,0,0,0,0,12086
237297,mitchellh/vagrant,ruby,1067,1344632701,1348786410,1348786410,69228,69228,github,false,false,false,50,1,0,0,1,0,1,0,3,0,0,0,3,0,0,0,0,0,3,3,3,0,0,0,0,7,0,0,0.0,0,,,0,0.0,0,1,true,Add configarguments for Chef * Adds chefarguments to Chef::Provisioner::Config* Usable in both chef-client and chef-solo* Specify as a string -L /tmp/foolog egThis allows users who wish to use why-run mode to do so with the addition of output formatters and log level modification from the command line,,285,0.7263157894736842,0.42735042735042733,8667,335.7563170647283,27.922002999884622,54.6902042229145,4708,7,932,37,unknown,jtimberman,mitchellh,false,mitchellh,1,1.0,282,80,1529,false,false,false,false,0,0,0,0,0,0,69228
7587,mitchellh/vagrant,ruby,1056,1344279714,1347255553,1347255553,49597,49597,github,false,false,false,5,1,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Fix 2 broken document links ,,282,0.723404255319149,0.46153846153846156,8667,335.7563170647283,27.922002999884622,54.6902042229145,4688,7,928,32,unknown,jmazzi,mitchellh,false,mitchellh,0,0,55,44,1615,false,true,false,false,0,0,0,0,0,0,19652
442830,mitchellh/vagrant,ruby,1048,1343821815,1348786680,1348786680,82747,82747,github,false,false,false,7,2,2,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,7.545889047667331,0.43399991100444074,10,mitchell.hashimoto@gmail.com,templates/locales/en.yml|templates/locales/en.yml,10,0.09433962264150944,0,0,false,Locales HelloJust some missing localesCheers,,281,0.7224199288256228,0.5,8667,335.7563170647283,27.922002999884622,54.6902042229145,4661,8,923,35,unknown,spk,mitchellh,false,mitchellh,0,0,26,33,1134,false,true,false,false,0,0,0,0,0,0,82747
455870,mitchellh/vagrant,ruby,1047,1343766670,,1365380335,360227,,unknown,false,false,false,41,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,0,22,0,9.193090592752476,0.4860262011356441,0,,lib/vagrant/downloaders/file.rb|lib/vagrant/downloaders/http.rb,0,0.0,0,0,false,Match the http & file downloaders on the scheme Identify a http url vs a file url by the scheme used in the url Ifits http or https use the http downloader For file or nil use thefile downloader,,280,0.725,0.4953271028037383,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4657,8,922,59,unknown,benburkert,mitchellh,false,,1,0.0,146,12,1646,false,false,false,false,0,0,0,0,0,0,-1
455871,mitchellh/vagrant,ruby,1043,1343357508,,1373562429,503415,,unknown,false,false,false,157,8,2,0,0,0,0,0,1,0,0,7,7,6,0,1,2,0,7,9,8,0,1,53,0,101,0,43.70907982072664,2.513906307081124,90,xmitchx@gmail.com,lib/vagrant/communication/ssh.rb|lib/vagrant/ssh.rb|plugins/provisioners/puppet/provisioner/puppet.rb|bin/vagrant|lib/vagrant/cli.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/ssh.rb|plugins/kernel_v1/config/vm.rb|plugins/provisioners/puppet/plugin.rb|plugins/provisioners/puppet/provisioner/puppet.rb,33,0.10526315789473684,0,2,false,Adding with_ssh optional approach to puppet provisioner plugin MitchellThis change is to support the use of scp as a method of pushing resources into the guest VM for the puppet provisioning plugin  Weve added a configuration option (with_ssh) to the pluginThe changes are coming from work going on in the CloudStack project over at ASF where we would love to use Vagrant as the method for individual developers to manage their own cloud in a box environment  The reason for this approach is that we hit was that the Virtual Box Guest Additions dont function when our guest boots into XenPlease let us know if you have any further questions but we would love if you were willing to bring this patch into your next releaseHeres a reference to our discussion on the topic: http://mail-archivesapacheorg/mod_mbox/incubator-cloudstack-dev/201207mbox/%3CCAKprHVZb6VSUVuKJW_P2EKqTFAVH_pe1So7E-prYeCfZSESq9g%40mailgmailcom%3EThanks again and please let us know if there is anything you would like to see done differently,,279,0.7275985663082437,0.5578947368421052,8667,335.7563170647283,27.922002999884622,54.6902042229145,4635,8,917,92,unknown,chipchilders,fgrehm,false,,0,0,2,2,540,false,false,false,false,0,0,0,0,0,0,-1
455873,mitchellh/vagrant,ruby,1042,1343322039,1343324168,1343324168,35,35,github,false,false,false,10,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,folder is ~/vagrantd not ~/vagrantd one-character patches for the win,,278,0.7266187050359713,0.5578947368421052,8667,335.7563170647283,27.922002999884622,54.6902042229145,4632,8,917,25,unknown,scoates,mitchellh,false,mitchellh,1,1.0,78,2,1205,false,false,false,false,0,0,0,0,0,0,35
455872,mitchellh/vagrant,ruby,1041,1343235936,,1373545494,505159,,unknown,false,false,false,183,1,0,0,6,0,6,0,8,0,0,0,3,0,0,0,2,0,3,5,5,0,0,0,0,45,25,0,0.0,0,,,0,0.0,1,1,false,Added support for downloading boxes via SCP Since we have certain sensitive box files that we do not want on the open internet we needed a way to add user authentication/authorization to box downloadsWe already have a good SSH key authentication framework in our infrastructure so by using SCP we avoid having to set up a parallel authentication system via HTTP(S) With SCP we effectively get authentication/authorization for freeI am contributing this as this could be nice to have as a standard feature in Vagrant for others to use too---There is one thing currently not as I would like it to be due to a bug/misfeature in Net::SSH Unlike the command line SSH client Net::SSH does not fall back to the currently logged in user if no user is specified (either to the Net::SSHstart function or in the ssh config files)This means that SCP URIs must be given a user (eg scp://user@host/path/to/file) if no user is specified in the ssh config file for the specific hostI will submit a fix for this bug/misfeature to the Net::SSH project,,277,0.7292418772563177,0.5578947368421052,8667,335.7563170647283,27.922002999884622,54.6902042229145,4624,8,916,94,unknown,vaimo-wilko,mitchellh,false,,0,0,0,0,0,false,true,false,false,0,0,0,0,0,0,91946
226032,mitchellh/vagrant,ruby,1040,1343201481,,1360290169,284811,,unknown,false,false,false,113,4,0,0,14,0,14,0,6,0,0,0,3,0,0,0,1,1,2,4,2,0,1,0,0,181,0,0,0.0,0,,,0,0.0,0,1,false,1 0 stable: Fix for issue 1036: Shell provisioner hangs on Windows 7 When doing vagrant up on Windows 7 shell provisioner hangs when uploading a temporary file from local machine to the guest VM File created in the temporary location on the host is not closed before yielding for upload to guest VM path This appeared to be the reason for upload process hang as the data was transferred but SCP would still not complete which could be because the end of file character was not sent I made a change in the shellrb file under embedded\lib\ruby\gems\191\gems\vagrant-103\lib\vagrant\provisioners folder With this change problem went away and I could deploy the guest VM successfully ,,276,0.7318840579710145,0.5638297872340425,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4620,8,916,57,unknown,mandarbarve,mitchellh,false,,1,0.0,0,0,7,false,true,false,false,2,1,2,0,0,0,32097
223986,mitchellh/vagrant,ruby,1039,1343125733,,1343128436,45,,unknown,false,false,false,183,10,10,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,8,8,8,0,0,111,0,111,0,58.3599206838421,3.3565451692462256,27,xmitchx@gmail.com,lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb|lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb|lib/vagrant/driver/virtualbox.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb,20,0.010638297872340425,0,0,false,1 0 stable: Fix for issue #1036 Fix for issue #1036When doing vagrant up on Windows 7 shell provisioner hangs when uploading a temporary file from local machine to the guest VM File created in the temporary location on the host is not closed before yielding for upload to guest VM path This appeared to be the reason for upload process hang as the data was transferred but SCP would still not complete which could be because the end of file character was not sent I made a change in the shellrb file under embedded\lib\ruby\gems\191\gems\vagrant-103\lib\vagrant\provisioners folder With this change problem went away and I could deploy the guest VM successfully Clarification of the patch:•Closed file explicitly before upload--- C:/vagrant/vagrant/embedded/lib/ruby/gems/191/gems/vagrant-103/lib/vagrant/provisioners/shellorgrb Tue May 01 23:27:42 2012+++ C:/vagrant/vagrant/embedded/lib/ruby/gems/191/gems/vagrant-103/lib/vagrant/provisioners/shellrb Fri Jul 13 12:08:49 2012@@ -6012 +6013 @@# and handle it speciallyfile  Tempfilenew(vagrant-shell)beginfilewrite(configinline)filefsync•fileclose  Added code to close the file explicitly yield filepath•ensure•rescue  Since the file is closed before yielding for upload now closing and unlinking only for rescue fileclose fileunlink end end,,275,0.7345454545454545,0.5638297872340425,8667,335.7563170647283,27.922002999884622,54.6902042229145,4616,8,915,23,unknown,mandarbarve,mandarbarve,true,,0,0,0,0,6,false,true,false,false,1,1,0,0,0,0,-1
223509,mitchellh/vagrant,ruby,1038,1343096640,,1365380315,371394,,unknown,false,false,false,25,18,1,0,1,0,1,0,2,0,0,1,11,1,0,0,0,0,11,11,11,0,0,4,0,106,8,4.505815677706772,0.23821542538516632,2,richard@moduscreate.com,lib/vagrant/communication/ssh.rb,2,0.02127659574468085,0,0,false,Scp with options and block Pass options and block through to underlying SCP so we can use :recursive  true option and read the progress,,274,0.7372262773722628,0.5638297872340425,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4616,8,914,67,unknown,loe,mitchellh,false,,0,0,28,99,1589,false,true,true,false,0,0,0,0,0,0,44200
220946,mitchellh/vagrant,ruby,1037,1342971553,1365380378,1365380378,373480,373480,commit_sha_in_comments,false,false,false,54,1,0,0,7,0,7,0,4,0,0,0,2,0,0,0,1,0,2,3,3,0,0,0,0,37,0,0,0.0,0,,,0,0.0,0,3,false,FEAT: add proper shutdown support for windows guests This is a first step toward better support for windows guest This uses windows cmd to halt the VMThere is one caveat: this requires configvmguest to be set to :windows This is obviously clunky but I dont know how guest OS detection work in vagrant,,273,0.7362637362637363,0.5816326530612245,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4607,8,913,56,unknown,cournape,mitchellh,false,mitchellh,0,0,66,2,1403,false,true,false,false,0,0,0,0,0,0,67
214187,mitchellh/vagrant,ruby,1034,1342626670,,1365380496,379230,,unknown,false,false,false,16,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Only mark environment loaded after load_config Copy of #1033 to fix the same issue on master,,272,0.7389705882352942,0.59,8667,335.7563170647283,27.922002999884622,54.6902042229145,4583,8,909,59,unknown,conormcd,mitchellh,false,,1,0.0,24,39,1000,false,true,false,false,1,0,1,0,0,0,-1
214177,mitchellh/vagrant,ruby,1033,1342626450,,1365380487,379233,,unknown,false,false,false,40,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Only mark environment loaded after load_config If load_config fails @loaded should still be falseOtherwise stuff like this fails oddly:    env  Vagrant::Environmentnew(:cwd  /some/directory)    begin      envcli(up)    rescue Vagrant::Errors::VagrantError  err      puts errmessage    ensure      if envloaded        envcli(destroy -f)      end    end,,271,0.7416974169741697,0.59,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4583,8,909,59,unknown,conormcd,mitchellh,false,,0,0,24,39,1000,false,true,false,false,0,0,0,0,0,0,-1
211374,mitchellh/vagrant,ruby,1029,1342529301,,1378073338,592400,,unknown,false,true,false,42,3,0,0,20,0,20,0,18,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,15,0,0,0.0,0,,,0,0.0,0,13,false,Add ability to specify arbitrary NFS mount options per share Additional NFS mount options are specified as an array in the Vagrantfile and they are concatenated and passed to the mount command in the guestThis solution would address #844 and #929,,269,0.7472118959107806,0.59,8667,335.7563170647283,27.922002999884622,54.6902042229145,4575,8,908,42,unknown,dansimau,mitchellh,false,,1,1.0,27,29,885,false,true,false,false,2,0,0,0,0,0,5
207994,mitchellh/vagrant,ruby,1025,1342365916,,1373545469,519659,,unknown,false,false,false,26,1,0,0,2,0,2,0,2,0,0,0,6,0,0,0,2,0,6,8,7,0,1,0,0,96,28,0,0.0,0,,,0,0.0,0,1,false,Implement an FTP downloader which basically works This resolves #974Im not sure how the status_code for errors are assigned so Ive left them as TODOs,,267,0.7528089887640449,0.6276595744680851,8667,335.7563170647283,27.922002999884622,54.6902042229145,4567,8,906,87,unknown,5long,mitchellh,false,,1,1.0,99,2,960,false,true,false,false,1,0,1,0,1,0,295
204929,mitchellh/vagrant,ruby,1023,1342192540,1342315801,1342315801,2054,2054,github,false,false,false,27,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,true,change_host_name should change mailname too On Debian systems confighostname directive should change /etc/mailnamein order to prevent problems with default mailer trying to contactdefault vms name,,265,0.7547169811320755,0.6494845360824743,8665,335.8338141950375,27.928447778418924,54.702827466820544,4564,7,904,16,unknown,bobmaerten,mitchellh,false,mitchellh,0,0,8,10,368,false,true,false,false,0,0,0,0,0,0,2054
203271,mitchellh/vagrant,ruby,1019,1342125190,1342129279,1342129279,68,68,github,false,false,false,35,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,1,false,Update environment::load_plugins to fix broken modification of Gempath on Windows Windows uses the semi-colon () for a path separator The current script assumes a path seperator of colon (:) Replace the hard-coded : with ::File::PATH_SEPARATOR,,263,0.752851711026616,0.67,8665,335.8338141950375,27.928447778418924,54.702827466820544,4561,6,903,15,unknown,marklap,mitchellh,false,mitchellh,0,0,3,3,1045,false,true,true,false,0,0,0,0,0,0,68
7021,mitchellh/vagrant,ruby,1015,1342037050,1342037093,1342037093,0,0,github,false,false,false,78,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,12,0,0,0.0,0,,,0,0.0,0,0,false,This commit has three minor changes to the Puppet provisioners * Renamed the run_puppet_client method in the puppet provisionerto clarify its function running Puppet in apply mode from thecommand line* Renamed the run_puppet_client method in the puppet server provisionerto clarify the agent is being run* Changed the Puppet server provisioner to use the more standard Git-stylecommand line structure The puppetd binary has been deprecated in favour ofpuppet with the agent flag,,262,0.7519083969465649,0.6857142857142857,8569,312.8719803944451,25.790640681526433,51.114482436690395,4542,6,902,14,unknown,jamtur01,mitchellh,false,mitchellh,7,0.7142857142857143,391,15,1561,false,true,false,false,1,0,0,0,0,0,0
195202,mitchellh/vagrant,ruby,1009,1341726551,,1373545437,530314,,unknown,false,false,false,32,1,0,0,3,0,3,0,3,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,[#785] Allow exporting subdirs on BSD hosts This should be safe on all hosts calling this template but furthertesting is suggested It does fix the referenced issue #785 for OSXhosts,,260,0.7538461538461538,0.7027027027027027,8569,312.8719803944451,25.790640681526433,51.114482436690395,4507,7,899,86,unknown,jssjr,mitchellh,false,,1,1.0,67,23,1165,false,true,false,false,1,0,0,0,0,0,47547
195119,mitchellh/vagrant,ruby,1008,1341718284,,1352795011,184612,,unknown,false,false,false,37,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,2,1,1,0,0,0,9,0,0,0.0,0,,,0,0.0,0,0,false,Updating Chef Client provisioning to allow log_location HiI have updated the Chef Client provisioning to allow for log_location to be defined if you want something beside STDOUT  Defaults to STDOUT if nothing is providedThanksZuhaib,,259,0.7567567567567568,0.7027027027027027,8569,312.8719803944451,25.790640681526433,51.114482436690395,4507,7,898,39,unknown,zsiddique,zsiddique,true,,0,0,9,7,751,false,true,false,false,0,0,0,0,0,0,-1
179952,mitchellh/vagrant,ruby,995,1340903333,,1360771924,331143,,unknown,false,false,false,91,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,8,0,0,0.0,0,,,0,0.0,0,0,false,Callback on successful mount for Arch Linux guests Arch Linux will attempt to run /etc/rcd/vagrant-mounted when a mount has been completedAn environment variable MOUNTPOINT is passed to the job the value of which is the path inside the guest that was mounted toThe intention is that this script will trigger any other scripts that need to be run and exit immediately rather than start a long-running daemon This is to work around the fact that Arch Linuxs rcd system does not have support for events like Ubuntus upstart does,,255,0.7607843137254902,0.7017543859649122,8569,312.8719803944451,25.790640681526433,51.114482436690395,4450,9,889,58,unknown,nathankleyn,nathankleyn,true,,0,0,28,166,840,false,true,false,false,0,0,0,0,0,0,-1
174638,mitchellh/vagrant,ruby,991,1340662523,1340663101,1340663101,9,9,github,false,false,false,6,1,0,0,2,0,2,0,4,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0.0,0,,,0,0.0,0,1,false,Small error message fix :) lol,,253,0.758893280632411,0.7053571428571429,8522,312.6026754283032,25.81553625909411,50.809669091762494,4441,9,886,11,unknown,muffs,mitchellh,false,mitchellh,0,0,28,33,661,false,true,false,false,0,0,0,0,0,0,0
166363,mitchellh/vagrant,ruby,987,1340187424,1340217389,1340217389,499,499,github,false,false,false,14,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,Fixes minor typo This fixes a minor capitalization typo for the vagrant init file,,251,0.7569721115537849,0.7241379310344828,8470,301.4167650531287,25.619834710743802,50.29515938606848,4408,9,881,11,unknown,videlalvaro,mitchellh,false,mitchellh,0,0,425,58,1335,false,true,false,false,0,0,0,0,0,0,499
163423,mitchellh/vagrant,ruby,982,1340024367,,1385372222,755737,,unknown,false,true,false,49,1,0,0,28,0,28,0,26,0,0,0,3,0,0,0,0,0,3,3,2,0,1,0,0,38,0,0,0.0,0,,,0,0.0,0,4,false,Support for internal network adapter Because of restrictions i can not use bridged oder host-only networksGenerally we are using NAT As second adapter we use internal network to ensure the communication between virtual machinesI added support for this adapterpreconfigvmnetwork :intnet 19216812 :adapter  2/pre,,250,0.76,0.7310924369747899,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4402,9,879,21,unknown,RLasinski,mitchellh,false,,0,0,0,0,0,false,false,false,false,0,0,0,0,0,0,5178
153543,mitchellh/vagrant,ruby,973,1339315170,1339482290,1339482290,2785,2785,github,false,false,false,140,1,0,0,1,0,1,0,3,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,1,false,Allow the vagrant dotfile to be moved into a completely different directory tree I wanted to define my dotfile as:rubyconfigvagrantdotfile_name  ~/vagrant-projectnameand noticed that the full path wasnt expanded as expectedThis patch allows the vagrant file to be placed anywhere on the filesystem**Note:** I know 0 Ruby so if this is a bad idea or I did something wrong my feelings wont be hurtThe basis for this bug came from running out project inside my Dropbox folder Running the project from Dropbox is really nice and convenient to keep everything synced between my work computer and laptop Except the vagrant file When synced it is killed between computers since the VM has a different UUIDMy solution was to put the vagrant file outside of Dropbox to prevent that file from being synced,,248,0.7580645161290323,0.7540983606557377,8444,302.3448602558029,25.698720985315013,50.45002368545713,4353,10,871,12,unknown,mattrobenolt,mitchellh,false,mitchellh,0,0,136,5,655,false,true,false,false,1,2,0,0,0,0,2785
152763,mitchellh/vagrant,ruby,971,1339215789,1374640898,1374640898,590418,590418,merged_in_comments,false,true,false,99,8,7,0,5,0,5,0,8,0,0,5,6,5,0,0,0,0,6,6,6,0,0,57,0,59,0,35.36043644001953,2.044565562181495,158,xmitchx@gmail.com,lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/general/package.rb|lib/vagrant/action/general/package.rb,140,0.08403361344537816,0,6,false,Fedora 16 + HostOnlyNetworking  NoBoot On a Fedora 16 machine created with veewee doesnt startvagrant outputs this on up:    [widget] Configuring and enabling network interfaces    The following SSH command responded with a non-zero exit status    Vagrant assumes that this means the command failed    /sbin/ifup p7p1 2 /dev/nullssh to the machine an running the command yields    ERROR : [/etc/sysconfig/network-scripts/ifup-eth] Device p7p1 does not seem to be present delaying initializationAs far as I can tell this only happens when HostOnlyNetworking is onps: I hope I did this right as this is my first pull request :),,246,0.7560975609756098,0.7647058823529411,8444,302.3448602558029,25.698720985315013,50.45002368545713,4350,9,870,50,unknown,monvillalon,mitchellh,false,mitchellh,0,0,2,0,1,false,true,false,false,1,2,0,0,0,0,4442
152274,mitchellh/vagrant,ruby,968,1339166789,1339183383,1339183383,276,276,github,false,false,false,9,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,3,0,0,0.0,0,,,0,0.0,0,0,true,Explicitly tell ssh server were done sending data https://githubcom/mitchellh/vagrant/issues/967,,244,0.7540983606557377,0.7627118644067796,8442,302.41648898365315,25.70480928689884,50.46197583511016,4348,9,869,11,unknown,mxtthias,mitchellh,false,mitchellh,0,0,6,9,869,false,true,false,false,1,0,0,0,0,0,276
151525,mitchellh/vagrant,ruby,966,1339140099,1339482462,1339482462,5706,5706,github,false,false,false,60,1,0,0,1,0,1,0,1,0,0,0,3,0,0,0,0,0,3,3,3,0,0,0,0,27,0,0,0.0,0,,,0,0.0,0,0,true,Add the ability to map mac addresses to interfaces As part of the windows plugin I need the ability to match network interfaces based on the MAC address that they are assigned Because of the way that windows manages networking interfaces the only way to match them up to Interface Ids is to use the mac address https://githubcom/BIAINC/vagrant-windows/blob/master/lib/vagrant-windows/guest/windowsrb#L61ThoughtsPaul,,243,0.7530864197530864,0.7627118644067796,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4347,10,869,11,unknown,pmorton,mitchellh,false,mitchellh,0,0,1,2,512,false,true,false,false,0,0,0,0,0,0,5706
150922,mitchellh/vagrant,ruby,964,1339102116,1339183478,1339183478,1356,1356,github,false,false,false,235,1,0,0,1,0,1,0,3,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,7,0,0,0.0,0,,,0,0.0,1,0,false,Fix problem that Puppet module-paths were re-ordered by Vagrant Puppet module-path were re-ordered by Vagrant due to the use of ahash This could lead to unpredictable resultsI have my Puppet modules split into several directories (/common /ci /production etc) When a module is present in multiple directories the first match decides what module is taken So order on the module path matters in my caseHowever Vagrant uses a Hash when handling module-paths so the order is not determinist and would change from run to run See the following output:The following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failedcd /tmp/vagrant-puppet/manifests && puppet apply --verbose --modulepath /tmp/vagrant-puppet/modules-1:/tmp/vagrant-puppet/modules-0:/tmp/vagrant-puppet/modules-2 /tmp/vagrant-puppet/manifests/defaultppjbraeuer@Jenss-CT-MacBook:~/dev/vms/oneiric$ vagrant provision[default] Running provisioner: Vagrant::Provisioners::Puppet[default] Running Puppet with /tmp/vagrant-puppet/manifests/defaultppstdin: is not a ttyinfo: Loading facts in /tmp/vagrant-puppet/modules-1/puppetlabs-firewall/lib/facter/iptablesrbinfo: Loading facts in /tmp/vagrant-puppet/modules-1/puppetlabs-stdlib/lib/facter/facter_dot_drbinfo: Loading facts in /tmp/vagrant-puppet/modules-1/puppetlabs-stdlib/lib/facter/root_homerbInvalid parameter after at /tmp/vagrant-puppet/manifests/defaultpp:2 on node oneiric-amd64muppet-showThe following SSH command responded with a non-zero exit statusVagrant assumes that this means the command failedcd /tmp/vagrant-puppet/manifests && puppet apply --verbose --modulepath /tmp/vagrant-puppet/modules-2:/tmp/vagrant-puppet/modules-0:/tmp/vagrant-puppet/modules-1 /tmp/vagrant-puppet/manifests/defaultppSo the second run the modules are ordered 2-0-1 but on the first run it was 1-0-2Please double check my changes as I was unable to add a test (Why did Vagrant drop support for Ruby 187 - I dont have 19 on this machine currently),,242,0.7520661157024794,0.7692307692307693,8442,302.41648898365315,25.70480928689884,50.46197583511016,4345,9,868,10,unknown,jbraeuer,mitchellh,false,mitchellh,0,0,14,11,490,false,true,false,false,0,0,0,0,0,0,1355
140628,mitchellh/vagrant,ruby,959,1338355325,,1338443226,1465,,unknown,false,false,false,51,1,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,prevent static (hostonly) interface from messing with dns it seems that when centos does the ifdown and then ifup of a static interface (in my case a hostonly interface) that dhclient messes with the dns server in /etc/resolvconfadding PEERDNSno to the template should prevent thisany thoughts on this change,,240,0.7541666666666667,0.7890625,8361,305.2266475301997,25.953833273531874,50.95084320057409,4308,11,860,11,unknown,sbfaulkner,sbfaulkner,true,,0,0,32,34,1517,false,true,false,false,0,0,0,0,0,1,-1
140079,mitchellh/vagrant,ruby,957,1338321945,1338560851,1338560851,3981,3981,commit_sha_in_comments,false,false,false,87,2,0,0,5,0,5,0,2,0,0,0,3,0,0,0,0,0,3,3,1,2,0,0,0,37,0,0,0.0,0,,,0,0.0,0,0,false,Fix support for multiple interfaces on Arch Linux guests This patch fixes issue #956 It uses the default (/etc/rcconf) for the NAT interface and netcfg for the remaining interfacesNote that netcfg is a standard tool to configure multiple interfaces but it is not a core package so it might not be installed in a minimum systemI could not get the patch running with the HEAD of the git repo (there is some issue I couldnt get around of) but it passed basic testing on 1-0-stable,,239,0.7531380753138075,0.7890625,8361,305.2266475301997,25.953833273531874,50.95084320057409,4305,11,859,10,unknown,masm,mitchellh,false,mitchellh,0,0,2,2,1387,false,true,false,false,1,0,0,0,0,0,3812
138977,mitchellh/vagrant,ruby,954,1338240094,1338550770,1338550770,5177,5177,github,false,false,false,9,1,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,7,0,0,0.0,0,,,0,0.0,0,0,false,Reword plugin autoloading message slightly Hopefully thats ok :),,238,0.7521008403361344,0.8,8361,305.2266475301997,25.953833273531874,50.95084320057409,4303,10,858,10,unknown,leth,mitchellh,false,mitchellh,0,0,10,7,1207,false,false,true,false,14,14,0,0,0,0,374
137272,mitchellh/vagrant,ruby,951,1338051199,1338055568,1338055568,72,72,github,false,false,false,45,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Preserve attritubes on included files When using ruby 192 the attributes of the included files are not preserved Since veewee uses this ruby version this is a problem when someone is not using the default private key and tries to build a baseboxSee http://bugsruby-langorg/issues/4507,,237,0.7510548523206751,0.8285714285714286,7453,1013.6857641218302,98.21548369783979,251.03984972494297,4294,11,856,10,unknown,oker1,mitchellh,false,mitchellh,1,0.0,17,27,597,false,true,true,false,1,1,2,0,0,0,72
137234,mitchellh/vagrant,ruby,950,1338051041,,1338051101,1,,unknown,false,false,false,43,5,4,0,0,0,0,0,1,0,0,4,5,4,0,0,0,0,5,5,5,0,0,49,0,53,0,27.485091623049694,1.5929718673949094,61,xmitchx@gmail.com,lib/vagrant/action/vm/network.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb,49,0.06666666666666667,0,0,false,Preserve attritubes on included files When using ruby 192 the attributes of the included files are not preserved Since veewee uses this ruby version this is a problem when someone is not using the default private key and tries to build a basebox,,236,0.7542372881355932,0.8285714285714286,8361,305.2266475301997,25.953833273531874,50.95084320057409,4294,11,856,9,unknown,oker1,oker1,true,,0,0,17,27,597,false,true,false,false,0,0,0,0,0,0,-1
136733,mitchellh/vagrant,ruby,948,1337985990,1338009784,1338009784,396,396,github,false,false,false,23,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,true,is_port_openrb needs to catch ENETUNREACH  socket connect to localhost 2222 results in ENETUNREACH which needs to be caught as per this patch,,235,0.7531914893617021,0.8301886792452831,8361,305.2266475301997,25.953833273531874,50.95084320057409,4291,11,855,9,unknown,kindjal,mitchellh,false,mitchellh,0,0,1,2,532,false,false,true,false,0,0,0,0,0,0,396
135415,mitchellh/vagrant,ruby,947,1337894056,1337967772,1337967772,1228,1228,github,false,false,false,60,1,0,0,1,0,1,0,4,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,add workaround for ubuntu precise not properly loading routes from dhcp This is a follow up to the pull requests in ticket #862 On upgrading to the Ubuntu 1204 Precise boxes I found that even when not deleting the route the route is not added for dhcp interfaces This workaround fixes the problem until I can find a root cause,,234,0.7521367521367521,0.8407079646017699,8361,305.2266475301997,25.953833273531874,50.95084320057409,4287,11,854,10,unknown,justinlynn,mitchellh,false,mitchellh,2,0.5,7,0,1304,false,true,false,false,3,2,2,0,0,0,1228
135204,mitchellh/vagrant,ruby,946,1337884563,,1337967667,1385,,unknown,false,false,false,23,1,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,8,0,0,0.0,0,,,0,0.0,0,0,false,Copy include files to @envcwd Additional files include during the package are not copied in workspace I added a fix to do it,,233,0.7553648068669528,0.8407079646017699,8361,305.2266475301997,25.953833273531874,50.95084320057409,4286,11,854,10,unknown,npeters,mitchellh,false,,0,0,0,2,305,false,true,false,false,0,0,0,0,0,0,-1
42583,mitchellh/vagrant,ruby,933,1337241165,1360401800,1360401800,386010,386010,commit_sha_in_comments,false,false,false,138,4,0,3,26,0,29,0,11,0,0,0,3,0,0,0,2,0,3,5,3,0,1,0,0,60,46,0,0.0,0,,,0,0.0,0,11,false,Enable Windows users with SSH installed to use vagrant ssh Hello MitchellI think vagrant is awesome thank youI use vagrant on Windows and discovered that vagrant ssh just leads to an error message that says use putty But I already have ssh on my system because it is included with git (and cygwin and mingw) So I changed the vagrant code so that it works more like the *nix version and uses which to discover whether ssh is already installed This required that I write a platform independent which function in Ruby and some unit tests And I tested it on Windows and Linux (Ubuntu Lucid)I hope you like it please let me know if theres anything youd like me to change and I will gladly do soBestPat--Patrick Wyatt - webcoyote,,230,0.7565217391304347,0.8396946564885496,8196,304.904831625183,25.866276232308444,50.14641288433382,4262,14,847,51,unknown,webcoyote,mitchellh,false,mitchellh,0,0,289,2,281,false,true,false,false,0,0,0,0,1,0,792
312171,mitchellh/vagrant,ruby,931,1337016010,1337552170,1337552170,8936,8936,github,false,false,false,28,1,0,0,5,0,5,0,3,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,2,false,typo in change_host_name ive copied this typo from the debian provider and it is also present in the arch and ubuntu provider  maybe a typo there too,,229,0.7554585152838428,0.85,8196,304.904831625183,25.866276232308444,50.14641288433382,4250,14,844,11,unknown,hollow,mitchellh,false,mitchellh,1,1.0,21,22,1421,true,false,false,false,1,1,1,0,3,0,7253
309178,mitchellh/vagrant,ruby,922,1336457732,1337451535,1337451535,16563,16563,commit_sha_in_comments,false,false,false,53,10,8,0,0,0,0,0,1,0,0,7,8,6,1,0,0,0,8,8,7,1,0,67,0,72,0,45.751690097083134,2.651043867189545,97,xmitchx@gmail.com,CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/communication/ssh.rb|templates/commands/init/Vagrantfile.erb|README.md|lib/vagrant.rb|lib/vagrant/version.rb,70,0.030303030303030304,0,0,false,Attempt to set hostname earlier in bootstrap process Because of http://serverfaultcom/questions/38114/why-does-sudo-command-take-long-to-execute it can take really long to start up via vagrant on centos if you use a host only network  By moving the setting of the hostname earlier in the process before restarting the network interfaces several minutes are saved in this condition,,227,0.7533039647577092,0.8727272727272727,8196,304.904831625183,25.866276232308444,50.14641288433382,4216,15,838,10,unknown,jmahowald,mitchellh,false,mitchellh,1,0.0,1,2,696,false,false,false,false,2,5,2,0,0,0,-1
308590,mitchellh/vagrant,ruby,918,1336358671,,1336457565,1648,,unknown,false,false,false,177,8,5,0,1,0,1,0,1,0,0,5,7,5,0,0,0,0,7,7,6,1,0,62,0,67,0,32.60255093027556,1.8891278664250297,100,xmitchx@gmail.com,CHANGELOG.md|lib/vagrant/version.rb|lib/vagrant/action/vm/sane_defaults.rb|CHANGELOG.md|lib/vagrant/version.rb|README.md|lib/vagrant.rb,76,0.06547619047619048,0,0,false,Logging changes and tips for setting up multiple ips It took me a while to figure out how to add multiple ips to a vagrant node  I added in a couple more samples into the Vagrantfile  My bigger problem was things got really slow when I first did it  Eventually by tweaking the logs to  get timestamps and data from net/ssh I was able to zero in on a problem with sudo and /etc/hosts  This may well be limited to just centos or fedora (http://serverfaultcom/questions/38114/why-does-sudo-command-take-long-to-execute) but I found that I had to have an explicit host name in place  The first run is still a bit slow for me (I think the hosts file is updated after several sudo requests and I could see an argument for doing that first although I might just update my basebox to have a better base /etc/hosts  That being said I do think that making the log format configurable and having a way to pass log levels on to net/ssh could help people debug similar problemsKeep up the great work,,226,0.7566371681415929,0.8690476190476191,8196,304.904831625183,25.866276232308444,50.14641288433382,4212,16,836,7,unknown,jmahowald,jmahowald,true,,0,0,1,2,694,false,false,false,false,1,3,0,0,0,0,940
308406,mitchellh/vagrant,ruby,915,1336301485,1336330185,1336330185,478,478,github,false,false,false,139,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,16,10,0,0.0,0,,,0,0.0,4,0,false,Fix support for multiple unique easy commands So it turns out that my original issue with the class variable usage for Vagrant::Easy::CommandBase actually causes issues I wrote a small test that fails with the current codebase:ruby    it should support registering multiple unique commands do      plugins  %w(foo bar baz)map do |cmd|        [cmd Vagrant::Easycreate_command(cmd)]      end      pluginseach do |cmd plugin|        pluginclass_variable_get(:@@command)should  cmd      end    endThe above test will fail since @@command will end up having the value baz for all three easy commands This is because class variables will be shared across new subclasses of Vagrant::Easy::CommandBase:ruby    def selfcreate_command(name &block)      # Create a new command class for this command and return it      command  Classnew(CommandBase)      commandconfigure(name &block)      command    endThe fix is to not use class variables and instead use class instance variables for @@command and @@runner,,225,0.7555555555555555,0.8690476190476191,8176,303.20450097847356,25.440313111545986,49.779843444227005,4208,16,836,8,unknown,ryanlecompte,mitchellh,false,mitchellh,0,0,117,957,436,false,false,true,false,0,0,0,0,0,0,478
306318,mitchellh/vagrant,ruby,911,1335913767,1335942212,1335942212,474,474,github,false,false,false,93,2,0,0,1,0,1,0,2,0,0,0,1,0,0,0,1,0,1,2,2,0,0,0,0,1,25,0,0.0,0,,,0,0.0,0,0,false,Dont raise an error if keyfile permissions are modified successfully In the Vagrant::SSH#check_key_permissions method it would set the correct file permissions if they were incorrect Then it checked again to see if the change actually was applied There was a bug in the code that didnt update the stat object so therefore it will always check against the old permissions not the new This would cause an error to be raised which would halt execution on the first runThis patch fixes the error and has an elementary unit test for this bug,,222,0.7522522522522522,0.893491124260355,8027,301.73165566214027,25.28964743989037,49.83181761554753,4191,15,831,15,unknown,squarelover,mitchellh,false,mitchellh,0,0,9,25,1394,false,true,false,false,0,0,0,0,0,0,474
305843,mitchellh/vagrant,ruby,909,1335836211,1335943508,1335943508,1788,1788,merged_in_comments,false,false,false,69,2,0,0,2,0,2,0,3,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,28,0,0,0.0,0,,,0,0.0,0,0,false,Detect and disable DNS settings that break on Ubuntu 1204 The change in c137dec14f6a7dcfc032a0967ed520addba16b87 breaks for newer ubuntu installationsas found in https://githubcom/mitchellh/vagrant/pull/834#issuecomment-5049407This small fix detects that 127001 is localhost and then disables any natdns changes for VirtualBoxwith the end result that DNS 10022 is given to the VM and that is forwarded correctly to127001 that is configured by default in newer Ubuntu due to resolvconf,,221,0.751131221719457,0.9011627906976745,8027,301.73165566214027,25.28964743989037,49.83181761554753,4187,15,830,15,unknown,jhf,mitchellh,false,mitchellh,1,0.0,3,2,1377,false,false,false,false,1,0,1,0,0,0,1290
107699,mitchellh/vagrant,ruby,907,1335800808,,1385437565,827219,,unknown,false,false,false,123,6,0,0,13,0,13,0,11,0,0,0,9,0,0,0,0,0,9,9,7,1,1,0,0,103,48,0,0.0,0,,,0,0.0,0,8,false,Feature private key paths I have added a feature to allow private_key_paths in addition to private_key_pathThis allows specification of multiple private keysI have also added unit tests for both private_key_path and private_key_pathsThe rationale for this feature is to allow vagrant up to use the insecure key until a puppet script runsthan replaces the vm key with the developers own keyThen for vagrant ssh it will try both keys but only the secure key will workIn our project we can then use the following in VagrantfilerubyVagrant::Configrun do |config|  #   configvmdefine :default do |vm_config|    #     vm_configsshprivate_key_paths  [~/vagrantd/insecure_private_key~/ssh/id_rsa]  endendAnd now the developer can use both insecure or own private key with ease,,220,0.7545454545454545,0.9022988505747126,8196,304.904831625183,25.866276232308444,50.14641288433382,4184,15,830,20,unknown,jhf,mitchellh,false,,0,0,3,2,1377,false,false,false,false,0,0,0,0,0,0,9112
304180,mitchellh/vagrant,ruby,905,1335479092,1336197124,1336197124,11967,11967,github,false,false,false,36,1,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Fix for issue #898 - interfaces assigned in wrong order under ruby18 Fixes a bug where interfaces are assigned in a wrong order when using ruby18 causing vm boot to stop as documented in issue #898,,219,0.7534246575342466,0.9154228855721394,8027,301.73165566214027,25.28964743989037,49.83181761554753,4168,15,826,13,unknown,LarsFronius,mitchellh,false,mitchellh,0,0,7,18,442,false,true,false,false,1,3,0,0,0,0,4
103557,mitchellh/vagrant,ruby,902,1335441719,,1385435254,833165,,unknown,false,false,false,79,4,0,0,12,0,12,0,10,0,0,0,3,0,0,0,0,0,3,3,2,0,1,0,0,83,0,0,0.0,0,,,0,0.0,0,0,false,Permit setting the cert and private key by the puppet server provisioner (plugin version) Re https://githubcom/mitchellh/vagrant/issues/810There are two small changes in a separate commit that just allow the puppet server provisioner to work (typos)This version is updated for the new plugin architecture It allows both inline certs/keys and files:puppetclient_certificate_path  ~/puppet_ssl/certs/testsamplechpempuppetclient_private_key_path  ~/puppet_ssl/private_keys/testsamplechpem    puppetclient_certificate  -EOF      -----BEGIN CERTIFICATE-----      -----END CERTIFICATE-----    EOF    puppetclient_private_key  -EOF      -----BEGIN RSA PRIVATE KEY-----      -----END RSA PRIVATE KEY-----    EOF,,218,0.7568807339449541,0.9154228855721394,8196,304.904831625183,25.866276232308444,50.14641288433382,4166,15,826,20,unknown,dbroeglin,mitchellh,false,,2,0.5,5,0,743,false,true,false,false,3,4,2,0,0,0,231822
298370,mitchellh/vagrant,ruby,882,1334422868,1336195772,1336195772,29548,29548,github,false,false,false,37,2,0,0,3,0,3,0,4,0,0,0,1,0,0,0,1,0,1,2,1,0,0,0,0,7,0,0,0.0,0,,,0,0.0,0,1,false,Added basic support for bash autocompletion At the moment its based on the first and last command in the help list When they change this script wont work properly anymore But for me this is very helpful,,216,0.7592592592592593,0.9065420560747663,7476,1010.5671482075977,97.91332263242374,250.26752273943288,4097,17,814,15,unknown,nesQuick,mitchellh,false,mitchellh,0,0,28,13,444,false,true,false,false,0,0,0,0,0,0,14670
296025,mitchellh/vagrant,ruby,878,1334053579,,1336195800,35703,,unknown,false,false,false,65,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,131,0,0,0.0,0,,,0,0.0,0,1,false,Simple bash completion If you guys knows about a way to list the vms in a multi-vm environment please let me know Im working on parsing the Vagrantfile look for configvmdefine :(vm_name) and capture vm_name to complete the names but it might be a better way I didnt find a way to differentiate between regular vms and vagrant vms with: VBoxManage list vms any ideas,,215,0.7627906976744186,0.8844221105527639,7475,1010.7023411371237,97.92642140468227,250.30100334448164,4061,19,810,15,unknown,rafmagana,mitchellh,false,,0,0,45,1,1038,false,true,false,false,3,6,0,0,0,0,74
295924,mitchellh/vagrant,ruby,877,1334026788,1336195876,1336195876,36151,36151,github,false,false,false,51,2,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,5,0,0,0.0,0,,,0,0.0,0,0,false,Dont use IdentitiesOnly under ssh -p Plain mode SSH shouldnt specify IdentitiesOnly as that forgoes use of the local users own SSH agent Plain mode implies use my local SSH setup I just want Vagrant filling in the blanks re: VM port so having ones agent work is pretty important :),,214,0.7616822429906542,0.8829787234042553,7475,1010.7023411371237,97.92642140468227,250.30100334448164,4059,18,809,15,unknown,bitprophet,mitchellh,false,mitchellh,2,1.0,295,5,1461,false,true,false,false,2,0,1,0,1,0,36151
454619,mitchellh/vagrant,ruby,876,1334020239,,1373545316,658751,,unknown,false,false,false,91,1,1,0,10,0,10,0,12,0,0,3,3,1,2,0,0,0,3,3,1,2,0,33,0,33,0,13.890607557334578,0.7343427058948928,9,xmitchx@gmail.com,lib/vagrant/provisioners/chef.rb|templates/provisioners/chef_client/client.erb|templates/provisioners/chef_solo/solo.erb,7,0.010638297872340425,0,4,false,Allow to customize the chef solo/client configuration Right now Vagrant generates Chef solo/client configuration from a template but the fields are fixed and its imposible to add things that are not in the basic configuration like report handlers for instanceI was considering to add a new attribute to allow to use a configuration file provided by the user but Im not sure if thats the best approach since I still need to add the paths that vagrant generates into the vm for the recipesIdeas and comments are really appreciated,,213,0.7652582159624414,0.8829787234042553,7475,1010.7023411371237,97.92642140468227,250.30100334448164,4058,18,809,90,unknown,calavera,mitchellh,false,,5,0.4,184,23,1503,false,true,false,false,8,2,6,0,0,0,2
294158,mitchellh/vagrant,ruby,868,1333650673,1336348018,1336348018,44955,44955,github,false,false,false,77,2,0,0,1,0,1,0,2,0,0,0,2,0,0,0,0,0,2,2,1,1,0,0,0,8,0,0,0.0,0,,,0,0.0,0,0,false,Issue #862: Allow bridged networking without removing the interfaces DHCP assigned default route Add an option to the bridged network configuration templates and configuration block to allow for dynamically including the removal of the default route as assigned by DHCP Another pull request has been created to address the docs branch First pull request on the vagrant source code-base and so Im not sure Ive modified the correct areas and templates rake tests pass feedback greatly appreciated,,210,0.7666666666666667,0.8502673796791443,7475,1010.7023411371237,97.92642140468227,250.30100334448164,4042,19,805,14,unknown,justinlynn,mitchellh,false,mitchellh,0,0,7,0,1255,false,true,false,false,1,1,0,0,0,0,44955
454716,mitchellh/vagrant,ruby,857,1333355845,1333432725,1333432725,1281,1281,commit_sha_in_comments,false,false,false,12,2,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Fix for invalid type checking Fix based on my comment at https://githubcom/mitchellh/vagrant/commit/eb07788db19db5b29debb545eb5ff83f59ed74fe#lib/vagrant/driver/virtualbox_4_1rb-P51,,208,0.7644230769230769,0.8102564102564103,7462,1012.463146609488,98.09702492629322,250.73706781023853,4022,21,802,7,unknown,theju,mitchellh,false,mitchellh,0,0,21,0,1237,false,false,false,false,0,0,0,0,0,0,102
292136,mitchellh/vagrant,ruby,856,1333350326,1333522576,1333522576,2870,2870,github,false,false,false,89,2,0,0,3,0,3,0,2,0,0,0,7,0,0,0,0,0,7,7,7,0,0,0,0,14,0,0,0.0,0,,,0,0.0,0,0,false,Cleanup any tmp files set by vagrant to fix a permissions issue when switching users I ran into a permissions issue where if I changed the user in the Vagrantfile and ran vagrant reload an error would be raised when trying to upload a tmp file [1] because it was owned by the previous userThis pull request avoids that by cleaning up any /tmp/vagrant-* after the network has been configured Im not sure how to write a test for this and Ive only tested on ubuntu64[1] https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/guest/debianrb#L38,,207,0.7632850241545893,0.8102564102564103,7462,1012.463146609488,98.09702492629322,250.73706781023853,4022,21,802,6,unknown,stevehodgkiss,mitchellh,false,mitchellh,0,0,38,97,1118,false,true,false,false,0,0,0,0,0,0,56
75952,mitchellh/vagrant,ruby,855,1333331787,,1378069588,745630,,unknown,false,true,false,32,2,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,3,3,2,1,0,0,0,11,0,0,0.0,0,,,0,0.0,0,0,false,fix #844: allow to specify nfs user id mapping and sync This is a simple idea to allow to modify the user id mapping and to set sync into the nfs exports,,206,0.7669902912621359,0.8102564102564103,7462,1012.463146609488,98.09702492629322,250.73706781023853,4021,21,801,43,unknown,calavera,mitchellh,false,,4,0.5,183,23,1495,false,true,false,false,6,2,5,0,0,0,-1
75373,mitchellh/vagrant,ruby,854,1333256663,,1371081342,630411,,unknown,false,false,false,33,1,0,0,1,0,1,0,2,0,0,0,2,0,0,0,0,0,2,2,1,0,1,0,0,6,0,0,0.0,0,,,0,0.0,0,1,false,fix #809: Show a more descriptive error mouting shared folders Im not sure if the legacy test suite is being maintained so I dont know if I should add a test case there,,205,0.7707317073170732,0.8020304568527918,7462,1012.463146609488,98.09702492629322,250.73706781023853,4016,21,801,83,unknown,calavera,fgrehm,false,,3,0.6666666666666666,183,23,1495,false,true,false,false,4,1,4,0,0,0,4433
291823,mitchellh/vagrant,ruby,853,1333252340,1333392660,1333392660,2338,2338,github,false,false,false,16,2,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Fix importing progress status check Sorry I introduced this bug and master does not import vms,,204,0.7696078431372549,0.8020304568527918,7462,1012.463146609488,98.09702492629322,250.73706781023853,4016,21,800,7,unknown,calavera,mitchellh,false,mitchellh,2,0.5,183,23,1494,false,true,false,false,2,1,3,0,0,0,2338
381533,mitchellh/vagrant,ruby,847,1333083818,,1333392750,5148,,unknown,false,false,true,96,1,0,0,5,0,5,0,4,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,1,true,Eliminate SSH warning messages I set up a Vagrant VM to use host-only networking then run vagrant ssh-config  ~/ssh/configWhen I ssh or scp to my Vagrant VM I get a blizzard of warning messages:    Warning: Permanently added [127001]:2222 (RSA) to the list of known hostsThe problem is that Vagrant sets UserKnownHostsFile to /dev/null  Nothing can get added to the list of known hosts so you get the warning message over and over againThe solution is to set the UnserKnownHostsFile to ~/vagrantd/known_hosts  Once this is done you see the warning message only once,,203,0.7733990147783252,0.8020304568527918,7444,1014.9113379903279,98.33422890918861,251.34336378291238,4003,21,799,8,unknown,andyl,mitchellh,false,,0,0,0,2,1036,false,true,false,false,0,0,0,0,0,0,731
290629,mitchellh/vagrant,ruby,846,1333038961,1333168289,1333168289,2155,2155,commit_sha_in_comments,false,false,false,127,1,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,4,4,3,0,1,0,0,12,0,0,0.0,0,,,0,0.0,0,0,false,Detect when the VirtualBox installation is incomplete and error After a kernel upgrade without rebuilding the VirtualBox kernel modules Vagrant gave the following error:    Vagrant has detected that you have a version of VirtualBox installed    that is not supported Please install one of the supported versions    listed below to use Vagrant:        40 41I saw [GH-677] and noticed that VBoxManage was complaining with the following error:    $ VBoxManage --version    WARNING: The character device /dev/vboxdrv does not exist             Please install the virtualbox-ose-dkms package and the appropriate             headers most likely linux-headers-generic                 You will not be able to start VMs until this problem is fixed    412_Ubuntur38459Because it didnt fit the error output matched in ce2ea4ea9339e0292b9f85574e59fd8868e1669e Ive added an additional error condition check which warns of an incomplete VirtualBox installation,,202,0.7722772277227723,0.8020304568527918,7444,1014.9113379903279,98.33422890918861,251.34336378291238,3995,21,798,4,unknown,skarab,mitchellh,false,mitchellh,0,0,75,41,1458,false,true,false,false,0,0,0,0,0,0,-1
287557,mitchellh/vagrant,ruby,834,1332521287,1332521342,1332521342,0,0,github,false,false,false,133,1,0,0,1,0,1,0,5,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,8,0,0,0.0,0,,,0,0.0,2,1,true,Enable DNS proxy (in NAT mode) by default This is just the new incarnation of: https://githubcom/mitchellh/vagrant/pull/749**Original description:**I provisioned a VM at coworking today and the guest VM inherited the nameserver info from that network:vagrant@piab-private-chef:~$ cat /etc/resolvconf nameserver 19216834251domain theboxsearch theboxI went home where I expected this configuration:nameserver 20867222222 # opendnsnameserver 1066441 # internal routerVirtualBox ships with the [ability to enable a DNS proxy in NAT mode](http://wwwvirtualboxorg/manual/ch09html#nat-adv-dns) to shield the guest VM from this issue  When this mode is enabled the guest VM receives this configuration:vagrant@piab-private-chef:~$ cat /etc/resolvconf nameserver 1002310023 is a DNS proxy that does the right thing We should probably enable by default when Vagrant has a network type :hostonly  This commit does just that,,200,0.77,0.7936507936507936,7374,1020.2061296446976,98.99647409818282,253.45809601301872,3971,21,792,5,unknown,schisamo,mitchellh,false,mitchellh,3,0.6666666666666666,60,33,1443,false,false,false,false,4,5,3,0,0,0,0
286316,mitchellh/vagrant,ruby,827,1332363269,,1357893382,425501,,unknown,false,false,false,9,1,0,0,2,0,2,0,2,0,0,0,7,0,0,0,0,0,7,7,4,3,0,0,0,12,0,0,0.0,0,,,0,0.0,0,0,false,Allow NFS directories to be mounted read only #822 ,,198,0.7727272727272727,0.7936507936507936,7339,1024.935277285734,99.46859245128763,254.66684834446107,3950,21,790,63,unknown,dcolish,dcolish,true,,0,0,52,61,1360,false,true,false,false,1,0,0,0,0,0,2614
286039,mitchellh/vagrant,ruby,826,1332352094,1332519186,1332519186,2784,2784,github,false,false,false,18,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,Adds chefroles_path and chefdata_bags_path to template Adds some extra fields to the chef-solo config example in the template,,197,0.7715736040609137,0.7936507936507936,7339,1024.935277285734,99.46859245128763,254.66684834446107,3950,21,790,7,unknown,lorin,mitchellh,false,mitchellh,0,0,54,25,518,false,false,false,false,1,1,0,0,0,0,2784
283640,mitchellh/vagrant,ruby,820,1332096631,1332106889,1332106889,170,170,github,false,false,false,50,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,9,0,0,0.0,0,,,0,0.0,0,0,false,Suppot SunSSH Hi thereSunSSH is default on Solaris/OpenSolaris/Illumos/OpenIndiana (instead of OpenSSH) SunSSH currently does not support the IdentitiesOnly option vagrant ssh works when the options is not suppliedI dont know if this solution is the right way to go but it works on my Illumos machine CheersHendrik,,196,0.7704081632653061,0.8040201005025126,7312,1028.7199124726476,99.83588621444201,255.60722100656457,3931,21,787,8,unknown,hvolkmer,mitchellh,false,mitchellh,0,0,14,0,1428,false,true,false,false,0,0,0,0,0,0,170
283361,mitchellh/vagrant,ruby,818,1332021097,,1335441746,57010,,unknown,false,false,false,73,3,0,0,3,0,3,0,2,0,0,0,2,0,0,0,0,0,2,2,1,0,1,0,0,109,0,0,0.0,0,,,0,0.0,0,0,false,Permit setting the cert and private key by the puppet server provisioner Re https://githubcom/mitchellh/vagrant/issues/810Here is a first shot It can be used in the following way:      configvmprovision :puppet_server do |puppet|        puppetpuppet_node  myhostexamplecom        puppetclient_certificate  -EOF          -----BEGIN CERTIFICATE-----              -----END CERTIFICATE-----        EOF        puppetclient_private_key  -EOF          -----BEGIN RSA PRIVATE KEY-----              -----END RSA PRIVATE KEY-----        EOF      endI tried to stick to the practice I saw in the code Any comments are welcome,,195,0.7743589743589744,0.8202764976958525,8027,301.73165566214027,25.28964743989037,49.83181761554753,3928,21,786,20,unknown,dbroeglin,dbroeglin,true,,1,1.0,3,0,703,false,true,false,false,2,2,1,0,0,0,8309
283063,mitchellh/vagrant,ruby,816,1331941930,1332519696,1332519696,9629,9629,github,false,false,false,34,1,1,0,1,0,1,0,1,0,0,3,3,2,1,0,0,0,3,3,2,1,0,16,3,16,3,13.472826695582597,0.7188884866956579,8,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_solo.rb|templates/provisioners/chef_solo/solo.erb|test/unit_legacy/vagrant/provisioners/chef_solo_test.rb,8,0.004464285714285714,0,0,true,Add encrypted data bag options to chef-solo Basically what the title says It adds encrypted data bag support to the chef-solo provisioner I took what was in chef-client and basically duplicated it in chef-solo ,,194,0.7731958762886598,0.8258928571428571,7312,1028.7199124726476,99.83588621444201,255.60722100656457,3922,21,785,8,unknown,Oakie3CR,mitchellh,false,mitchellh,0,0,1,0,1005,false,true,false,false,0,0,0,0,0,0,9629
282280,mitchellh/vagrant,ruby,808,1331734052,1331837421,1331837421,1722,1722,github,false,false,false,17,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Expand private_key_path before checking existence This allows for paths like ~/ssh/some_key to be defined in the Vagrantfile,,191,0.7696335078534031,0.8347457627118644,7312,1028.7199124726476,99.83588621444201,255.60722100656457,3905,22,783,5,unknown,rvermeulen,mitchellh,false,mitchellh,0,0,1,0,384,false,true,false,false,0,0,0,0,0,0,1722
287647,mitchellh/vagrant,ruby,807,1331710953,,1332529275,13638,,unknown,false,false,false,55,1,0,0,3,0,3,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,5,0,0,0.0,0,,,0,0.0,0,0,false,only move to the work directory once Right now every time that Vagrant wants to run a command it moves to the work directory If two processes try to move to the directory at the same time it fails It only needs to move to the work directory once thoughThis patch fix this issue,,190,0.7736842105263158,0.8361344537815126,7312,1028.7199124726476,99.83588621444201,255.60722100656457,3904,22,783,6,unknown,calavera,mitchellh,false,,1,1.0,181,23,1477,false,true,false,false,1,0,1,0,0,0,2117
291523,mitchellh/vagrant,ruby,806,1331710466,1333168663,1333168663,24303,24303,merged_in_comments,false,false,false,8,2,0,0,1,0,1,0,1,0,0,0,6,0,0,0,0,0,6,6,6,0,0,0,0,304,0,0,0.0,0,,,0,0.0,0,0,false,Remove global variables they are not nice :smile:,,189,0.7724867724867724,0.8361344537815126,7312,1028.7199124726476,99.83588621444201,255.60722100656457,3904,22,783,7,unknown,calavera,mitchellh,false,mitchellh,0,0,181,23,1477,false,true,false,false,0,0,0,0,0,0,6613
455907,mitchellh/vagrant,ruby,803,1331652802,1331671352,1331671352,309,309,github,false,false,false,25,1,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,10,0,0,0.0,0,,,0,0.0,0,0,false,Allow provisioners to prepare even if theyre not enabled Without this my silly Vagrant plugin for Jenkins gets all kinds of sad :(Fixes #801,,187,0.7700534759358288,0.8389830508474576,7298,1030.6933406412716,100.0274047684297,256.0975609756098,3902,21,782,4,unknown,rtyler,mitchellh,false,mitchellh,0,0,216,109,1262,false,true,false,false,2,1,0,0,0,0,283
455908,mitchellh/vagrant,ruby,800,1331594814,,1331598213,56,,unknown,false,false,false,114,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,11,0,11,0,4.318987221932262,0.23047961908018716,20,mitchell.hashimoto@gmail.com,lib/vagrant/vm.rb,20,0.0847457627118644,2,0,false,Fix exporting base boxes by name in Vagrant 100 Currently if :base is in options @uuid is set to the name of the box defined in Vagrantfile It the fails out complaining it cannot find this name in the list of uuids of virtual box vms I have modified lib/vagrant/vmrb to always pass the uuid which correctly allows me to export a base box by name This fixes issue 799 (https://githubcom/mitchellh/vagrant/issues/799) If there is a reason you want to pass the name to @uuid in vmrb Id love to know so that I can help fix it Id love to start contributing to the project that has really helped me in my dev environments ,,186,0.7741935483870968,0.8389830508474576,7298,1030.6933406412716,100.0274047684297,256.0975609756098,3900,21,781,4,unknown,andrewchalfant,mitchellh,false,,0,0,1,0,221,false,true,false,false,2,0,0,0,0,0,-1
455909,mitchellh/vagrant,ruby,796,1331547875,1331688277,1331688277,2340,2340,merged_in_comments,false,false,false,17,3,3,0,4,0,4,0,3,0,0,3,3,3,0,0,0,0,3,3,3,0,0,24,0,24,0,13.828293368198974,0.7379368285225224,42,xmitchx@gmail.com,lib/vagrant/guest/linux.rb|lib/vagrant/vm.rb|lib/vagrant/guest/gentoo.rb,20,0.07983193277310924,0,0,false,/etc/os-release + improved Gentoo support Hiplease consider these small fixes/features for the next releaseThanksBene,,185,0.772972972972973,0.8403361344537815,7298,1030.6933406412716,100.0274047684297,256.0975609756098,3899,21,781,3,unknown,hollow,mitchellh,false,mitchellh,0,0,19,21,1358,true,false,false,false,0,0,0,0,3,0,2154
379883,mitchellh/vagrant,ruby,795,1331516049,1332527494,1332527494,16857,16857,commit_sha_in_comments,false,false,true,15,1,0,0,3,0,3,0,3,0,0,0,12,0,0,0,0,0,12,12,12,0,0,0,0,64,0,0,0.0,0,,,0,0.0,0,0,false,Allow multiple VMs to be specified for relevant commands The above says it all really,,184,0.7717391304347826,0.8508064516129032,7298,1030.6933406412716,100.0274047684297,256.0975609756098,3896,20,780,6,unknown,withnale,mitchellh,false,mitchellh,0,0,3,0,0,false,true,false,false,0,0,0,0,0,0,2750
455911,mitchellh/vagrant,ruby,792,1331421449,1331421582,1331421582,2,2,github,false,false,false,33,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,Add missing translation for paused state After pausing VM via VirtualBox directly when running vagrant statusthe error translation missing: envagrantcommandsstatuspaused surfacesThis patch adds a (hopefully) useful translation for this translation key,,182,0.7692307692307693,0.8697183098591549,7271,1034.5206986659332,100.39884472562234,257.0485490303947,3893,20,779,2,unknown,mbbx6spp,mitchellh,false,mitchellh,0,0,163,3,1479,false,true,false,false,1,1,0,0,0,0,2
455912,mitchellh/vagrant,ruby,789,1331302800,1331327840,1331327840,417,417,github,false,false,false,72,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,10,0,0,0.0,0,,,0,0.0,0,0,true,Fix for #788 Prevents FloatDomainError when downloading a box and no content-length header is present If the total is not provided or is unknown then dont attempt to calculate or display a percentage just show the current progress insteadFor example:Output when downloading a box and content-length header is present:    [vagrant] Progress: 21% (110968832 / 524483584)And if a content-length header is not present (total bytes are unknown):    [vagrant] Progress: 110968832,,181,0.7679558011049724,0.8774834437086093,7257,1036.516466859584,100.5925313490423,257.5444398511782,3887,20,778,2,unknown,dansimau,mitchellh,false,mitchellh,0,0,16,19,755,false,true,false,false,1,0,0,0,0,0,417
455914,mitchellh/vagrant,ruby,772,1330915486,1330918562,1330918562,51,51,github,false,false,false,41,1,0,0,1,0,1,0,1,0,0,0,3,0,0,0,3,0,3,6,4,2,0,0,0,69,0,0,0.0,0,,,0,0.0,0,0,false,Added Fedora 16 handling I have tested this with a minimal Fedora16 installNetworkManager is installed and p2p7 successfully configures when I alter the Vagrantfile with:    nodevmnetwork :hostonly 105150100 {:netmask  2552552550}or    nodevmnetwork :hostonly 100200101 {:netmask  2552552550}for example,,179,0.7653631284916201,0.882943143812709,7185,1043.5629784272792,101.1830201809325,259.84690327070285,3848,18,773,3,unknown,wayneeseguin,mitchellh,false,mitchellh,0,0,488,17,1512,false,true,false,false,0,0,0,0,0,0,51
455915,mitchellh/vagrant,ruby,771,1330731284,,1330731352,1,,unknown,false,false,false,20,1,1,0,1,0,1,0,3,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,3.8974279479907867,0.21067058129080768,72,mitchell.hashimoto@gmail.com,templates/locales/en.yml,72,0.23225806451612904,0,0,true,Update booting message The current message when the VM is booting is misleading I believe this a more reasonable estimative,,178,0.7696629213483146,0.8870967741935484,7186,1043.4177567492347,101.16893960478708,259.8107431116059,3844,18,771,3,unknown,jbochi,mitchellh,false,,0,0,46,54,641,false,true,false,false,0,0,0,0,0,0,0
455916,mitchellh/vagrant,ruby,768,1330519038,1330582812,1330582812,1062,1062,commit_sha_in_comments,false,false,false,90,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.284324972723152,0.23158381488684385,5,mitchell.hashimoto@gmail.com,lib/vagrant/config/vm/provisioner.rb,5,0.01592356687898089,0,0,false,FooProvisioner::Config does not seem to be used by default HelloThe doc here http://vagrantupcom/docs/provisioners/othershtml states that     class FooProvisioner  Vagrant::Provisioners::Base      # Vagrant automatically finds a class named Config namespaced      # beneath the provisioner and uses it      class Config  Vagrant::Config::BaseHowever it did not seem to be the case I had to add this method to my provisioner (copied from the standard provisioners code):    def selfconfig_class      Config    endThis patch should solve the issue Be careful though as Im not familiar at all with vagrants code -)Best regardsDom,,177,0.768361581920904,0.8949044585987261,7186,1043.4177567492347,101.16893960478708,259.8107431116059,3822,18,769,3,unknown,dbroeglin,mitchellh,false,mitchellh,0,0,3,0,686,false,true,false,false,0,0,0,0,0,0,-1
281057,mitchellh/vagrant,ruby,766,1330437364,1330460791,1330460791,390,390,github,false,false,false,21,1,0,0,1,0,1,0,1,0,0,0,2,0,0,0,1,0,2,3,3,0,0,0,0,32,0,0,0.0,0,,,0,0.0,0,0,false,openSuSE as host system Hi I added openSuSE as host system Differentiation is needed because theInit script for NFS-server differs,,176,0.7670454545454546,0.8938906752411575,7159,1047.3529822600922,101.55049587931275,260.79061321413604,3819,18,768,4,unknown,Achimh3011,mitchellh,false,mitchellh,0,0,6,19,473,false,true,false,false,1,0,0,0,0,0,390
376972,mitchellh/vagrant,ruby,765,1330356904,1330462179,1330462179,1754,1754,commit_sha_in_comments,false,false,true,15,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,45,0,0,0.0,0,,,0,0.0,0,0,false,performing IO reads in a separate threads to avoid potentially blocking on Windows issue #755/#664,,175,0.7657142857142857,0.9003215434083601,7159,1047.3529822600922,101.55049587931275,260.79061321413604,3809,16,767,4,unknown,dgholz,mitchellh,false,mitchellh,0,0,5,2,8,false,false,false,false,1,2,0,0,0,0,739
279238,mitchellh/vagrant,ruby,762,1330060312,1330060941,1330060941,10,10,github,false,false,false,6,1,1,0,1,0,1,0,1,2,0,1,3,1,2,0,2,0,1,3,1,2,0,18,0,18,0,15.059167455979637,0.8201244914539558,13,xmitchx@gmail.com,lib/vagrant/guest/freebsd.rb|templates/guests/freebsd/network_dhcp.erb|templates/guests/freebsd/network_static.erb,13,0.0,0,0,true,Support for bridged networks in FreeBSD ,,174,0.764367816091954,0.9009584664536742,7193,1038.6486862227164,100.51438898929514,259.0018073126651,3797,16,764,4,unknown,ndwns,mitchellh,false,mitchellh,1,1.0,2,0,308,true,true,false,false,1,1,1,0,1,0,10
278572,mitchellh/vagrant,ruby,757,1329963194,1329963320,1329963320,2,2,github,false,false,false,11,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,7,0,0,0.0,0,,,0,0.0,0,0,false,add change_host_name support for FreeBSD Implement support for vmhost_name in FreeBSD,,173,0.7630057803468208,0.9059561128526645,7187,1039.5157924029497,100.59830249060803,259.21803255878666,3790,15,762,4,unknown,ndwns,mitchellh,false,mitchellh,0,0,2,0,306,false,true,false,false,0,0,0,0,0,0,2
375319,mitchellh/vagrant,ruby,753,1329816766,,1330204996,6470,,unknown,false,false,true,176,1,0,0,4,0,4,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,6,0,0,0.0,0,,,0,0.0,0,1,false,Add pre-apply option so we can set Puppet facts HiTheres this great little known ability in Puppet (well Facter actually) whereby you can set facts prior to running puppet apply in a fashion similar to altering environment variables using ENV:shell# override $operatingsystem for testing purposes$ FACTER_operatingsystemDebian puppet -e notify { We are running on $operatingsystem: }notice: We are running on Debian(ref: [Puppet Cookbook](http://wwwpuppetcookbookcom/posts/override-a-facter-facthtml))I modeled pre_apply directly on the option setting for puppet so that single facts such as:rubyconfigvmprovision :puppet :pre_apply    FACTER_fqdnwwwergonlogiccomor an array of facts work equally well:rubyconfigvmprovision :puppet :pre_apply    [ FACTER_domainergonlogiccom FACTER_hostnamewww ]Let me know if you like the idea and Ill write up some tests to go along with itBy the way my hope is to use this for a Vagrant-based project I started called [Aegir-up](http://drupalorg/project/aegir-up) The itch that led to this little patch is that theres a [bug in Puppet](http://bugsdebianorg/cgi-bin/bugreportcgibug637894) that results in incorrect FQDNs on Debian systems when using an internal DNS server ,,172,0.7674418604651163,0.9102167182662538,7186,1039.6604508767048,100.61230169774561,259.25410520456444,3775,14,761,4,unknown,ergonlogic,mitchellh,false,,0,0,19,4,540,false,true,false,false,0,0,0,0,0,0,422
277338,mitchellh/vagrant,ruby,751,1329771420,1329798511,1329798511,451,451,github,false,false,false,35,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Fix for permissions when re-provisioning chef This should fix https://githubcom/mitchellh/vagrant/issues/748I think the chef-client recipe ends up changing ownership of clientrb leading to this issue  This fix just sudo rms the file before uploading it,,171,0.7660818713450293,0.9102167182662538,7181,1040.384347583902,100.68235621779696,259.4346191338254,3772,14,760,3,unknown,jjhuff,mitchellh,false,mitchellh,0,0,5,0,157,false,false,false,false,1,0,0,0,0,0,451
277184,mitchellh/vagrant,ruby,750,1329747652,1329767923,1329767923,337,337,github,false,false,false,10,2,0,0,1,0,1,0,2,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,NIC type can be defined for host-only adapters Following https://githubcom/mitchellh/vagrant/issues/690,,170,0.7647058823529411,0.9130434782608695,7180,1040.5292479108634,100.69637883008356,259.4707520891365,3772,13,760,3,unknown,jsoriano,mitchellh,false,mitchellh,0,0,16,27,1328,false,true,false,false,2,1,0,0,0,0,337
276938,mitchellh/vagrant,ruby,749,1329679104,,1332519306,47336,,unknown,false,false,false,125,1,0,0,5,0,5,0,3,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,6,0,0,0.0,0,,,0,0.0,2,9,false,shield the guest from nameserver changes when using :hostonly networking I provisioned a VM at coworking today and the guest VM inherited the nameserver info from that network:vagrant@piab-private-chef:~$ cat /etc/resolvconf nameserver 19216834251domain theboxsearch theboxI went home where I expected this configuration:nameserver 20867222222 # opendnsnameserver 1066441 # internal routerVirtualBox ships with the [ability to enable a DNS proxy in NAT mode](http://wwwvirtualboxorg/manual/ch09html#nat-adv-dns) to shield the guest VM from this issue  When this mode is enabled the guest VM receives this configuration:vagrant@piab-private-chef:~$ cat /etc/resolvconf nameserver 1002310023 is a DNS proxy that does the right thing We should probably enable by default when Vagrant has a network type :hostonly  This commit does just that,,169,0.7692307692307693,0.9129129129129129,7146,1045.4799888049258,101.17548278757346,260.7052896725441,3768,14,759,11,unknown,schisamo,mitchellh,false,,2,1.0,57,33,1410,false,false,false,false,2,1,2,0,0,0,120
272380,mitchellh/vagrant,ruby,723,1328752564,1328752623,1328752623,0,0,github,false,false,false,90,1,0,0,1,0,1,0,1,0,0,0,4,0,0,0,0,0,4,4,3,1,0,0,0,2,12,0,0.0,0,,,0,0.0,0,0,false,Convert host only IPs to be RFC1918 33000/8 is owned by the DoD At the very least this configuration breaks access to the subnet 3333330/24 that the DoD owns If a Vagrant user wants to communicate with an IP in that range he cant because Vagrant has configured the host OS to route those packets to the guest OS (rather than the Internet)This pull request converts the example IPs to be in 19216800/16 which is safe I ran a basic set of tests with rake and they all passed,,164,0.7621951219512195,0.9121212121212121,7081,1053.3822906369157,101.96299957633103,262.9572094336958,3719,14,748,0,unknown,bobveznat,mitchellh,false,mitchellh,0,0,9,2,350,false,true,false,false,0,0,0,0,0,0,0
271829,mitchellh/vagrant,ruby,719,1328670195,1328688007,1328688007,296,296,github,false,false,false,13,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Fix the ifdown/ifup issue for once and for all Works on my box  ,,163,0.7607361963190185,0.9104938271604939,7001,1065.4192258248822,103.12812455363519,265.96200542779604,3708,14,747,1,unknown,semarj,mitchellh,false,mitchellh,1,1.0,0,0,398,false,true,false,false,1,0,1,0,0,0,296
271802,mitchellh/vagrant,ruby,718,1328666544,1328666622,1328666622,1,1,github,false,false,false,17,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,7,0,0,0.0,0,,,0,0.0,0,0,false,Restore stand-alone puppet colors Fixes #685 for stand-alone puppet runs the same way 20fa35550238bd9fc18864ef3cacf6fab38d1ce4 did for puppet_server,,162,0.7592592592592593,0.9104938271604939,7000,1065.5714285714287,103.14285714285715,266.0,3708,14,747,1,unknown,mephaust,mitchellh,false,mitchellh,0,0,5,21,557,false,true,false,false,0,0,0,0,0,0,1
372023,mitchellh/vagrant,ruby,717,1328631224,,1328687991,946,,unknown,false,true,true,8,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,10,0,0,0.0,0,,,0,0.0,0,2,false,Correctly restart network after setting addresses See https://githubcom/mitchellh/vagrant/issues/716,,161,0.7639751552795031,0.913312693498452,7000,1065.5714285714287,103.14285714285715,266.0,3706,13,747,1,unknown,straphka,mitchellh,false,,0,0,0,0,322,false,false,false,false,1,0,0,0,0,0,-1
455917,mitchellh/vagrant,ruby,714,1328495473,1328497434,1328497434,32,32,github,false,false,false,59,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Upgrade to childprocess 031 Per #658https://githubcom/mitchellh/vagrant/issues/658all tests are green on both JRuby and MRI    Pending:      Vagrant::Downloaders::File downloading should copy the source to the destination        # setup paths        # /test/unit/vagrant/downloaders/file_testrb:71      Vagrant::Environment home path is set to the environmental variable VAGRANT_HOME        # A good temporary ENV thing        # /test/unit/vagrant/environment_testrb:32    Finished in 042576 seconds    134 examples 0 failures 2 pending,,160,0.7625,0.9131736526946108,6999,1065.7236748106873,103.1575939419917,266.03800542934704,3699,14,745,0,unknown,jkutner,mitchellh,false,mitchellh,3,0.3333333333333333,47,8,1438,false,true,false,false,6,12,4,0,0,0,32
270649,mitchellh/vagrant,ruby,711,1328380248,1328455456,1328455456,1253,1253,merged_in_comments,false,false,false,22,1,0,0,1,0,1,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,8,0,0,0.0,0,,,0,0.0,0,0,false,Fix for #658 This fixes #658 by moving the closing of subprocess streams to after the process has finishedBackground:https://githubcom/mitchellh/vagrant/issues/658https://githubcom/jarib/childprocess/issues/30,,159,0.7610062893081762,0.9122807017543859,7000,1065.7142857142856,103.14285714285715,266.1428571428571,3686,14,744,0,unknown,jkutner,mitchellh,false,mitchellh,2,0.0,47,8,1437,false,true,false,false,5,10,3,0,0,0,1249
270648,mitchellh/vagrant,ruby,709,1328297913,,1328379829,1365,,unknown,false,false,false,49,2,0,0,2,0,2,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,48,0,0,0.0,0,,,0,0.0,0,2,true,Workaround for #658 This is a workaround for issue #658https://githubcom/mitchellh/vagrant/issues/658This is the best way to handle subprocesses with IO in JRuby  Im also working on a patch for childprocess (so that this can be removed  But this is a complete showstopper on JRuby for Vagrant right now,,158,0.7658227848101266,0.9135446685878963,6980,1068.7679083094556,103.43839541547278,266.9054441260745,3679,14,743,1,unknown,jkutner,jkutner,true,,1,0.0,47,8,1436,false,true,false,false,4,10,1,0,0,0,1210
270249,mitchellh/vagrant,ruby,702,1328151645,1328371073,1328371073,3657,3657,commit_sha_in_comments,false,false,false,64,3,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,15,0,0,0.0,0,,,0,0.0,0,0,false, puppet_server certname changes     At present puppet_node is defined by default and must almost always be    overwritten This changes the logic for puppet_server so puppet_node is    initially undefined and the node name will be set based on this order    1 puppet_node if defined    2 host_name if defined (actually this removes the explicit certname    specification which is cleaner and uses the machine hostname)    3 configvmbox,,157,0.7643312101910829,0.9093567251461988,6980,1068.7679083094556,103.43839541547278,266.9054441260745,3670,14,741,1,unknown,withnail,mitchellh,false,mitchellh,1,1.0,0,1,3,false,true,false,false,1,0,1,0,0,0,-1
270234,mitchellh/vagrant,ruby,701,1328150142,1328150368,1328150368,3,3,merged_in_comments,false,false,false,27,2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,3,0,0,0.0,0,,,0,0.0,0,0,false,Bridged Interfaces filtering When multiple bridged interfaces are available the user is prompted for    which interface to use This patch removes the Down interfaces for    this list,,156,0.7628205128205128,0.9093567251461988,6979,1068.9210488608683,103.45321679323685,266.9436882074796,3670,14,741,0,unknown,withnail,mitchellh,false,mitchellh,0,0,0,1,3,false,true,false,false,0,0,0,0,0,0,-1
455918,mitchellh/vagrant,ruby,698,1328082069,1328082982,1328082982,15,15,github,false,false,false,48,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Fix crash when using an additional interface When I use a bridged network interface the interface restart (with ifup) was failing since the change to ifconfig down from ifdown  This change works well with the tests I have run I did not test this with NAT configured devices,,155,0.7612903225806451,0.9085545722713865,6979,1068.9210488608683,103.45321679323685,266.9436882074796,3666,13,741,0,unknown,semarj,mitchellh,false,mitchellh,0,0,0,0,392,false,true,false,false,0,0,0,0,0,0,15
269547,mitchellh/vagrant,ruby,695,1327969534,1327992822,1327992822,388,388,merged_in_comments,false,false,false,83,4,3,0,0,0,0,0,1,1,0,4,5,3,1,1,1,0,4,5,3,1,1,44,0,44,0,27.034588369571104,1.4940442866272408,77,mitchell.hashimoto@gmail.com,lib/vagrant/hosts/bsd.rb|lib/vagrant/hosts/freebsd.rb|templates/locales/en.yml|templates/nfs/exports_freebsd.erb|lib/vagrant/guest/freebsd.rb|lib/vagrant/guest/freebsd.rb,63,0.023391812865497075,0,0,false,Freebsd support This implements better support for NFS on FreeBSD guests and hostsUpdate FreeBSD guest to use configure_networks() for 09x and use vmchannel in place of vmsshUpdate comment in FreeBSD guest to reflect status of vboxsfUpdate FreeBSD host for better NFS supporto   Add exports template that does not use double-quotes since this isnt permissible in FreeBSDo   Make FreeBSD host raise an error if whitespace is detected in the export folders hostpatho   Add locale translation for above message,,153,0.7581699346405228,0.9093567251461988,6970,1070.3012912482066,103.5868005738881,267.28837876614057,3662,13,739,1,unknown,jssjr,mitchellh,false,mitchellh,0,0,53,22,1005,false,true,false,false,0,0,0,0,3,0,-1
269395,mitchellh/vagrant,ruby,693,1327953854,,1328022565,1145,,unknown,false,false,false,40,1,1,0,2,0,2,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,6,0,6,0,13.005601327446346,0.7187438584895731,33,xmitchx@gmail.com,config/default.rb|lib/vagrant/communication/ssh.rb|lib/vagrant/config/ssh.rb,15,0.03823529411764706,0,0,false,GH685: make escape code removal configurable new option is sshenable_ansi_colors currently defaults to true this is just a proposal for you to look at  feel free to ignore/changeI successfully tested in my environment (Red Hat and puppet 27x),,152,0.7631578947368421,0.9088235294117647,6970,1070.3012912482066,103.5868005738881,267.28837876614057,3662,13,739,1,unknown,sroegner,sroegner,true,,0,0,9,11,1251,false,true,false,false,2,1,0,0,0,0,107
268420,mitchellh/vagrant,ruby,688,1327705171,1327809028,1327809028,1730,1730,github,false,false,false,42,1,1,0,2,0,2,0,2,0,0,4,4,4,0,0,0,0,4,4,4,0,0,20,0,20,0,15.981470546026683,0.8831448841718329,42,xmitchx@gmail.com,lib/vagrant/action/vm/share_folders.rb|lib/vagrant/config/vm.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb,24,0.03821656050955414,0,0,true,add vbox driver support for creating transient shared folders Im currently creating a vagrant plugin that needs the ability to create and mount shared folders while a VM is running  This commit exposes that existing VBoxManage functionality in the underlying vagrant driver,,150,0.76,0.9012738853503185,6936,1073.961937716263,103.80622837370241,268.16608996539793,3654,13,736,3,unknown,schisamo,mitchellh,false,mitchellh,1,1.0,55,33,1387,false,false,false,false,1,0,1,0,0,0,1534
455919,mitchellh/vagrant,ruby,683,1327517542,,1327527580,167,,unknown,false,false,false,38,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.173775953582184,0.2311858107309214,3,mitchell.hashimoto@gmail.com,lib/vagrant/hosts.rb,3,0.00980392156862745,0,0,false,Vagrant doesnt detect correct host I have tested this on Arch linux Vagrant always detected generic linux host insted of arch I have removed sorting host in reverse and it worked (I dont really know why it helped),,149,0.7651006711409396,0.8986928104575164,6878,1083.01831927886,104.68159348647862,270.42744984006976,3639,13,734,4,unknown,mamciek,mitchellh,false,,0,0,0,1,744,false,true,false,false,1,1,0,0,1,0,159
269052,mitchellh/vagrant,ruby,682,1327514488,,1327882545,6134,,unknown,false,false,false,34,1,0,0,0,0,0,0,6,0,0,0,5,0,0,0,3,0,5,8,7,1,0,0,0,88,35,0,0.0,0,,,0,0.0,0,1,false,add domain name to Vagrantfile for automaticly set in /etc/hosts logic same as nfs configuration in /etc/exports add domain name to Vagrantfile for automaticly set in /etc/hosts logic same as nfs configuration in /etc/exports,,148,0.7702702702702703,0.9016393442622951,6878,1083.01831927886,104.68159348647862,270.42744984006976,3639,13,734,3,unknown,pronix,mitchellh,false,,0,0,45,49,981,false,true,false,false,0,0,0,0,0,0,-1
455921,mitchellh/vagrant,ruby,676,1327368968,1327381966,1327381966,216,216,commit_sha_in_comments,false,false,false,105,3,2,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,5,0,7,0,8.26070825614567,0.4599138998265932,23,xmitchx@gmail.com,lib/vagrant/communication/ssh.rb|lib/vagrant/guest/linux.rb,13,0.04318936877076412,0,0,false,Shell expansion bug centos With the code change in the shell expansion echo was being used to get the expanded path After running chomp  it was deleting some newlines but on centos 57 this wasnt happening echo has a switch to to tell it to not print the newline characterAfter using this there become an issue with another trailing terminal command [J  it was coming acorss as /033[J - this seems to be a reset to the terminal So adding it to the list to filter out  Seems like there should be a cleaner solution to scrub this type of data,,146,0.7671232876712328,0.9003322259136213,6818,1090.6424171311235,105.45614549721326,272.5139337048988,3631,13,732,3,unknown,rtgibbons,mitchellh,false,mitchellh,2,1.0,11,16,1373,false,true,false,false,12,5,2,0,0,0,5
455922,mitchellh/vagrant,ruby,675,1327353791,1327381037,1327381037,454,454,github,false,false,false,15,1,1,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,3,3,3,0,0,6,0,6,0,12.24506960610632,0.6817427200630984,26,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/network.rb|lib/vagrant/driver/virtualbox_4_0.rb|lib/vagrant/driver/virtualbox_4_1.rb,19,0.026578073089700997,0,0,false,ignore host-only interface if it is down (not 100% sure about vbox40 support please test),,145,0.7655172413793103,0.9003322259136213,6818,1090.6424171311235,105.45614549721326,272.5139337048988,3631,13,732,3,unknown,scoates,mitchellh,false,mitchellh,0,0,68,1,1020,true,false,false,false,0,0,0,0,1,0,-1
455923,mitchellh/vagrant,ruby,666,1327085556,1327098376,1327098376,213,213,merged_in_comments,false,false,false,25,1,1,0,1,0,1,0,2,0,0,2,2,1,0,1,0,0,2,2,1,0,1,5,0,5,0,9.370202159676989,0.5217771378411686,15,mitchell.hashimoto@gmail.com,bin/vagrant|lib/vagrant/util/platform.rb,13,0.0436241610738255,0,0,true,enable colors on Windows when using ANSICON Show colors when ANSICON is installed on Windows ANSICON is also used by RSpec on Windows for example,,144,0.7638888888888888,0.9026845637583892,6806,1092.56538348516,105.64208051719072,272.99441669115487,3622,12,729,3,unknown,jarmo,mitchellh,false,mitchellh,1,0.0,18,1,751,false,true,false,false,1,1,1,0,0,0,185
455925,mitchellh/vagrant,ruby,662,1327063157,,1327883954,13679,,unknown,false,false,false,80,2,1,0,3,0,3,0,3,0,0,1,3,1,0,0,1,0,3,4,3,0,1,14,0,47,0,4.039052522716909,0.22491353217143714,28,zblut@cerego.co.jp,lib/vagrant/ssh.rb,28,0.09395973154362416,0,0,true,use ssh client on Windows too if it exists When using unxutils (http://unxutilssourceforgenet/) or something similar on Windows then there is a GNU ssh installed When it exists then it is possible to use vagrant ssh command on Windows tooIt could be also possible to make Windows users life easier by downloading automatically Puttys command line client Plink and use that instead of sshexeBut is there any reason why Rubys Net::SSH isnt used instead of external ssh binary,,142,0.7676056338028169,0.9026845637583892,6806,1092.56538348516,105.64208051719072,272.99441669115487,3621,12,729,1,unknown,jarmo,mitchellh,false,,0,0,18,1,751,false,true,false,false,0,0,0,0,0,0,46
455926,mitchellh/vagrant,ruby,660,1327025099,1327025433,1327025434,5,5,github,false,false,false,19,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,filter the clear screen command over ssh connections Code pulled from v0810  tested and worked on my end,,141,0.7659574468085106,0.9016949152542373,6748,1095.5838767042087,106.25370480142264,274.0071132187315,3620,12,728,2,unknown,rtgibbons,mitchellh,false,mitchellh,1,1.0,11,16,1369,false,true,false,false,3,5,1,0,0,0,5
455927,mitchellh/vagrant,ruby,649,1326920232,1326924360,1326924360,68,68,merged_in_comments,false,false,false,93,2,2,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,9.152163072289138,0.5123280036279877,11,mitchell.hashimoto@gmail.com,lib/vagrant/guest/debian.rb|lib/vagrant/guest/redhat.rb,8,0.02711864406779661,0,0,false,ifdown exits with a non-zero during network setup The ifdown script will exit with a non-zero status when the device in question doesnt come up properly even though the device was properly de-activated In CentOS this was happening due to a failed DHCP attemptUsing ifconfig eth1 down instead will cleaning exit if the device has been de-activatedYou can see this be create a hostonly adapter and setting it to DHCP it will [fail] to properly come up Running ifdown on the adapter will remove it but exit with status code 1 ,,140,0.7642857142857142,0.9016949152542373,6752,1093.0094786729858,106.19075829383887,273.696682464455,3612,12,727,1,unknown,rtgibbons,mitchellh,false,mitchellh,0,0,11,16,1368,false,true,false,false,1,5,0,0,0,0,-1
455928,mitchellh/vagrant,ruby,647,1326896815,1326918063,1326918063,354,354,github,false,false,false,18,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Fix box help subcommand for Ruby 187 This is related to Github issue #599 with a similar fix,,139,0.762589928057554,0.9016949152542373,6745,1094.1438102297998,106.30096367679764,273.9807264640474,3612,12,727,1,unknown,sigi,mitchellh,false,mitchellh,0,0,1,1,964,false,true,false,false,1,0,0,0,0,0,-1
455929,mitchellh/vagrant,ruby,643,1326860010,1326860120,1326860120,1,1,github,false,false,false,20,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Link directly to the why page in the readme I think this might have been a typo in the readme,,138,0.7608695652173914,0.9047619047619048,6744,1094.306049822064,106.3167259786477,274.02135231316726,3609,11,727,1,unknown,henare,mitchellh,false,mitchellh,0,0,49,253,1089,false,false,false,false,0,0,0,0,0,0,-1
857286,mitchellh/vagrant,ruby,639,1326489027,1326510938,1326510938,365,365,commit_sha_in_comments,false,false,false,88,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.96860684595424,0.22334929985932162,6,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/check_guest_additions.rb,6,0.020202020202020204,0,0,true,Ignore distro-specific suffix when comparing guest addition version Hellothis is my first contribution so please bear with me for not supplying tests or adhering to common guidelines But do correct me Im thankful for advise :)When having installed virtualbox from the Ubuntu 1110 repositories VirtualBox reports its version number suffixed by _ubuntu When vagrant checks for guest additions at vm-boot a version mismatch is reported because 123 does not equal 123_ubuntuI sanitized the version number before comparison assuming all distro-specific versions use _ as delimiter,,137,0.7591240875912408,0.9057239057239057,6725,1097.3977695167284,106.61710037174721,274.79553903345726,3595,11,722,2,unknown,sirl1on,mitchellh,false,mitchellh,0,0,1,1,1204,true,true,false,false,0,0,0,0,1,0,-1
502039,mitchellh/vagrant,ruby,637,1326447567,1326447626,1326447626,0,0,github,false,false,false,11,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,true,Fix chef_client variable name error for vm changed vm to env[:vm],,136,0.7573529411764706,0.9115646258503401,6652,1104.7805171377029,107.48647023451593,276.6085387853277,3591,10,722,4,unknown,zev,mitchellh,false,mitchellh,1,1.0,35,33,1283,true,true,false,false,1,0,1,0,1,0,0
502040,mitchellh/vagrant,ruby,636,1326438104,1326445906,1326445906,130,130,github,false,false,false,12,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.5009668903499174,0.1970578476351085,26,xmitchx@gmail.com,lib/vagrant/ssh.rb,26,0.08843537414965986,0,0,true,Fix a syntax error in sshrb It was missing a closing ],,135,0.7555555555555555,0.9115646258503401,6639,1106.9438168398856,107.69694231058895,277.15017321885824,3589,10,722,4,unknown,zev,mitchellh,false,mitchellh,0,0,35,33,1283,true,true,false,false,0,0,0,0,1,0,130
502041,mitchellh/vagrant,ruby,633,1326340778,1326362317,1326362317,358,358,commit_sha_in_comments,false,false,false,40,2,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,4,0,4.415777146235006,0.24962193159020485,1,mitchell.hashimoto@gmail.com,lib/vagrant/downloaders/file.rb,1,0.0034129692832764505,0,1,false,Do shell expansion before doing the file test in Vagrant::Downloaders::File#prepare Do shell expansion before doing the file test in Vagrant::Downloaders::File#prepare so that ~/file/paths workI couldnt come up with a good way to write a test for this Any ideas,,134,0.753731343283582,0.9146757679180887,6607,1088.9965188436506,106.25094596639929,274.70864234902376,3586,9,720,5,unknown,bgreenlee,mitchellh,false,mitchellh,0,0,20,23,1400,false,true,false,false,1,1,0,0,0,0,-1
502042,mitchellh/vagrant,ruby,630,1326093156,1326093381,1326093381,3,3,github,false,false,false,10,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0.0,0,,,0,0.0,0,0,false,A name is not required for the forwarding port (Vagrantfile) ,,133,0.7518796992481203,0.9178082191780822,6457,1090.289608177172,107.32538330494037,275.5149450209076,3573,8,718,6,unknown,richardiux,mitchellh,false,mitchellh,0,0,15,20,1135,false,true,false,false,0,0,0,0,0,0,-1
502161,mitchellh/vagrant,ruby,629,1326010640,1326010781,1326010781,2,2,commit_sha_in_comments,false,false,false,7,6,3,0,0,0,0,0,2,0,0,2,3,2,0,0,0,0,3,3,3,0,0,5,0,40,0,9.191741735303156,0.5328189631301454,34,mitchell.hashimoto@gmail.com,lib/vagrant.rb|lib/vagrant/guest/redhat.rb,29,0.10034602076124567,0,0,false,missing require tempfile and fixed a typo ,,132,0.75,0.9273356401384083,6401,1099.828151851273,108.26433369785971,277.9253241680987,3571,8,717,7,unknown,miketheman,mitchellh,false,mitchellh,4,0.75,35,5,385,true,true,false,false,6,6,4,0,5,0,-1
502163,mitchellh/vagrant,ruby,624,1325762429,1325843964,1325843964,1358,1358,commit_sha_in_comments,false,false,false,15,3,3,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,12,0,12,0,8.409041988848303,0.49376339596808405,15,mitchell.hashimoto@gmail.com,lib/vagrant/command/ssh_config.rb|lib/vagrant/action/vm/forward_ports.rb,12,0.04195804195804196,0,0,false,Override forwarded ports correctly Although it still prints out the default port it gets overridden,,130,0.7461538461538462,0.9370629370629371,6011,1171.1861587090336,115.28863749792048,295.9574114124106,3552,8,714,7,unknown,halcyonCorsair,mitchellh,false,mitchellh,1,1.0,4,12,878,true,true,false,false,1,0,1,0,3,0,-1
502164,mitchellh/vagrant,ruby,623,1325743626,1325743724,1325743724,1,1,commit_sha_in_comments,false,false,false,5,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.417996501352235,0.26018427904251695,2,mitchell.hashimoto@gmail.com,lib/vagrant/command/ssh_config.rb,2,0.007042253521126761,0,0,false,Fix ssh-config vm accessbility check ,,129,0.7441860465116279,0.9436619718309859,5956,1182.0013431833445,116.35325721961047,298.6903962390866,3552,8,714,10,unknown,halcyonCorsair,mitchellh,false,mitchellh,0,0,4,12,878,true,true,false,false,0,0,0,0,1,0,-1
502047,mitchellh/vagrant,ruby,621,1325720527,1325751612,1325751612,518,518,github,false,false,false,102,2,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,23,0,29,0,8.850663005919014,0.5212328720498124,22,mitchell.hashimoto@gmail.com,lib/vagrant/command/ssh.rb|lib/vagrant/ssh.rb,17,0.06093189964157706,1,0,false,Allow vagrant ssh to strip most non-port options Adds a -p flag to vagrant ssh which strips out username private key args allowing the local users ssh settings to take full effectUse case as explained to @mitchellh on IRC: want default settings unchanged (for things like initial provisioning and being able to easily get into bare boxes) but also want easy way to SSH into post-provision boxes which have my local user on themTotally open to changing the flag and/or variable/option names port_only is not the best way to describe this but I couldnt come up with anything better offhand,,128,0.7421875,0.9605734767025089,5956,1182.0013431833445,116.35325721961047,298.6903962390866,3552,5,713,9,unknown,bitprophet,mitchellh,false,mitchellh,0,0,263,5,1365,false,true,false,false,0,0,0,0,0,0,513
502048,mitchellh/vagrant,ruby,620,1325719881,1325743835,1325743835,399,399,github,false,false,false,29,3,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,20,0,0,0.0,0,,,0,0.0,0,1,false,Fixup for variable scoping in the puppet provisioner Puppet provisioner was throwing undefined local variable errors when vagrant up was called  This allows the provisioning to proceed as normal,,127,0.7401574803149606,0.9605734767025089,5956,1182.0013431833445,116.35325721961047,298.6903962390866,3552,5,713,9,unknown,LeftyBC,mitchellh,false,mitchellh,0,0,6,0,0,false,true,false,false,0,0,0,0,0,0,399
455904,mitchellh/vagrant,ruby,617,1325663329,,1325753112,1496,,unknown,false,false,false,11,1,1,0,1,0,1,0,3,2,1,1,4,1,3,0,2,1,1,4,1,3,0,81,0,81,0,15.202353268514102,0.8952963468120058,2,mitchell.hashimoto@gmail.com,lib/vagrant/guest/redhat.rb|templates/guests/redhat/network_dhcp.erb|templates/guests/redhat/network_hostonly.erb|templates/guests/redhat/network_static.erb,2,0.0035842293906810036,0,0,false,Changes to enable rhel/centos-style bridged & hostonly networking Much cleaner commit,,126,0.746031746031746,0.9605734767025089,5956,1182.0013431833445,116.35325721961047,298.6903962390866,3545,5,713,8,unknown,miketheman,mitchellh,false,,2,1.0,35,5,381,true,true,false,false,3,2,2,0,3,0,6
455905,mitchellh/vagrant,ruby,614,1325449521,1325616773,1325616773,2787,2787,commit_sha_in_comments,false,false,false,14,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.596697373175904,0.272106954395121,2,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,2,0.007246376811594203,0,0,false,adding note to Vagrantfile template about bridged networking Some text added to the template,,125,0.744,0.9746376811594203,5936,1183.6253369272238,116.57681940700809,299.52830188679246,3540,5,710,8,unknown,miketheman,mitchellh,false,mitchellh,1,1.0,35,5,378,true,true,false,false,2,1,1,0,2,0,-1
455874,mitchellh/vagrant,ruby,613,1325449161,1325663363,1325663363,3570,3570,commits_in_master,false,true,false,87,10,2,0,2,0,2,0,2,1,0,1,17,1,1,0,10,8,8,26,13,8,1,58,0,1065,17,19.85903330692051,1.1755790367909038,2,mitchell.hashimoto@gmail.com,lib/vagrant/guest/redhat.rb|templates/guests/redhat/network_bridged.erb|lib/vagrant/guest/redhat.rb|templates/guests/redhat/network_bridged.erb,2,0.007272727272727273,0,0,false,adding bridged networking for rhel/centos Works but has some kinksI dont know why but when Vagrant file only has one entry for customizing networking bridged gets attached to Adapter 3 - which currently screws with the OS-level config file as its numbering the adapter 2  eth2 but the OS is detecting eth1 insteadI got it to work for now by adding hostonly (eth1) AND bridged (eth2) but this is less than perfectIt might be a virtualbox version/basebox version - what do you think,,124,0.7419354838709677,0.9781818181818182,5936,1183.6253369272238,116.57681940700809,299.52830188679246,3540,5,710,8,unknown,miketheman,miketheman,true,miketheman,0,0,35,5,378,true,true,false,false,1,1,0,0,1,0,2794
455875,mitchellh/vagrant,ruby,595,1323917699,,1324097782,3001,,unknown,false,false,false,128,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.753257228085637,0.2277797569097485,3,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_solo.rb,3,0.013157894736842105,0,0,false,Swap order of logging message and stream type for less empty lines in logging type is stderr stdout but data commonly has a trailing newline resulting in messages like:[solo] stdin: is not a tty: stderr[solo] [Wed 14 Dec 2011 22:49:38 +0000] INFO: *** Chef 0104 ***: stdout[solo] [Wed 14 Dec 2011 22:49:39 +0000] INFO: Setting the run_list to [role[solo]] from JSON: stdout[solo] [Wed 14 Dec 2011 22:49:39 +0000] INFO: Run List is [role[solo]]: stdout[solo] [Wed 14 Dec 2011 22:49:39 +0000] INFO: Run List expands to [skeleton]: stdout[solo] [Wed 14 Dec 2011 22:49:39 +0000] INFO: Starting Chef Run for debian-64vagrantupcom: stdoutBy prepending the data with which stream its more readable and no longer unnecessarily breaks lines,,123,0.7479674796747967,0.9649122807017544,5150,1343.495145631068,133.20388349514565,350.4854368932039,3509,5,692,9,unknown,dgtized,mitchellh,false,,0,0,19,13,1342,true,true,false,false,0,0,0,0,1,0,470
455876,mitchellh/vagrant,ruby,583,1323322492,1323588820,1323588820,4438,4438,commit_sha_in_comments,false,false,false,14,1,1,4,0,0,4,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,3.8801615475350606,0.24591651483436544,5,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb,5,0.03184713375796178,0,0,false,sleeping with the fiSSHes sleeping with the fiSSHes Maybe retires issues #391 #455 etc,,122,0.7459016393442623,0.9554140127388535,5023,1299.6217399960183,128.4093171411507,354.9671511049174,3486,4,686,12,unknown,hedgehog,mitchellh,false,mitchellh,4,0.0,10,3,1042,false,true,false,false,19,33,4,7,1,3,22
455877,mitchellh/vagrant,ruby,581,1323181441,,1323322741,2355,,unknown,false,false,false,12,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.196393363945896,0.265958625251365,5,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb,5,0.032679738562091505,0,0,false,ssh wait take 2 Please check re issue #455 and issue #391,,121,0.7520661157024794,0.9477124183006536,5023,1299.6217399960183,128.4093171411507,354.9671511049174,3484,4,684,12,unknown,hedgehog,hedgehog,true,,3,0.0,10,3,1040,false,true,false,false,18,33,3,7,0,3,-1
455878,mitchellh/vagrant,ruby,576,1322673844,1326448722,1326448722,62914,62914,merged_in_comments,false,false,false,246,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,3.538503879941418,0.20511694329934307,8,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/share_folders.rb,8,0.06153846153846154,0,0,false,Emit event for Upstart configs when shared folders are mounted A common use of Vagrants shared folders is to mount the working directory of the repo in the guest VM where an application-specific web server can be launched That allows developers to edit files locally on their host OS with their preferred tools while the guest VM picks up code changes and auto-reloads the web server (eg WEBrick and Mongrel for Ruby/Rails Djangos runserver)Currently this web server needs to be manually started by the user by SSHing in to the guest VM Its possible to use a Upstart config to automatically start it when the VM boots or restarts (vagrant reload) However the problem is that the shared folders are mounted very late in the boot process after Upstart has run -- when the app web server attempts to run it (typically) crashes because the path to the applications source code does not (yet) exist Additionally there is no way to notify the Upstart config for the web server that the path is now availableThis pull request simply emits an event on the guest VM using Upstarts initctl command after the shared folders have been mounted A user can then write an Upstart config that registers an interest in this event for example by starting when the event is emitted (eg start on my-event)The particular event name is just a symbol it can be named anything so long as it is reasonably unique,,120,0.75,0.9384615384615385,6401,1099.828151851273,108.26433369785971,277.9253241680987,3472,4,678,12,unknown,paulsmith,mitchellh,false,mitchellh,0,0,55,16,1372,false,true,false,false,0,0,0,0,0,0,328
455879,mitchellh/vagrant,ruby,574,1322625726,1326514111,1326514111,64806,64806,merged_in_comments,false,false,false,102,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,13,6,13,9.5388174976142,0.5529379517971043,2,mitchell.hashimoto@gmail.com,lib/vagrant/systems/debian.rb|test/unit/vagrant/action/vm/host_name_test.rb,1,0.007575757575757576,0,0,false,Improve hostname-changing support on Debian - Store short hostname in /etc/hostname on Debian  (see http://oreillycom/openbook/debian/book/ch10_02html#CH10-PGFID-460680)- Support switching between short hostnames and fully-qualified domain  names in configvmhost_name- Overwrite entire 127011 line in /etc/hosts so it doesnt contain  old hostnames when the hostname changes- Fix testing of current hostname so changes to domain work as do  changes in which the new hostname is a substring of the old hostname*The change to the unit test doesnt actually test these changes  Being new to both vagrant and ruby I couldnt figure out how to create a distribution-specific test  Help would be appreciated*,,119,0.7478991596638656,0.9393939393939394,6401,1099.828151851273,108.26433369785971,277.9253241680987,3468,4,678,11,unknown,cwarden,mitchellh,false,mitchellh,0,0,21,59,453,false,true,false,false,3,1,0,0,0,0,1162
455880,mitchellh/vagrant,ruby,569,1322208777,,1322209073,4,,unknown,false,false,false,39,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,5,0,5,4.383199748536873,0.2777956534567179,3,mitchell.hashimoto@gmail.com,test/unit/vagrant/action/vm/share_folders_test.rb,3,0.020689655172413793,0,0,true,Failing unit test for shared folder load order in ruby18 Following up on #545 this test shows the problem I started by pulling in ActiveSupports OrderedHash (not pushed here) but if you have a better recommendation Im all ears,,118,0.7542372881355932,0.9448275862068966,5033,1299.2251142459766,128.352871051063,354.8579376117624,3454,4,673,12,unknown,avit,mitchellh,false,,0,0,13,14,1332,false,true,false,false,2,1,0,0,0,0,-1
455881,mitchellh/vagrant,ruby,567,1322127640,,1323592374,24412,,unknown,false,false,false,67,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,5,0,5,0,4.143245301384756,0.2648913900560948,0,,lib/vagrant/provisioners/puppet.rb,0,0.0,0,0,false,Hack to fix puppet hanging on JRuby I know this is really hacky  But i tried to make so that the change would not affect non-JRuby environments  See this issue:https://githubcom/mitchellh/vagrant/issues/566I tried to figure out how to get the channelon_request(exit-status) callback to be invoked in lib/vagrant/ssh/sessionrb but i could not figure it outIll be happy to help make this right with a little guidence  Thanks,,117,0.7606837606837606,0.9402985074626866,4985,1299.097291875627,128.78635907723168,352.8585757271815,3452,4,672,18,unknown,jkutner,mitchellh,false,,0,0,44,8,1365,false,true,false,false,1,0,0,0,0,0,-1
455882,mitchellh/vagrant,ruby,559,1321503840,1326447735,1326447735,82398,82398,merged_in_comments,false,false,false,185,7,3,0,6,0,6,0,4,0,0,6,9,6,0,0,0,0,9,9,9,0,0,92,0,124,19,36.45979310494597,2.1134698643136134,13,mitchell.hashimoto@gmail.com,lib/vagrant/hosts/bsd.rb|lib/vagrant/action/vm/nfs.rb|lib/vagrant/action/vm/nfs_helpers.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/base.rb|lib/vagrant/hosts/bsd.rb|lib/vagrant/hosts/linux.rb|lib/vagrant/action/vm/nfs.rb|lib/vagrant/hosts/base.rb,8,0.029411764705882353,0,0,false,Dont sudo if the proper NFS export is already in /etc/exports (and that file can be read without sudo) First off thanks for Vagrant Its an incredibly useful tool As weve started to roll it out though Im often told that team members forget to type their sudo password after they vagrant up and go get coffeeThis is a first stab at making Vagrant not require sudo on a regular basis It works by rendering the output of the nfs export and trying to read /etc/exports and search for that output before executing any code that would cause sudo to be calledCurrently 4 unit tests fail and Im very new to Ruby so Im having a tough time fixing them The functionality works in my manual testing on Mac OS XIt still properly calls sudo and adds the export if you:- Remove the /etc/exports file completely- Edit /etc/exports so that the exported folder is wrongId love your input as to if this you think this is the right direction and also help on to getting the tests to pass,,116,0.7586206896551724,0.9117647058823529,6401,1099.828151851273,108.26433369785971,277.9253241680987,3432,4,665,19,unknown,smerrill,mitchellh,false,mitchellh,0,0,33,13,725,false,true,false,false,1,2,0,0,0,0,163
455883,mitchellh/vagrant,ruby,557,1321453883,1327883701,1327883701,107163,107163,merged_in_comments,false,false,false,38,1,1,0,2,0,2,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,4,0,4,0,12.741833617360975,0.7386076297492046,13,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/nfs.rb|lib/vagrant/config/nfs.rb|lib/vagrant/systems/linux.rb,8,0.029411764705882353,0,0,false,Make NFS protocol version selectable use v3 by default NFSv4 has siginificant added complexity in the form of ID-mapping whichcan cause problems with applications without extra setup Best toforce version 3 unless the user requests it,,115,0.7565217391304347,0.9117647058823529,6401,1099.828151851273,108.26433369785971,277.9253241680987,3432,4,664,17,unknown,russss,mitchellh,false,mitchellh,0,0,101,66,1042,false,false,false,false,0,0,0,0,0,0,8063
455884,mitchellh/vagrant,ruby,556,1321142100,1322028385,1322028385,14771,14771,commit_sha_in_comments,false,false,false,237,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,7,8,7,8.894075043516885,0.6820908295149025,1,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef.rb|test/unit/vagrant/provisioners/chef_test.rb,1,0.011111111111111112,0,0,false,Remove the chef dependency on the default v-root shared folder My vagrant box does not have the guest additions installed (on purpose) I plan to solely use NFS So right away I have to override the defaults by doing something like this:rubyconfigvmshare_folder v-root /vagrant  nfs: trueThis is fine for a simple Vagrantfile However my Vagrantfile has become increasingly complex I wont bore you with all the details but I am dynamically creating shared folders like so:rubyVagrant::Configrun do |config|  #   # Use NFS to mount your local checkouts on the machine  projectseach do |project|    project_config  configsend(project)    configvmshare_folder projectto_s project_configdir project_configlocal_dir nfs: true  end  # endEach project is in a subdirectory of the directory containing the Vagrantfilebash$ lsproject_1project_2project_3VagrantfileThe projects are all shared to different directories on the guest so I dont want the v-root shared folder anymore Plus NFS wont let you share a subdirectory of a directory that is already shared To accomplish that I just add the following to my Vagrantfileruby# Undo default vagrant configconfigvmshared_foldersdelete v-rootAfter you do this it blows up because Vagrant::Provisioners::Chef#setup_json expects the v-root shared folder to existThis pull request modifies Vagrant::Provisioners::Chef#setup_json so it will pass the directory to chef **only if** the v-root shared folder exists There was also a stray comma in the initial code  -),,114,0.7543859649122807,0.8888888888888888,4964,1269.7421434327157,127.5181305398872,344.8831587429492,3421,4,660,17,unknown,jbrown,mitchellh,false,mitchellh,1,1.0,4,14,1027,false,true,false,false,1,0,1,0,1,0,-1
455885,mitchellh/vagrant,ruby,554,1320958942,,1326365444,90108,,unknown,false,false,false,40,1,1,0,1,0,1,0,3,0,0,4,4,3,1,0,0,0,4,4,3,1,0,6,0,6,0,17.477767598452623,1.0131361691626162,37,xmitchx@gmail.com,lib/vagrant/command/ssh_config.rb|lib/vagrant/config/ssh.rb|lib/vagrant/ssh.rb|templates/ssh_config.erb,25,0.09302325581395349,0,0,false,Add RemoteForward option to ssh config Ive added this so I can run commands on my local box from inside the vagrant boxIn my Vagrantfile:configsshremote_forward  2048 localhost:22In my vagrant box:ssh -p 2048 lewis@localhost open http://wwwgooglecom,,113,0.7610619469026548,0.8837209302325582,6401,1099.828151851273,108.26433369785971,277.9253241680987,3414,4,658,18,unknown,lmars,mitchellh,false,,1,0.0,27,0,356,false,true,false,false,1,0,1,0,1,0,33329
455886,mitchellh/vagrant,ruby,550,1320672337,1320829495,1320829495,2619,2619,merged_in_comments,false,false,false,19,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.726243501304512,0.3995129523115779,4,mitchell.hashimoto@gmail.com,Rakefile,4,0.046511627906976744,0,0,false,Rakefile acceptance/{helpers ~ support} Hey MitchellThis pull request should fix **rake acceptance:config**Thank you for this gemAlexey,,112,0.7589285714285714,0.8837209302325582,4964,1263.4971796937953,127.31668009669622,346.89766317485896,3404,4,655,14,unknown,alexey-chebotar,mitchellh,false,mitchellh,0,0,4,0,713,true,false,false,false,0,0,0,0,2,0,2619
455888,mitchellh/vagrant,ruby,546,1320367858,1320367981,1320367981,2,2,merged_in_comments,false,false,false,19,1,1,0,0,0,0,0,1,0,0,2,2,1,1,0,0,0,2,2,1,1,0,2,0,2,0,9.904141754678479,0.8567900949978687,23,mitchell.hashimoto@gmail.com,CHANGELOG.md|templates/network_entry_redhat.erb,23,0.36507936507936506,0,0,false,Fix RedHat/CentOS issues with Host-Only networking It would be great if we can get this in the main distro,,110,0.7545454545454545,0.8571428571428571,4961,1206.8131425115905,124.37008667607337,336.82725257004637,3393,4,651,13,unknown,xuru,mitchellh,false,mitchellh,0,0,8,7,459,false,false,false,false,0,0,0,0,0,0,-1
455889,mitchellh/vagrant,ruby,544,1320206885,1322206410,1322206410,33325,33325,commit_sha_in_comments,false,false,false,50,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,9.428436672043642,0.839544112357876,1,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb|lib/vagrant/util/safe_exec.rb,1,0.015625,0,0,false,Kernelexec still failing in OS X Leopard I was getting the same error from GH-51:    /opt/local/lib/ruby/gems/18/gems/vagrant-086/lib/vagrant/util/safe_execrb:23:in exec: Operation not supported - ssh -p 2222 -o UserKnownHostsFile/dev/null -o StrictHostKeyCheckingno -o IdentitiesOnlyyes -i /opt/local/lib/ruby/gems/18/gems/vagrant-086/keys/vagrant -o LogLevelERROR vagrant@127001 (Errno::E045)Ruby 187 (2011-06-30 patchlevel 352) [i686-darwin9] (MacPorts) and irb 095(05/04/13) Leopard (OS X 1058),,109,0.7522935779816514,0.859375,4961,1171.3364241080428,122.95908083047773,333.80366861519855,3388,4,650,16,unknown,eriksencosta,mitchellh,false,mitchellh,0,0,21,7,646,false,false,false,false,0,0,0,0,0,0,33325
455890,mitchellh/vagrant,ruby,543,1320132706,,1322206486,34563,,unknown,false,false,false,320,4,0,7,9,0,16,0,4,0,0,0,39,0,0,0,1,2,37,40,38,1,1,0,0,2855,343,0,0.0,0,,,0,0.0,0,2,false,ssh connections closes GH issue #391 #455 etc Should fix the ssh connection refused error - Banner connection error handled - Vagrant bails when orphaned Vagrant ssh sessions are around - Multiplexing SSH conecctions - Establish remote shell session is responsive before proceeding - Net::SSH and Net::Scp are removed - Use Aruba/ChildProcess to manage sessions (no threading) - tested on Ubuntu Lucid +chef-solo (0104) - Distribution config variable + others (no parsing ssh output)TODO - Confirm with other provisioners - Confirm on other distributionsLikely addresses issues:-----------------------GH issue #391 GH issue #410 GH issue #424 GH issue #443 GH issue #455 GH issue #493Possibly addresses/affects issues:---------------------------------GH issue #516 GH issue #353Overview--------Essentially between 1%-2% of reloads psuedo-failI say psuedo-fail in the sense of current behaviorSpecifically now running vagrant reload after a banner exchange exit will succeedIve run reload 100 times under 192 and 187  Results are belowIve run provision 100 times under 192 and 187 with full successOne thing to think about in the code review is auto-triggering a reload whenthe banner exchange error occursOtherwise I think less fault prone up and reloading will have to wait bootstrappingvia a serial consoleCommand-------    rm up-reload-18log vagrant halt th_ci_runner_6 vagrant up th_ci_runner_6 2&1|tee up-reload-18log for ((n0n100n++)) do time vagrant reload th_ci_runner_6 2&1|tee -a up-reload-18log doneResults-------Total 101success (DEBUG: Exiting) (count: 192  100 187  99)banner exchange failed (count: 192  1 187  2)orphan master control (count: 192  14 187  5)Attempt counts:1 (count: 192  155 187  161)2 (count: 192  311 187  317)3 (count: 192  34  187  17)4 (count: 192  168 187  167)5 (count: 192  31  187  32)6 (count: 192  1   187  96)7 (count: 192  0   187),,108,0.7592592592592593,0.8709677419354839,4961,1206.8131425115905,124.37008667607337,336.82725257004637,3387,4,649,16,unknown,hedgehog,mitchellh,false,,2,0.0,10,3,1005,false,true,false,false,16,17,2,0,0,0,61
455891,mitchellh/vagrant,ruby,542,1320075911,1322697165,1322697165,43687,43687,commit_sha_in_comments,false,false,false,57,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,4.182411614379199,0.3724179488547349,5,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_solo.rb,5,0.08064516129032258,0,0,false,Issues 532 and 501 - Chef solo remote with linux guest does not work on windows Fix for #532 (and #501) Remove windows drive letter from path if running a chef solo provisioner on a Windows guestThe commit fixes this test case on Windows:https://githubcom/mitchellh/vagrant/blob/master/test/unit/vagrant/provisioners/chef_solo_testrb#L48 Im wondering if this fix might affect https://githubcom/mitchellh/vagrant/pull/430 negatively though,,107,0.7570093457943925,0.8709677419354839,4961,1171.3364241080428,122.95908083047773,333.80366861519855,3383,4,648,18,unknown,mdellanoce,mitchellh,false,mitchellh,0,0,11,14,305,false,false,false,false,1,1,0,0,1,0,-1
455892,mitchellh/vagrant,ruby,540,1319901351,,1320124737,3723,,unknown,false,false,false,94,4,1,0,9,0,9,0,4,0,2,34,37,34,1,1,0,2,35,37,35,1,1,1016,339,1060,341,145.3685802843926,12.998248952659228,24,xmitchx@gmail.com,config/default.rb|lib/vagrant/action/vm/forward_ports_helpers.rb|lib/vagrant/action/vm/halt.rb|lib/vagrant/action/vm/share_folders.rb|lib/vagrant/command/halt.rb|lib/vagrant/command/provision.rb|lib/vagrant/command/reload.rb|lib/vagrant/command/resume.rb|lib/vagrant/command/ssh.rb|lib/vagrant/command/ssh_config.rb|lib/vagrant/command/status.rb|lib/vagrant/command/suspend.rb|lib/vagrant/command/up.rb|lib/vagrant/config/base.rb|lib/vagrant/config/ssh.rb|lib/vagrant/config/vm.rb|lib/vagrant/environment.rb|lib/vagrant/errors.rb|lib/vagrant/provisioners/chef.rb|lib/vagrant/provisioners/chef_client.rb|lib/vagrant/provisioners/chef_solo.rb|lib/vagrant/ssh.rb|lib/vagrant/ssh/session.rb|lib/vagrant/systems/debian.rb|lib/vagrant/systems/linux.rb|lib/vagrant/util/template_renderer.rb|templates/locales/en.yml|templates/ssh_config.erb|test/unit/vagrant/action/vm/share_folders_test.rb|test/unit/vagrant/provisioners/chef_client_test.rb|test/unit/vagrant/provisioners/chef_solo_test.rb|test/unit/vagrant/provisioners/chef_test.rb|test/unit/vagrant/ssh/session_test.rb|test/unit/vagrant/ssh_test.rb|test/unit/vagrant/systems/linux_test.rb|vagrant.gemspec,8,0.015384615384615385,0,9,false,Issue #391 issue #410 and issue #455   ssh shared connections closes GH issue #391 #455    Should fix the ssh connection refused error   - Banner connection error handled   - Vagrant bails when orphaned Vagrant ssh sessions are around   - Multiplexing SSH conecctions   - Establish remote shell session is responsive before proceeding   - Net::SSH and Net::Scp are removed   - Use Aruba/ChildProcess to manage sessions (no threading)   - tested on Ubuntu Lucid +chef-solo (0104)   - Distribution config variable + others (no parsing ssh output)      TODO (help required)   - Confirm with other provisioners   - Confirm on other distributions,,106,0.7641509433962265,0.8769230769230769,4914,1180.7081807081806,123.93162393162393,336.5893365893366,3379,4,646,15,unknown,hedgehog,hedgehog,true,,1,0.0,10,3,1002,false,true,false,false,10,11,1,0,0,0,284
455893,mitchellh/vagrant,ruby,538,1319504316,,1320135923,10526,,unknown,false,false,false,53,2,2,0,1,0,1,0,2,0,0,4,4,3,0,1,0,0,4,4,3,0,1,30,18,30,18,18.167491746281506,1.624460939919507,3,mitchell.hashimoto@gmail.com,vagrant.gemspec|bin/vagrant|lib/vagrant/environment.rb|test/unit/vagrant/environment_test.rb,2,0.014492753623188406,0,1,false,Add global --vagrantfile & --cwd flags These changes allow a user to specify a Vagrantfile before the environment is setup Its a bit rough in that it does its own ARGV parsing It would be possible to add a global argument to Thor if the Environment could be created in the thor sequence,,105,0.7714285714285715,0.8405797101449275,4914,1180.7081807081806,123.93162393162393,336.5893365893366,3370,4,641,15,unknown,benburkert,benburkert,true,,0,0,120,12,1365,false,false,false,false,0,0,0,0,0,0,9092
455894,mitchellh/vagrant,ruby,534,1319180067,,1319245942,1097,,unknown,false,false,false,45,1,1,0,1,0,1,0,1,0,0,6,6,5,1,0,0,0,6,6,5,1,0,60,49,60,49,26.05865267015561,2.330055463944892,6,mitchell.hashimoto@gmail.com,Gemfile|lib/vagrant/action/vm/forward_ports_helpers.rb|lib/vagrant/config/ssh.rb|lib/vagrant/ssh.rb|templates/ssh_config.erb|test/unit/vagrant/ssh_test.rb,3,0.011363636363636364,0,0,true,ssh shared connections closes GH issue #391 maybe several others too This should help the ssh connections refused errorsIt seems that it might also make redundant the new ssh sessioncaching code but I really couldnt follow what was trying to be achievedthere,,104,0.7788461538461539,0.8636363636363636,4914,1180.7081807081806,123.93162393162393,336.5893365893366,3357,5,638,13,unknown,hedgehog,hedgehog,true,,0,0,10,3,994,false,true,false,false,5,6,0,0,0,0,119
455895,mitchellh/vagrant,ruby,533,1319150400,1320050464,1320050464,15001,15001,commit_sha_in_comments,false,false,false,10,2,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,69,0,74,0,4.41670418329677,0.3949231698653838,0,,lib/vagrant/systems/solaris.rb,0,0.0,0,0,false,Add solaris support for host-only networks and setting the hostname ,,103,0.7766990291262136,0.8723404255319149,4914,1180.7081807081806,123.93162393162393,336.5893365893366,3357,5,637,14,unknown,dizzyd,mitchellh,false,mitchellh,1,0.0,79,0,1167,false,true,false,false,1,2,1,0,0,0,-1
455896,mitchellh/vagrant,ruby,530,1319054919,1320051567,1320051567,16610,16610,commit_sha_in_comments,false,false,false,40,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.4200512710555,0.39522245241921533,0,,lib/vagrant/command/halt.rb,0,0.0,0,0,false,Adding a down alias for the halt command I often find myself typing vagrant down instead of vagrant halt  It just seems like a logical equivalent to vagrant up to me  This commit simply adds a down alias for halt,,102,0.7745098039215687,0.8787878787878788,4914,1180.7081807081806,123.93162393162393,336.5893365893366,3354,5,636,13,unknown,brycethornton,mitchellh,false,mitchellh,0,0,21,45,1293,false,true,false,false,0,0,0,0,0,0,-1
455897,mitchellh/vagrant,ruby,528,1318970346,1320050983,1320050983,18010,18010,merged_in_comments,false,false,false,55,1,1,0,1,0,1,0,1,1,0,2,3,3,0,0,1,0,2,3,3,0,0,25,10,25,10,13.545262698985526,1.2111605984328773,0,,lib/vagrant/command/init.rb|lib/vagrant/test_helpers.rb|test/unit/vagrant/command/init_test.rb,0,0.0,0,0,false,Make init respect the envs cwd Heres the problem I was havingrubyFileUtilsmkdir_p tmpenv  Vagrant::Environmentnew(:cwd  Fileexpand_path(tmp))Dirchdir tmp do  envcli initendI would expect that init would create the Vagrantfile in the cwd as specified in the vagrant environment Instead its created in Dirpwd This pull request fixes that,,101,0.7722772277227723,0.8787878787878788,4914,1180.7081807081806,123.93162393162393,336.5893365893366,3354,5,635,13,unknown,jbrown,mitchellh,false,mitchellh,0,0,4,14,1002,false,true,false,false,0,0,0,0,0,0,18010
455898,mitchellh/vagrant,ruby,525,1318564738,1318616517,1318616517,862,862,commit_sha_in_comments,false,false,false,46,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,3,0,0,0.0,0,,,0,0.0,0,0,false,Mount Order on Unix hosts should be from shortest to longest Detailed in michellh/vagrant#524Basically we cant mount in random order we need to mount directories closer to / first then work our way outwardSo /vagrant/cache doesnt mount before /vagrant (which would make /vagrant/cache disappear,,100,0.77,0.8686868686868687,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3341,6,630,11,unknown,hh,mitchellh,false,mitchellh,0,0,29,12,1081,false,true,false,false,2,1,0,0,0,0,-1
455899,mitchellh/vagrant,ruby,521,1318302794,,1318617533,5245,,unknown,false,false,false,27,1,1,0,0,0,0,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,3,8,3,9.161726209784897,0.819188845821218,2,mitchell.hashimoto@gmail.com,lib/vagrant/downloaders/http.rb|test/unit/vagrant/downloaders/http_test.rb,1,0.009615384615384616,0,1,false,Basic Auth support for HTTP downloader This adds basic authentication support for the Vagrantfiles box_url configuration  Urls can be entered in typical basic-auth fashion:    configvmbox_url  http://user:pass@domaincom/path/to/abovebox,,99,0.7777777777777778,0.875,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3338,6,627,11,unknown,ticean,mitchellh,false,,0,0,15,41,998,false,true,false,false,0,0,0,0,1,0,-1
455900,mitchellh/vagrant,ruby,517,1317963807,,1318348548,6412,,unknown,false,false,false,58,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.574141914992636,0.4089934527800355,1,mitchell.hashimoto@gmail.com,templates/chef_solo_solo.erb,1,0.006666666666666667,0,0,true,Use cookbooks_path and roles_path chef-solo requires plural form on conf Use cookbooks_path and roles_path chef-solo requires plural form of these configuration settingsI am a chef n00b so maybe Im missing something with this PR :) However I did a fair bit of trekking through both vagrant and chef to narrow down this fix -- hopefully its right,,98,0.7857142857142857,0.9133333333333333,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3331,6,624,11,unknown,dizzyd,dizzyd,true,,0,0,79,0,1154,false,true,false,false,0,0,0,0,0,0,1003
455901,mitchellh/vagrant,ruby,515,1317501170,1322428374,1322428374,82120,82120,commit_sha_in_comments,false,false,false,59,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.7475702294427515,0.4245004719837725,6,xmitchx@gmail.com,templates/commands/init/Vagrantfile.erb,6,0.039473684210526314,0,0,false,File-local filetype settings for Vagrantfile - emacs and vi Adds filetype setting to the Vagrantfile template so that when people vagrant init a project they get a Vagrantfile that will be recognised as Ruby syntax by both vi and emacs even if they havent set up a rule in their rc files to set the filetype of this filename ,,97,0.7835051546391752,0.9144736842105263,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3317,6,618,15,unknown,wjlroe,mitchellh,false,mitchellh,0,0,16,13,1005,false,true,false,false,0,0,0,0,1,0,-1
455902,mitchellh/vagrant,ruby,514,1317288790,,1322696856,90134,,unknown,false,false,false,22,1,1,0,3,0,3,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.308893079403307,0.3852764280069338,1,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/check_guest_additions.rb,1,0.006622516556291391,0,0,false,Strip _OSE off of the VirtualBox version NOT the VirtualBox Tools Version Commit 0e7ccf8 didnt fix issue #434 this should fix it,,96,0.7916666666666666,0.9139072847682119,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3313,6,616,16,unknown,kevin1024,mitchellh,false,,0,0,22,41,1136,false,false,false,false,0,0,0,0,0,0,3
455903,mitchellh/vagrant,ruby,510,1317066061,1322207188,1322207188,85685,85685,commit_sha_in_comments,false,false,false,9,1,1,0,0,0,0,0,1,1,0,3,4,4,0,0,1,0,3,4,4,0,0,55,0,55,0,17.3849760440602,1.5544647429041518,3,mitchell.hashimoto@gmail.com,lib/vagrant/hosts.rb|lib/vagrant/hosts/bsd.rb|lib/vagrant/hosts/freebsd.rb|lib/vagrant/util/platform.rb,2,0.006578947368421052,0,0,false,FreeBSD host nfs support Fixes NFS commands for FreeBSD,,95,0.7894736842105263,0.9078947368421053,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3306,7,613,15,unknown,dctrwatson,mitchellh,false,mitchellh,0,0,17,0,381,false,true,false,false,0,0,0,0,1,0,-1
502049,mitchellh/vagrant,ruby,508,1316644391,1322207563,1322207563,92719,92719,github,false,false,false,69,2,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,4,0,0,0.0,0,,,0,0.0,0,0,false,Makes the execute method honor max_tries   Vagrant::SSHexecute is hard coded for only 5 tries this makes  starting Debian machines very unreliable  Debian will reset  networking when you create a new hostonly NIC or change the hostname  of the machine and occasionally the coming up part takes longer than  what is provided by 5 tries  Making this method honor the max_tries  config option will make it possible to avoid this,,94,0.7872340425531915,0.918918918918919,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3297,7,608,14,unknown,ody,mitchellh,false,mitchellh,1,1.0,17,1,599,false,true,false,false,0,0,0,0,0,0,-1
502050,mitchellh/vagrant,ruby,504,1316200121,1317535062,1317535062,22249,22249,github,false,false,false,5,1,1,0,3,0,3,0,3,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.361965179887757,0.390021882384344,23,mitchell.hashimoto@gmail.com,templates/locales/en.yml,23,0.15436241610738255,0,0,true,Fix typo in creation message ,,93,0.7849462365591398,0.9194630872483222,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3280,7,603,10,unknown,sjl,mitchellh,false,mitchellh,0,0,698,3,932,true,true,false,false,0,0,0,0,1,0,2272
502051,mitchellh/vagrant,ruby,502,1316139558,1322207986,1322207986,101140,101140,commit_sha_in_comments,false,false,false,17,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,17,10,17,10,9.408819507035822,0.8412826200605011,3,mitchell.hashimoto@gmail.com,lib/vagrant/downloaders/http.rb|test/unit/vagrant/downloaders/http_test.rb,2,0.013513513513513514,0,0,false,Support for no_proxy environment variable Adding support for no_proxy environment variable to suppress proxy in http downloader,,92,0.782608695652174,0.9256756756756757,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3278,6,602,12,unknown,darrin-wortlehock,mitchellh,false,mitchellh,0,0,2,1,1252,false,true,false,false,0,0,0,0,0,0,-1
502052,mitchellh/vagrant,ruby,487,1314915227,1315817777,1315817777,15042,15042,merged_in_comments,false,false,false,58,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,37,2,37,8.668233084068127,0.7750287726804311,4,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/forward_ports.rb|test/unit/vagrant/action/vm/forward_ports_test.rb,3,0.02,0,0,false,Dont do the port threshold check if running under root For the rare case where a risk-taker wants to run the machine under root (and thus have access to ports under 1024) allow themIts fairly important in our setup that we forward ports 80 and 443 to vagrant running the machine under root is an acceptable compromise,,91,0.7802197802197802,0.9333333333333333,4900,1183.265306122449,124.08163265306123,337.1428571428571,3230,6,588,5,unknown,samerbuna,mitchellh,false,mitchellh,0,0,20,65,866,false,true,false,false,0,0,0,0,0,0,-1
502053,mitchellh/vagrant,ruby,486,1314635620,,1314684759,818,,unknown,false,false,false,4,1,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,2,0,0,0.0,0,,,0,0.0,0,0,false,Bump i18n to 06 ,,90,0.7888888888888889,0.9251700680272109,4900,1183.265306122449,124.08163265306123,337.1428571428571,3225,7,585,5,unknown,ambethia,mitchellh,false,,0,0,51,41,1291,false,true,false,false,0,0,0,0,0,0,-1
502169,mitchellh/vagrant,ruby,467,1313336301,,1313361334,417,,unknown,false,false,false,16,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.72258893824748,0.4272772140988843,3,mitchell.hashimoto@gmail.com,Gemfile,3,0.023076923076923078,0,0,false,Minor Comment Fix in Gemfile gem bundle is a defunct command now that bundler uses bundle,,89,0.797752808988764,0.9153846153846154,4834,1185.3537443111295,124.32767894083575,337.8154737277617,3185,9,570,5,unknown,mirell,mitchellh,false,,0,0,5,6,569,false,false,false,false,0,0,0,0,0,0,-1
502055,mitchellh/vagrant,ruby,466,1313245034,,1313294153,818,,unknown,false,false,false,30,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.43573769088913,0.4013714371075727,4,mitchell.hashimoto@gmail.com,lib/vagrant/ui.rb,4,0.031496062992125984,0,0,false,undefined method clear_line for #Vagrant::UI:0x1071767d8 Vagrant::Action::VM::Import#call calls envuiclear_line [here](https://githubcom/mitchellh/vagrant/blob/master/lib/vagrant/action/vm/importrb#L14) which will raise an error if ui is not a shellIve added :clear_line to the do nothing methods in Vagrant::UI,,88,0.8068181818181818,0.9212598425196851,4831,1186.0898364727798,124.40488511695301,338.0252535706893,3182,9,569,5,unknown,lmars,mitchellh,false,,0,0,24,0,267,false,true,false,false,0,0,0,0,1,0,-1
502057,mitchellh/vagrant,ruby,464,1313027307,1313048768,1313048768,357,357,merged_in_comments,false,false,false,18,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.8203187403531755,0.4361432614182058,5,xmitchx@gmail.com,templates/commands/init/Vagrantfile.erb,5,0.036231884057971016,0,0,false,init command should mention :chef_client provisioner instead of :chef_ser init command should mention :chef_client provisioner instead of :chef_server,,87,0.8045977011494253,0.9057971014492754,4827,1187.0727159726537,124.50797596851046,338.3053656515434,3174,10,566,5,unknown,josephholsten,mitchellh,false,mitchellh,0,0,31,27,1212,false,true,false,false,5,11,0,0,1,0,357
502170,mitchellh/vagrant,ruby,459,1312626141,,1312626364,3,,unknown,false,false,false,35,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.490630809690628,0.406318364059437,1,mitchell.hashimoto@gmail.com,lib/vagrant/downloaders/http.rb,1,0.0072992700729927005,0,0,false,use VERIFY_PEER instead of VERIFY_NONE when downloading over SSL Use OpenSSL::SSL::VERIFY_PEER instead of OpenSSL::SSL::VERIFY_NONE for downloads to verify certificates decreasing the viability of a man in the middle attack vectorre: eg http://wwwrubyinsidecom/how-to-cure-nethttps-risky-default-https-behavior-4010html http://notetoselfvrenskcom/2008/09/verified-https-in-ruby/ -t,,86,0.813953488372093,0.9051094890510949,4827,1187.0727159726537,124.50797596851046,338.3053656515434,3165,10,562,7,unknown,tnm,tnm,true,,0,0,172,0,691,true,false,false,false,0,0,0,0,1,0,-1
502059,mitchellh/vagrant,ruby,458,1312579522,1312965080,1312965080,6425,6425,merged_in_comments,false,false,false,28,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.309943919025307,0.389969569216697,18,mitchell.hashimoto@gmail.com,templates/locales/en.yml,18,0.13043478260869565,0,0,true,Change message for virualbox_not_detected to accurately indicate which version of VirtualBox is required When vagrant cant find VirtualBox it says it requires version 40x It now requires 41x,,85,0.8117647058823529,0.9057971014492754,4827,1187.0727159726537,124.50797596851046,338.3053656515434,3165,10,561,6,unknown,brianloveswords,mitchellh,false,mitchellh,0,0,113,35,602,false,true,false,false,0,0,0,0,1,0,6417
502060,mitchellh/vagrant,ruby,456,1312545553,1312965080,1312965080,6992,6992,merged_in_comments,false,false,false,32,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.791352206202961,0.4335280437340346,2,mitchell.hashimoto@gmail.com,lib/vagrant/systems/redhat.rb,2,0.014598540145985401,0,0,true,Add short hostname to /etc/hosts mimicking Debian behaviour Allows hostname -s to work and resolve on RHEL and CentOS boxes Required by some services that dont use the machines FQDN like RabbitMQ,,84,0.8095238095238095,0.9051094890510949,4827,1187.0727159726537,124.50797596851046,338.3053656515434,3163,10,561,5,unknown,dcarley,mitchellh,false,mitchellh,0,0,11,0,462,false,false,false,false,0,0,0,0,1,0,6991
502061,mitchellh/vagrant,ruby,448,1312057462,1312059971,1312059971,41,41,merged_in_comments,false,false,false,2,1,1,0,1,0,1,0,1,2,0,3,5,4,1,0,2,0,3,5,4,1,0,28,0,28,0,22.242291162485234,2.030627772394724,4,mitchell.hashimoto@gmail.com,lib/vagrant/systems.rb|lib/vagrant/systems/arch.rb|lib/vagrant/systems/linux.rb|lib/vagrant/vm.rb|templates/network_entry_arch.erb,3,0.007518796992481203,0,0,false,Archlinux support ,,83,0.8072289156626506,0.9022556390977443,4787,1196.9918529350323,125.5483601420514,341.1322331313975,3144,10,555,8,unknown,pelletier,mitchellh,false,mitchellh,0,0,19,2,579,false,false,false,false,0,0,0,0,1,0,41
502062,mitchellh/vagrant,ruby,446,1311977963,1312360280,1312360280,6371,6371,merged_in_comments,false,false,false,86,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.286232971754582,0.39124535069859573,13,ryan@kaneda.net,lib/vagrant/provisioners/chef_solo.rb,13,0.10077519379844961,0,1,true,Changed data_bags_path and roles_path in chef-solo provisioner to strings Chefs solorb config file parsing will throw an exception if data_bag_path is an array This *should* be the behaviour for role_path config directive as well but Chef uses Filejoin() on role_path internally which will have no negative effects if its a single-element array Since Chef 0104 is about to come out and includes data bag support for chef-solo itd be nice to see this fixed in Vagrant soon so we can take advantage of the new feature,,82,0.8048780487804879,0.8992248062015504,4775,1200.0,125.86387434554975,341.9895287958115,3140,10,554,8,unknown,xdissent,mitchellh,false,mitchellh,0,0,68,7,763,false,true,false,false,1,1,0,0,1,0,6371
502063,mitchellh/vagrant,ruby,441,1311864204,,1324935043,217847,,unknown,false,false,false,42,2,1,0,1,0,1,0,2,0,0,5,5,2,3,0,0,0,5,5,2,3,0,1,14,1,14,23.5660600291598,2.1071415008257715,7,mitchell.hashimoto@gmail.com,lib/vagrant/config/vm.rb|templates/network_entry_debian.erb|templates/network_entry_gentoo.erb|templates/network_entry_redhat.erb|test/unit/vagrant/config/vm_test.rb,5,0.007874015748031496,0,0,false,add DHCP support for host-only network interface I manage my own DHCP server on my VirtualBox host (not the DHCP included with VirtualBox) so I needed VM to use DHCP to configure their host-only network interfaceI tested it with Debian VM,,81,0.8148148148148148,0.8976377952755905,4902,1183.3945328437371,124.23500611995104,337.4133006935944,3138,10,553,12,unknown,dax,mitchellh,false,,0,0,5,5,911,false,true,false,false,0,0,0,0,0,0,144686
502065,mitchellh/vagrant,ruby,439,1311809965,1312059970,1312059970,4166,4166,merged_in_comments,false,false,false,88,1,1,0,1,0,1,0,1,1,0,3,4,4,0,0,1,0,3,4,4,0,0,21,0,21,0,17.101341744326053,1.5610025148578133,4,mitchell.hashimoto@gmail.com,lib/vagrant/systems.rb|lib/vagrant/systems/arch.rb|lib/vagrant/systems/linux.rb|lib/vagrant/vm.rb,3,0.015748031496062992,0,0,false,set hostname support for archlinux Patch for setting the hostname on Archlinux guestsBe aware that I dont know any ruby this is basically a cut n paster from the redhatrb in systemswith some stuff taken outThe rest of the refs were done by reading and grepping around (who knew ruby was this easy)So basically: you might want to check though the chance itll break something for anybody is quite lowTested with vagrant 176 - VirtualBox 4010 on Archlinux hostSigned-off-by: Dave Simons dave@inuitsbe,,80,0.8125,0.8976377952755905,4775,1200.0,125.86387434554975,341.9895287958115,3134,10,552,9,unknown,simonsd,mitchellh,false,mitchellh,0,0,8,18,72,false,true,false,false,2,0,0,0,0,0,4164
502066,mitchellh/vagrant,ruby,434,1311715614,1312359649,1312359649,10733,10733,commit_sha_in_comments,false,false,false,66,2,2,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,8.700321267355514,0.7941612758495342,6,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef.rb|lib/vagrant/provisioners/chef_client.rb,5,0.03968253968253968,0,0,false,GH-429 (chef-server run list ignored/clobbered) was not completely resolved These changesets fully resolve the problem  When the run list defined in json is an empty array it causes the client to not use a server provided run list  The validator needs to allow an empty run list on the client side when node_name has been set in order to provision with a server defined run list,,79,0.810126582278481,0.8968253968253969,4775,1200.0,125.86387434554975,341.9895287958115,3131,10,551,7,unknown,halcyon,mitchellh,false,mitchellh,1,0.0,2,4,1205,false,true,false,false,2,1,1,0,0,0,11
502068,mitchellh/vagrant,ruby,432,1311711704,,1311714712,50,,unknown,false,false,false,60,2,2,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,0,6,0,8.70634444481195,0.7947110686843596,6,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef.rb|lib/vagrant/provisioners/chef_client.rb,5,0.03968253968253968,0,0,false,GH-429 (chef-server run list ignored/clobbered) was not completely solved These changesets solve the problem  When the run list defined in json is an empty array it causes the client to not use a server provided run list  The validator needs to allow an empty run list on the client side in order to provision with a server defined run list,,77,0.8311688311688312,0.8968253968253969,4775,1200.0,125.86387434554975,341.9895287958115,3131,10,551,5,unknown,halcyon,halcyon,true,,0,0,2,4,1205,false,true,false,false,1,0,0,0,0,0,-1
502176,mitchellh/vagrant,ruby,430,1311644767,1324935667,1324935667,221515,221515,merged_in_comments,false,false,false,26,9,2,0,4,0,4,0,2,3,0,3,8,3,0,3,3,0,5,8,4,0,4,103,34,108,34,27.118016412379127,1.7492703336839062,36,xmitchx@gmail.com,.gitignore|.rvm|lib/vagrant/systems.rb|lib/vagrant/systems/windows.rb|templates/locales/en.yml|test/vagrant/systems/windows_test.rb,26,0.016,0,0,false,Adding windows system Adding the windows system to the list of those currently managed Also added some small tests for functionality based upon the linux code,,76,0.8289473684210527,0.904,4984,1265.6500802568219,127.00642054574641,343.4991974317817,3129,10,550,8,unknown,gabemc,mitchellh,false,mitchellh,0,0,4,0,690,true,false,false,false,0,0,0,0,2,0,249
502070,mitchellh/vagrant,ruby,425,1311356407,1311408515,1311408515,868,868,merged_in_comments,false,false,false,34,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,8,16,8,16,9.182873706581958,0.8384142043219873,13,ryan@kaneda.net,lib/vagrant/provisioners/chef_solo.rb|test/vagrant/provisioners/chef_solo_test.rb,11,0.10091743119266056,0,1,true,Restore indexes on roles_path and data_bags_path This fix restores indexes (and I think implements the multiple provisioners fix) for GH #407 Without this the chef solo provisioner is broken for roles_path and data_bags_path Thanks,,75,0.8266666666666667,0.908256880733945,4763,1201.1337392399748,125.76107495276086,342.01133739239975,3120,9,547,5,unknown,jeffrafter,mitchellh,false,mitchellh,0,0,35,19,1211,false,false,false,false,1,1,0,0,1,0,254
502177,mitchellh/vagrant,ruby,421,1311287832,,1311409898,2034,,unknown,false,false,false,87,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.297995925223,0.39239662989440977,0,,lib/vagrant/provisioners/puppet.rb,0,0.0,0,0,false,With puppet 27x the following warning is outputted when using the puppet provisioner warning: Implicit invocation of puppet apply by passing files (or flags) directlyto puppet is deprecated and will be removed in the 28 series  Pleaseinvoke puppet apply directly in the futureSince puppet 26 puppet apply manifestfilepp is the preferred way to apply a puppet manifest file instead of puppet manifestfilepp  The use of puppet without the apply option will be deprecated in 28Changed the commands array to reflect the new syntax,,74,0.8378378378378378,0.9065420560747663,4753,1203.6608457816117,126.02566799915843,342.730906795708,3120,9,546,4,unknown,pauln415,mitchellh,false,,0,0,0,1,500,true,false,false,false,0,0,0,0,2,0,-1
502072,mitchellh/vagrant,ruby,419,1311275643,1311408508,1311408508,2214,2214,merged_in_comments,false,true,false,81,1,1,0,4,0,4,0,4,0,0,2,2,2,0,0,0,0,2,2,2,0,0,2,10,2,10,9.20346605258431,0.8402541847906274,13,ryan@kaneda.net,lib/vagrant/provisioners/chef_solo.rb|test/vagrant/provisioners/chef_solo_test.rb,11,0.10576923076923077,0,0,false,Fix problems provisioning via chef solo I found an issue provisioning with chef solo when I upgraded from 07x to 080 Ive committed a fix and added a corresponding unit testWhen creating an VM and provisioning with chef-solo vagrant would share both the cookbooks and roles folders to the same location Modified ChefSoloexpanded_folders to create unique folder names for different entities and added a unit test to verify that roles and cookbooks local folders are shared to different vm folders,,73,0.8356164383561644,0.9134615384615384,4753,1203.6608457816117,126.02566799915843,342.730906795708,3119,8,546,5,unknown,theaboutbox,mitchellh,false,mitchellh,0,0,6,0,870,false,false,false,false,0,0,0,0,0,0,1454
502073,mitchellh/vagrant,ruby,414,1310799081,1310940644,1310940644,2359,2359,github,false,false,false,43,1,1,0,3,0,3,0,2,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.46323450560542,0.4073924094802183,2,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,2,0.020833333333333332,0,0,false,The puppet example in the default Vagrantfile fails This is causing a lot of people to stumblehttp://groupsgooglecom/group/vagrant-up/browse_thread/thread/fbd824efcce973fIts pretty simple to make it work and encourage people to actually use Vagrant and Puppet This commit could change the world Im just sayn,,72,0.8333333333333334,0.90625,4753,1203.6608457816117,126.02566799915843,342.730906795708,3103,8,541,3,unknown,RichardBronosky,mitchellh,false,mitchellh,0,0,28,9,1128,true,false,false,false,0,0,0,0,1,0,2234
502074,mitchellh/vagrant,ruby,411,1310263420,1310263564,1310263564,2,2,merged_in_comments,false,false,false,34,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.082986670923666,0.36819377246855584,11,mitchell.hashimoto@gmail.com,templates/locales/en.yml,11,0.13580246913580246,0,0,false,this translation has to be quoted would otherwise fail on Psych: ~/rvm/ this translation has to be quoted would otherwise fail on Psych: ~/rvm/rubies/ruby-192-p180/lib/ruby/191/psychrb:148:in parse: couldnt parse YAML at line 162 column 21 (Psych::SyntaxError),,71,0.8309859154929577,0.8888888888888888,4707,1231.9949012109623,128.74442319949011,352.0288931378798,3085,7,534,7,unknown,svenfuchs,mitchellh,false,mitchellh,0,0,364,89,1222,false,true,false,false,0,0,0,0,2,0,-1
502075,mitchellh/vagrant,ruby,408,1310167987,1310181716,1310181716,228,228,commit_sha_in_comments,false,false,false,52,1,1,0,3,0,3,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.472875187005599,0.4033348808153882,0,,lib/vagrant/action/general/package.rb,0,0.0,0,0,true,Dont delete package file if error results from pre-existing package file The recovery function for the packaging middleware deletes the package tar file even if the error that prompted the recovery is that the tar file already exists I just added a guard that skips tar file deletion for that error (Errors::PackageOutputExists),,70,0.8285714285714286,0.8676470588235294,4674,1230.423620025674,129.2255027813436,353.44458707744974,3083,7,533,7,unknown,mlinderm,mitchellh,false,mitchellh,0,0,6,0,283,false,true,false,false,0,0,0,0,1,0,4
502179,mitchellh/vagrant,ruby,398,1309160121,1309674065,1309674065,8565,8565,merged_in_comments,false,false,false,62,1,1,0,1,0,1,0,1,0,0,4,4,2,1,1,0,0,4,4,2,1,1,17,3,17,3,17.74527157037575,1.6438965263599756,8,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_server.rb|templates/chef_server_client.erb|templates/locales/en.yml|test/vagrant/provisioners/chef_server_test.rb,5,0.07142857142857142,0,0,false,Add support for Chef encrypted data bags in Chef Server provisioner Add support for Chef encrypted data bags: http://wikiopscodecom/display/chef/Encrypted+Data+BagsAdd two configuration options to chef_server provision:  encrypted_data_bag_secret_key_path - the location of your encrypted secret key on your local machine  encrypted_data_bag_secret - the location you wish to place the key on the target machine and the value of Chef::Config[:encrypted_data_bag_secret] Default value of /etc/chef/encrypted_data_bag,,68,0.8235294117647058,0.7857142857142857,4574,1276.7818102317447,137.5163970266725,373.8522081329252,3053,7,522,12,unknown,reset,mitchellh,false,mitchellh,0,0,206,8,865,true,false,false,false,0,0,0,0,1,0,8565
502078,mitchellh/vagrant,ruby,395,1309033668,1309940225,1309940225,15109,15109,commit_sha_in_comments,false,false,false,180,1,1,0,3,0,3,0,2,0,0,3,3,2,0,1,0,0,3,3,2,0,1,59,24,59,24,12.892515558356813,1.194344164211398,2,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/shell.rb|templates/locales/en.yml|test/vagrant/provisioners/shell_test.rb,2,0.0,0,0,false,Ability to specify shell provisioning commands within the Vagrantfile This allows a provisioning via shell commands that can be completely contained within the Vagrantfile rather than included in an outside shell script  Complex shell provisioning might still be better from and outside file but this allows for a quick-n-easy way to tweak the vagrant box image if necesary before running other provisionersTwo thoughts/questions:1)  This could be in a different provisioner entirely (maybe script vs shell)  It fits OK in shellrb but adds a little more logic  The problem is that Id think this method could be called shell and the upload-and-run-a-file method be called script although that wouldnt be backwards compatible2) The commands could be specified as an array instead of a string  I think I like the string way more works with heredoc or a few  delineated commands although passing as an array would work well too since the ssh connection accepts and array of commands anywayLet me know if you want me to make some changes or touch it up yourselves  Thanks-nick,,67,0.8208955223880597,0.8048780487804879,4574,1276.7818102317447,137.5163970266725,373.8522081329252,3051,6,520,11,unknown,nstielau,mitchellh,false,mitchellh,1,1.0,16,1,978,false,true,false,false,1,0,1,0,0,0,10694
502079,mitchellh/vagrant,ruby,390,1308078932,1308276517,1308276517,3293,3293,merged_in_comments,false,false,false,96,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,7,4,7,4,9.421130108048834,0.8727788463173738,4,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_server.rb|test/vagrant/provisioners/chef_server_test.rb,4,0.0975609756097561,0,0,false,Changing the Chef Server provisioning commands to a single command HeyThis is a pretty silly fix but Ive been wanting it since day one  Since I use vagrant to debug my Chef cookbooks Im often SSHing to the VM to run the chef-client command and look at the failure output and often copy-paste the chef-client command so it is nice if it is a one-liner to it can sit in my bash history  Take it if you like itTests updatedIve got a slightly more interesting patch in the works as well  Thanks-nick,,66,0.8181818181818182,0.8048780487804879,4576,1276.2237762237762,137.4562937062937,373.6888111888112,3002,6,509,11,unknown,nstielau,mitchellh,false,mitchellh,0,0,16,1,967,false,true,false,false,0,0,0,0,0,0,-1
502080,mitchellh/vagrant,ruby,385,1307052867,,1309748970,44935,,unknown,false,false,false,38,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,2,3,2,9.035428467889291,0.837101597507634,0,,lib/vagrant/config/vm.rb|test/vagrant/action/vm/share_folders_test.rb,0,0.0,0,0,false,config: share_folder add :optional parameter Add config option for optional share_folder mounts  This is useful inour case when we have binaries installed for a tool but need a gitcheckout available to debug it when it breaks,,65,0.8307692307692308,0.7567567567567568,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2970,6,497,15,unknown,philips,mitchellh,false,,2,1.0,276,217,935,false,true,false,false,0,0,0,0,0,0,10494
502180,mitchellh/vagrant,ruby,378,1306548149,1308007299,1308007299,24319,24319,merged_in_comments,false,false,false,46,1,1,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,8,0,8,0,4.465932786426797,0.413753424440856,5,ryan@kaneda.net,lib/vagrant/provisioners/chef_solo.rb,5,0.13157894736842105,0,0,true,Adding nfs option for chef solo Ive added an option to the chef solo provisioner to use NFS for the shared folders for cookbooks_path roles_path and data_bags_path  It defaults to falseVagrantfile usage:rubyconfigvmprovision :chef_solo do |chef|  #Other chef config  chefnfs  trueend,,64,0.828125,0.7894736842105263,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2953,6,491,14,unknown,ryansch,mitchellh,false,mitchellh,1,1.0,10,10,576,true,true,false,false,4,7,1,0,4,0,18947
502084,mitchellh/vagrant,ruby,375,1305856691,,1310370230,75225,,unknown,false,false,false,87,2,2,0,3,0,3,0,4,1,0,7,8,7,0,1,1,0,7,8,7,0,1,129,0,129,0,35.38172351167409,3.2779958780543246,3,mitchell.hashimoto@gmail.com,config/default.rb|lib/vagrant/command/package.rb|lib/vagrant/config/ssh.rb|lib/vagrant/ssh.rb|templates/locales/en.yml|lib/vagrant.rb|lib/vagrant/command/base.rb|lib/vagrant/log.rb,2,0.0,0,1,false,Logging and ssh port searching Two parts:1) Add --debug and --verbose options to all vagrant commands2) Add debug and verbose logging messages to the ssh port forward search facility3) Add a fallback search to port forward searching If no port forward named ssh is found search for guest port 22 (configurable)I started all this to fix 3 I couldnt figure out what the problem was I wanted to see some logging Rather than doing puts debugging I added something For The FutureEnjoy,,62,0.8387096774193549,0.8205128205128205,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2933,6,483,12,unknown,alanshields,mitchellh,false,,1,1.0,0,0,584,false,true,false,false,1,0,1,0,0,0,66103
502085,mitchellh/vagrant,ruby,374,1305764772,1308006578,1308006578,37363,37363,merged_in_comments,false,false,false,33,1,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,6,3,6,9.390507910619776,0.8699984955139825,6,ryan@kaneda.net,lib/vagrant/provisioners/chef_solo.rb|test/vagrant/provisioners/chef_solo_test.rb,5,0.13157894736842105,0,0,false,provide absolute paths for solorb and dnajs in order to make it work co provide absolute paths for solorb and dnajs in order to make it work correctly with the restart cookbook https://githubcom/dreamcat4/site-cookbooks/tree/COOK-245/restart/,,61,0.8360655737704918,0.8421052631578947,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2932,5,482,13,unknown,mhorbul,mitchellh,false,mitchellh,1,0.0,11,5,1168,false,true,false,false,0,1,1,0,0,0,37362
502087,mitchellh/vagrant,ruby,373,1305752729,1308006449,1308006449,37562,37562,commit_sha_in_comments,false,false,false,47,4,2,0,1,0,1,0,3,0,0,8,8,5,2,1,0,0,8,8,5,2,1,11,0,13,0,36.345239566931916,3.3672623508006905,21,mitchell.hashimoto@gmail.com,CHANGELOG.md|templates/network_entry_redhat.erb|config/default.rb|lib/vagrant/action/vm/nfs.rb|lib/vagrant/config/nfs.rb|lib/vagrant/errors.rb|templates/locales/en.yml|templates/nfs/exports.erb,19,0.0,0,0,false,Fix RedHat/CentOS issues with Host-Only networking On CentOS the ifcfg file wasnt being generated with the device specified so when trying to obtain an address the system was sending the extremely unhelpful message of Error some other host already uses address ipAnyway vagrant is awesome thanks,,60,0.8333333333333334,0.8378378378378378,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2932,5,482,13,unknown,stopdropandrew,mitchellh,false,mitchellh,0,0,5,5,1132,false,true,false,false,0,0,0,0,0,0,13034
502088,mitchellh/vagrant,ruby,370,1305678610,1309675480,1309675480,66614,66614,merged_in_comments,false,false,false,35,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.48794165786055,0.4157924712333806,1,mitchell.hashimoto@gmail.com,lib/vagrant/ssh/session.rb,1,0.02702702702702703,0,0,false,Set the home directory to /root when using sudo Encountered this issue while using puppet Created configuration file /root/mycnfbut mysql was looking for /home/vagrant/mycnfPassing -H to sudo causes sudo to set env HOME/root/,,59,0.8305084745762712,0.8378378378378378,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2930,5,481,11,unknown,alanshields,mitchellh,false,mitchellh,0,0,0,0,582,false,true,false,false,0,0,0,0,0,0,66614
502089,mitchellh/vagrant,ruby,369,1305601093,1309747006,1309747006,69098,69098,merged_in_comments,false,false,false,59,1,1,0,0,0,0,0,1,1,0,4,5,5,0,0,1,0,4,5,5,0,0,22,0,22,0,21.238613020892473,1.9676849804986323,1,mitchell.hashimoto@gmail.com,lib/vagrant/systems.rb|lib/vagrant/systems/linux.rb|lib/vagrant/systems/redhat.rb|lib/vagrant/systems/suse.rb|lib/vagrant/vm.rb,1,0.02631578947368421,0,0,false,(368) Added local network config code for Suse Networking in SUSE works almost exactly like redhatThe only difference is the location of the networking scriptsThis has been verified as working on SLES11sp1 but requires a previously configuredeth1 interface (as with redhat)I have also verified that I can still bring up a localnet on rhel 45,,58,0.8275862068965517,0.8421052631578947,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2924,5,480,10,unknown,bodepd,mitchellh,false,mitchellh,0,0,32,0,696,false,true,false,false,1,0,0,0,0,0,-1
502090,mitchellh/vagrant,ruby,367,1305582359,,1326272745,344839,,unknown,false,false,false,33,7,7,0,2,0,2,0,2,0,0,9,9,8,0,1,0,0,9,9,8,0,1,54,58,54,58,64.85142073712487,3.759251265944326,110,xmitchx@gmail.com,lib/vagrant/command/reload.rb|lib/vagrant/vm.rb|test/vagrant/vm_test.rb|lib/vagrant/command/provision.rb|lib/vagrant/vm.rb|test/vagrant/vm_test.rb|lib/vagrant/command/up.rb|test/vagrant/action/vm/provision_test.rb|test/vagrant/action/vm/provision_test.rb|lib/vagrant/action/vm/provision.rb|lib/vagrant/command/up.rb|lib/vagrant/action/vm/provision.rb|lib/vagrant/errors.rb|templates/locales/en.yml|test/vagrant/action/vm/provision_test.rb,71,0.13513513513513514,0,0,false,Issue #360 --provisioners support This adds support for a --provisioners option to the up reload and provision commands You can specify one or more provisioner shortcuts for example: vagrant up --provisioners shell chef_solo,,57,0.8421052631578947,0.8378378378378378,6401,1099.828151851273,108.26433369785971,277.9253241680987,2924,5,480,12,unknown,jwinter,mitchellh,false,,0,0,4,3,1174,false,true,false,false,0,0,0,0,0,0,7
502091,mitchellh/vagrant,ruby,366,1305527008,,1326014024,341450,,unknown,false,false,false,81,1,1,0,3,0,3,0,3,2,0,2,4,3,0,1,2,0,2,4,3,0,1,95,131,95,131,17.795955380434485,1.0315806042825795,72,xmitchx@gmail.com,lib/vagrant/provisioners.rb|lib/vagrant/provisioners/shadow_puppet.rb|templates/locales/en.yml|test/vagrant/provisioners/shadow_puppet_test.rb,71,0.06060606060606061,0,0,false,Add ShadowPuppet Provisioner Adds a provisioner for ShadowPuppetShadowPuppet is a Ruby wrapper around Puppet to provide puppet(-solo) style manifests but with a Ruby syntaxThe tests pass for me and Ive been able to vagrant up fine using the new provisionerIve created a test repo you can use that shows how to use ShadowPuppet: https://githubcom/wfarr/vagrant-shadow-puppet-test  Your box need only have the shadow_puppet and i18n gems installed and you should be able to just vagrant up / vagrant reload,,56,0.8571428571428571,0.8181818181818182,6401,1099.828151851273,108.26433369785971,277.9253241680987,2921,5,480,13,unknown,wfarr,mitchellh,false,,0,0,129,35,1188,false,true,false,false,1,1,0,0,0,0,932
502092,mitchellh/vagrant,ruby,363,1305232981,1305339821,1305339821,1780,1780,merged_in_comments,false,false,false,131,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,4,0,8.351495449776017,0.7738161964312883,1,mitchell.hashimoto@gmail.com,lib/vagrant/config/ssh.rb|lib/vagrant/ssh.rb,1,0.030303030303030304,0,0,false,consider adding port option to ssh config  Hey Mitchell I have a usecase where I am bringing up pxeboot images withen vagrant I was able to get this partially functional out of the box (or with a little tuning rather) But without being able to specify the ssh port as an option for host-only networking I was unable to make a realistic setup of our datacenter because I cant make some nodes launch with NAT on eth0 and others with host-only on eth0 Specifically I have this in my Vagrant file to specify the ip that the host-only instance will get:  nova_configsshhost  10005but I cant specify the port so its useless without this patchPlease let me know if there was another way to accomplish this better/simpler ThanksMartin ,,55,0.8545454545454545,0.8181818181818182,4535,1277.3980154355015,137.15545755237045,373.31863285556784,2919,5,476,7,unknown,th34ut0m4t0r,mitchellh,false,mitchellh,0,0,0,0,29,false,true,false,false,0,0,0,0,1,0,-1
502093,mitchellh/vagrant,ruby,362,1305220653,1305581916,1305581916,6021,6021,commits_in_master,false,false,false,132,3,3,0,3,0,3,0,3,0,0,3,3,2,1,0,0,0,3,3,2,1,0,22,46,22,46,13.376105183860908,1.2393764564306484,1,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_solo.rb|templates/chef_solo_solo.erb|test/vagrant/provisioners/chef_solo_test.rb,1,0.0,0,2,false,Data Bags for Chef Solo runs Adding data bag support for chef-solo provisions:  configvmprovision :chef_solo do |chef|    chefprovisioning_path  /srv/chef    chefcookbooks_path  [cookbooks site-cookbooks]    chefroles_path      roles    chefdata_bags_path  data_bags    chefadd_role(development)  endThis will share the specified data bag directly like it does with cookbooks/roles  Currently (Im going to make a pull request over to chef shortly) the best way to take advantage of this is to add a Mixin into one of your cookbooks (Im putting mine in cookbooks/chef/libraries) that will read this new chef solo config option and do local parses of the shared json data bags  I originally got the idea from the chef mailing list back in Feb: https://gistgithubcom/967980Just take that code drop it into your cookbooks in a library somewhere and it should work,,54,0.8518518518518519,0.8125,4535,1277.3980154355015,137.15545755237045,373.31863285556784,2918,5,476,7,unknown,rcreasey,mitchellh,false,mitchellh,0,0,17,26,1021,true,true,false,false,1,1,0,0,3,0,1987
502094,mitchellh/vagrant,ruby,358,1305065333,1305189176,1305189176,2064,2064,merged_in_comments,false,false,false,73,2,2,0,0,0,0,0,1,0,0,3,3,2,1,0,0,0,3,3,2,1,0,6,3,6,3,21.887177133064494,2.0281711739403834,1,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_server.rb|templates/chef_server_client.erb|lib/vagrant/provisioners/chef_server.rb|templates/chef_server_client.erb|test/vagrant/provisioners/chef_server_test.rb,1,0.05,0,0,false,Provides a method to specify a Chef Environment in a Vagrantfile Make Vagrant play nicely with Chef 010 EnvironmentsFeatures:* A lack of setting the environment variable in a Vagrantfile does not cause Vagrant to override that nodes environment with a default Instead it keeps the environment already set on the node if applicable* Chef 09x ignores the environment variable in clientrb if it is declared so backward compatibility is maintained,,53,0.8490566037735849,0.85,4532,1277.802294792586,137.24624889673433,373.56575463371576,2913,4,474,10,unknown,patcoll,mitchellh,false,mitchellh,0,0,19,43,735,false,true,false,false,0,1,0,0,0,0,-1
502095,mitchellh/vagrant,ruby,356,1304818597,1305074384,1305074384,4263,4263,merged_in_comments,false,false,false,21,2,2,0,1,0,1,0,3,0,0,1,1,1,0,0,0,0,1,1,1,0,0,40,0,40,0,9.261886065827955,0.8582509393892888,0,,lib/vagrant/systems/solaris.rb|lib/vagrant/systems/solaris.rb,0,0.0,0,0,false,Solaris/hostname_networking Adds simple support for setting Solaris hostname on instance creation and enabling host only networking with static IP addresses only,,52,0.8461538461538461,0.9032258064516129,4532,1277.802294792586,137.24624889673433,373.56575463371576,2905,4,471,10,unknown,ody,ody,true,ody,0,0,17,1,462,false,true,false,false,0,0,0,0,0,0,2838
502181,mitchellh/vagrant,ruby,354,1304634998,1305189509,1305189509,9241,9241,merged_in_comments,false,false,false,45,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.582740272056382,0.4246587698785211,1,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb,1,0.02857142857142857,0,0,false,Suppress Permanently added [127001]:2222 (RSA) to the list of known hosts Vagrant already disables StrictHostKeyChecking and redirects UserKnownHostsFile to /dev/null so we may as well suppress the meaningless warning alsoJust a personal preference If theres something wrong with suppressing warnings here let me know,,51,0.8431372549019608,0.9142857142857143,4532,1277.802294792586,137.24624889673433,373.56575463371576,2897,4,469,8,unknown,wsc,mitchellh,false,mitchellh,0,0,17,16,885,true,false,false,false,0,0,0,0,2,0,-1
502097,mitchellh/vagrant,ruby,352,1304527323,1305191097,1305191097,11062,11062,merged_in_comments,false,false,false,55,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.420774654391949,0.4096502562214445,0,,lib/vagrant/action/vm/nfs.rb,0,0.0,0,0,false,This is a patch for ruby 18x users Hash#select in ruby 186 will return an array while 19x returns a hash As is vagrant 073 will error our when mounting nfs shares with a /usr/local/rvm/gems/ree-186-20090610/gems/vagrant-073/lib/vagrant/action/vm/nfsrb:119:in []: odd number of arguments for Hash (ArgumentError)This is because am_folders is in the form of [[:app  {}]],,50,0.84,0.9393939393939394,4532,1277.802294792586,137.24624889673433,373.56575463371576,2894,3,468,7,unknown,tonyla,tonyla,true,tonyla,0,0,1,0,905,false,true,false,false,0,0,0,0,1,0,-1
502098,mitchellh/vagrant,ruby,346,1303238699,1303283127,1303283127,740,740,merged_in_comments,false,false,false,24,1,1,0,0,0,0,0,2,1,0,4,5,4,0,1,1,0,4,5,4,0,1,34,0,34,0,20.128661229863205,1.8726388797204878,8,mitchell.hashimoto@gmail.com,lib/vagrant/hosts.rb|lib/vagrant/hosts/arch.rb|lib/vagrant/hosts/base.rb|lib/vagrant/util/platform.rb|templates/locales/en.yml,8,0.0,0,0,false,Add NFS support for Arch Linux Added NFS support for Arch Linux under vagrant/hosts by adding vagrant/hosts/arch and a platform test for Arch Linux,,49,0.8367346938775511,0.9696969696969697,4504,1283.525754884547,137.87744227353463,375.2220248667851,2855,3,453,9,unknown,TimDumol,mitchellh,false,mitchellh,0,0,3,2,814,false,true,false,false,0,0,0,0,1,0,-1
502183,mitchellh/vagrant,ruby,342,1302659026,1305582592,1305582592,48726,48726,merged_in_comments,false,false,false,85,1,1,0,0,0,0,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,28,0,28,0,12.848670823975846,1.1953562267723141,3,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef.rb|lib/vagrant/provisioners/chef_server.rb|lib/vagrant/provisioners/chef_solo.rb,2,0.024390243902439025,0,0,false,Adding extra runtime config options for chef Adding chefbinary_path and chefbinary_env to the config options for controlling where to find chef-solo/chef-client and how to run themHeres a config example:chefbinary_env  GEM_HOME/opt/rightscale/sandbox/lib/ruby/gems/18 GEM_PATH/opt/rightscale/sandbox/lib/ruby/gems/18chefbinary_path  /opt/rightscale/sandbox/bin/This was motivated by developing for the RightScale Chef environment  Theyve created a sandboxed ruby environment in addition to the system ruby and rvm rubies  This was the only sane way I had to make sure that vagrant was running the sandboxed chef every time (just like production),,48,0.8333333333333334,0.975609756097561,4504,1283.525754884547,137.87744227353463,375.2220248667851,2831,3,446,10,unknown,ryansch,mitchellh,false,mitchellh,0,0,9,10,531,true,true,false,false,1,2,0,0,2,0,-1
502101,mitchellh/vagrant,ruby,340,1302036011,,1309943508,131791,,unknown,false,false,false,29,4,2,0,5,0,5,0,3,0,0,4,4,4,0,0,0,0,4,4,4,0,0,28,58,28,58,18.47654736843579,1.7121258049305472,14,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/puppet_server.rb|test/vagrant/provisioners/puppet_server_test.rb|lib/vagrant/systems/linux.rb|test/vagrant/systems/linux_test.rb,8,0.05263157894736842,0,2,false,Allow shared_folder_uid and _gid to be specified numerically This is needed when the target user does not yet existduring the VM bootstrap (eg to be created by puppet/chef),,46,0.8478260869565217,0.9774436090225563,4532,1277.802294792586,137.24624889673433,373.56575463371576,2814,2,439,9,unknown,morepanda,morepanda,true,,1,0.0,0,0,2,false,true,false,false,2,1,1,0,0,0,35409
502103,mitchellh/vagrant,ruby,338,1301860796,,1310265371,140076,,unknown,false,false,false,220,2,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,22,54,22,54,9.129602985471113,0.8459929524982116,8,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/puppet_server.rb|test/vagrant/provisioners/puppet_server_test.rb,8,0.056338028169014086,0,0,false,More flexibility for configpuppet_server Hi thereI made a small patch that helps to deal with the following scenario and similar:* Multiple vagrant environments on a single host (eg env1 and env2 on host macbook)* Each env needs to talk to a different puppetmaster (eg env1 - 1234 env2 - 4321)* Each puppetmaster needs to be addressed by the hostname puppet (SSL cert CNpuppet)  This is a common configuration for production puppetmastersProblem:* We cant add 1234 puppet to /etc/hosts on macbook because then env2 would talk to the wrong puppetmaster* We cant add 4321 puppet to /etc/hosts on macbook because then env1 would talk to the wrong puppetmaster* We cant set configpuppet_server  xxxx in either env because that gives a SSL CN mismatchIn short: There doesnt seem to be a solution with stock vagrant hence the patchThe patch adds the following logic (with tests):When configpuppet_server is specified as xxxx hostnamethen vagrant appends xxxx hostname to /etc/hosts on theguest and launches puppetd with --server $hostnameWhen configpuppet_server is specified as xxxxthen vagrant appends xxxx puppet to /etc/hosts on theguest and launches puppetd with --server puppetWhen configpuppet_server is anything else then no magictakes place and puppetd is launched as usual with--server $configpuppet_serverCheers moe,,45,0.8666666666666667,0.9436619718309859,4532,1277.802294792586,137.24624889673433,373.56575463371576,2800,2,437,9,unknown,morepanda,mitchellh,false,,0,0,0,0,0,false,true,false,false,0,0,0,0,0,0,-1
502104,mitchellh/vagrant,ruby,333,1301505289,1310270182,1310270182,146081,146081,merged_in_comments,false,false,false,217,2,1,0,15,0,15,0,7,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.436630835861787,0.41111956631065244,10,mitchell.hashimoto@gmail.com,lib/vagrant/environment.rb,10,0.06622516556291391,0,11,false,OSX issue when running vagrant up Using OSX 1066 So I followed the very easy instructions on the website and no matter what user I used running vagrant up would always give me an error about some file that Vagrant uses to store data is a directory It turns out that the local JSON data store you guys are trying to use defaults to ~/vagrant which you already use as a directory to store other things09:26 ~ ()$ vagrant box add base http://filesvagrantupcom/lucid32box[vagrant] Creating home directory since it doesnt exist: /Users/gammons/vagrant[vagrant] Creating home directory since it doesnt exist: /Users/gammons/vagrant/tmp[vagrant] Creating home directory since it doesnt exist: /Users/gammons/vagrant/boxes[vagrant] Creating home directory since it doesnt exist: /Users/gammons/vagrant/logs[vagrant] Downloading with Vagrant::Downloaders::HTTP[vagrant] Downloading box: http://filesvagrantupcom/lucid32box[vagrant] Extracting box[vagrant] Verifying box[vagrant] Cleaning up downloaded box09:31 ~ ()$ vagrant upThe local file Vagrant uses to store data vagrant already existsand is a directory If you are in your home directory then please runthis command in another directory If you arent in a home directorythen please rename vagrant to something else or configure Vagrantto use another filename by modifying configvagrantdotfile_nameI added a very simple patch that emulates how you guys initialize your global store  Now vagrant works perfectly,,44,0.8636363636363636,0.9470198675496688,4532,1277.802294792586,137.24624889673433,373.56575463371576,2787,2,433,8,unknown,gammons,mitchellh,false,mitchellh,0,0,7,3,845,false,true,false,false,0,0,0,0,0,0,61
502105,mitchellh/vagrant,ruby,330,1300793874,1303284974,1303284974,41518,41518,merged_in_comments,false,false,false,21,1,1,0,1,0,1,0,3,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.731161781643239,0.44015632224006557,2,mitchell.hashimoto@gmail.com,templates/network_entry_gentoo.erb,2,0.012345679012345678,0,0,false,stupid non-critical bug in gentoo network template Due to an additional character the network template generates lots of warnings when restarted,,43,0.8604651162790697,0.9444444444444444,4504,1283.525754884547,137.87744227353463,375.2220248667851,2759,2,425,7,unknown,ramonvanalteren,mitchellh,false,mitchellh,0,0,10,3,901,false,true,false,false,0,3,0,0,1,0,28908
502106,mitchellh/vagrant,ruby,327,1300320735,,1305191696,81182,,unknown,false,false,false,5,2,1,0,2,0,2,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,4,0,11,2,4.413667504309849,0.41061873297699136,6,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_solo.rb,6,0.03409090909090909,0,1,false,Add compatibility with system-wide rvm ,,42,0.8809523809523809,0.9488636363636364,4504,1283.525754884547,137.87744227353463,375.2220248667851,2744,2,419,6,unknown,mhorbul,mitchellh,false,,0,0,10,5,1105,false,true,false,false,0,0,0,0,0,0,49408
502107,mitchellh/vagrant,ruby,321,1299664386,1299716619,1299716619,870,870,merged_in_comments,false,false,false,73,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.651966342962652,0.43277830621799385,3,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,3,0.016304347826086956,0,0,false,Ticket/320 This commit provides a patch to address ticket #320 in the issue trackerhttps://githubcom/mitchellh/vagrant/issues/#issue/320The commit message is:    Add puppet provisioner config example        This commit should provide enough example information to get started    provisioning a box using the Puppet provisioner        The goal of this commit is to provide just enough information to quickly    get started but not so much that the configuration file is polluted or    confuses the userCheers-Jeff McCune,,41,0.8780487804878049,0.9510869565217391,4504,1283.525754884547,137.87744227353463,375.2220248667851,2717,2,412,2,unknown,jeffmccune,,false,,0,0,41,45,1043,false,false,false,false,0,0,0,0,1,0,-1
502108,mitchellh/vagrant,ruby,311,1298686177,1298730702,1298730702,742,742,merged_in_comments,false,false,false,56,1,1,0,1,0,1,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,3,0,3,0,7.907076023671344,0.738810303719757,13,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/forward_ports.rb|lib/vagrant/config/vm.rb,11,0.057291666666666664,0,0,true,Fix issue with port forwarding not respecting protocol option There are two issues that prevent changing the protocol to UDP for port forwarding  Currently the NATForwardedPort is not passed the protocol option  The other issue is the default protocol being sent from configvmforward_port upper-case TCP however the protocol mappings defined in the virtualbox library are lowercase,,40,0.875,0.9583333333333334,4476,1291.1081322609473,138.73994638069706,377.5692582663092,2683,1,400,3,unknown,tail,,false,,0,0,10,1,1069,false,true,false,false,0,0,0,0,1,0,262
502109,mitchellh/vagrant,ruby,310,1298654358,1298730797,1298730797,1273,1273,merged_in_comments,false,false,false,29,1,1,0,1,0,1,0,1,0,0,3,3,2,1,0,0,0,3,3,2,1,0,8,4,8,4,13.275166691615357,1.2403864470255666,8,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef_server.rb|templates/chef_server_client.erb|test/vagrant/provisioners/chef_server_test.rb,7,0.020942408376963352,0,0,true,chef server knobs When using the :chef_server provisioner Id like to be able to configure the :file_cache_path and :file_backup_path parametersAlso :file_store_path is no longer used by chef (deprecated),,39,0.8717948717948718,0.9581151832460733,4476,1291.1081322609473,138.73994638069706,377.5692582663092,2680,1,400,2,unknown,aglarond,,false,,0,0,1,0,0,false,true,false,false,0,0,0,0,1,0,794
502110,mitchellh/vagrant,ruby,303,1297119620,,1297273287,2561,,unknown,false,false,false,54,2,2,0,4,0,4,0,2,0,0,3,3,3,0,0,0,0,3,3,3,0,0,8,5,8,5,13.298056621066513,1.2427004641424815,15,mitchell.hashimoto@gmail.com,lib/vagrant/ssh/session.rb|lib/vagrant/provisioners/chef_solo.rb|test/vagrant/provisioners/chef_solo_test.rb,11,0.02564102564102564,0,0,false,:log_level support for chef_solo provisioner Hi folksafter struggling a bit with one of my chief recipes burris on IRC suggested adjusting the log level I dig in the code and saw that I could reuse the existing log_level configuration item from the chef config so here we gohope this helps-- Thibaut,,38,0.8947368421052632,0.9230769230769231,4459,1292.217986095537,138.82036331015922,377.21462211258125,2603,3,382,4,unknown,thbar,,false,,0,0,46,4,1000,false,true,false,false,0,2,0,0,0,0,1428
502111,mitchellh/vagrant,ruby,301,1297099874,1297280072,1297280072,3003,3003,merged_in_comments,false,false,false,111,2,1,0,9,0,9,0,3,0,0,1,2,1,0,0,0,0,2,2,2,0,0,2,0,3,0,4.215516203061726,0.39393906127952827,11,mitchell.hashimoto@gmail.com,lib/vagrant/ssh/session.rb,11,0.05670103092783505,0,2,false,Change to stop rvm from breaking on sudo sh -l When I have ruby built using rvm it needs to source /usr/local/bin/rvm which is a bash script The default /bin/sh on ubuntu (and I suspect debian) is /bin/dash which doesnt run /usr/local/bin/rvm Changing from sudo sh -l to sudo bash -l fixes thisThe error I get is:The chef (either chef-solo or chef-client) binary was not found onthe VM and is required for chef provisioning Please verify that chefis installed and that the binary is available on the PATHgiven that Ive rebuilt the base box using rvm to run ruby 192 (OK so thats a little twisted),,37,0.8918918918918919,0.9226804123711341,4459,1292.217986095537,138.82036331015922,377.21462211258125,2602,3,382,3,unknown,chrischillibean,,false,,0,0,0,0,139,false,true,false,false,0,0,0,0,1,0,154
502112,mitchellh/vagrant,ruby,296,1296901164,1296961712,1296961712,1009,1009,commit_sha_in_comments,false,false,false,37,2,1,0,1,0,1,0,2,0,0,1,2,1,0,0,0,0,2,2,2,0,0,3,0,3,3,4.535510271536042,0.42384253233993513,13,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef.rb,13,0.06770833333333333,0,0,false,Fix chown Fixes issue 295  Apparently the second sudo command is either running before the first is finished or the rapid succession causes the second sudo to fail because combining them into one command stops the error,,36,0.8888888888888888,0.921875,4458,1292.5078510542844,138.8515029161059,377.2992373261552,2596,3,380,3,unknown,vishvananda,,false,,1,1.0,36,0,473,false,true,false,false,0,3,1,0,4,0,951
502113,mitchellh/vagrant,ruby,294,1296773946,1297233974,1297233974,7667,7667,merged_in_comments,false,false,false,13,5,1,0,1,0,1,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,0,10,0,7.634217550443992,0.7134155977808116,16,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/network.rb|lib/vagrant/config/vm.rb,9,0.04736842105263158,0,0,false,Adds an option to network to specify a mac address for the interface ,,35,0.8857142857142857,0.9210526315789473,4459,1292.217986095537,138.82036331015922,377.21462211258125,2594,3,378,4,unknown,vishvananda,,false,,0,0,36,0,471,false,true,false,false,0,2,0,0,1,0,250
502114,mitchellh/vagrant,ruby,292,1296641983,1296700187,1296700187,970,970,merged_in_comments,false,false,false,49,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.20059705757023,0.39254520334817566,9,mitchell.hashimoto@gmail.com,lib/vagrant/ssh/session.rb,9,0.04736842105263158,0,0,false,Get provisioners working again on Debian lenny As discussed on the list the version of sudo (169) in Debian lenny has a bug that breaks sudo -i sh  This patch makes Vagrant::SSH::Session#sudo use sudo sh -l instead which I believe will have the same effect and works in lenny,,34,0.8823529411764706,0.9157894736842105,4458,1292.5078510542844,138.8515029161059,377.2992373261552,2592,4,377,2,unknown,mdub,,false,,1,1.0,32,10,1076,false,false,false,false,0,1,0,0,1,0,-1
502115,mitchellh/vagrant,ruby,279,1295613430,1295658069,1295658069,743,743,merged_in_comments,false,false,false,38,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,6,0,6,0,4.6451637910617185,0.4432813203064317,14,mitchell.hashimoto@gmail.com,lib/vagrant/ssh.rb,14,0.08333333333333333,0,0,true,Fixed warning on ssh login The warning was Warning: untrusted X11 forwarding setup failed: xauth key data not generatedCompletely harmless I think but mildly annoying After digging around a bit I came up with this fix Cheers,,33,0.8787878787878788,0.9047619047619048,4301,1321.5531271797256,142.2924901185771,387.11927458730526,2558,4,365,4,unknown,underlog,,false,,1,1.0,46,10,954,false,false,false,false,0,2,1,0,2,0,-1
502116,mitchellh/vagrant,ruby,275,1295291075,1295665468,1295665468,6239,6239,merged_in_comments,false,false,false,19,1,1,0,1,0,1,0,1,1,0,1,2,1,0,1,1,0,1,2,1,0,1,83,0,83,0,9.032893075348992,0.8621050757831945,30,mitchell.hashimoto@gmail.com,lib/vagrant/systems/freebsd.rb|templates/locales/en.yml,30,0.18518518518518517,0,0,false,System provider for FreeBSD Unfortunately the FreeBSD guest additions do not support shared folders so only NFS-sharing is implemented,,32,0.875,0.9012345679012346,4300,1321.6279069767443,142.32558139534885,386.9767441860465,2552,4,361,3,unknown,kvs,,false,,0,0,7,3,746,false,true,false,false,0,0,0,0,1,0,3339
502117,mitchellh/vagrant,ruby,273,1295038722,1296276402,1296305202,21108,20628,github,false,false,false,66,4,1,0,8,0,8,0,5,1,0,7,8,7,0,1,1,0,7,8,7,0,1,47,0,47,0,33.62742201993893,3.2090166680845993,43,mitchell.hashimoto@gmail.com,lib/vagrant/action/builtin.rb|lib/vagrant/action/vm.rb|lib/vagrant/action/vm/host_name.rb|lib/vagrant/config/vm.rb|lib/vagrant/systems/base.rb|lib/vagrant/systems/debian.rb|lib/vagrant/systems/redhat.rb|templates/locales/en.yml,31,0.024390243902439025,0,0,true,Support for changing hostname via Vagrantfile Added support for changing host name on boot for Debian Ubuntu and RedHat This is useful when provisioning using scripts that use the hostname to determine what type of box it should be for example in puppet you can use  node webservertestingcom { include apache } to determine what should be installedLine to add to Vagrantfileconfigvmhost_name  webservertestingcom,,31,0.8709677419354839,0.9024390243902439,4301,1321.5531271797256,142.2924901185771,387.11927458730526,2547,4,358,3,unknown,michaelbearne,,false,,1,1.0,7,14,52,false,true,false,false,0,1,1,0,0,0,1007
502118,mitchellh/vagrant,ruby,271,1294968586,,1323657033,478140,,unknown,false,false,false,194,1,1,0,8,0,8,0,6,0,0,6,6,4,1,1,0,0,6,6,4,1,1,9,0,9,0,26.44109781225344,2.5233893042358275,34,mitchell.hashimoto@gmail.com,config/default.rb|lib/vagrant/action/vm/nfs.rb|lib/vagrant/config/nfs.rb|lib/vagrant/errors.rb|templates/locales/en.yml|templates/nfs/exports.erb,27,0.043209876543209874,0,0,false,Fix to allow maproot as an nfs mount option NFS as its used in Vagrant 40 currently maps all filesystem access in the guest (including that of root) onto a single uid/gid on the host This makes it impossible to perform operations as root on the shared folder inside the guest (in particular things like chown and chgrp arent possible) This is a major dealbreaker for many uses of vagrant VMs as one cannot give files in a shared project away to (for example) apache This can be mostly mitigated by mounting the filesystem with the maproot option as this patch provides However because that mode maps non root guest access 1:1 with uids on the host the issue of host-side permissions becomes important so its not a complete fixA possible final piece of the puzzle (which this request doesnt address) is to provide a way to change the uid of the remote vagrant user to match that of the current host user This would provide a (somewhat inelegant) way to get around this 1:1 mapping by making the users of interest on both the host and guest machines share the same uid,,30,0.9,0.9012345679012346,4264,1324.3433395872419,141.41651031894932,386.2570356472795,2543,4,357,10,unknown,mtrudel,mitchellh,false,,0,0,7,5,623,false,false,false,false,0,0,0,0,0,0,90
502120,mitchellh/vagrant,ruby,262,1294311746,1294360767,1294360767,817,817,merged_in_comments,false,false,false,3,1,1,0,0,0,0,0,1,2,0,3,5,4,0,1,2,0,3,5,4,0,1,66,68,66,68,21.82439725654496,2.2988460701442266,15,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/provision.rb|lib/vagrant/provisioners/puppet_server.rb|templates/locales/en.yml|test/vagrant/action/vm/provision_test.rb|test/vagrant/provisioners/puppet_server_test.rb,14,0.008064516129032258,0,0,false,Puppet client-server provisioner ,,28,0.8928571428571429,0.8548387096774194,3938,1414.9314372778058,150.83798882681566,414.1696292534281,2516,5,350,3,unknown,jamtur01,,false,,5,0.6,207,14,1009,false,true,false,false,0,7,5,0,2,0,-1
502121,mitchellh/vagrant,ruby,260,1294254356,1294722947,1294722947,7809,7809,commits_in_master,false,false,false,36,9,7,0,3,0,3,0,2,3,0,6,15,4,2,3,3,0,12,15,10,2,3,88,81,107,81,36.46735397552682,3.5574005091268104,37,mitchell.hashimoto@gmail.com,Gemfile.lock|lib/vagrant/action/vm/network.rb|lib/vagrant/systems/linux.rb|templates/.DS_Store|templates/debian_network_entry.erb|templates/locales/en.yml|templates/redhat_network_entry.erb|.gitignore|lib/vagrant/systems/linux.rb|test/vagrant/systems/linux_test.rb,19,0.016666666666666666,0,0,false,redhat distribution implemention for host only network I have tested this on centos 64 55 image with nfs share folders configured in vagrant fileI the box file 720M I created if required to test this,,27,0.8888888888888888,0.85,4177,1347.3785013167346,143.40435719415848,392.3868805362701,2513,5,349,3,unknown,michaelbearne,,false,,0,0,7,14,43,false,true,false,false,0,0,0,0,0,0,504
502123,mitchellh/vagrant,ruby,256,1293916838,1294287320,1294287320,6174,6174,merged_in_comments,false,false,false,16,1,1,0,0,0,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,0,0,10,0,10,0,5.024508640428372,0.5394127872722455,0,,contrib/vim/vagrantfile.vim,0,0.0,0,0,false,contrib: Teach vim to treat Vagrantfile as ruby  Thought others might find this usefulCheers Brandon,,26,0.8846153846153846,0.8842975206611571,3934,1413.8281647178444,150.73716319267922,414.08235892221654,2507,6,345,4,unknown,philips,,false,,1,1.0,231,186,783,false,true,false,false,0,0,1,0,2,0,-1
502124,mitchellh/vagrant,ruby,255,1293915241,1294211890,1294211890,4944,4944,merged_in_comments,false,false,false,49,1,1,0,3,0,3,0,3,0,0,6,6,6,0,0,0,0,6,6,6,0,0,5,17,5,17,27.192861748605495,2.9193257290276176,8,mitchell.hashimoto@gmail.com,config/default.rb|lib/vagrant/action/vm/nfs.rb|lib/vagrant/config/ssh.rb|lib/vagrant/ssh.rb|test/vagrant/action/vm/nfs_test.rb|test/vagrant/ssh_test.rb,4,0.016666666666666666,0,0,false,Add ForwardX11 support for ssh Hey I run my cucumber/capybara features inside the vm and with ssh X11 forwarding it is pretty convenient (browser pops in the host at least on OS X) I believe that this option should be useful to others too Many thanks for your efforts ,,25,0.88,0.8833333333333333,3934,1413.8281647178444,150.73716319267922,414.08235892221654,2507,6,345,3,unknown,underlog,,false,,0,0,46,10,934,false,false,false,false,0,0,0,0,1,0,21
502189,mitchellh/vagrant,ruby,252,1293649396,1293775639,1293775639,2104,2104,merged_in_comments,false,false,false,11,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,4,0,4,0,4.612380983424519,0.4951408302049172,3,mitchell.hashimoto@gmail.com,lib/vagrant/systems/linux.rb,3,0.023809523809523808,0,0,false,Fix sles 11 mountvboxfs problem This will work on all linuxes,,24,0.875,0.8888888888888888,3917,1412.5606331376052,150.88077610416133,413.8371202450855,2497,6,342,2,unknown,evtuhovich,,false,,0,0,28,29,673,false,true,false,false,0,1,0,0,0,0,-1
502126,mitchellh/vagrant,ruby,249,1293151596,1293161757,1293161757,169,169,merged_in_comments,false,false,false,16,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,4.3334184705095815,0.46091215784693446,1,flangy@gmail.com,README.md,1,0.007575757575757576,0,0,false,README: Improve git checkout instructions Small little hint on using vagrant from git checkout THanks :),,23,0.8695652173913043,0.9015151515151515,3947,1409.9315936154042,150.24068913098557,412.46516341525205,2485,6,336,2,unknown,philips,,false,,0,0,226,184,774,false,true,false,false,0,0,0,0,1,0,-1
502128,mitchellh/vagrant,ruby,244,1292306967,1292405135,1292405135,1636,1636,merged_in_comments,false,false,false,29,3,3,0,0,0,0,0,1,0,0,10,10,9,0,1,0,0,10,10,9,0,1,31,12,31,12,43.57530651518724,4.611249091353086,28,mitchell.hashimoto@gmail.com,lib/vagrant/command/helpers.rb|lib/vagrant/config/vm.rb|lib/vagrant/environment.rb|test/vagrant/command/helpers_test.rb|test/vagrant/config/vm_test.rb|.gitignore|lib/vagrant/action/builder.rb|lib/vagrant/action/warden.rb|lib/vagrant/provisioners/chef.rb|lib/vagrant/util/hash_with_indifferent_access.rb,15,0.027777777777777776,0,0,false,Multivm order This ensures a consistent order when enumerating VMs in commandsIm not certain this is the cleanest/best way to do this - so feedback is very welcome,,21,0.8571428571428571,0.9097222222222222,3912,1410.7873210633948,150.0511247443763,412.32106339468305,2455,6,327,5,unknown,bpo,,false,,0,0,16,9,994,false,false,false,false,0,0,0,0,3,0,-1
502129,mitchellh/vagrant,ruby,243,1292186306,1292403719,1292403719,3623,3623,merged_in_comments,false,false,false,62,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.638955390227441,0.490905986411324,4,mitchell.hashimoto@gmail.com,lib/vagrant/hosts/bsd.rb,4,0.026143790849673203,0,0,false,BSD/OSX hosts using GNU sed produces an error when cleaning nfs shares BSD or OSX hosts with GNU sed installed in the path choke on the current -i bak usage of the -i options of sed when cleaning the nfs shares from /etc/exportsThis patch removes the space which makes the command run fine on BSD sed and GNU sed ThanksBrice,,20,0.85,0.9150326797385621,3912,1410.7873210633948,150.0511247443763,412.32106339468305,2452,6,325,5,unknown,masterzen,,false,,2,1.0,46,45,853,false,true,false,false,0,1,2,0,3,0,-1
502130,mitchellh/vagrant,ruby,242,1292185923,1292432523,1292432523,4110,4110,merged_in_comments,false,false,false,39,1,1,0,2,0,2,0,2,0,0,2,2,2,0,0,0,0,2,2,2,0,0,4,8,4,8,9.269320911482318,0.9809029711732672,1,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/puppet.rb|test/vagrant/provisioners/puppet_test.rb,1,0.006535947712418301,0,0,false,Add the possibility to set Puppet options in Vagrantfile HiThis patch allows to add options to the puppet run when provisionning with puppetThis is useful if you want to add puppet modulepath or verbose/debug modeThanksBrice,,19,0.8421052631578947,0.9150326797385621,3912,1410.7873210633948,150.0511247443763,412.32106339468305,2452,6,325,3,unknown,masterzen,,false,,1,1.0,46,45,853,false,true,false,false,0,1,1,0,3,0,3630
502131,mitchellh/vagrant,ruby,241,1292185772,1292403727,1292403727,3632,3632,merged_in_comments,false,false,false,37,1,1,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,6,14,6,14,8.692342580744864,0.9198456656459679,1,mitchell.hashimoto@gmail.com,lib/vagrant/action/general/package.rb|test/vagrant/action/general/package_test.rb,1,0.006535947712418301,0,0,false,Feature/package recursive include HiIm proposing here a feature to include recursively files into the packaged boxIts useful to bundle a set of puppet manifests (or chef cookbooks) or anything else with a given boxThanks,,18,0.8333333333333334,0.9150326797385621,3912,1410.7873210633948,150.0511247443763,412.32106339468305,2452,6,325,4,unknown,masterzen,,false,,0,0,46,45,853,false,true,false,false,0,1,0,0,3,0,-1
502132,mitchellh/vagrant,ruby,240,1291851391,1294619008,1294619008,46126,46126,merged_in_comments,false,false,false,19,2,1,0,3,0,3,0,2,2,0,0,3,1,1,0,2,0,1,3,2,1,0,113,0,115,0,9.612184836438109,1.017185698452744,0,,lib/vagrant/systems/gentoo.rb|templates/network_entry_gentoo.erb,0,0.0,0,0,false,Gentoo system spec As discussed on IRC I tested it with a couple of VMs and it works fine,,17,0.8235294117647058,0.9207317073170732,3912,1410.7873210633948,150.0511247443763,412.32106339468305,2433,6,321,2,unknown,tolbrino,,false,,0,0,11,5,1015,false,true,false,false,0,0,0,0,1,0,9204
502133,mitchellh/vagrant,ruby,237,1291780079,1291780357,1291780357,4,4,merged_in_comments,false,false,false,64,2,2,0,0,0,0,0,1,0,0,2,2,2,0,0,0,0,2,2,2,0,0,13,0,13,0,9.240098891669202,0.9875376109776562,5,mitchell.hashimoto@gmail.com,lib/vagrant/vm.rb|lib/vagrant/systems/solaris.rb,3,0.01875,0,0,false,Solaris System Fixups Registered the system so its usable and make the command used to gain superuser privs configurable defaulting to sudo - sudo was chosen because its bundled on solaris and means the linux base image build docs can basically be used step by step to build a solaris image Can be set to pfexec for those who prefer the more solaris way,,16,0.8125,0.91875,3843,1407.7543585740307,149.62269060629714,412.43819932344525,2428,6,320,3,unknown,lstoll,,false,,0,0,76,5,1018,false,false,false,false,0,0,0,0,2,0,-1
502134,mitchellh/vagrant,ruby,228,1291111436,,1291586541,7918,,unknown,false,false,false,12,3,2,0,0,0,0,0,0,2,0,5,7,4,0,1,2,0,5,7,4,0,1,70,90,80,94,30.914926339958235,3.304039584342313,37,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/puppet.rb|test/vagrant/provisioners/puppet_test.rb|lib/vagrant/action/vm/provision.rb|lib/vagrant/provisioners/puppet.rb|templates/locales/en.yml|test/vagrant/action/vm/provision_test.rb|test/vagrant/provisioners/puppet_test.rb,33,0.01276595744680851,0,0,false,Ticket/223/add puppet support And another commit adding some more configurabilityThanksJames,,15,0.8666666666666667,0.9446808510638298,3843,1407.7543585740307,149.62269060629714,412.43819932344525,2392,6,313,3,unknown,jamtur01,,false,,3,0.6666666666666666,198,14,972,false,true,false,false,0,4,3,0,1,0,-1
502136,mitchellh/vagrant,ruby,226,1291111191,,1291111204,0,,unknown,false,false,false,16,191,191,0,0,0,0,0,0,90,5,61,156,63,15,17,90,5,61,156,63,15,17,7306,0,7306,0,1557.6987168933244,166.49272493519757,1,mitchell.hashimoto@gmail.com,docs/rake.md|docs/boxes.md|docs/getting-started/boxes.md|docs/commands.md|docs/getting-started/setup/ubuntu.md|docs/changes/changes_02x_03x.md|docs/provisioners/chef_solo.md|docs/rake.md|docs/changes/changes_03x_04x.md|_includes/header.html|_layouts/getting_started.html|docs/getting-started/boxes.md|docs/getting-started/index.md|docs/getting-started/introduction.md|docs/getting-started/packaging.md|docs/getting-started/ports.md|docs/getting-started/provisioning.md|docs/getting-started/rebuild.md|docs/getting-started/setup.md|docs/getting-started/ssh.md|docs/getting-started/teardown.md|docs/getting-started/why.md|scripts/generate-links.rb|_layouts/documentation.html|docs/base_boxes.md|docs/commands.md|docs/getting-started/provisioning.md|docs/getting-started/why.md|docs/provisioners.md|docs/provisioners/others.md|docs/provisioners/puppet.md|docs/vagrantfile.md|faq.md|index.md|.gitignore|_config.yml|_layouts/default.html|css/960.css|css/reset.css|css/screen.css|css/syntax.css|css/text.css|index.html|_layouts/default.html|index.html|index.html|index.md|.gitignore|images/vagrant_chilling.png|images/vagrant_holding.png|images/vagrant_looking.png|index.md|_layouts/default.html|docs/getting_started.md|index.md|CNAME|css/screen.css|docs/getting_started.md|.gitignore|_layouts/default.html|docs/getting_started.md|_layouts/default.html|docs/getting_started.md|docs/user-guide/index.md|_includes/footer.html|_includes/header.html|_layouts/default.html|_layouts/guide.html|css/screen.css|docs/user-guide/index.md|_includes/header.html|_layouts/guide.html|css/screen.css|docs/getting_started.md|docs/user-guide/commands.md|docs/user-guide/index.md|contribute.md|docs/user-guide/provisioning.md|docs/user-guide/vagrantfile.md|css/screen.css|docs/user-guide/provisioning.md|docs/user-guide/boxes.md|docs/user-guide/rake.md|license.md|css/screen.css|index.md|_includes/header.html|_layouts/getting_started.html|docs/getting-started/index.md|_layouts/getting_started.html|docs/getting-started/index.md|docs/getting-started/why.md|_layouts/getting_started.html|index.md|_layouts/getting_started.html|docs/getting-started/introduction.md|docs/getting-started/setup.md|docs/getting-started/boxes.md|docs/getting-started/why.md|docs/user-guide/commands.md|docs/user-guide/boxes.md|docs/user-guide/commands.md|docs/user-guide/vagrantfile.md|docs/getting-started/provisioning.md|docs/getting-started/ports.md|docs/getting-started/setup.md|docs/getting-started/packaging.md|docs/getting-started/packaging.md|docs/getting-started/teardown.md|docs/getting-started/rebuild.md|.gitignore|docs/getting-started/index.md|_includes/block_beta_warning.html|_layouts/getting_started.html|_layouts/guide.html|css/screen.css|docs/backwards-compatibility.md|docs/getting-started/why.md|docs/backwards-compatibility.md|docs/backwards-compatibility.md|docs/user-guide/vagrantfile.md|docs/getting-started/why.md|_includes/header.html|contribute.md|faq.md|support.md|_includes/header.html|_layouts/getting_started.html|docs/getting-started/boxes.md|docs/getting-started/setup.md|docs/getting-started/ssh.md|docs/getting-started/ports.md|docs/getting-started/provisioning.md|images/getting-started/success.jpg|docs/getting-started/packaging.md|docs/getting-started/packaging.md|docs/getting-started/index.md|docs/user-guide/vagrantfile.md|docs/user-guide/vagrantfile.md|docs/user-guide/vagrantfile.md|support.md|_layouts/welcome.html|css/screen.css|index.md|index.md|css/screen.css|index.md|index.md|docs/user-guide/index.md|_includes/header.html|_layouts/documentation.html|docs/boxes.md|docs/commands.md|docs/getting_started.md|docs/index.md|docs/provisioning.md|docs/rake.md|docs/user-guide/index.md|docs/vagrantfile.md|_includes/footer.html|index.md|docs/vagrantfile.md|docs/commands.md|docs/provisioning.md|license.md|docs/getting-started/ports.md|docs/getting-started/why.md|docs/getting-started/why.md|faq.md|_layouts/documentation.html|docs/base_boxes.md|images/base_box_mac.jpg|docs/base_boxes.md|css/screen.css|docs/base_boxes.md|images/icons/error.png|_layouts/documentation.html|css/screen.css|docs/provisioners.md|docs/provisioners/chef_server.md|docs/provisioners/chef_solo.md|docs/provisioners/others.md|docs/base_boxes.md|docs/provisioners/chef_server.md|docs/provisioners/others.md|docs/vagrantfile.md|docs/boxes.md|docs/vagrantfile.md|docs/base_boxes.md|docs/changes/changes_01x_02x.md|_includes/footer.html|docs/changes/changes_01x_02x.md|docs/changes/changes_01x_02x.md|docs/getting-started/provisioning.md|faq.md|_includes/header.html|css/screen.css|docs/changes/changes_01x_02x.md|docs/vagrantfile.md|docs/getting-started/index.md|index.md|docs/changes/changes_01x_02x.md|docs/changes/changes_01x_02x.md|docs/converting_password_to_key_ssh.md|docs/commands.md|docs/commands.md|docs/getting-started/index.md|docs/getting-started/why.md|index.md|_includes/header.html|docs/rake.md|docs/rake.md|docs/getting-started/boxes.md|docs/getting-started/packaging.md|docs/getting-started/why.md|_layouts/getting_started.html|docs/getting-started/windows.md|images/windows/alter_path.jpg|images/windows/edit_path.jpg|images/windows/environment_variables_button.jpg|images/windows/port_and_ppk_path.jpg|images/windows/ppk_selection.jpg|images/windows/putty_first_screen.jpg|images/windows/save_result.jpg|images/windows/vbox_manage_default_location.jpg|index.md|docs/getting-started/windows.md|docs/getting-started/windows.md|docs/provisioners/chef_solo.md|docs/provisioners/chef_solo.md|docs/commands.md|docs/changes/changes_02x_03x.md|docs/getting-started/packaging.md|docs/base_boxes.md|docs/changes/changes_02x_03x.md|docs/commands.md|docs/getting-started/introduction.md|docs/changes/changes_02x_03x.md|_layouts/getting_started.html|docs/getting-started/index.md|docs/getting-started/setup/windows.md|docs/getting-started/ssh.md|docs/getting-started/windows.md|docs/getting-started/setup/mac.md|docs/getting-started/setup/ubuntu.md|docs/getting-started/setup/windows.md|docs/changes/changes_02x_03x.md|docs/base_boxes.md|docs/getting-started/setup/ubuntu.md|index.md|_includes/header.html|docs/changes/changes_02x_03x.md|docs/getting-started/setup/ubuntu.md|docs/changes/changes_02x_03x.md|_includes/header.html|docs/commands.md|_layouts/documentation.html|docs/systems.md|docs/vagrantfile.md|docs/vagrantfile.md|docs/getting-started/index.md|index.md|.gitignore|_includes/header.html|docs/changes/changes_03x_04x.md|docs/commands.md|docs/getting-started/boxes.md|docs/changes/changes_03x_04x.md|docs/systems.md|docs/vagrantfile.md|_layouts/documentation.html|docs/multivm.md|_layouts/documentation.html|docs/changes/changes_03x_04x.md|docs/host_only_networking.md|docs/multivm.md|docs/changes/changes_03x_04x.md|docs/vagrantfile.md|docs/base_boxes.md|docs/getting-started/index.md|_includes/header.html|_layouts/documentation.html|docs/unison.md|docs/vagrantfile.md|_layouts/documentation.html|docs/unison.md|docs/vagrantfile.md|_layouts/documentation.html|docs/nfs.md|docs/vagrantfile.md|docs/nfs.md|docs/changes/changes_04x_05x.md|docs/base_boxes.md|docs/vagrantfile.md|docs/changes/changes_04x_05x.md|_includes/header.html|docs/getting-started/boxes.md|docs/changes/changes_04x_05x.md|index.md|_includes/header.html|docs/getting-started/boxes.md|docs/getting-started/index.md|docs/getting-started/introduction.md|docs/getting-started/packaging.md|docs/getting-started/ports.md|docs/getting-started/provisioning.md|docs/getting-started/rebuild.md|docs/getting-started/setup.md|docs/getting-started/setup/ubuntu.md|docs/getting-started/ssh.md|docs/getting-started/teardown.md|docs/getting-started/provisioning.md|docs/getting-started/setup.md|docs/getting-started/ssh.md|docs/boxes.md|docs/converting_password_to_key_ssh.md|css/screen.css|docs/provisioners/chef_solo.md|css/screen.css|_layouts/documentation.html|docs/provisioners/chef_solo.md|docs/provisioners/chef_solo_remote.md|docs/getting-started/rebuild.md|docs/getting-started/teardown.md|docs/provisioners/others.md|_layouts/documentation.html|docs/plugins.md|docs/boxes.md|docs/getting-started/packaging.md|docs/changes/changes_05x_06x.md|_layouts/extending.html|docs/extending/index.md|docs/extending/types.md|docs/index.md|docs/plugins.md|docs/extending/commands.md|docs/extending/objects.md|docs/extending/commands.md|docs/extending/configuration.md|docs/extending/commands.md|docs/extending/configuration.md|docs/extending/middleware.md|_layouts/extending.html|docs/extending/i18n.md|_layouts/extending.html|docs/extending/example.md|_layouts/extending.html|docs/extending/testing.md|docs/extending/testing.md|docs/extending/testing.md|docs/extending/testing.md|docs/extending/testing.md|_includes/header.html|docs/changes/changes_05x_06x.md|docs/plugins.md|docs/provisioners/chef_solo.md|docs/provisioning.md|docs/vagrantfile.md|docs/getting-started/provisioning.md,1,0.0,0,0,false,Docs If you merge the other branch - then this is the Docs update for it,,13,0.9230769230769231,0.9446808510638298,3838,1409.8488796248046,149.8176133402814,412.71495570609693,2392,6,313,2,unknown,jamtur01,,false,,1,1.0,198,14,972,false,true,false,false,0,4,1,0,1,0,-1
502145,mitchellh/vagrant,ruby,225,1291099296,1291781184,1291781184,11364,11364,merged_in_comments,false,false,false,78,1,1,0,0,0,0,0,1,2,0,3,5,4,0,1,2,0,3,5,4,0,1,86,127,86,127,21.86577686052219,2.336909733994181,37,mitchell.hashimoto@gmail.com,lib/vagrant/action/vm/provision.rb|lib/vagrant/provisioners/puppet.rb|templates/locales/en.yml|test/vagrant/action/vm/provision_test.rb|test/vagrant/provisioners/puppet_test.rb,33,0.01276595744680851,0,0,false,Ticket/223/add puppet support MitchellThe basic provider is done and Ive pushed to this branch - this includes tests  Let me know if the test coverage isnt sufficientIf you could merge thatd be great  Itd also be great if you could re-create the base boxes on the Vangrant up website to include Puppet thatd be great too  On the lucid32 box youd just need to do an:pre$ sudo apt-get install puppet/preThanksJames Turnbull,,12,0.9166666666666666,0.9446808510638298,3843,1407.7543585740307,149.62269060629714,412.43819932344525,2392,6,313,1,unknown,jamtur01,,false,,0,0,198,14,972,false,true,false,false,0,3,0,0,1,0,-1
502146,mitchellh/vagrant,ruby,216,1290016582,1290051374,1290051374,579,579,merged_in_comments,false,false,false,25,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.521755758979105,0.483302505014805,3,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,3,0.00946372239747634,0,0,false,Fixed a syntax error The auto-generated Vagrantfile runs into a syntax error when you uncomment the shared folder example  Just needed to add a paren,,11,0.9090909090909091,0.9589905362776026,3838,1409.8488796248046,149.8176133402814,412.71495570609693,2360,7,300,1,unknown,bnmrrs,,false,,0,0,20,44,517,false,false,false,false,0,0,0,0,1,0,99
502195,mitchellh/vagrant,ruby,215,1289839895,1289886612,1289886612,778,778,merged_in_comments,false,false,false,25,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.990427573404961,0.5334068313153006,0,,templates/nfs/exports_linux.erb,0,0.0,0,0,false,Multiple NFS shared folders not configured properly on Linux This pull request fixes #141 on Linux Its the same as commit 3250b8265921e2558695674f933b14ba48abfe57 except on exports_linuxrb,,10,0.9,0.9585987261146497,3838,1409.8488796248046,149.8176133402814,412.71495570609693,2348,7,298,2,unknown,scompt,,false,,0,0,6,5,184,true,false,false,false,0,0,0,0,2,0,298
502148,mitchellh/vagrant,ruby,214,1289819814,1289857397,1289857397,626,626,merged_in_comments,false,false,false,9,3,3,0,0,0,0,0,1,0,0,3,3,1,2,0,0,0,3,3,1,2,0,4,0,4,0,16.82220075688859,1.7980577153952122,10,mitchell.hashimoto@gmail.com,lib/vagrant/provisioners/chef.rb|lib/vagrant/provisioners/chef.rb|templates/chef_server_client.erb|templates/chef_solo_solo.erb,10,0.0,0,0,false,2 improvements for the vagrant gem Mailinglist discussion:http://groupsgooglecom/group/vagrant-up/browse_thread/thread/fb5450e00355f970/f10b3c89db694177#f10b3c89db694177,,9,0.8888888888888888,0.9615384615384616,3838,1409.8488796248046,149.8176133402814,412.71495570609693,2347,6,298,2,unknown,dreamcat4,,false,,0,0,21,8,612,false,true,false,false,0,0,0,0,3,0,-1
502150,mitchellh/vagrant,ruby,213,1289794547,1289803099,1289803099,142,142,merged_in_comments,false,false,false,16,1,1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,0,0,4.865668997061421,0.5201131430910284,2,mitchell.hashimoto@gmail.com,templates/commands/init/Vagrantfile.erb,2,0.00641025641025641,0,0,false,Template config Clarification of comments and corrected Opscode Platform URL in example to https (issue 213),,8,0.875,0.9615384615384616,3838,1409.8488796248046,149.8176133402814,412.71495570609693,2346,6,298,1,unknown,jtimberman,,false,,0,0,145,68,895,false,false,false,false,0,0,0,0,1,0,-1
502197,mitchellh/vagrant,ruby,210,1289356543,,1309748340,339863,,unknown,false,false,false,59,10,8,0,2,0,2,0,3,1,0,1,2,0,0,1,1,0,1,2,0,0,1,0,0,0,0,36.105042729558704,3.345008933932197,0,,templates/locales/de.yml|templates/locales/de.yml|templates/locales/de.yml|templates/locales/de.yml|templates/locales/de.yml|templates/locales/de.yml|templates/locales/de.yml|templates/locales/de.yml,0,0.0,0,0,false,Added german translation HiThis is the first version of a german translation for Vagrant I double checked taht all labels are in sync with the current english versionHope you like it :)GreetingsChristianPS: Since I am still pretty new to Git / Github please let me know if I can improve the Pull-Request etc Thanks,,7,1.0,0.9611650485436893,4572,1277.3403324584426,137.57655293088365,374.01574803149606,2334,6,292,9,unknown,ctrabold,mitchellh,false,,0,0,18,32,152,true,true,false,false,0,0,0,0,8,0,2528
502152,mitchellh/vagrant,ruby,203,1289028081,1289280501,1289280501,4207,4207,merged_in_comments,false,false,false,27,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,4.4340610015785185,0.4739943766146041,49,mitchell.hashimoto@gmail.com,templates/locales/en.yml,49,0.16279069767441862,0,0,false,Missing translation Guys I _think_ this is how the missing translation (from https://githubcom/drnic/vagrant/blob/master/lib/vagrant/provisioners/chefrb#L82) should work I couldnt actually get it to display perhaps you can check it,,6,1.0,0.9800664451827242,3837,1410.2163148292937,149.85665884805837,412.8225175918687,2322,6,289,1,unknown,drnic,,false,,0,0,1207,14,1011,false,true,false,false,0,3,0,0,1,0,190
502198,mitchellh/vagrant,ruby,202,1288709864,1288881369,1288881369,2858,2858,merged_in_comments,false,false,false,10,1,1,0,2,0,2,0,2,1,0,1,2,2,0,0,1,0,1,2,2,0,0,2,27,2,27,9.347928895452343,1.004364855422058,7,mitchell.hashimoto@gmail.com,lib/vagrant/command/package.rb|test/vagrant/command/package_test.rb,7,0.02280130293159609,0,0,false,GH-200 BaseVMNotFoundError Simple fix for GH-200 and added a test,,5,1.0,0.9804560260586319,3837,1404.482668751629,149.3354182955434,411.5194162105812,2312,6,285,1,unknown,ches,,false,,0,0,26,36,875,true,true,false,false,0,0,0,0,2,0,2438
502154,mitchellh/vagrant,ruby,192,1287271542,1289280113,1289280113,33476,33476,merged_in_comments,false,false,false,22,3,2,0,2,0,2,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,3,0,3,0,9.2496889677269,0.9938101948070343,9,mitchell.hashimoto@gmail.com,lib/vagrant/systems/linux.rb|lib/vagrant/systems/linux.rb,9,0.0234375,0,0,false,Use ifup to enable host-only interface To address mitchellh/vagrant#190 Ive patched systems/linuxrb to use ifdown/ifup directly rather than rely on /etc/initd/networking restart,,4,1.0,0.9869791666666666,3837,1404.482668751629,149.3354182955434,411.5194162105812,2259,5,268,1,unknown,mdub,,false,,0,0,30,10,967,false,false,false,false,0,4,0,0,2,0,5941
502201,mitchellh/vagrant,ruby,175,1286260000,1286261012,1286286212,436,16,github,false,false,false,6,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,2,0,4.726722512077681,0.5128426999942133,6,mitchell.hashimoto@gmail.com,README.md,6,0.014018691588785047,0,0,false,double-quote was curled the wrong direction ,,2,1.0,0.9976635514018691,3813,1402.0456333595594,148.96407028586415,410.7002360346184,2216,3,257,1,unknown,adamv,,false,,0,0,134,9,928,true,false,false,false,0,0,0,0,1,0,17
502157,mitchellh/vagrant,ruby,157,1284012061,1284041528,1284041528,491,491,commit_sha_in_comments,false,false,false,36,1,1,0,1,0,1,0,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,10,0,10,0,4.532852678574885,0.5046337864057332,4,mitchell.hashimoto@gmail.com,lib/vagrant/downloaders/http.rb,4,0.010230179028132993,0,0,false,proxy support Hi Ive just added a patch to vagrant to allow it to use the http_proxy environment variableLet me know if I can change it in any way so you will commit itCheers,,1,1.0,1.0,3633,1470.6853839801818,150.56427195155518,420.3137902559868,2146,2,231,1,unknown,ankopainting,,false,,0,0,4,1,585,false,true,false,false,0,0,0,0,1,0,72
502158,mitchellh/vagrant,ruby,152,1283474950,1284048457,1284048457,9558,9558,commit_sha_in_comments,false,false,false,80,1,1,0,5,0,5,0,2,1,0,0,1,1,0,0,1,0,0,1,1,0,0,93,0,93,0,4.542019032775296,0.5262789584159058,0,,lib/vagrant/systems/solaris.rb,0,0.0,0,0,false,solarisrb contribution Hi Mitchell/John   I removed the NFS mount section since I didnt fully understand the way you were doing NFS mounts in linuxrb - theres a lot of differences in the ways that Linux and Solaris mount NFS exports  Im also not sure that the private methods section of solarisrb needs to be kept since I am not using it for the shared folder mount method   Finally this is really rough code so feedback/changes are most welcomebestBlake,,0,0,1.0,3557,1533.5957267360134,156.03036266516727,438.8529659825696,2125,2,224,0,unknown,bixu,,false,,0,0,6,3,43,false,true,false,false,0,4,0,0,0,0,3
